[{"content":"Introduction I have around ~10k GitHub stars. I‚Äôve come up with a bullet-pointed actionable list of how to make open-source projects popular.\nOne of the projects I created had 67 lines of code and had only existed for 3 days before it hit 1.7k stars.\nHumans are predictable creatures when it comes to our attention. I‚Äôll show you data-backed actionable insights that can help you create popular software.\nWhy Bother? Popular Projects = More Contributors = Better Project What‚Äôs the point in getting more GitHub stars? They mean nothing. You can‚Äôt buy a coffee with exposure. If GitHub dies, so do the stars.\nThe problem with open source is the network effect. The more people that find your project, the more people that use it, the more that contribute to it and thus the better it becomes.\nThe better the project, the more popular it becomes. It‚Äôs a self-fulfilling cycle.\nMore Users - More Contributors - Better functionality - Popularity and so on\" As this cycle continues, it becomes harder for it to continue. That‚Äôs a blog post for another day. But first, let‚Äôs talk about where we start.\nTo start us on this cycle we need popularity.\nTo get contributors to your project it has to be popular enough so people see it and contribute.\nCreating a popular open-source project isn‚Äôt just a want but a need.\nIf a project has contributors but no popularity, it‚Äôs likely created by a company for internal use and was open-sourced.\nOtherwise, only popular open-source projects have contributors.\nWell Designed README README.md is the first thing anyone sees. Make sure to catch their eyes right away.\nIt‚Äôs harder to gain traction based purely on the merit of the tool rather than on the presentation of the tool.\nFor frontend applications, you should focus more on the design of the frontend rather than the README. This is for CLI applications.\nA well-designed README answers these questions succinctly:\n What does this do? Does it solve my problem? Does it solve my problem better than the competitors (if they exist) do? How do I install it? What are the basic commands I need to know? Where can I go for more help?  This is how a README answers these questions.\n Open to view Infographic  We‚Äôll go through each of these.\nCreate a Header Summarising Your Project The first thing they see is your README. The first thing they see on the README is the header. Make it good.\nThe header is the combination of:\n Logo. Slogan (short description). Badges. Quick Install. Quick Links (not always needed).  Beautiful Logo as simple as Canva.com The logo is the first thing users see and is the image used for social media sharing. When I first create a project, I‚Äôll use something from Canva.\nCanva allows you to quickly create a logo from a template for free.\nGo to Canva and search for ‚ÄúLogo‚Äù\n   And then just select one of the many logos you come across. Edit it if you want.\nTypically, there are 2 things I look for in a logo:\n Coolness factor üòé Slogan  I should look at the logo and think ‚Äùwow, that‚Äôs cool‚Äù.\n   It‚Äôs a gif! Isn‚Äôt that cool? I made it on Canva in about ~45 seconds. ~30 seconds were spent searching for it!\nSecondly, the slogan. The first thing people see will be the logo which contains the name and slogan, instantly they will know what the project is about.\nFor some of my larger projects, I hire a designer, specifically Varg. Designers are great! Especially ones that can understand the project at hand, which aids creating a well-conceived logo.\nIn short: don‚Äôt spend too long picking a logo. If you‚Äôre not hiring a designer, perhaps ~5 minutes playing around on Canva.\nSlogan (description) of your project in 1 simple line When thinking about the design of your project, think about how people found it. There are 2 major ways people can find your project:\n Someone recommends it to them. It‚Äôs posted on Twitter / HackerNews / LinkedIn / other social media or news aggregators.  When someone recommends something it‚Äôs because that something solves their problem. This means that they already have an idea of how this project solves their problem, of what the project does.\nWhen posted, Twitter will make a social card for it. This card is the title, description, and an image.\n   Both of the main methods of sharing your project include a description already. This means 2 things:\n We don‚Äôt need to spend time describing what our project is in the README. GitHub‚Äôs Description will be used everywhere and is the first thing people see.     One sentence or two will be adequate to explain our project in the README.\nThis is why I include the quick install section in the README. Users who come to your project already have an idea of what it is. Since they do, provide a way for them to quickly install it and try it out for themselves.\n ‚ÄúTalk is cheap. Show me the code.‚Äù - Linus Torvalds\n Good descriptions are hard to write. Very hard.\nIt needs to:\n Describe the project. Be eye-catching. Show why the user needs it. Show why it‚Äôs better than the rest. Be easy enough for someone that only knows the subject matter in passing to understand.  This is copywriting. It‚Äôs an important skill to learn as copywriting is:\n Writing in such a way to convince someone to do something.\n My favourite resource is Brian Dean‚Äôs Copywriting Guide.\ngohugoio/hugo: The world‚Äôs fastest framework for building websites. (github.com)\n The world‚Äôs fastest framework for building websites.\n This explains what the project is well. It is:\n Succinct. Answers the question ‚ÄúWhy are you better than the rest?‚Äù with ‚Äùworld‚Äôs fastest‚Äù. Answers what it does, ‚Äùframework for building websites.‚Äù Easy enough to understand for non-experts, ‚Äùbuilding websites‚Äù. Uses eye-catching words such as ‚Äùworlds largest‚Äù and the succinctness imply ‚Äúwe can read this, it‚Äôll only take a second of our time to process this.‚Äù  You should spend a few weeks experimenting with the description on-and-off.\nCome up with many descriptions, about ~20. And continually improve upon it. When you lie down in bed, think ‚ÄùIf I had never seen my project before, what would I want to see to make me use it?‚Äù.\nThe description is the hardest, but most important part of the whole design. It‚Äôs the first thing people see. Invest time into this. Learn copywriting. Even when you think it‚Äôs perfect, it can always be improved.\nAsk your users what they think of it. Iterate until you can no longer iterate.\nBadges Badges are links/images that sum up the project.\n   They explain where to find documentation, is the current branch stable? How clean is the code?\n   How active is the project? How many downloads? The license? Any chatrooms? Mostly, badges are just cool stickers you can include. I like reading them, some people may not. You can find a list of badges on shields.io.\nQuick Installation guide The user understands what the application does from seeing it in the social cards or being told by a friend.\nSometimes, they want to install it as fast as possible to play around.\n ‚ÄúTalk is cheap, show me the code.‚Äù - Linus Torvalds\n The quick install guide allows users to install the software immediately.\n   üêç Python üêã Docker (Universal)         python3 -m pip install ciphey --upgrade docker run -it --rm remnux/ciphey    Users do not need to scour the README for information on installation if they are already knowledgeable and want to use the project.\nThe style above is clean. The package manager‚Äôs name, the logo of the operating system and a short installation to copy/paste.\nQuick Links This isn‚Äôt required in all READMEs.\nLinking to all the resources the user needs in one neat place allows the user to quickly understand anything they want.\n   The order of these matters. As the user reads left-to-right (assuming English README), the further away items are the less likely they will see it. You want them to see your Twitter first? Include that at the first item.\nWhile this is a flat list separated by pipes, it is an ordered list in the sense that users will only read so far.\nI include my quick links at the top of the page, above the fold (the logo).\n  My OS does not support flag emoji, sorry!\n  The user will already have a rough idea of what the project is. They may only want 3 things from the README:\n Documentation. Support (the Discord link). The Installation Guide.  By being at the top, we reduce the friction of finding them.\nExample Images to show off your project The header is also a great place to show how your project works. You can use gifs (discussed later in more depth) or images.\n Bringing-Old-Photos-Back-to-Life   Depix: Recovers passwords from pixelized screenshots  This depends on your project, but having images in your header may make sense.\nInspiration for designing your header Let‚Äôs look at some inspiration\n Ciphey/Ciphey: ‚ö° Automatically decrypt encryptions without knowing the key‚ö°   RustScan/RustScan: ü§ñ The Modern Port Scanner ü§ñ   cytopia/pwncat: pwncat - netcat on steroids   gohugoio/hugo: The world‚Äôs fastest framework for building websites.   alacritty/alacritty: A terminal emulator   starship/starship: ‚òÑüååÔ∏è Customizable prompt for any shell!  What Is This? Describing Your Project Succinctly. This section explains the features of your product.\nShort explanations. A gif that demonstrates your project. Essential features you think someone would want to see.\nLook at the Starship prompt.\n Starship Prompt  They have a table with 2 columns but without borders. In the left column is the list of essential features. Each feature is bolded with a short explanation.\n Bold feature: I am explaining the feature  And in the right column is a gif showing how the program works, preferably detailing the features mentioned.\nTo create a gif of a CLI app, use Terminalizer. Clean up your terminal before you record, as it can look messy.\nWhen thinking of what features to show, do not show them all. Only show the features that the user wants to see. And in words that a user can understand.\nX vs Y, Comparisons With Competitors If your project is competing with a lot of other projects, you‚Äôre going to need to show the user exactly why they should use your project over the competitors.\nConvincing someone to leave their current tool for yours is hard. Make it as easy as possible for them to see the advantages over their current tooling.\nIn The Lean Startup the author talks about why at the beginning of a startup we should focus on the early adopters over the average customers.\n \u0026ldquo;The point is not to find the average customer but to find early adopters: the customers who feel the need for the product most acutely. Those customers tend to be more forgiving of mistakes and are especially eager to give feedback.\u0026rdquo;\n The early adopters are those that wouldn‚Äôt mind switching out their current tooling for a less tested, less mainstream option if it means it has better functionality.\nThe only way to get the average customer to use your product is:\n No competitors must exist. Their current solution to the problem is extremely convoluted compared to yours.  Otherwise, your best bet is to appeal to the early adopters and overtime slowly appeal to the average customer as your project becomes more mainstream.\nThe easiest way to compare your projects to others is to include a table of popular features. Use statistics here. It‚Äôs harder to believe words than it is numbers, even if the words are just as truthful as the numbers.\nFor Ciphey we compared our program to our largest possible competitor, CyberChef‚Äôs Magic function.\n CyberChef vs Ciphey  You can see we used gifs to demonstrate this. We explain how long each one takes and the setup of both, which can all be seen in the gifs.\nWe also leave footnotes on some things. Such as gifs loading at different times, the function (at the time) failing to decode.\nLater on, we compare again with a table this time of features.\n Full Comparison.  Create Great Documentation Do not put all your documentation into your README because:\n It‚Äôs harder to update. It‚Äôs harder for users to find things. It makes the README unbearably long and ugly.  We don‚Äôt write all of our code in one file, why have all of our documentation in our README?\nDon‚Äôt make the documentation section long. Since we have already explained how to install quickly, we should show:\n How to run the program. How to find the documentation. How to find support.    I included a gif here showing all the different ways there are to run Ciphey. Gifs are magical and easy to make.\nContributing, Thanking \u0026amp; Welcoming Contributors The final section is about contributing.\n How to contribute. Thanking past contributors.  We need contributors to our project to fulfil the cycle.\nTherefore, our README needs to display how to contribute.\n  A short paragraph describing how to contribute, where to ask for help if they are stuck, the contributing.md file and any potential rewards for contributing (name added to the README and the chance to work on a growing project).\nAnd then you want to thank your contributors. We use all-contributors which makes it easy to thank them. It shows their profile picture, a link to their websites along with emoji defining what they did.\n  Conclusion Design is subjective and you may like something, you may not. It‚Äôs down to you to decide on what looks good.\nI hope the design principles I shared, along with the READMEs included here will inspire you to create something beautiful.\nOne thing I didn‚Äôt talk about here is creating documentation. It is your job as a programmer to create documentation. Your project is not done until it has documentation. You can use GitHub Wiki and DocStrings to automatically generate some documentation (you‚Äôll still need to write documentation for installation, usage, etc).\nRemember ‚Äî the README is one of the most important parts of an open-source project (along with the documentation).\nCreating Something People Want A good README will get people interested, a working project that solves their problems will get people talking.\nThis chapter is based on Zero to One by Peter Thiel, but will feature inspiration from other places.\n ‚ÄúEvery moment in business happens only once. The next Bill Gates will not build an operating system. The next Larry Page or Sergey Brin won‚Äôt make a search engine. And the next Mark Zuckerberg won‚Äôt create a social network. If you are copying these guys, you aren‚Äôt learning from them.‚Äù\n Problem First, Product Second For your project to grow, it has to solve a problem. It‚Äôs better to find a solution to a problem that people have rather than creating a project for the sake of it.\nLet‚Äôs compare 2 ideas.\n A recipe app A digital platform for artists to share their work, get feedback and start selling to gallery owners.  The first one doesn‚Äôt solve any problems. There are millions of recipe apps in the world and unless there is something truly unique it won‚Äôt take off.\nThe second one is a unique \u0026amp; novel idea that aims to solve the problem of:\n ‚ÄúI‚Äôm an artist wanting to get paid for my work and improve.‚Äù\n We have a problem, artists not getting paid, and we solve the problem.\nSome people come up with the project first, but doing this means:\n We aren‚Äôt solving one specific problem from the start. We don‚Äôt have a well-defined target market. It‚Äôs likely already been done before.  As Walter Isaacson said in The Innovators:\n ‚ÄúBut the main lesson to draw from the birth of computers is that innovation is usually a group effort, involving collaboration between visionaries and engineers and that creativity comes from drawing on many sources. Only in storybooks do inventions come like a thunderbolt, or a lightbulb popping out of the head of a lone individual in a basement or garret or garage.‚Äù\n It‚Äôs unlikely for our project to be innovative if we don‚Äôt solve a small problem first. In the same book, Isaacson says:\n ‚ÄúProgress comes not only in great leaps but also from hundreds of small steps.‚Äù\n Solving the problem will bring us closer to a unique \u0026amp; novel project.\nLiving With the Problem You cannot solve a problem you do not have. In The Lean Startup, Eric Ries states:\n ‚ÄúIn my Toyota interviews, when I asked what distinguishes the Toyota Way from other management approaches, the most common first response was genchi gembutsu‚Äîwhether I was in manufacturing, product development, sales, distribution, or public affairs. You cannot be sure you really understand any part of any business problem unless you go and see for yourself firsthand. It is unacceptable to take anything for granted or to rely on the reports of others.‚Äù\n Unless you have the problem, you cannot effectively solve the problem.\nIt also helps with idea generation. Pay attention to the minor inconveniences in your life, in the lives of people around you and build products that solve those problems.\nIt‚Äôs a lot easier to observe the problems present in your own life than it is to generate random ideas that might work.\nIf you have the problem, you know 2 things:\n The problem exists. Other people have the problem.  The first point is important. Many people create solutions for problems that do not exist.\n  This product essentially injects the potato with oil and other foods. This problem does not exist. No one has ever had this problem. If you watch the video, you can see that the Potato Doctor cuts the potato open. What is the point? There isn‚Äôt one.\nThe second point is less obvious, but a good indicator. Humans are not unique. We mostly share the same problems. If the problem directly affects my life, I know that it must affect other people too.\nFinding Problems in Communities You don‚Äôt have to be the one to find the problem, others can too. If you pay attention to a community, these people will reveal the problems they are facing.\nListening to a community exponentially grows your rate of ideas vs being on your own.\n  The more people there are, the more you listen, the more ideas you can generate over time compared to thinking on your own.\nBuild a minimal viable product that solves the problem the community is facing.\n A minimum viable product, or MVP, is a product with enough features to attract early-adopter customers and validate a product idea early in the product development cycle.\n   Share with the community. Measure its effectiveness, learn how to do better and re-build it (or add more) to improve upon it.\nOver time, it will eventually leak out of the community into other similar communities.\nYou have around 2 weeks before you lose motivation to work on something. Create the smallest possible minimum viable product that the community can use. Their thanks, if provided, will give you the motivation to continue working on it.\nSolving the Problem Well Here‚Äôs the thing.\n You have a problem you can solve. You have a community that‚Äôll help you solve this problem and provides feedback.  But that doesn‚Äôt mean your problem is solved well. Take a look at Juicero. Juicero solved a problem that many people have.\nWe want to create our juice drinks, but to do that we have to:\n Buy Fruit \u0026amp; Vegetables. Wash them. Cut them. Juice them. Clean up.  Juicero‚Äôs solution was to (ignoring hardware):\n Insert packet into Juicero to get the juice.  This is a good idea, but it was poorly executed.\n  There are many talks about why Juicero failed ‚Äî all out of the scope of this article.\nThe point is that you could have a great idea, but if it‚Äôs poorly executed it may have too many downsides to be used as the solution.\nThe way to solve this is via the minimum viable product loop. Instead of spending 3 years creating a project, we release as soon as possible, gather feedback, improve and loop.\nWe are continuously heading towards what people want, and each iteration will solve the problem better than the last. If it doesn‚Äôt, the next iteration we solve the problem differently and so on.\nGetting the Word Out If we never show off our project, why would we expect anyone to see it? It‚Äôs not good enough to build it and hope they come. We have to get the word out.\nThe good news is that if you‚Äôve been following along in Creating Something People Want we already have the word out. The community we are in know about the project and use it.\nThat helps us immensely. Going from 10 GitHub stars to 100 is easy. Going from 0 to 1 is hard.\nOnce we get a few stars we will get more stars. Stars beget stars ‚≠ê.\nSharing With a Community If we have been following the Build, Measure, Learn loop and regularly publishing minimal viable products than we will already have the word out in our community.\nWhen it comes time to publish, make sure your community knows that it‚Äôs the first real release. They‚Äôd be more likely to share with their friends this way.\nNews Aggregators Your next port of call is news aggregators. These are places that collate news. You should post to:\n Subreddit of your choosing. HackerNews. Lobste.rs.  Do not read the comments. Those places are incredibly toxic and can‚Äôt see a good product even if it hit them in the face.\nAwesome Lists   An Awesome list is a list of awesome things about some topic. There are lists such as:\n Rust Python Hacking Web  And more.\nFind some lists that apply to you and submit PRs. In the worst case, they don‚Äôt accept it.\nGitHub Trending If all goes well, you should hit GitHub trending at some point. This will provide monumental traffic.\nOnce you hit trending, pay attention to social media and thank anyone that shares your project. If they follow you they may re-tweet your project again in the future.\nThis is the snowball effect. You need about ~50 stars to hit trending page for your language, ~100 stars to hit the overall trending. Once you do this, trending will give you more stars and it will continually snowball.\nLeverage an Existing Following or Past Popularity The easiest way to gain stars is by leveraging your existing following. Post on social media, other GitHub repos and the likes.\nConclusion - Throw the Rule Book Away Like all things, this is not an exact science, more like art. And you can‚Äôt become good at art by following other peoples guidance. You‚Äôve got to discover your unique style.\nThe Mona Lisa was painted once, but the thousands of people that painted the Mona Lisa afterwards were never recognised.\nI suggest you throw some of the rules away, experiment yourself. Create new rules and understand what works for you.\nWhat works for me, won‚Äôt necessarily work for you. So go ahead, throw the rule book away!\nLet‚Äôs go over some things we learnt.\n Well designed READMEs are essential. Creating something people want. Get the word out there. Discover your unique style and what works for you.  \n","permalink":"https://polymath.cloud/make-popular-open-source-projects/","summary":"Introduction I have around ~10k GitHub stars. I‚Äôve come up with a bullet-pointed actionable list of how to make open-source projects popular.\nOne of the projects I created had 67 lines of code and had only existed for 3 days before it hit 1.7k stars.\nHumans are predictable creatures when it comes to our attention. I‚Äôll show you data-backed actionable insights that can help you create popular software.\nWhy Bother? Popular Projects = More Contributors = Better Project What‚Äôs the point in getting more GitHub stars?","title":"3 Tips For Making a Popular Open Source Project in 2021 [Ultimate Guide]"},{"content":"AWS Config One of the largest headaches we have is understanding:\n What resources do we have? Do we have resources that are no longer needed? Their status, security vulns. How are they linked? What changes have occurred on a resource? Is the infrastructure compliant with governance controls? Accurate auditing information?  AWS Config records and captures source changes allowing us to perform actions against the data. It can:\n Capture resource changes Act as a resource inventory. Store configuration history for individual resources Provide a snapshot of configurations Notifications about changes (using SNS) Provide AWS CloudTrail integration (who made the change and when) Use rules to check compliance Security Analysis Identify relationships between resources  AWS Config does not capture this for all services, but iit does for the most common services such as EC2, VPC, RDS, S3, IAMA.\nAWS Config is region specific. We have to configure AWS Config for each region we want to have AWS config for.\nCloudTrail Record and track all AWS API requests. Can be from a user using an SDK, AWS CLI or more.\nWhen autoscaling launches an instance, this is recorded by cloudtrail.\nEvery API request is recorded as an event that\u0026rsquo;s stored in a log file on S3.\nNew log files are typically created every 5 minutes and then stored in an S3 bucket. Also can deliver to a CloudWatch logs log file (for custom metrics).\nSupports all regions and over 60 AWS services \u0026amp; features.\nUse cases for captured data Effective for security analysis. Answers \u0026ldquo;What is the API call and who made it and when?\u0026rdquo;\nCan resolve and manage day-to-day operational issues such as who, what, and when an API was used which could have cause an outage.\nAWS Trusted Advisor Recommend improves across AWS account based on AWS best practices.\n Cost Optimisation (save money) Performance (finds performance issues) Security (finds security weaknesses) Fault tolerance (best practices to maintain server operations)  Free 6 core checks.\n Service limits Security groups, EBS snapshots, RDS snapshots, IAM use, MFA on root account.  Business and above has AWS Support API and can track them using the AWS trusted advisor dashboard.\nTrusted advisor notifications (completely free). Tracks cost savings and emails up to 3 recipients over a week.\nExclude items allows us to exclude specific resources.\nAction Links, many checks have hyperlinks which lets us quickly reach the issue to resolve it ASAP.\nAccess management, tightly integrated with IAM.\ndata is automatically refreshed every 24 hours, but manual every 5 minutes if we want.\nCloudWatch Monitor resources via a series of metrics and allow us to quickly react to events and dynamically adjust any availability or scalability issues. The metrics dependant on each service as each service is used different.\nCan also create custom metrics if we need to measure specific things.\nBasic monitor records metrics every 5 minutes. Detailed monitoring records at 1 minute intervals. Comes at an additional cost though.\nAll cloudwatch detail is recorded for 2 weeks.\nAlarms are pre-defined thresholds. Let\u0026rsquo;s say our server reaches 90% CPU utilisation. Cloudwatch will notify us of the impending disaster. The response would be to launch another server to even the load (auto-scaling). Or send us a message via SNS.\nAlarms have 3 states:\n Ok (its not bad, its okay) Alarm (metric is outside of threshold and alarm is activated) Insufficient data (not enough data to determine alarm state)  Has a logging repository. We can go to a single place to see all logs, such as multiple web servers from a single place. We can also export the logs and use a third party tool to analyse the data.\nAWS Health Dashboard Offers service \u0026amp; personal health dashboards.\nService provides a complete health check of all services in all regions at that time (or past 7 days).\nPersonal health dashboard will notify you of any service disruptions that you are using in your account. It is for disruptions that personally affect you.\nWe can also view planned maintenance and scheduled changes in our health dashboards.\n","permalink":"https://polymath.cloud/aws-management/","summary":"AWS Config One of the largest headaches we have is understanding:\n What resources do we have? Do we have resources that are no longer needed? Their status, security vulns. How are they linked? What changes have occurred on a resource? Is the infrastructure compliant with governance controls? Accurate auditing information?  AWS Config records and captures source changes allowing us to perform actions against the data. It can:\n Capture resource changes Act as a resource inventory.","title":"Management Fundamentals for AWS"},{"content":"There are 4 main support plans::\n Access online resources (basic) General guidance from AWS (Developer) 24-hour technical support (Business) Dedicated Account Managers and Personaliiseid Consultation  Total Cost of Ownership The Total Cost of Ownership (ToC) calculator is a free calculator to compare AWS cloud and on-premise costs. It\u0026rsquo;s designed for anyone who is considering migrating to AWS.\nIt creates a report after we complete a short questionaire.\nThe report will include estimated on-premise costs such as:\n Server hardware Network hardware Power and cooling costs Data center space Cost of IT personnel Based on assumption costs  Billing Dashboard Overall billing for the current month.\nSpend Summary Graph Cost for the previous month, current month to date, and estimates cost for current month to the end.\nSpend by Service \u0026amp; Service by Spend Current month-to-date only. What services are used most. Both graphs provide costs. And information on the services used the most.\nSpend by service shows percentages of total cost. Service by spend shows amounts spent on service.\nCost Explorer Graphs historic data up to 12 months and provides forecasts up to 3 months. Also provides reserved instance recommendations.\nAlso includes numerous preset filters.\nConsolidated Billing Companies with numerous, separate AWS accounts. Simplify billing with potential cost savings.\nCustomer Suppoort    Plan User Profile     Basic Individual Users Experiment with AWS   Developer Individual users experimenting with AWS   Business * Multiple Accounts * Production Environments on AWS * Use 1-2 services heavily   Enterprise * Multiple accounts * Large scale, business critical production environments    Customer Service and Communities All plans have 24/7 access to community resources.\nBest Practices All plans have access.\nTrusted Advisor\u0026rsquo;s six core checks.\nPersonal Health Dashboard All plans have access.\nMonitors AWS issues in regions and AZs that affect your account and alerts you.\nBusiness \u0026amp; Enterprise have access to the health API.\nTechnical support Developer plan only gets business hours, business and above get anytime.\nCases Business \u0026amp; Enterprise can do this programmatically.\nSystem Impaired (Developer subscriber) 12 hours\nProduction System Down (business subscriber) Within 1 hour\nBusiness-critical system down (enterprise) Within 15 minutes.\nThe agreed response time only applies to the initial response from AWS, not follow-up responses.\nArchitectural Support Developer only gets best practice, but enterprise gets custom.\n","permalink":"https://polymath.cloud/aws-cost/","summary":"There are 4 main support plans::\n Access online resources (basic) General guidance from AWS (Developer) 24-hour technical support (Business) Dedicated Account Managers and Personaliiseid Consultation  Total Cost of Ownership The Total Cost of Ownership (ToC) calculator is a free calculator to compare AWS cloud and on-premise costs. It\u0026rsquo;s designed for anyone who is considering migrating to AWS.\nIt creates a report after we complete a short questionaire.\nThe report will include estimated on-premise costs such as:","title":"AWS Cost Management and Customer Support"},{"content":"Authentication Comprised of 2 parts of information.\n Who you are?  Presenting your identity (login username). Unique value within the system we are trying to authenticate to.\nVerify you are who you say you are. Passwords, MFA, etc. This does not have to be unique.  We may use credit card pin numbers for authentication. Identity = credit card, verify = pin number.\nAuthorisation Happens before authentication.\nSystem in which we have authenticated to establishes what level of privileges we can access.\nIAM defines what we can access in AWS. Each identity can have a different authorisation profile attached to it.\nWhat we can access once we have authenticated to a system.\nAccess Control Mechanism of accessing a secured resource.\n MFA Username / password  Access Control is about the process of how a resource is granted.\nNot always related to humans, can be machine only (such as IAM roles).\nFederation - access to non-AWS users.\nNetwork access control lists (network layer) and restricts data depending on network parameters.\nSecurity groups are NACLs but at the instance level.\n","permalink":"https://polymath.cloud/aws-authentication-authorisation-access/","summary":"Authentication Comprised of 2 parts of information.\n Who you are?  Presenting your identity (login username). Unique value within the system we are trying to authenticate to.\nVerify you are who you say you are. Passwords, MFA, etc. This does not have to be unique.  We may use credit card pin numbers for authentication. Identity = credit card, verify = pin number.\nAuthorisation Happens before authentication.\nSystem in which we have authenticated to establishes what level of privileges we can access.","title":"Overview of AWS Authentication, Authorisation, and Access Control"},{"content":" Compute  Azure Virtual Machines Azure App Service Azure Container Instance Azure Functions   Storage  Blob Storage Azure File Storage Azure Data Lake Storage Gen2 Relational Databases Azure Synapse Analytics NoSQL   Netowkring  Virtual Network (VNet) Subnets VVNet peering Azure VPN ExpressRoute   Miigration  Azure Migrates Azure Active Directory   DevOps  Azure DevOps Azure Pipelines Azure DevTest Labs Azure CDN   IoT  Azure IoT Central Azure IoT Hub Azure Sphere   Analytics  Azure HDInsight Azure Databricks Azure Synapse Analytics   AI  Cognitive Services Azure Bot Service Azure Machine Learning Studio Machine Learning Services   Integration  Logic Apps Event Grid    Compute Azure Virtual Machines Runs VMs for Windows \u0026amp; Linux. If we currently have VMs, the easiest way to migrate is to \u0026ldquo;lift and shift\u0026rdquo;. Take our VMs on premise and migrate to the cloud.\nAzure VMs are known as Infrastructure as a service.\nAzure App Service Platform as a service. We can host applications here like Heroku without worrying about the underlying infrastructure.\nIf we have an application that is not a web or mobile app we have to use VMs.\nAzure Container Instance Let\u0026rsquo;s us host containers. Microsoft provides a variety of ways to run containers. THe simplest way is Azure container services.\nIf we have a more complex setup we might want to use Azure Kubernetes service.\nAzure Functions Microsoft\u0026rsquo;s main serverless functionality. The consumption plan is better as we only pay for when a function is running.\nStorage Blob Storage Object storage, collection of files. Flat structure, used for unstructured data.\nOne of the great things is that it has multiple access tiers.\n Hot: frequently accessed Cool: infrequently accessed Archive: rarely accessed. Also takes several hours to get files out.  Azure File Storage Typical SMB storage. Can mount in Windows. Is hierarchical.\nAzure Data Lake Storage Gen2 Hadoop compatible storage for use with data analytics software.\nRelational Databases  Azure SQL Database MySql, MariaDB and PostgreSQL for open source DBs.  Azure Synapse Analytics For data warehouses.\nNoSQL  Azure Cosmos DB Azure Cache for Redis  Netowkring Virtual Network (VNet)  Virtual Network  Subnets  Routes that define how traffic shifts between thing By default all outbound traffic is allowed, for income we need an IP address assigned.  VVNet peering Can get VNets to talk to eachother.\nAzure VPN Sends encrypted traffic over the internet.\nExpressRoute Private dedicated connection between us and Azure. Provides higher speed \u0026amp; reliability.\nMiigration Azure Migrates Help migrates on-premise to the cloud.\nAzure Active Directory Syncs on-premise with Azure directory through Windows Active Directory.\nDevOps Azure DevOps Family of other things in this category.\nAzure Pipelines Creates automated workflows (CI).\nAzure DevTest Labs Spin up non-production environments easily.\nAzure CDN Is a CDN, uses edge server and caching to serve content faster.\nIoT Azure IoT Central Fully managed SAAS that lets us create IoT applications.\nAzure IoT Hub More customised, handles communications with millions of IoT devices. It\u0026rsquo;s what IoT central uses behind the scenes.\nAzure Sphere Make IoT devices more secure.\nAnalytics Azure HDInsight Big data frameworks such as Hadoop.\nAzure Databricks More user friendly than Spark\nAzure Synapse Analytics Combines data warehouse functionality with support for Spark.\nAI Cognitive Services Used for prebuilt AI tools. Don\u0026rsquo;t need to know machine learning to use. Grouped into 5 categories.\n Decision Language Speech Vision (classify images) Web search  Azure Bot Service Create chatbots.\nAzure Machine Learning Studio Lets us train and deploy machine learning models with a drag \u0026amp; drop interface.\nMachine Learning Services Full control overy stage of the ML process.\nIntegration Logic Apps Detect events that happen and notifies us or something else.\nEvent Grid We\u0026rsquo;d normally need to use Event Grid to notify our logic app of particular events.\n","permalink":"https://polymath.cloud/azure-overview-services/","summary":"Compute  Azure Virtual Machines Azure App Service Azure Container Instance Azure Functions   Storage  Blob Storage Azure File Storage Azure Data Lake Storage Gen2 Relational Databases Azure Synapse Analytics NoSQL   Netowkring  Virtual Network (VNet) Subnets VVNet peering Azure VPN ExpressRoute   Miigration  Azure Migrates Azure Active Directory   DevOps  Azure DevOps Azure Pipelines Azure DevTest Labs Azure CDN   IoT  Azure IoT Central Azure IoT Hub Azure Sphere   Analytics  Azure HDInsight Azure Databricks Azure Synapse Analytics   AI  Cognitive Services Azure Bot Service Azure Machine Learning Studio Machine Learning Services   Integration  Logic Apps Event Grid    Compute Azure Virtual Machines Runs VMs for Windows \u0026amp; Linux.","title":"Overview of Azure Services"},{"content":"Blob storage Binary Large Object (Blob) storage is a way of storing large files.\nThere are 3 types of Blobs in Azure:\nBlob Blocks Divided into blocks of up to 100MB in size. Blobs of up to 4.75TB can be stored as blob blocks in Azure.\nUsing multiple blocks to represent the blob allows for more efficient handling of large blobs. Usually, the complexity of managing individual blocks is handled for you so you can simply deal with the entire blob rather than individual blocks.\nAppend Blobs Append blobs are optimized for appending new data at the end of the blob. This is particularly useful for storing log data where new lines are added at the end and the data never needs to be modified after it is written.\nPage Blobs Page blobs are optimized for random read/write operations. The name comes from the practice of operating systems organizing memory into pages of relatively small sizes that can be easily managed. In Azure, page blobs are collections of individual pages of up to 4MB each. They are used for storing virtual machine disks in Azure.\nCreating Storage \r\r\rThe Status Indicates that the Primary storage location is Available. In the event of an outage in Azure, you may see a different value here. This storage account has no secondary storage location, but you can create storage accounts with primary and secondary storage locations. The Replication property of a storage account determines this.\nThe Performance can be standard or premium. When you need guaranteed latency you should use premium storage. Premium storage has much higher storage costs because they use solid-state drives (SSDs) whereas standard storage uses magnetic spinning hard disk drives (HDDs).\nAccess tier optimizes the storage and cost based on how frequently data is accessed. The Hot tier is for frequently accessed data and carries the highest cost for storage but the lowest cost for accessing the data. The cool and archive tiers reduce are suited for less frequently accessed data with archive offering the lowest cost for storage but the highest cost for accessing data. The archive tier actually stores the data offline and the data needs to be \u0026ldquo;rehydrated\u0026rdquo; to the hot or cool storage before it can be read. Cool and archive tiers also include a penalty if you delete the blob within 30 days and 180 days, respectively, of when they are first moved into these tiers. The Replication sets the durability and availability of the storage. The following options are available:\n Locally-redundant storage (LRS) is the cheapest option and stores the data in a single data center. If that data center goes offline you will not be able to access the data. Zone-redundant storage (ZRS) stores data across three data centers in a region. It can tolerate individual data center outages but not regional outages. Geo-redundant storage (GRS) stores data across multiple data centers in two regions, a primary region and a secondary region. This option is more expensive but can tolerate entire regional outages. There is also read-access geo-redundant storage (RA-GRS) which allows you to read from the secondary region compared to GRS which only allows you to access the secondary in the case of a Microsoft-initiated region failover to the secondary.   Finally, the Account kind describes if the storage account is general-purpose or specialized. General-purpose accounts allow storage of blobs, tables, files, and queues whereas specialized kinds only allow one type such as only blob storage. There are different pricing models for each account kind so a specialized kind may reduce your costs. StorageV2 is the recommended default.\nBlobs are stored inside of containers.\nGeneral-purpose azure storage accounts can store files on network accessible file shares. Blob storage can store any type of file as well but file shares are best suited for use cases where you want to share files using computers\u0026rsquo; file systems to make accessing and sharing files easy. Azure file shares support the industry-standard Server Message Block (SMB) protocol and can be used to share files across Windows, macOS, and Linux machines.\nAzure virtual machines (VMs) use Azure disks as their attached disk storage. Azure disks are built-on top of page blobs which are the type of blobs optimized for random access. When you create Azure disks you can choose to manage the storage account yourself or to use managed disks where Azure manages the storage account for you. Managed disks are the preferred option. Within managed disks you can choose between:\n Ultra SSDs which provide the best throughput and I/O operations per second (IOPS) performance characteristics but at the highest prices. Consider Ultra SSDs for mission-critical I/O intense applications such as running databases. Premium SSDs are the next best performing and are well-suited to production workloads with all but the highest performance I/O requirements that may benefit from using Ultra SSDs. Standard SSDs are the least expensive SSD option and are suitable for production workloads with low I/O performance requirements such as web servers and lightly used applications. Standard HDDs use spinning disk technology and are therefore the least expensive option but also provide the lowest performance. Use them for backups and infrequently accessed applications.   Azure disks give you the freedom to attach and detach from different VMs. They will maintain their data but the data is only usable when a disk is attached to a VM. You will inspect a VM with two disks attached to it in this Lab Step.\nVirtual Machines Each VM has one OS disk which contains the operating system and is used to boot the VM.\nAll disks are encrypted at rest automatically and transparently to any users. This means if someone were to steal a physical disk from an Azure data center the physical disk would be encrypted and unusable.\nThis is true for all data in Azure storage accounts. However, for Azure disks, you can also encrypt the virtual disk at the operating system level. This is referred to as Azure Disk Encryption (ADE).\nThis protects against someone attempting to copy your Azure disk and attach it to an Azure VM because they would not be able to decrypt the data without the encryption key. Azure recommends enabling ADE for production workloads.\nAzure automatically provides a Temporary Storage disk that will be lost forever once the VM is deleted, while Azure disks can be attached and detached from VMs and persist their data. The data disk the VM has attached to it is not automatically formatted and does not appear in the list. Each operating system provides tools to format the data disks, but that is outside of the scope of this Lab.\n","permalink":"https://polymath.cloud/azure-overview-storage/","summary":"Blob storage Binary Large Object (Blob) storage is a way of storing large files.\nThere are 3 types of Blobs in Azure:\nBlob Blocks Divided into blocks of up to 100MB in size. Blobs of up to 4.75TB can be stored as blob blocks in Azure.\nUsing multiple blocks to represent the blob allows for more efficient handling of large blobs. Usually, the complexity of managing individual blocks is handled for you so you can simply deal with the entire blob rather than individual blocks.","title":"Overview of Azure Storage"},{"content":"https://tryhackme.com/room/bruteit\nPreface If you\u0026rsquo;re reading this, like me, you must strangely like the idea of effectively designing peer to peer networks.\nAlmost no real world usage (unless you work in this industry), but nevertheless the design is so interesting!\nPeer to peer networks effectively are close approximations of how humans interact. Much like how object orientated tried to represent how humans think, I believe peer to peer networks are how humans communicate.\nI mean, after all, you don\u0026rsquo;t talk to a single person (server) who then does everything for you (client). Well, unless you\u0026rsquo;re in a Turing test!\nThis is what makes P2P interesting to me. When looking at the design of P2P networks, we\u0026rsquo;re looking at how humans communicate, how we build our own interpersonal networks. How we can represent cities and the likes on this network.\nWe\u0026rsquo;ll start off with 2 of the biggest P2P networks. Tor and BitTorrent. To understand how to design them, we\u0026rsquo;ve got to look at the best!\nAlthough I won\u0026rsquo;t talk about Bitcoin, or any cryptocurrency. There simply is nothing for me to add. My favourite book on this topic is \u0026quot;Mastering Bitcoin\u0026quot;. Check it out!\nTowards the end of this ebook, we\u0026rsquo;ll look at designing effective P2P networks. Taking what we saw in Tor and Bittorrent and some cryptocurrency knowledge, we\u0026rsquo;ll try to generalise a solution for designing them.\nAfter all, there is about 5,000,000 articles on designing good client-server networks but almost none on peer to peer!\nLet us begin!\nTor The United States Naval Research Laboratory developed The Onion Routing Protocol (T0r) to project U.S. intelligence communications online. Ironically, Tor has seen widespread use by everyone - even those organisations which the U.S. Navy fights against.\nYou may know Tor as the hometown of online illegal activities, a place where you can buy any drug you want, a place for all things illegal. Tor is much larger than what the media makes it out to be. According to Kings College much of Tor is legal.\nWhen you normally visit a website, your computer makes a direct TCP connection with the website\u0026rsquo;s server. Anyone monitoring your internet could read the TCP packet. They can find out what website you\u0026rsquo;re visiting and your IP address. As well as what port you\u0026rsquo;re connecting to.\nIf you\u0026rsquo;re using HTTPS, no one will know what the message said. But, sometimes all an adversary needs to know is who you\u0026rsquo;re connecting to.\nUsing Tor, your computer never communicates with the server directly. Tor creates a twisted path through 3 Tor nodes, and sends the data via that circuit.\nThe core principle of Tor is onion routing which is a technique for anonymous and secure communication over a public network. In onion routing messages are encapsulated in several layers of encryption.\n \u0026quot;Onions have layers\u0026quot; - Shrek\n So does a message going through Tor. Each layer in Tor is encryption, you are adding layers of encryption to a Tor message, as opposed to just adding 1 layer of encryption.\nThis is why it\u0026rsquo;s called The Onion Routing Protocol, because it adds layers at each stage.\nThe resulting onion (fully encapsulated message) is then transmitted through a series of computers in a network (called onion routers) with each computer peeling away a layer of the \u0026lsquo;onion\u0026rsquo;. This series of computers is called a path. Each layer contains the next destination - the next router the packet has to go to. When the final layer is decrypted you get the plaintext (non-encrypted message).\nThe original author remains anonymous because each node in the network is only aware of the preceding and following nodes in the path (except the first node that does know who the sender is, but doesn\u0026rsquo;t know the final destination).\nThis has led to attacks where large organisations with expansive resources run servers to attempt to be the first and last nodes in the network. If the organisation\u0026rsquo;s server is the first node, it knows who sent the message. If the organisation server is the last node, it knows the final destination and what the message says.\nNow we have a basic overview of Tor, let\u0026rsquo;s start exploring how each part of Tor works. Don\u0026rsquo;t worry if you\u0026rsquo;re confused, every part of Tor will be explained using gnarly diagrams.\nOverview of Tor  \u0026quot;Onion Routing is a distributed overlay network designed to anonymise TCP-based applications like web browsing, secure shell and instant messaging.\u0026quot;\n Clients choose a path through the network and build a circuit where each onion router in the path knows the predecessor and the successor, but no other nodes in the circuit. Paths and circuits are synonyms. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} The original author (the question mark on the far left) remains anonymous, unless you\u0026rsquo;re the first path in the node as you know who sent you the packet. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} No one knows what data is being sent until it reaches the last node in the path; who knows the data but doesn\u0026rsquo;t know who sent it. The second to last node in the path doesn\u0026rsquo;t know what the data is, only the last node in the path does. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} This has led to attacks whereby large organisations with expansive resources create Tor servers which aim to be the first and last onion routers in a path. If the organisation can do this, they get to know who sent the data and what data was sent, effectively breaking Tor. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} It\u0026rsquo;s incredibly hard to do this without being physically close to the location of the organisations servers, we\u0026rsquo;ll explore this more later.\nThroughout this article I\u0026rsquo;ll be using Netflix as a normal service (Bob) and Amazon Prime Video as the adversary (Eve). In the real world, this is incredibly unlikely to be the case. I\u0026rsquo;m not here to speculate on what organisations might want to attack Tor, so I\u0026rsquo;ve used 2 unlikely examples to avoid the political side of it.\nEach packet flows down the network in fixed-size cells. These cells have to be the same size so none of the data going through the Tor network looks suspiciously big.\nThese cells are unwrapped by a symmetric key at each router and then the cell is relayed further down the path. Let\u0026rsquo;s go into Tor itself.\nTor Itself  \u0026quot;There is strength in numbers\u0026quot;\n Tor needs a lot of users to create anonymity, if Tor was hard to use new users wouldn\u0026rsquo;t adopt it so quickly. Because new users won\u0026rsquo;t adopt it, Tor becomes less anonymous. By this reasoning it is easy to see that usability isn\u0026rsquo;t just a design choice of Tor but a security requirement to make Tor secure.\nIf Tor isn\u0026rsquo;t usable or designed nicely, it won\u0026rsquo;t be used by many people. If it\u0026rsquo;s not used by many people, it\u0026rsquo;s less anonymous.\nTor has had to make some design choices that may not improve security but improve usability with the hopes that an improvement in usability is an improvement in security.\nWhat Tor Isn\u0026rsquo;t Tor is not a completely decentralised peer-to-peer system like many people believe it to be. If it was completely peer to peer it wouldn\u0026rsquo;t be very usable. Tor requires a set of directory servers that manage and keep the state of the network at any given time.\nTor is not secure against end to end attacks. An end to end attack is where an entity has control of both the first and last node in a path, as talked about earlier. This is a problem that cyber security experts have yet to solve, so Tor does not have a solution to this problem.\nTor does not hide the identity of the sender.\nIn 2013 during the Final Exams period at Harvard a student tried to delay the exam by sending in a fake bomb threat. The student used Tor and Guerrilla Mail (a service which allows people to make disposable email addresses) to send the bomb threat to school officials.\nThe student was caught, even though he took precautions to make sure he wasn\u0026rsquo;t caught.\nGurillar mail sends an originating IP address header along with the email that\u0026rsquo;s sent so the receiver knows where the original email came from. With Tor, the student expected the IP address to be scrambled but the authorities knew it came from a Tor exit node (Tor keeps a list of all nodes in the directory service) so the authorities simply looked for people who were accessing Tor (within the university) at the time the email was sent.\nTor isn\u0026rsquo;t an anonymising service, but it is a service that can encrypt all traffic from A to B (so long as an end-end attack isn\u0026rsquo;t performed). Tor is also incredibly slow, so using it for Netflix isn\u0026rsquo;t a good use case. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;}\nThe Difference Between Tor and a VPN When you use a VPN, the VPN forwards all your internet traffic to the appropriate destination. When it does so, the VPN encrypts your traffic. All your internet service provider can see is encrypted traffic heading from your computer to the VPN. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} They can\u0026rsquo;t see inside your packets. They don\u0026rsquo;t know who you\u0026rsquo;re talking to - other than the VPN.\nVPN\u0026rsquo;s aren\u0026rsquo;t private in the same way that Tor is. VPNs protect you against ISPs or local adversaries (ones monitoring your laptop\u0026rsquo;s WiFi). But, they don\u0026rsquo;t protect you from themselves.\nThe VPN is the man in the middle. It knows who you are and who you\u0026rsquo;re talking to. Depending on the traffic, the VPN also decrypts your packet. Meaning they know everything. With a VPN, you have to trust it. With Tor, you don\u0026rsquo;t have to put a lot of trust in.\nIn Tor, one rogue node is survivable. If one of the nodes in our graph earlier was an adversary, they\u0026rsquo;ll only know our IP address or our data packet. Tor protects you from Tor. VPN\u0026rsquo;s expect that you trust them.\nTor protects you from the Tor network. One rogue node is survivable. They don\u0026rsquo;t expect you to trust the network.\nNo one, apart from you, should know the IP addresses of the origin and destination - and know the contents of the message.\n{width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;}\nNow that we have a good handle on what Tor is, let\u0026rsquo;s explore onion routing.\nOnion Routing {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Given the network above, we are going to simulate what Tor does. Your computer is the one on the far left, and you\u0026rsquo;re sending a request to watch Stranger Things on Netflix. This path of nodes is called a circuit. Later on, we\u0026rsquo;re going to look into how circuits are made and how the encryption works. But for now we\u0026rsquo;re trying to generalise how Tor works. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} We start off with the message (we haven\u0026rsquo;t sent it yet). We need to encrypt the message N times (where N is how many nodes are in the path). We encrypt it using AES, a symmetric key crypto-system. The key is agreed using Diffie-Hellman. Don\u0026rsquo;t worry, we\u0026rsquo;ll discuss all of this later. There is 4 nodes in the path (minus your computer and Netflix) so we encrypt the message 4 times. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Our packet (onion) has 4 layers. Blue, purple, orange, and teal. Each colour represents one layer of encryption. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} We send the onion to the first node in our path. That node then removes the first layer of encryption.\nEach node in the path knows what the key to decrypt their layer is (via Diffie-Hellman). Node 1 removes the blue layer with their symmetric key (that you both agreed on). {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Node 1 knows you sent the message, but the message is still encrypted by 3 layers of encryption, it has no idea what the message is.\nAs it travels down the path, more and more layers are stripped away. The next node does not know who sent the packet. All it knows is that Node 1 sent them the packet, and it\u0026rsquo;s to be delivered to Node 3. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Now Node 3 strips away a layer. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} The final node knows what the message is and where it\u0026rsquo;s going, but it doesn\u0026rsquo;t know who sent it. All it knows is that Node 3 sent them the message, but it doesn\u0026rsquo;t know about anyone else in the path. One of the key properties here is that once a node decrypts a layer, it cannot tell how many more layers there are to decrypt. It could be as small as 1 or 2 or as large as 200 layers of encryption. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Now there\u0026rsquo;s no way Amazon can find out you watch Netflix! Netflix sends back a part of Stranger Things.\nLet\u0026rsquo;s see how it works in reverse. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Node 4 adds its layer of encryption now. It doesn\u0026rsquo;t know who originally made the request, all it knows is that Node 3 sent the request to them so it sends the response message back to Node 3. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} And so on for the next few nodes. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Now the response packet is fully encrypted. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Now the packet is fully encrypted, the only one who still knows what the message contains is Node 4. The only one who knows who made the message is Node\n Now that we have the fully encrypted response back, we can use all the symmetric keys to decrypt it. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} You might be thinking \u0026quot;I\u0026rsquo;ve seen snails ÔøΩÔøΩ faster than this\u0026quot; and you would be right. This protocol isn\u0026rsquo;t designed for speed, but at the same time it has to care about speed.  The algorithm could be much slower, but much more secure (using entirely public key cryptography instead of symmetric key cryptography) but the usability of the system matters. So yes, it\u0026rsquo;s slow. No it\u0026rsquo;s not as slow as it could be. But it\u0026rsquo;s all a balancing act here.\nThe encryption used is normally AES with the key being shared via Diffie-Hellman.\nThe paths Tor creates are called circuits. Let\u0026rsquo;s explore how Tor chooses what nodes to use in a circuit.\nHow Is a Circuit Created? Each machine, when it wants to create a circuit, chooses the exit node first, followed by the other nodes in the circuit. Tor circuits are always 3 nodes. Increasing the length of the circuit does not create better anonymity. If an attacker owns the first and last nodes in the network, you can have 1500 nodes in the circuit and it still wouldn\u0026rsquo;t make you more secure.\nWhen Tor selects the exit node, it selects it following these principles:\n  Does the client\u0026rsquo;s torrc (the configuration file of Tor) have settings about which exit nodes not to choose?\n  Tor only chooses an exit relay which allows you to exit the Tor network. Some exit nodes only allow web traffic (HTTP/S port 80) which is not useful when someone wants to send email (SMTP port 25). The exit node has to have the available capacity to support you. Tor tries to choose an exit node which has enough resources available.\n  All paths in the circuit obey these rules:\n We do not choose the same router twice for the same path.  If you choose the same node twice, it\u0026rsquo;s guaranteed that the node will either be the guard node (the node you enter at) or the exit node, both dangerous positions. There is a 2/3 chance of it being both the guard and exit nodes, which is even more dangerous. We want to avoid the entry / exit attacks. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;}\n We do not choose any router in the same family as another in the same path. (Two routers are in the same family if each one lists the other in the \u0026ldquo;family\u0026rdquo; entries of its descriptor.)  Operators who run more than 1 Tor node can choose to signify their nodes as \u0026lsquo;family\u0026rsquo;. This means that the nodes have all the same parent (the operator of their network). This is again a countermeasure against the entry / exit attacks, although operators do not have to declare family if they wish. If they want to become a guard node (discussed soon) it is recommended to declare family, although not required. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;}\n We do not choose more than one router in a given /16 subnet.  Subnets define networks. IP addresses are made up of 8 octets of bits. As an example, Google\u0026rsquo;s IP address in binary is:\npython 01000000.11101001.10101001.01101010\nThe first 16 bits (the /16 subnet) is 01000000.11101001 which means that Tor does not choose any nodes which start with the same 16 bits as this IP address. Again, a counter-measure to the entry / exit attacks. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} If subnets sound confusing, I\u0026rsquo;ve written this Python code to help explain them:\npython # ip addresses are in binary, not the usual base 10 subnets # are usually powers of 2, this is 2^4. IP = \u0026quot;01000000.11101001.10101001.01101010\u0026quot; subnet = 16\n# this will store the subnet address once we find it subnet_ip = [] IP_list = list(IP) counter = 0\nfor i in IP_list: # we want to end the loop when we reach the subnet number if counter \u0026gt;= subnet: break # the ip address segments each oclet of bits with full stops # we don\u0026rsquo;t want to count a fullstop as a number # but we want to include it in the final subnet if i == \u0026quot;.\u0026quot;: subnet_ip.append(\u0026quot;.\u0026quot;) continue else: # else it is a number so we append and increment counter subnet_ip.append(i) counter = counter + 1 print(\u0026quot;Subnet is \u0026quot; + \u0026ldquo;.join(subnet_ip))\n We don\u0026rsquo;t choose any non-running or non-valid router unless we have been configured to do so. By default, we are configured to allow non-valid routers in \u0026ldquo;middle\u0026rdquo; and \u0026ldquo;rendezvous\u0026rdquo; positions.  Non-running means the node currently isn\u0026rsquo;t online. You don\u0026rsquo;t want to pick things that aren\u0026rsquo;t online. Non-valid means that some configuration in the nodes torrc is wrong. You don\u0026rsquo;t want to accept strange configurations in case they are trying to hack or break something.\n The first node must be a Guard node.  A guard node is a privileged node because it sees the real IP of the user. It\u0026rsquo;s \u0026lsquo;expensive\u0026rsquo; to become a guard node (maintain a high uptime for weeks and have good bandwidth). {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} This is possible for large companies who have 99.9 percent uptime and high bandwidth (such as Netflix). Tor has no way to stop a powerful adversary from registering a load of guard nodes. Right now, Tor is configured to stick with a single guard node for 12 weeks at a time, so you choose 4 new guard nodes a year.\nThis means that if you use Tor once to watch Amazon Prime Video, it is relatively unlikely for Netflix to be your guard node. Of course, the more guard nodes Netflix creates the more likely it is. Although, if Netflix knows you are connecting to the Tor network to watch Amazon Prime Video then they will have to wait 4 weeks for their suspicions to be confirmed, unless they attack the guard node and take it over.\nBecoming a guard node is relatively easy for a large organisation. Becoming the exit node is slightly harder, but still possible. We have to assume that the large organisation has infinite computational power to be able to do this. The solution is to make the attack highly expensive with a low rate of success. The more regular users of Tor, the harder is if for a large organisation to attack it. If Netflix controls $\\frac{50}{100}$ nodes in the network: {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} The chance of you choosing a guard node from Netflix is 50\nIf suddenly 50 more normal user nodes join then that\u0026rsquo;s $\\frac{50}{100}$ reducing the probability of Netflix owning a guard node (and thus, a potential attack) and making it even more expensive. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} There is strength in numbers within the Tor service.\nGuard Pinning When a Tor client starts up for the first time, it chooses a small and random set of guard nodes. For the next few months, it makes sure each circuit is using one of these pre-selected nodes as its guard node.\nThe official proposal from the Tor documentation states:\n \u0026quot;1. Introduction and motivation\nTor uses entry guards to prevent an attacker who controls some a fraction of the network from observing a fraction of every user\u0026rsquo;s traffic. If users chose their entries and exits uniformly at random from the list of servers every time they build a circuit, then an adversary who had (k/N) of the network would deanonymize $F=(k/N)^2$ of all circuits... and after a given user had built C circuits, the attacker would see them at least once with probability $1-(1-F)^C$. With large C, the attacker would get a sample of every user\u0026rsquo;s traffic with probability 1.\nTo prevent this from happening, Tor clients choose a small number of guard nodes (currently 3). These guard nodes are the only nodes that the client will connect to directly. If they are not compromised, the user\u0026rsquo;s paths are not compromised.\nBut attacks remain. Consider an attacker who can run a firewall between a target user and the Tor network, and make many of the guards they don\u0026rsquo;t control appear to be unreachable. Or consider an attacker who can identify a user\u0026rsquo;s guards, and mount denial-of-service attacks on them until the user picks a guard that the attacker controls.\u0026quot;\n Guard node pinning is important because of Tor\u0026rsquo;s threat model. Tor assumes that it may only take a single opening for an adversary to work out who you are talking to, or who you are. Since a single vulnerability circuit can destroy your integrity, Tor tries to minimise the probability that we will ever construct one or more vulnerable circuits.\nTor guard nodes can be denial of service attacked, or an attacker could have a majority share of guard nodes on the internet when you connect to try and get you. By guard node pinning, it aims to make this much harder.\nIn the event of an attacker working out your guard nodes and shutting them down, forcing you to connect to their guard nodes. Or, you connect to a guard node controlled by an adversary Tor has algorithms in place to try and detect this.\nWhat Is a Directory Node? The state of the Tor network is tracked and publicised by a group of 9 trusted servers (as of 2019) known as directory nodes. Each of which is controlled by a different organisation.\nEach node is a separate organisation because it provides redundancy and distributes trust. The integrity of the Tor network relies on the honesty and correctness of the directory nodes. So making the network resilient and distributing trust is critical.\nDirectory nodes maintain a list of currently running relays (publicly listed node in the Tor network). Once per hour directory nodes publish a consensus together. The consensus is a single document compiled and voted on by each directory node. It ensures that all clients have the same information about the relays that make up Tor.\nWhen a Tor user (a client or a node) wants to know the current state of the network, it asks a directory node. As we\u0026rsquo;ll see later, directory nodes are essential for all parts of Tor, especially in hidden services. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Relays keep the directory nodes up to date. They send directory node(s) a notification whenever they come online or updated. Whenever a directory node receives a notification, it updates its personal opinion on the current state of the Tor network. All directory nodes then use this opinion to form a consensus of the network. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Let\u0026rsquo;s now look at what happens when disagreements arise in the directory services when forming a consensus.\nThe first version of Tor took a simple approach to conflict resolution. Each directory node gave the state of the network as it personally saw it. Each client believed whichever directory node it had spoken to recently. There is no consensus here among all directory nodes.\nIn Tor, this is a disaster. There was nothing ensuring that directory nodes were telling the truth. If an adversary took over one directory node, they would be able to lie about the state of the network. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} If a client asked this adversary controlled directory for the state of the network, it\u0026rsquo;d return a list. This list contains only nodes that the adversary controlled. The client would then connect to these adversary nodes.\nThe second version of the Tor directory system made this attack harder. Instead of asking a single directory node for its opinion, clients asked every directory node and combined their opinions into a consensus. But, clients could form differing views on the network depending on when they had last spoken to each directory node. This gave way to statistical information leakage - not as bad as Tor 1.0. Besides, every client had to talk to every directory node, which took time and was expensive.\nThe third and current version of the directory system moved the responsibility of calculating a consensus from clients to directory nodes. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;}\nWhat Are Bridge Nodes? I\u0026rsquo;m not sure if you saw it earlier, but I made the distinction between nodes in the directory services and nodes that aren\u0026rsquo;t.\nIf a repressive state wants to block Tor, it uses the directory nodes. Directory nodes keep up-to-date lists of Tor relay nodes and are publicly available for anyone to download.\nThe state can query a directory node for a list of active Tor relays, and censor all traffic to them.\nTor keeps an up-to-date listing of countries where it is possibly blocked (censored) if you\u0026rsquo;re interested.\nTor helps its users circumvent the censorship by hiding the fact they are using Tor. They do this through a proxy known as a Bridge Node. Tor users send their traffic to the bridge node, which forwards the traffic onto the user\u0026rsquo;s chosen guard nodes. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} The full list of Bridge nodes is never published, making it difficult for states to completely block Tor. You can view some bridge nodes here. If this doesn\u0026rsquo;t work, Tor suggests:\n \u0026quot;Another way to get bridges is to send an email to bridges@torproject.org. Please note that you must send the email using an address from one of the following email providers: Riseup or Gmail.\n It\u0026rsquo;s possible to block Tor another way. Censoring states can use Deep Packet Inspection (DPI)to analyse the shape, volume, and feel of each packet. Using DPI states can recognise Tor traffic, even when they connect to unknown IP addresses or are encrypted.\nTo circumvent this, Tor developers have made Pluggable Transports (PT). These transform Tor traffic flow between the client and the bridge. In the words of Tor\u0026rsquo;s documentation:\nThis way, censors who monitor traffic between the client and the bridge will see innocent-looking transformed traffic instead of the actual Tor traffic. External programs can talk to Tor clients and Tor bridges using the pluggable transport API, to make it easier to build interoperable programs.\nTor Hidden Services Ever heard those rumours \u0026quot;there are websites on the dark-web, on Tor that when you visit them you\u0026rsquo;ll see people doing nasty things, selling illegal things or worse: watching The Hangover Part 3\u0026quot;\nWhen people talk about these websites they are talking about Tor Hidden Services.\nThese are a wild concept and honestly deserve an entire blogpost on their own. Hidden services are servers, like any normal computer server. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Except in a Tor Hidden Service it is possible to communicate without the user and server knowing who each other are. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} The device (the question mark) knows that it wants to access Netflix, but it doesn\u0026rsquo;t know anything about the server and the server doesn\u0026rsquo;t know anything about the device that\u0026rsquo;s asked to access it. This is quite confusing, but don\u0026rsquo;t worry, I\u0026rsquo;m going to explain it all with cool diagrams.\nWhen a server is set up on Tor to act as a hidden service, the server sends a message to some selected Onion Routers asking if they want to be an introduction point to the server. It is entirely up to the server as to who gets chosen as an introduction point, although usually they ask 3 routers to be their introduction points. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} The introduction points know that they are going to be introducing people to the server.\nThe server will then create something called a hidden service descriptor which has a public key and the IP address of each introduction point. It will then send this hidden service descriptor to a distributed hash table which means that every onion router (not just the introduction points) will hold some part of the information of the hidden service.\nIf you try to look up a hidden service the introduction point responsible for it will give you the full hidden service descriptor, the address of the hidden service\u0026rsquo;s introduction points.\nThe key for this hash table is the onion address and the onion address is derived from the public key of the server.\nThe idea is that the onion address isn\u0026rsquo;t publicised over the whole Tor network but instead you find it another way like from a friend telling you or on the internet (addresses ending in .onion).\nThe way that the distributed hash table is programmed means that the vast majority of the nodes won\u0026rsquo;t know what the descriptor is for a given key.\nSo almost every single onion router will have minimal knowledge about the hidden service unless they explicitly want to find it. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Let\u0026rsquo;s say someone gave you the onion address. You request the descriptor off the hash table and you get back the services introduction points.\nIf you want to access an onion address you would first request the descriptor from the hash table and the descriptor has, let\u0026rsquo;s say 4 or 5 IP addresses of introductory nodes. You pick one at random let\u0026rsquo;s say the top one. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} You\u0026rsquo;re going to ask the introduction point to introduce you to the server and instead of making a connection directly to the server you make a rendezvous point at random in the network from a given set of Onion Routers. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} You then make a circuit to that rendezvous point and you send a message to the rendezvous point asking if it can introduce you to the server using the introduction point you just used. You then send the rendezvous point a one time password (in this example, let\u0026rsquo;s use \u0026lsquo;Labrador\u0026rsquo;).\nThe rendezvous point makes a circuit to the introduction point and sends it the word \u0026lsquo;Labrador\u0026rsquo; and its IP address. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} The introduction point sends the message to the server and the server can choose to accept it or do nothing. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} If the server accepts the message it will then create a circuit to the rendezvous point. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} The server sends the rendezvous point a message. The rendezvous point looks at both messages from your computer and the server. It says \u0026quot;well, I\u0026rsquo;ve received a message from this computer saying it wants to connect with this service and I\u0026rsquo;ve also received a message from the service asking if it can connect to a computer, therefore they must want to talk to each other\u0026quot;.\nThe rendezvous point will then act as another hop on the circuit and connect them. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} In short, a hidden service works like this, taken from here:\n  A hidden service calculates its key pair (private and public key, asymmetric encryption).\n  Then the hidden service picks some relays as its introduction points.\n  It tells its public key to those introduction points over Tor circuits.\n  After that the hidden-service creates a hidden service descriptor, containing its public key and what its introduction points are.\n  The hidden service signs the hidden service descriptor with its private key.\n  It then uploads the hidden service descriptor to a distributed hash table (DHT).\n  Clients learn the .onion address from a hidden service out-of-band. (e.g. public website) (A hash.onion is a 16 character name derived from the service\u0026rsquo;s public key.)\n  After retrieving the .onion address the client connects to the DHT and asks for that hash.\n  If it exists the client learns about the hidden service\u0026rsquo;s public key and its introduction points.\n  The client picks a relay at random to build a circuit to it, to tell it a one-time secret. The picked relay acts as rendezvous point.\n  The client creates a introduce message, containing the address of the rendezvous point and the one-time secret, before encrypting the message with the hidden service\u0026rsquo;s public key.\n  The client sends its message over a Tor circuit to one of the introduction points, demanding it to be forwarded to the hidden service.\n  The hidden service decrypts the introduce message with its private key to learn about the rendezvous point and the one-time secret.\n  The hidden service creates a rendezvous message, containing the one-time secret and sends it over a circuit to the rendezvous point.\n  The rendezvous point tells the client that a connection was established.\n  Client and hidden service talk to each other over this rendezvous point. All traffic is end-to-end encrypted and the rendezvous point just relays it back and forth. Note that each of them, client and hidden service, build a circuit to the rendezvous point; at three hops per circuit this makes six hops in total.\n  Attacks on Tor Tor projects its users from analysis attacks. The adversary wants to know who Alice is talking to. Yet, Tor does not protect against confirmation attacks. In these attacks, the adversary aims to answers the question \u0026ldquo;Is Alice talking to Bob?\u0026rdquo;\nConfirmation attacks are hard and need a lot of preparation and resources. The attacker needs to be able to track both ends of the circuit. The attacker can either directly track each devices internet connection or the guard and exit nodes.\nIf Alice sends a packet like this:\npython # (timestamp, size, port, protocol) (17284812, 3, 21, SSH)\nAnd Bob receives this packet, the attacker can see that the packets are the same - even though the attacker cannot see what the packet is as it is encrypted. Does Bob tend to receive packets at the same time that Alice sends them? Are they the same size? If so, it is reasonable to infer that Alice and Bob are communicating with each other.\nTor breaks packets up into sizeable chunks for a reason - to try and prevent this kind of thing. Tor is working on padding all packets to make this harder.\nThey\u0026rsquo;re discussing adding packet order randomisation too. But this is too costly at the moment. The Tor browser does add some extra defences, such as reordering packets.\nIf Alice sends the packets, A, B, C and Bob receives them in B, A, C it is harder to detect that they are the same. It\u0026rsquo;s not foolproof, but it does become harder.\nAn attack where the attacker tries to control both ends of the circuit is called a Sylbil Attack. Named after the main character of the book Sybil by Flora Rheta Schreiber. We discussed some of this earlier, where an attacker controls both the guard and exit nodes.\nSybil attacks are not theoretical. In 2014 researchers at Carnegie Mellon University appeared to successfully carry out a Sybil Attack against the real-life Tor network.\nWhen Lizard Squad - a group of hackers tried to perform a Sybil attack, a detection system alarmed. Tor has built-in monitoring against these kinds of events, and they are working on more sophisticated monitoring against Sybil attacks.\nIn 2007 Dan Egerstad - a Swedish security consultant, revealed he has intercepted usernames and passwords sent through Tor by being an exit node. At the time, these were not TLS or SSL encrypted.\nInterestingly, Dan Egerstad had this to say on the Tor nodes:\n \u0026quot;If you actually look into where these Tor nodes are hosted and how big they are, some of these nodes cost thousands of dollars each month just to host because they\u0026rsquo;re using lots of bandwidth, they\u0026rsquo;re heavy-duty servers and so on. Who would pay for this and be anonymous?\u0026quot;\n Tor does not normally hide the fact that you are using Tor. Many websites (such as BBC\u0026rsquo;S iPlayer or editing Wikipedia) block you when using a known Tor node.\nSome applications, under Tor, reveal your true IP address. One such application is BitTorrent.\nJansen et al described an attack where they DDOS exit nodes. By degrading the network (removing exit nodes) an attacker increases the chance to getting an exit node.\nTor users who visit a site twice, once on Tor and once off, can be tracked. The way you move your mouse is unique. There is a JavaScript time measurement bug report on the Tor project that shows how it\u0026rsquo;s possible to monitor the mouse locations on a site (even when on Tor). Once you fingerprint someone twice, you know they\u0026rsquo;re the same person.\nIt should be noted, that Tor browser offers 3 levels of security (located in the settings). The highest security level disables JavaScript, some images (as they can be used to track you) and some fonts too. The lesson is, if you want high-security Tor, use the high-security version.\nNow, all these attacks sound cool. But that\u0026rsquo;s not how most Tor users are caught. Most Tor users make mistakes and are caught because of themselves.\nTake Dredd pirate Roberts, Founder of the Silk Road dark marketplace. He gave himself away by posting about it on social media.\nMost Tor users are caught (if they\u0026rsquo;re doing illegal things) by bad operational security, and not normally because of a security issue with Tor.\nIt\u0026rsquo;s worth repeating this story, that we saw earlier.\nIn 2013 during the Final Exams period at Harvard, a student tried to delay the exam by sending in a fake bomb threat. The student used Tor and Guerrilla Mail (a service which allows people to make disposable email addresses) to send the bomb threat to school officials.\nThe student was caught, even though he took precautions to make sure he wasn\u0026rsquo;t caught.\nGuerilla mail sends an originating IP address header along with the email that\u0026rsquo;s sent to the receiver, so it knows where the original email came from. With Tor, the student expected the IP address to be scrambled but the authorities knew it came from a Tor exit node (Tor keeps a list of all nodes in the directory service) so the authorities looked for people who were accessing Tor (within the university) at the time the email was sent.\nIf this person went to a coffee shop or something, he probably would of be fine.\nThere\u0026rsquo;s a fantastic talk at DEFCON 22 about how Tor users got caught. None of the stories mentioned was caused by Tor, but rather bad OpSec.\nConclusion Tor is a fascinating protocol full of algorithms that have been refined over the years. I\u0026rsquo;ve come to appreciate Tor, and I hope you have to.\nBitTorrent BitTorrent is one of the most common protocols for transferring large files. In February 2013, BitTorrent was responsible for 3.35 percent of all worldwide bandwidth, more than half of the 6 percent of total bandwidth dedicated to file sharing.\nWho Created BitTorrent? Bram Cohen invented the BitTorrent protocol in 2001. Cohen wrote the first client implementation in Python.\nCohen collected free pornography to lure beta testers to use BitTorrent in the summer of 2002.\nBitTorrent vs Cient-Server Downloading In traditional downloading, the server uploads the file, and the client downloads the file. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} For popular files, this isn\u0026rsquo;t very effective.\n500 people downloading the same file will put the server under strain. This strain will cap the upload speed, so clients can not download the file fast.\nSecond, client-server costs a lot of money. The amount we pay increases with how popular a file is.\nThird, it\u0026rsquo;s centralised. Say the system dies, the file no longer exists\n no one can download it.  BitTorrent aims to solve these problems. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} In a peer-to-peer network, every peer is connected to every other peer in the network. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Semi-centralised peer-to-peer networks possess one or more peers with higher authority than most peers. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;}\nHigh Level Overview BitTorrent is a way to share files. It\u0026rsquo;s often used for large files. BitTorrent is an alternative to a single source sharing a file, such as a server. BitTorrent can productively work on lower bandwidth.\nThe first release of the BitTorrent client had no search engine and no peer exchange, users who wanted to upload a file had to create a small torrent descriptor file that they would upload to a torrent index site.\nWhen a user wants to share a file, they seed their file. This user is called a seeder. They upload a torrent descriptor file to an exchange (we\u0026rsquo;ll talk about this later). Anyone who wants to download that file will download this torrent descriptor. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} We call those who download peers. Their torrent client will connect to a tracker (discussed later) and the tracker will send them a list of IP addresses of other seeds and peers in the swarm. The swarm is all PC\u0026rsquo;s related to a certain torrent.\nThe torrent descriptor file contains a list of trackers and metadata on the file we\u0026rsquo;re downloading. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} A peer will connect to a seed and download parts of the file. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Once the peer completes a download, they could function as a seed. Although, it is possible to function as a seed while also downloading (and is very common).\nOnce the seed has shared the file to a peer, that peer will act as a seed. Instead of the client-server model where only 1 server exists to upload the file, in BitTorrent, multiple people can upload the same file.\nBitTorrent splits the file up into chunks called pieces, each of a certain size. Sometimes it\u0026rsquo;s 256KB, sometimes it\u0026rsquo;s 1MB. As each peer receives a piece, they become a seed of that piece for other peers.\nWith BitTorrent, we do not have a single source to download from. We could download a few pieces from your home country, then download a few that your home country doesn\u0026rsquo;t own from a far-away country.\nThe protocol hashes the pieces to make sure no seed has tampered with the original file. Then stores the hash in the torrent descriptor on the tracker.\nThis is how BitTorrent works at a very high level. We will now go into detail. We aim to answer these questions:\n  What if a peer only downloads and never uploads?\n  Who do we download from, or upload to?\n  What is a magnet link?\n  What is a torrent descriptor?\n  What hashing algorithm is used?\n  How does BitTorrent selects what pieces to download?\n  And much more.\nWhat\u0026rsquo;s in a Torrent Descriptor File, Anyway? It\u0026rsquo;s a dictionary (or hashmap) file.\nThe file is described as:\n Announce  The URL of the tracker. Remember earlier when we contacted the tracker server to find other peers using the same file? We found that tracker by using the announce key in the torrent descriptor file.\n Info  This maps to a dictionary whose keys depend on whether one or more files are being shared. The keys are: Files (child of info, is a list) Files only exists when multiple files are being shared. Files is a list of dictionaries. Each dictionary corresponding to a file.\nEach of these dictionaries has 2 keys:\nLength - the size of the file in bytes. Path - A list of strings corresponding to subdirectory names, the last of which is the actual file name.\n Length  The size of the file in bytes (only when one file is being shared)\n Name  Suggested filename. Or the suggested directory name.\n Pieces length  The number of bytes per piece.\nThe piece\u0026rsquo;s length must be a power of two and at least 16KiB.\nThis is: $$2^8 ; KiB = 256 ; KiB = 262,144 ; B$$\n Pieces  A hash list.\nA list of hashes calculated on various chunks of data. We split the data into pieces. Calculate the hashes for those pieces, store them in a list.\nBitTorrent uses SHA-1, which returns a 160-bit hash. Pieces will be a string whose length is a multiple of 20 bytes.\nIf the torrent contains multiple files, the pieces are formed by concatenating the files in the order they appear in the files directory.\nAll pieces in the torrent are the full piece length except for the last piece which may be shorter.\nNow, I can guess what you\u0026rsquo;re thinking.\n \u0026quot;SHA-1? What is this? The early 2000s?\u0026quot;\n And I agree.BitTorrent is moving from SHA-1 to SHA256. Google BEP 0052 to find out more.\nStill confused? Not to worry! I designed this JSON file that describes what a torrent file looks like. Note: I\u0026rsquo;ve concatenated some things. This makes it easier to read and understand the general layout. I made the numbers up, following the rules of BitTorrent\u0026rsquo;s torrent descriptor.\npython \u0026quot;Announce\u0026quot;: \u0026quot;url of tracker\u0026quot;, \u0026quot;Info\u0026quot;: \u0026quot;Files\u0026quot;: [ \u0026quot;Length\u0026quot;: 16, \u0026quot;path\u0026quot;: \u0026quot;/folder/to/path\u0026quot; , \u0026quot;length\u0026quot;: 193, \u0026quot;path\u0026quot;: \u0026quot;/another/folder\u0026quot; ] , \u0026quot;length\u0026quot;: 192, \u0026quot;name\u0026quot;:\u0026quot; Ubuntu.iso\u0026quot;, \u0026quot;Pieces length\u0026quot;: 262144, \u0026quot;Pieces\u0026quot;: [AAF4C61DDCC5E8A2DABEDE0F3B482CD9AEA9434D, CFEA2496442C091FDDD1BA215D62A69EC34E94D0]\nThe Piece Selection Algorithm of BitTorrent One of the largest questions in BitTorrent is \u0026ldquo;what pieces should I select to download?\u0026rdquo;\nWith a traditional client-server model, we download the whole file. But now, we get to pick what pieces to download.\nThe idea is to download the pieces that no one else has - the rare pieces. By downloading the rare pieces, we make them less rare by uploading them.\nWhat Are Sub-Pieces and the Piece Selection Algorithm? BitTorrent uses TCP, a transmission protocol for packets. TCP has a mechanism called slow start.\nSlow start is a mechanism which balances the speed of a TCP network connection. It escalates the amount of data transmitted until it finds the network\u0026rsquo;s maximum carrying capacity. cwdn stands for the Congestion Window. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} TCP does this because if we send 16 connections at once, the server may not be used to the traffic and congestion will happen on the network.\nIf we\u0026rsquo;re not regularly sending data, TCP may cap our network connection at a slower speed than normal.\nBitTorrent makes sure to always send data by breaking pieces down into further sub-pieces.\nEach sub-piece is about 16KB in size. The size for a piece is not fixed, but it is somewhere around 1MB.\nThe protocol always has some number of requests (five) for a sub-piece pipe-lined. When a new sub-piece is download, the client sends a new request. This helps speed things up. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Sub-pieces can be downloaded from other peers.\nTwo core policies govern the Piece Selection Algorithm.\n1. Strict Policy Once the BitTorrent client requests a sub-piece of a piece, any remaining sub-pieces of that piece are requested before any sub-pieces from other pieces. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} In this image, it makes sense to download all the sub-pieces of this piece first rather than start downloading another piece.\n2. Rarest First The main policy in BitTorrent is to pick the rarest first. We want to download the piece which the fewest other peers own.\nThis is so we can make it \u0026lsquo;un-rare\u0026rsquo;. If only one peer has a piece and they go offline, no one will get the complete file.\nA plethora of benefits exist for this policy.\n  Growing the seed\nRarest first makes sure that we download only new pieces from the seed.\nThe seed will begin as a bottleneck. The one peer with the file.\nA downloader can see what pieces their peers possess, and the rarest first policy will cause us to fetch the pieces from the seed which have not been uploaded by other peers.\nLet\u0026rsquo;s visualise this. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} The list of nodes (peers) is inter-connected. I cannot draw this as the diagram is unfavourable.\nEach arrow towards a sub-piece what that peer has downloaded. We downloaded a sub-piece that no one else has other than the seed. This means this sub-piece is rare.\nOur upload rate is higher than that of the seed, so all peers will want to download from us. Also, they would want to download the rarest pieces first, and as we are one of 2 holders of the rarest piece.\nWhen everyone downloads from us, we can download faster from them. This is the tit-for-tat algorithm (discussed later).\n  Increased download speed The more peers that hold the piece, the faster the download can happen. This is because we can download sub-pieces from other peers.\n  Enable uploading A rare piece is most wanted by other peers and getting a rare piece means peers will be interested in uploading from us. As we will see later, the more we upload, the more we can download.\n  Most common last It is sensible to leave the most common pieces to the end of the download. As many peers hold common pieces, the probability of being able to download them is much larger than that of rare pieces.\n  Prevent rarest piece missing When the seed dies, all the different pieces of the file should be distributed somewhere among the remaining peers.\n  3. Random First Piece Once we download, we have nothing to upload. We need the first piece, fast. The rarest first policy is slow. Rare pieces are downloaded slower because we can download its sub-pieces from only a few peers.\n4. Endgame Mode Sometime\u0026rsquo;s a peer with a slow transfer rate will try to give us a sub-piece. Causing a delay of the download. To prevent this, there is \u0026ldquo;endgame mode\u0026rdquo;.\nRemember the pipe-lining principle? There are always several requests for sub-pieces pending.\nAssume we are downloading from 2 peers, and there is 1 other peer we are not downloading from. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} When all the sub-pieces a peer lacks are requested, they broadcast this request to all peers. This helps us get the last chunk of the file. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} If a peer has the missing sub-piece, they will send that back to our computer.\nOnce a sub-piece arrives, we send a cancel-message telling the other peers to ignore our request. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;}\nResource Allocation Using Tit-For-Tat No centralised resource allocation in BitTorrent exists. Instead, every peer maximises their download rate.\nA peer will download from whoever they can. To decide who to upload to, they will use a variant of the \u0026quot;tit-for-tat\u0026quot;algorithm.\nThe tit-for-tat strategy comes from game theory. The essence is:\n \u0026quot;Do onto others as they do onto you\u0026quot;\n   On the first move, cooperate.\n  On each succeeding move do what your opponent did the previous move.\n  Be prepared to forgive after carrying out just one act of retaliation.\n  The Choking Algorithm Choking is a temporary refusal to upload to another peer, but we can still download from them.\nTo cooperate peers upload, and to not cooperate they \u0026ldquo;choke\u0026rdquo; the connection to their peers. The principle is to upload to peers who have uploaded to us. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} We want several bidirectional connections at the same time and to achieve Pareto Efficiency.\n \u0026quot;We consider an allocation Pareto Efficient if there is no other allocation in which some individual is better off and no individual is worse off.\u0026quot;\n Thus the big question, is how to determine which peers to choke and which to unchoke?\nA peer always unchokes a fixed number of its peers (the default is 4).\nCurrent download rates decide which peers to unchoke. We use a 20-second average to decide this. Because of the use of TCP (slow-start) rapidly choking and unchoking is bad. Thus, this is calculated every 10 seconds.\nIf our upload rate is high more peers will allow us to download from them. This means that we can get a higher download rate if we are a good uploader. This is the most important feature of the BitTorrent protocol.\nThe protocol prohibits many \u0026ldquo;free riders\u0026rdquo; which are peers who only download and don\u0026rsquo;t upload.\nFor a peer-to-peer network to be efficient, all peers need to contribute to the network.\nOptimistic Unchoking BitTorrent also allows an additional unchoked peer, where the download rate criteria aren\u0026rsquo;t used.\nWe call this optimistic unchoking. Checking unused connections aren\u0026rsquo;t better than the ones in use.\nWe shift the optimistic unchoke every 30 seconds. Enough time for the upload reaches full speed. Same for the upload. If this new connection turns out to be better than one of the existing unchoked connections, it will replace it.\nThe optimistic unchoke is randomly selected.\nThis also allows peers who do not upload and only download to download the file, even if they refuse to cooperate. Albeit, they will download at a much slower speed.\nAnti-Snubbing What happens if all peers uploading to another peer decide to choke it? We then have to find new peers, but the optimistic unchoking mechanism only checks one unused connection every 30 seconds. To help the download rate recover more, BitTorrent has snubbing.\nIf a client hasn\u0026rsquo;t received anything from a particular peer for 60 seconds, it will presume that it has been \u0026lsquo;snubbed\u0026rsquo;.\nFollowing the mentality of tit-for-tat, we retaliate and refuse to upload to that peer (except if they become an optimistic unchoke).\nThe peer will then increase the number of optimistic unchokes to find new connections quicker.\nWhat if we only upload? We see that using the choking algorithm implemented in BitTorrent we favour peers who are kind to us. If I can download fast from them, we allow them to upload fast from me.\nWhat about no downloads? Then it\u0026rsquo;s impossible to know which peers to unchoke using this choking algorithm. When a download is completed, we use a new choking algorithm.\nThis new choking algorithm unchokes peers with the highest upload rate. This ensures that pieces get uploaded faster, and they get replicated faster.\nPeers with good upload rates are also not being served by others.\nWhat Is a Tracker? Trackers are special types of server that help in communication between peers.\nCommunication in BitTorrent is important. How do we learn what other peers exist?\nThe tracker knows who owns the file, and how much.\nOnce a peer-to-peer download has started, communication can continue without a tracker.\nSince the creation of the distributed hash table method for trackerless torrents, BitTorrent trackers are largely redundant.\nPublic Trackers These are trackers that anyone can use.\nThe Pirate Bay operated one of the most popular public trackers until disabling it in 2009, opting only for magnet links (discussed soon).\nPrivate trackers are private. They restrict use by requiring users to register with the site. The method for controlling registration is often an invitation system. To use this tracker we need an invitation.\nMulti-Tracker Torrents Multi-tracker torrents contain multiple trackers in a single torrent file. This provides redundancy if one tracker fails, the other trackers can continue to maintain the swarm for the torrent.\nWith this configuration, it is possible to have multiple unconnected swarms for a single torrent - which is bad. Some users can connect to one specific tracker while being unable to connect to another. This can create a disjoint set which can impede the efficiency of a torrent to transfer the files it describes.\nMagnet Links - Trackerless Torrents Earlier, I talked about how the Pirate Bay got rid of trackers and started using trackerless torrents.\nWhen we download a torrent, we get a hash of that torrent. To download the torrent without a tracker, we need to find other peers also downloading the torrent. To do this, we need to use a distributed hash table.\nLet\u0026rsquo;s explore Distributed Hash Tables.\nDistributed Hash Tables Distributed Hash Tables (DHT) give us a dictionary-like interface, but the nodes are distributed across a network. The trick with DHTs is that the node that gets to store a particular key is found by hashing that key.\nIn effect, each peer becomes a mini-tracker.\nEach node (client/server implementing the DHT protocol) has a unique identifier known as the \u0026ldquo;node ID\u0026rdquo;. We choose node IDs at random from the same 160-bit space as BitTorrent infohashes.\nInfohashes are a SHA-1 hash of:\n  ITEM: length(size) and path (path with filename)\n  Name: The name to search for\n  Piece length: The length(size) of a single piece\n  Pieces: SHA-1 Hash of EVERY piece of this torrent\n  Private: flag for restricted access\n  We use a distance metric to compare two node IDs or a node ID and an infohash for \u0026ldquo;closeness\u0026rdquo;.\nNodes must have a routing table containing the contact information for a few other nodes.\nNodes know about each other in the DHT. They know many nodes with IDs that are close to their own but few with far-away IDs.\nThe distance metric is XOR and is interpreted as an integer. $$distance(A, B) = |A \\oplus B |$$ Smaller values are closer.\nWhen a node wants to find peers for a torrent, they use the distance metric to compare the infohash of the torrent with the IDs of the nodes in its routing table or the ID of one node with the ID of another node.\nThen they contact the nodes in the routing table closet to the infohash and asks them for contact information of peers downloading the torrent.\nIf a contacted node knows about peers for the torrent, they return the peer contact information with the response. Otherwise, the contacted node must respond with the contact information of the nodes in its routing table closet to the infohash of the torrent. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} The original node queries nodes that are closer to the target infohash until it cannot find any closer nodes. After the node exhausts the search, the client then inserts the peer contact information for itself onto the responding nodes with IDs closest to the infohash of the torrent. In the future, other nodes can easily find us.\nThe return value for a query for peers includes an opaque value known as the \u0026ldquo;token.\u0026rdquo; For a node to announce that its controlling peer is downloading a torrent, it must present the token received from the same queried node in a recent query for peers.\nWhen a node attempts to \u0026ldquo;announce\u0026rdquo; a torrent, the queried node checks the token against the querying node\u0026rsquo;s IP address. This is to prevent malicious hosts from signing up other hosts for torrents.\nThe querying node returns the token to the same node that they receive the token from. We must accept tokens for a reasonable amount of time after they have been distributed. The BitTorrent implementation uses the SHA-1 hash of the IP address concatenated onto a secret that changes every five minutes and tokens up to ten minutes old are accepted.\nRouting Table Every node maintains a routing table of known good nodes. We use the routing table starting points for queries in the DHT. We return nodes from the routing table in response to queries from other nodes.\nNot all nodes we learn about are equal. Some are \u0026ldquo;good\u0026rdquo; and some are not. Many nodes using the DHT can send queries and receive responses, but cannot respond to queries from other nodes. Each node\u0026rsquo;s routing table must contain only known good nodes.\nA good node is a node has responded to one of our queries within the last 15 minutes. A node is also good if it has ever responded to our queries and has sent us a query within the last 15 minutes. After 15 minutes of inactivity, a node becomes questionable. Nodes become bad when they fail to respond to multiple queries in a row. Nodes that we see are good are given priority over nodes with an unknown status. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} The routing table covers the entire node ID space from 0 to $2^160$. We subdivide the routing table into \u0026ldquo;buckets\u0026rdquo; that each cover a portion of the space.\nAn empty table has one bucket with an ID space range of min=0, max=$2^160$.\nAn empty table has only one bucket so any node must fit within it. Each bucket can only hold K nodes, currently eight, before becoming \u0026ldquo;full.\u0026rdquo;\nWhen a bucket is full of known good nodes, we may add no more nodes unless our node ID falls within the range of the bucket. The bucket is replaced by two buckets each with half of the old bucket. Nodes from the old bucket are distributed among the new buckets.\nFor a new table with only one bucket, we always split the full bucket into two new buckets covering the ranges 0..$2^159$ and $2^159..2^160$.\nWhen the bucket is full of good nodes, we simply discard the new node. When nodes in the bucket become bad (if they do) we replace them with a new node.\nWhen nodes are considered questionable and haven\u0026rsquo;t been since, in the last 15 minutes, the least recently seen node is pinged. The node either responds or doesn\u0026rsquo;t respond. A response means we move to the next node. We do this until we find a node that fails to respond. If we don\u0026rsquo;t find any, then the bucket is considered good.\nWhen we do find one, we try one more time before discarding the node and replacing them with a new good node.\nEach bucket should maintain a \u0026ldquo;last changed\u0026rdquo; property to show how \u0026ldquo;fresh\u0026rdquo; the contents are.\nWhen a node in a bucket is pinged and responds, or a node is added to a bucket, or a node is replaced with another node, the bucket\u0026rsquo;s last changed property is updated.\nBuckets are refreshed if the last changed property has not been updated in the last 15 minutes.\nAttacks on BitTorrent Few attacks on the BitTorrent network exist. Everything is public. Our IP address, what we\u0026rsquo;re downloading - everything. Why attack an open network?\nWhy attack a completely open network?\nOnly 7 entries are listed on Exploit-DB - a database of known exploits against a service. And most of them relate to specific clients.\nThe principal attack on the BitTorrent network is to stop piracy. We\u0026rsquo;ve gone this far without talking about piracy, but it is often synonymous with BitTorrent.\nThe main attack on BitTorrent is Torrent Poisoning. This attack aims to get the IP addresses of peers pirating content or to poison the content in some way.\nMadonna\u0026rsquo;s American Life album release is an example of content poisoning. Before the release, tracks were released of similar length and file size. The tracks featured a clip of Madonna saying:\n \u0026quot;What the fuck do you think you\u0026rsquo;re doing?\u0026quot;\n Followed by a few minutes of silence.\nHere are some methods of poisoning a torrent:\n  Index Poisoning The index allows users to locate the IP addresses of peers with the desired content. This method of attack makes searching for peers difficult.\nThe attacker inserts a large amount of invalid information into the index to prevent users from finding the correct information.\nThe idea is to slow down the download, by having the peer try to download pieces from an invalid peer.\n  Decoy Insertion They insert corrupted versions of a file into the network.\nImagine 500 copies of a file and only 2 of them being the real file, this deters pirates from finding the real file.\nMost websites with lists of torrents a voting system. This deters this attack, as the top of searches is filled with non-corrupted files However, most websites with lists of torrents a voting\nThis deters this attack, as the top of searches is filled with non-corrupted files.\nIn GameDevTycoon, the file was released before the initial upload to piracy sites. Unbeknownst to pirates, the file was corrupted. Winning the game is impossible in the pirated version. Everything else was perfect.\n  Defence Against the Dark Bittorrent Attack Most popular torrents are released by individuals or groups who built up a rapport over many years. On private trackers, individuals can be pointed to. Poisoned torrents are quickly labelled and the poster can be banned.\nOr, on public trackers, downloading torrents made by trusted groups is preferable. After all, would you prefer to download Ubuntu from the Ubuntu team, or the user xxx-HACKER-ELITE-GHOST-PROTOCOL-xxx?\nOn public trackers, if a torrent is poisoned the torrent is reported and removed.\nThe simplest way to defend against a BitTorrent attack is to use an IP address not associated with you. Whether this is through a VPN or some other service.\nConclusion And we are done with BitTorrent! Here are some things you may choose to do:\n  Build your own BitTorrent client\n  Explore BitTorrent\u0026rsquo;s proposals (BEPs) to learn more about how it works, and what\u0026rsquo;s next for the algorithm\n  Read the official BitTorrent specification\n  Designing Effective Peer to Peer Networks By the end of the chapter, we should have a good understanding of the important questions to answer when designing effective P2P networks.\nWhen Should I Use a Peer to Peer Network? P2P networks can be used for all networking. We need to use the right tool for the job.\nQuickly and automatic scaling is their game. P2P networks enhance with more users, not degrade.\nIf we are building a platform with a shared goal (i.e. shares files) and we can imagine the platform growing uncontrollably big, P2P networks are good.\nOr if we do not want anyone to shut down our network (in a client-server model, turn off your servers) a P2P network is effective.\nThere are 2 types of P2P Networks:\n Full P2P networks  These are networks where everyone node is equal.\n Full P2P networks  Certain nodes have more power than others.\nLet\u0026rsquo;s walk through what all good peer to peer networks share.\nRewards All great peer to peer networks have reward systems. The user does some work, and they are rewarded.\nEven if the reward isn\u0026rsquo;t clearly defined, there is always a reward for taking part in the peer to peer network. And always a reward for giving back to the network.\nRewards are paramount to P2P networks and my favourite thing to talk about!\nIn Bitcoin, this is earning Bitcoin. BitTorrent rewards participants with faster download speeds. Tor rewards other Tor members with more privacy.\nAll of these rewards are given for contributing to the network.\nThe idea of a reward is to eliminate free-riders who partake in the network without giving anything back. There are 2 ways to discourage free-riders:\n  Forcing every user to give back.\n  Rewarding users who give back.\n  Tor is the former. The only reward that can be given is to become a guard node, which provides no obvious benefit for the user other than to feel good about themselves.\nThe latter is what most peer to peer networks use, rewarding users who give back.\nIn BitTorrent, those who seed (upload) are rewarded with higher download rates. The more you seed, the faster you can download.\nIn Bitcoin, users are rewarded for mining the blockchain with Bitcoin.\nThis leads us to look at peer to peer networks from 2 interesting perspectives. Human civilisations, or reinforcement learning machines.\nLet\u0026rsquo;s start with human civilisations.\nHuman Civilisations We do work, and we get rewarded. Capitalism. In semi P2P networks (where one node has more power than the others) we can almost perfectly replicate capitalism.\nIf we force everyone to do the same work for the same reward then it is communism.\nLuxury communism uses machines to do the heavy lifting leaving humans to do other things and is a new 21st-century take. This more closely relates to P2P networks than traditional communism.\nAs P2P networks grow, eventually if not governed properly it will fall back into an client-server architecture. Why use Jim\u0026rsquo;s computer to download ubuntu.iso when you can download it from LargeCorp which has a much faster speed.\nWith planning, we can build a dictatorship of the proletariat where every ordinary node has power in the network. Not just those with higher rewards.\nThere will always be those with more power than others (perhaps they have more computers on the network) but the point is that everyone has some power over the network.\nAnd the ordinary nodes will likely always have more power than larger clusters of nodes, as seen in Bitcoin.\nModelling P2P networks as political movements allows us to talk about P2P networks as more than just networks, as entire communities.\nEventually people with little to no knowledge about networking can discuss and change how the network operates using these abstractions.\nReinforcement Learning We can use artificial intelligence to automatically optimise a P2P network. Humans are slow when it comes to making changes compared to computers.\nP2P networks already use technology to find the shortest routes or preferred routes. As networks become more and more complicated, simple handwritten algorithms might not be enough.\nPicture this nifty example.\nIn our network, we have multiple nodes all interconnected. Each node has a rating.\nThis rating signifies how good that node is. A good rating based on how much reward an individual has. Whether that reward is from speed, accuracy or trust is problem dependant.\nEvery time this node is used, its personal reward is increased. Much like Kohonen\u0026rsquo;s competitive learning rules.\nBut why stop there? If the node is faster, trustworthy, contributes heavily to the network it should have a higher reward rating.\nAnd our goal is to create the \u0026quot;best\u0026quot; path across the network, taking into account all of these numbers and to maximise our reward, whatever that may be.\nTor already has a similar (albeit smaller) system in place like this. Guard nodes, bridge nodes, and more.\nThis seems like the perfect scenario for reinforcement learning. Multiple inputs to maximise our reward. Exploratory choices, meaning that a node with a \u0026quot;bad\u0026quot; reating is chosen, preventing some nodes from hogging all the resources.\nReinforcement learning is the closet computer learning to how humans learn according to Sutton and Barto.\nHumans will eventually optimise manually. Where good nodes have better jobs or are chosen more than others. Reinforcement learning is much faster than any human could be.\nWe, as humans, naturally and manually improve the network over time. What if we could use AI to speed this process up?\nOptimisation of the Network An ideal P2P network will improve the more people that use it.\nIn Tor, the more people that use it the more privacy is given. I talk more about this in my Tor blog post.\nA simple distinction, but one that must be made. As the network grows older, ideally, it reaches its global optimised state.\nUnlike client-server, where the more users there are the harder it becomes to maintain the network. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} Take the example of downloading a file. Client-Server starts out being incredibly fast, but over time as the file becomes more popular that download speed degrades. {width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;} With a P2P network, at the start it is slow to download (assuming the initial uploader is slow) but the speed increases over time. What\u0026rsquo;s important is that over ttime, client-server gets worse with more users but P2P gets better.\nOptimisation of the network as it grows is often done through the rewards system.\nAs Tor grows, the privacy of each user increases. Thus, the more that use Tor, the better the privacy.\nEach user has their personal reward, but together this creates a positive reward for the whole network.\nIn Bitcoin, the more that mine Bitcoin, the harder it is to mine, and the larger incentive it is to use better computers. Better computers = faster mines = more money.\nThis creates competition amongst users. Who can contribute to the network the most? Users are fighting for their own personal reward, but this fight improves the network as a whole.\nIt is almost impossible to perform a 51 percent attack on the network when miners are hyper-competitive like this.\nUsers work towards their own personal rewards, which means the network gets better from not only more users but better rewards. The entire network scales majestically upward.\nWhen choosing a reward, it is important to look at the local rewards (what the user gets) and to look at the greater rewards (what the network will get for participating).\nI also recommend rewards which increase as the network grows. Scalable rewards. If the price of Bitcoin did not scale with how many users it had, the network degrades or upgrades much slower over time.\nHumble Beginnings With a client-server architecture, it can be amazing from the start. But with a peer to peer network, it sucks for the first few users.\nWith Bitcoin, what was the incentive? You get this worth coin.\u0026hellip; nothing at all.\nTor. The incentive? Well, if there are only 3 users then there is no incentive. No privacy. 51 percent attacks is a matter of whether someone loses WiFi on the train or not.\nBitTorrent. The incentive? You can download this one person\u0026rsquo;s files.\nIn peer to peer networks, generally, they suck for the first couple users and are only worthwhile over time.\nSo how then, do we build an effective peer to peer network that other people will want to use?\nThere are 2 methods to this.\n Forceful use  We can force users to use the network. This is how Tor got its start. The US Naval Resarch Labs built Tor, and effectively they could force others in the Navy to use it.\n Incredible technology  The other option is incredible technology. In a peer to peer network, the first few users are often those who recognise how incredible the technology is.\nThink about Bitcoin. The first few users fell in love with the technology behind it, and truly believed it could one day be great.\nWith a great rewards system in place, the first users of Bitcoin realised it could grow up to be something huge. Amazing technology attracts the first few users, and those users are often technologically minded.\nJobs for the People In almost all peer to peer networks, jobs are assigned to nodes.\nIn Bitcoin, we have miners whose job it is to mine the blockchain.\nIn Tor, we have guard nodes.\nIf a node has proven to be trustworthy than we shall make it a guard node. If a node wants to mine the blockchain, it becomes a miner.\nThese nodes do not have more rights than the other nodes, they simply have a job to do. And sometimes this job provides a reward, and sometimes it doesn\u0026rsquo;t.\nIf we give everyone the same job, the network will tend towards global optimisation much slower.\nLet\u0026rsquo;s say we have a new file-sharing system. Our system will let you download files from others.\nWe have a file, Ubuntu.iso, which is being seeded by 10 people.\nWe choose at randomly a seed to download from. This seed has an upload speed of 1 Mbps while all the other seeders have an upload speed of 200mbps.\nIt makes logical sense to use the uploaders with faster speed.\nIt makes sense logically to choose from a subsection of people with high upload speeds. Effectively, we have given these people \u0026lsquo;jobs\u0026rsquo;.\nThere are 2 types of jobs in peer to peer networks:\n  Rewarded Jobs\n  Unpaid Internships (jobs)\n  With rewarded jobs, the uploaders get a higher reward for working. This reward might be faster download speeds, such as in BitTorrent.\nWith unpaid jobs, there is no reward. There is no incentive for one to choose a job, it is gifted to those. This is how guard nodes work in Tor.\nIf we have a job which peopl have to opt-in to, but doesn\u0026rsquo;t provide a reward it is unlikely for many people to opt-in.\nDeciding on what jobs to give, and whether it is rewarded or not is problem specific.\nFor example, we have a job called \u0026quot;maintainer of the Blockchain\u0026quot;. This job means people have a copy of the blockchain and maintains it. And only they do, no one else can. Any cryptocurrency nerd reading this may already see the problem.\nTo view the blockchain, you need to have this job. But not every citizen of the world has a spare 300gb to view the chain. They cannot get the job, because they do not meet the required specification.\nYou also have to meet a plethora of other specifications. Most of them a normal home user cannot achieve.\nThis is another issue. Can we reject people if they do not meet the job specification? Again, problem specific.\nWith only a small per cent controlling the blockchain, it leaves it open to a 51\nI propose that jobs are automatically assigned based on the specification of the user, but any user can request a job.\nThe only jobs they should be rejected for is high trust jobs, such as guard nodes. But, the specification of their computer should not be taken into account for trust jobs.\nHumans picking jobs are too slow. The network needs to react fast and scale fast. Humans are not fast. So automatic assignment it is.\nBut we do not want to prevent humans from accessing resources because of their circumstances.\nWhen assigning jobs, the jobs must work in harmony.\nWe should take inspiration from beehives or ant colonies for this. Human jobs are simply too hard to model, to focus on a much smaller example is wise.\nShould there be a punishment if someone takes a job for which they are unfit? Should a 30gb computer take the punishment for trying to maintain a 300gb file?\nOn the one hand, only a very small per cent of the population will ignore the assigned job and choose something for which they are unfit.\nBut, to achieve global optimisation we must make sure every single thing is accounted for.\nUnfortunately, in this world, those that do jobs that they are not capable of should be punished. I would not say to reduce the resources available to them through the job, but perhaps reduce the reward of using the network in some way.\nData Structures Every single effective peer to peer network uses data structures.\nThe blockchain is just a fancy linked list with some extra properties.\nBitTorrent\u0026rsquo;s magnet links work based on distributed hash tables.\nData structures are vital to peer to peer networks. I do not want to get into every data structure available, but knowledge of them is important.\nWe can design a network using a distributed data structure that already exists, or we can build a new data structure/algorithm based on pre-existing ones.\nPolicy Changes Throughout this article, I have talked about designing the network to be perfect from the get-go. Anyone knows this isn\u0026rsquo;t possible. So how then, do we change the network when it\u0026rsquo;s already running? How do we implement policy changes?\n  Dictatorship\n  Let the people decide\n  The people can form a democracy\n  In our first instance, we have a dictatorship.\nYou, the creator decides on changes. You create these changes, and they go out to the network. We don\u0026rsquo;t care what the participants think, only that the change has taken place.\nThis is the most effective for easily implementing policy changes, but it ruins the trust.\nGood peer to peer networks reduces trust. We should not need to trust anyone. However, trust is important in some networks. It depends on the network itself.\nIf the network was for a digital currency, why would you trust this entire currency in the hands of a single person?\nBut for a privacy centred network, having this trust in one person or body of people can increase the trust throughout the network. It reduces the chance of a 51\nAs the network progresses, it strays further and further away from a 51\nIn the early days of a P2P network, it is very much a dictatorship. A few small people decide on changes to the network (think of the early days of Bitcoin) and this eventually moves towards democracy as the network grows.\nBut again, this brings problems. What if there is a critical failure in the code and there needs to be a change made during the networks primetime? This is for the designer to decide.\nWe can alternatively let the people decide.\nFrom the get-go, no single person has full control. Every time a change is made, a percent of the network (likely 51) will need to agree to the change. Complete control for the network. No trusting the developer involved.\nAt the start, this may be problematic. What if we have a node in the network purely from FOMO and doesn\u0026rsquo;t care about updates?\nHumans are incredibly slow too. Imagine a critical bug in the code that had to be fixed right there and then. Humans may take weeks to decide. Many will not even respond to the decision.\nThe alternative is a democracy.\nGive certain people more power than others. Have the community vote in leaders, or have the leaders be pre-selected.\nThese leaders then decide on changes to the codebase. This reduces trust, especially if they are voted in.\nBut nothing is stopping them from teaming together to get the maximum personal reward while not doing anything for the many.\nAll in all, deciding on policy changes is a tricky subject. And one that should be decided before the network is made.\nAlthough something to remember is trust. Will the users need to trust you, personally?\nIf so, try and work towards a goal where that trust is reduced. Diversify that trust over to others. Remove trust completely, make them only trust themselves.\nEffective peer to peer networks is unlike client-server models where one person controls all the power. Effective P2P networks are for the people.\nThe Cathedral or the Bazaar The Cathedral is waterfall development. Slow, well planned. The people working on it are cathedral builders. The final product is presented and sold to the public as the final product.\nThe Bazaar is the opposite. Work fast. Break things. Release early. Release often. Listen to your customers.\nWhen building a full P2P network, we would build both the cathedral and the bazaar.\nIn an ideal full P2P network, eventually, the creator\u0026rsquo;s power dwindles to almost nothing (they become just another normal node in the network).\nThis is what Satoshi Nakamoto did. They created the cathedral first, and then over time moved to the bazaar - eventually losing all power to change anything in the network without the permission of the network.\nOur P2P network could explode on day 1 and we would have no control to finish building the cathedral.\nFor this reason, in a full P2P network where all nodes are equal, we should build a cathedral and then transition naturally to a bazaar.\nIn semi P2P network where some nodes have more power than others, the developer doesn\u0026rsquo;t have to give up their child anytime soon.\nHowever, this requires the nodes to trust the developers. Something that not all P2P networks have the liberty of.\nOpen Source or Not? The main thing in P2P networks is removing trust. We don\u0026rsquo;t necessarily want people to trust us when building a network, preferably we would want to remove as much trust as possible.\nClosed source systems do not instil much trust, therefore we must choose an open-source system.\nConclusion ","permalink":"https://polymath.cloud/p2p-book/","summary":"https://tryhackme.com/room/bruteit\nPreface If you\u0026rsquo;re reading this, like me, you must strangely like the idea of effectively designing peer to peer networks.\nAlmost no real world usage (unless you work in this industry), but nevertheless the design is so interesting!\nPeer to peer networks effectively are close approximations of how humans interact. Much like how object orientated tried to represent how humans think, I believe peer to peer networks are how humans communicate.","title":"Peer 2 Peer Networks"},{"content":" Machine Learning  Supervised Learning Unsupervised Learning Reinforcement Learning  AlphaGo  Learning from the greats Teaching itself   Creativity     Applications in InfoSec  1. Learning from others 2. Learning from itself Blue Team   Humans vs AI Conclusion  In this blog post we\u0026rsquo;ll explore if machines can fully replace pe\nSomething to note is that predicting the future is hard and this is all entirely my opinion. Many people will have differing ideologies.\n Machine Learning Typically when we think of artificial intelligence, we may think of machine learning. Specifically, supervised machine learning.\nSupervised Learning In supervised learning, we have follow the formula:\n Labelled input -\u0026gt; machine learns -\u0026gt; machine outputs\n The labelled input is the largest part here. We have to provide the machine learning algorithm with a table like:\n   Label 4 Legs Barks     True True True   False True False    This table answers the question:\n Is that a dog?\n We give it features. That\u0026rsquo;s the 4 legs and Barks features.\nAnd we label it True / False if it is a dog or not. Humans have to label it true / false, machines cannot. This is wwhy supervised learning is quite slow. But also, we face 2 problems with supervised learning:\n We need a lot of data (millions of data points with billions of features) for high accuracy We need the labels to be accurate  As you can tell, in the real world these 2 points are hard to find combined. So hard in fact, IBM once said:\n \u0026ldquo;Anyone can build an AI with 99.9% accuracy. The issue is building the dataset.\u0026rdquo;\n Our labels are often binary, True and False. They can be other things such as categories or classifications.\nBut something important to note is that supervised learning is only for classification. That means it won\u0026rsquo;t be able to \u0026ldquo;hack\u0026rdquo; things like we imagined.\nHowever our supervised learning algorithm will learn what exploits might work given a port scan, but it won\u0026rsquo;t be able to hack it for us.\nThis idea of Human + Machine synthesis is something we\u0026rsquo;ll explore later.\nUnsupervised Learning We\u0026rsquo;ve seen supervised, but what about unsupervised?\nGiven data, our algorithm attempts to find patterns.\n   4 Legs Barks     True True   True False    Our algorithm may say:\n Things that bark are dogs, but not all things with 4 legs are dogs\n This requires a monumental amount of data, but it can find patterns much better than humans can provided the data is correct.\nA good use case is disease symptoms. Given a bunch of patients, what symptoms do they all share in common?\nThis methodology is unsuited for a machine that can replace a penetration tester.\n It can\u0026rsquo;t hack All it\u0026rsquo;d say is something like \u0026ldquo;hackers typically use Metasploiit\u0026rdquo;.  Although in a blue team environment, if you are repeatedly hacked and you\u0026rsquo;re unsure as to why it may be helpful. But it\u0026rsquo;d be quicker to read the logs!\nReinforcement Learning This brings us onto the last type of artificial intelligence. The one I just so happened to study for 3 years and write a dissertation on! Reinforcement learning.\nAccording to Sutton \u0026amp; Barto\n Of all the forms of machine learning, reinforcement learning is the closest to the kind of learning that humans and other animals do, and many of the core algorithms of reinforcement learning were originally inspired by biological learning systems.\n Reinforcement learning is doing things by reinforcement. Humans learn not to touch the hot stove because it\u0026rsquo;s hot.\n Agent performs an action on the environment which returns a state (of the agent in the environment) and a reward.  We perform an action (take our the rubbish) on our environment (the rubbish bin). This returns a reward (our mum gives us sweets and a \u0026ldquo;thank you\u0026rdquo;) and a state (we are now cold, outside by our bins).\nReinforcement Agents learn the same way. This is called the action-reward loop.\nRewards can also be negative, which can discourage behaviour.\nIn fact, it is common to include both positive \u0026amp; negative rewards in the same system.\nMy hypothesis is that reinforcement agents can learn to replace penetration testers. Let\u0026rsquo;s explore this in more depth.\nAlphaGo Let\u0026rsquo;s explore how Google\u0026rsquo;s Deep Mind teaches their agents to learn how to play games.\n This video is very good, but I\u0026rsquo;ll explain roughly how it learns as well.\nFirstly, Go is a game where the space of possible moves is vastly larger than in chess. Meaning that using any sort of exhaustive search (calculating all possible moves) is out of the question.\nOur algorithm has to learn.\nLearning from the greats Our algorithm watches how the best players play and learns from them. The idea of AI learning by watching isn\u0026rsquo;t new. But the fact that the greatest Go players have played so many games allows the AI to learn all the tricks and tips of the masters.\nThis is a good idea to match the masters, but not a good idea to surpass them.\nHumans make mistakes all the time. Our AI has to be perfect, so matching humans is not enough.\nHow do we get AlphaGo to be better than the masters?\nTeaching itself  https://www.nature.com/articles/nature16961  How did AlphaGo become better than Fan Hui?\nAlphaGo plays against itself hundreds of millions of times. The loser gets deleted, the winner gets chosen as the start of the next AI.\nThe AI has a base child that we choose at each iteration. This child is slightly modified (evolves) and this evolution is what makes it better over time.\nIn this way, the AI:\n Starts off at Master level (after learning from the masters). Evolves and teaches itself to get better.  However, humans suck. Humans can never play perfectly. We make mistakes. We cause problems. We invovle emotions.\nSo, Google Deep mind created a new version of AlphaGo. AlphaGo Zero as it has zero knowledge of how other people play.\nAlphaGo zeros starts off with a rule set and all possible moves it can make, and it teaches itself how to play.\n https://deepmind.com/blog/article/alphago-zero-starting-scratch  After 3 days, it reaches the master level. After 5 days it can beat Lee Sedol. After 40 days it is so good that it can defeat the \u0026ldquo;world beater\u0026rdquo; version (the one that beat Lee Sedol) in 100 / 100 matches.\nFun fact: While the one that beat Lee Sedol was a server, AlphaGo Zero (which can beat the Lee Sedol one in 100/100 games) uses only 1 machine.\n https://deepmind.com/blog/article/alphago-zero-starting-scratch  Creativity One of the key aspects to being a great penetration tester is being creative.\nCan machines be creative? It\u0026rsquo;s an oft asked question. I say yes. Neural networks are based on how the brain works. If the brain can be creative, I don\u0026rsquo;t see why machines cant.\nFurthermore we have seen creativity in the wild. AlphaGo\u0026rsquo;s famous Move 37 is a genius \u0026amp; creative move that turned the course of the entire game and even flummoxed Lee Sedol.\n Applications in InfoSec Now let\u0026rsquo;s apply what we learnt from AlphaGo to our own theoretical neural network to become a penetration tester.\nWe\u0026rsquo;ll base our neural network roughly on how AlphaGo works.\nThere are 2 ways we can do this. For both of these methods, we will have to give the machine knowledge of the keyboard. As in, each key would have to be mapped to a certain input and our AI will have to learn what keystrokes make what words which makes what results.\n In the above video we can see all the controls to Mario being mapped in the neural network. We\u0026rsquo;d hade to o the same for the AI but with the entire keyboard.\n1. Learning from others This is likely the first method that will appear. The AI watches others and learns:\n Commands to use. Techniques / tips. \u0026ldquo;Rules\u0026rdquo; of the engagement.  And gains some human intuition.\nThis works great, because as you may imagine the first few million generations of our AI will do almost nothing. It will be entirely based around learning what the keys do, and what words result in what things.\nWe also have a problem, what is the reward for our AI? We could say the reward is a reverse shell on the target machine. But all of our experts would have to get reverse shells for our AI to learn.\nWhile this sounds impossible now, know that advancements of technology will make this possible in the future. All we need is more hacking videos (there are thousands on Youtube already) and better hardware to speed up the training process.\nThis version of the AI is unlikely to replace good penetration testers, but it can sure replace all beginner penetration testers.\n2. Learning from itself This is the AlphaGo Zero version. The AI starts with nothing but some basic rules. These rules might be:\n Don\u0026rsquo;t shut down a target computer. Don\u0026rsquo;t DoS a server. Don\u0026rsquo;t download \u0026amp; publish customer information.  And then, from nothing else, it teaches itself how to hack.\nThis is much, much harder than watching other people and will require significantly more resources. But, the machine won\u0026rsquo;t make mistakes like humans will. And it\u0026rsquo;ll show creativity in knowing what to do.\nBlue Team Here\u0026rsquo;s a fun idea for an AI that learns from itself.\n AI 1 defends their network. AI 2 attacks the network.  Then each evolution we only pick the best defender and best attacker. By the time we\u0026rsquo;re finished, we\u0026rsquo;ll have automated blue team \u0026amp;\u0026amp; red team which are best in class.\n Humans vs AI As you can probably guess, penetration testers aren\u0026rsquo;t really at threat any time soon. 60 or 70 years out at most.\nHowever, we are using AI in our security systems already and over time we\u0026rsquo;ll use better \u0026amp; better systems. I predict the timeline to look like:\n Create basic AI systems that rule out beginner penetration testers. Beginners have to learn new skills, such as using the AI systems or just being better. Because there\u0026rsquo;s less beginners, expert penetration testers get paid more and eventually consult in building the AI. Expert penetration testers are replaced by the AI system. The top 0.1% of penetration testers remain as consultants for the AI.  As we saw with AlphaGo, even with it beating Lee Sedol it still had a consultant that helped build it (in the documentary).\nHowever, I think this timeline might be more likely (carrying on from 3. in the last timeline)\n Penetration Testers go from hacking directly to using automated systems with AI. Penetration testers work with the AI to be the best.  This is what I like to call Human \u0026amp; Machine Synthesis. Machines are great, but unfortunately a machine might DoS a website, delete a production database or worse \u0026ndash; try to explain to HR why handing out your password to anyone that asks is a bad idea.\nHumans \u0026amp; Machines together are stronger. Imagine if the machine gave the human a list of paths it thinks is vulnerable, for example:\nsql injection -\u0026gt; database server -\u0026gt; domain admin And the human can check for this. It would also help the fact that any large organisation would prefer humans to deal with private confidential information rather than an automated blackbox machine.\nGarry Kasparov argues that machines can never be as creative as humans in his book Deep Thinking which contradicts my opinion, but is worth reading.\n Conclusion To sum up:\n AI has the potential to replace humans. Not for a very, very long time/ Even though it can, it likely won\u0026rsquo;t because humans prefer humans over machines.  If you want to hear from people with differing opinions to I, check out these books:\n Deep Thinking Superintelligence Life 3.0  ","permalink":"https://polymath.cloud/ai-pentesting/","summary":"Machine Learning  Supervised Learning Unsupervised Learning Reinforcement Learning  AlphaGo  Learning from the greats Teaching itself   Creativity     Applications in InfoSec  1. Learning from others 2. Learning from itself Blue Team   Humans vs AI Conclusion  In this blog post we\u0026rsquo;ll explore if machines can fully replace pe\nSomething to note is that predicting the future is hard and this is all entirely my opinion.","title":"Can Artificial Intelligence ever replace penetration testers?"},{"content":"In this short 10 minute article, you‚Äôll learn what the functional paradigm is in Python. You‚Äôll also learn about list comprehensions.\nüìå Functional Paradigm In an imperative paradigm, we do things by giving the computer a sequence of tasks and then it executes them. While executing them, it can change states. For example, let‚Äôs say we set A = 5, then we change the value of A. We have variables in the sense that the value inside the variable varies.\nIn a functional paradigm, we don‚Äôt tell the computer what to do but we tell it what stuff is. What the greatest common divisor of a number is, and so on.\nVariables cannot vary. Once we set a variable, it stays that way forever. Because of this, functions have no side effects in the functional paradigm. A side effect is where the function changes something outside of it. Let‚Äôs look at an example:\na = 3 def some_func(): global a a = 5 some_func() print(a) The output is 5. In the functional paradigm, changing variables is a big no-no and having functions affect things outside of their scope is also a big no-no. The only thing a function can do is calculate something and return it.\nNow you might think \u0026ldquo;no variables, no side effects? Why is this good?\u0026quot;. Good question, gnarly stranger reading this.\nIf a function is called twice with the same parameters, it‚Äôs guaranteed to return the same result. If you‚Äôve learnt about mathematical functions, you‚Äôll appreciate this benefit. We call this referential transparency. Because functions have no side effects, if we are building a program which computes things, we can speed up the program. If the program knows that func(2) equates to 3, we can store this in a table. This prevents the program from running the same function when we already know the answer.\nTypically, in functional programming, we do not use loops. We use recursion. Recursion is a mathematical concept, it means ‚Äúfeeding into itself‚Äù. With a recursive function, the function calls itself as a sub-function. Here‚Äôs a nice example of a recursive function in Python:\ndef factorial_recursive(n): # Base case: 1! = 1 if n == 1: return 1 # Recursive case: n! = n * (n-1)! else: return n * factorial_recursive(n-1) Some programming languages are also lazy. This means they don‚Äôt compute or do anything until the very last second. If we write some code to perform 2 + 2, a functional program will only calculate that when we need to use the resultant. We‚Äôll explore laziness in Python soon.\nüåç How Does Python\u0026rsquo;s Map Work? To understand map, let‚Äôs first look at what iterables are. An iterable is anything we can iterate over. These are lists or arrays, but Python has many different iterables. We can even create our own iterable objects which by implementing magic methods. A magic method is like an API that helps our objects become more Pythonic. We need to implement 2 magic methods to make an object an iterable:\nclass Counter: def __init__(self, low, high): # set class attributes inside the magic method __init__ # for ‚Äúinitialise‚Äù self.current = low self.high = high def __iter__(self): # first magic method to make this object iterable return self def __next__(self): # second magic method if self.current \u0026gt; self.high: raise StopIteration else: self.current += 1 return self.current - 1 The first magic method, __iter__ or dunder iter (double underscore iter) returns the iterative object, we often use this at the start of a loop. Dunder next, __next__, returns what the next object is.\nLet‚Äôs check this out:\nfor c in Counter(3, 8): print(c) This will print:\n3 4 5 6 7 8 In Python, an iterator is an object which only has an __iter__ magic method. This means that we can access positions in the object, but cannot iterate through the object. Some objects will have the magic method next and not the __iter__ magic method, such as sets (talked about later in this article). For this article, we‚Äôll assume everything we touch is an iterable object.\nNow we know what an iterable object is, let‚Äôs go back to the map function.\nThe map function lets us apply a function to every item in an iterable. We want to apply a function to every item in a list, but know that it‚Äôs possible for most iterables. The syntax for map takes 2 inputs, the function to apply and the iterable object.\nmap(function, iterable) Say we have a list of numbers like:\n[1, 2, 3, 4, 5] And we want to square every number, we can write code like this:\nx = [1, 2, 3, 4, 5] def square(num): return num*num print(list(map(square, x))) Functional Python is lazy. If we didn‚Äôt include the list() the function would store the definition of the iterable, not the list itself. We need to tell Python ‚Äúturn this into a list‚Äù for us to use this.\nIt‚Äôs weird to go from non-lazy evaluation to lazy evaluation suddenly in Python. You‚Äôll get used to it if you think more in the functional mindset than an imperative mindset.\nNow it‚Äôs nice to write a normal function like square(num) but it doesn‚Äôt look right. Do we have to define a whole function just to use it once in a map? Well, we can define a function in map using a lambda (anonymous) function.\nüîë Lambda Expressions in Python Lambda functions are a one-line function, used for a short period of time. We often use them with higher order functions along with filter, map, and reduce. This lambda expression squares a number given to it:\nsquare = lambda x: x * x Now let‚Äôs run this:\n\u0026gt;\u0026gt;\u0026gt; square(3) 9 I hear you. ‚ÄúBee, where are the arguments? what the heck is this? that looks nothing like a function?‚Äù\nWell, it‚Äôs confusing but can be explained. We‚Äôre assigning something to the variable square. this part:\nlambda x: Tells Python that this is a lambda function, and the input is called x. Anything after the colon is what we do with the input, and it returns whatever the result of that is.\nTo simplify our square program into one line we can do:\nx = [1, 2, 3, 4, 5] print(list(map(lambda num: num * num, x))) In a lambda expression, all the arguments go on the left and the stuff we want to do with them go on the right. It gets a little messy, no one can deny that. There‚Äôs a certain pleasure in writing code that only other functional programmers can read. Also, it‚Äôs super cool to take a function and turn it into a one-liner.\nüîπ Reduce Function in Python Reduce is a function that applies a given function on an iterable and returns one thing. Normally we‚Äôll perform a computation on a list to reduce it down to one number. Reduce looks like this:\nreduce(function, list) We can (and often will) use lambda expressions as the function.\nThe product of a list is every single number multiplied together. To program this:\nproduct = 1 x = [1, 2, 3, 4] for num in x: product = product * num But with reduce we can write:\nfrom functools import reduce product = reduce((lambda x, y: x * y),[1, 2, 3, 4]) To get the same product. The code is shorter, and with knowledge of functional programming, it is neater.\nüç≥ Filter The filter function takes an iterable and filters out all the things we don‚Äôt want in that iterable.\nFilter takes a function and a list. It applies the function to each item in the list and if that function returns True, it does nothing. If it returns False, it removes that item from the list.\nThe syntax looks like:\nfilter(function, list) Let‚Äôs see a small example, without filter we‚Äôll write:\nx = range(-5, 5) new_list = [] for num in x: if num \u0026lt; 0: new_list.append(num) With filter, this becomes:\nx = range(-5, 5) all_less_than_zero = list(filter(lambda num: num \u0026lt; 0, x)) ‚òÅ Higher Order Functions in Python Higher order functions can take functions as parameters and return functions. An example is:\ndef summation(nums): return sum(nums) def action(func, numbers): return func(numbers) print(action(summation, [1, 2, 3])) # Output is 6 Or an simple example of the second definition, return functions, is:\ndef rtnBrandon(): return ‚Äúbrandon‚Äù def rtnJohn(): return ‚Äújohn‚Äù def rtnPerson(): age = int(input(‚ÄúWhat‚Äôs your age?‚Äù)) if age == 21: return rtnBrandon() else: return rtnJohn() Higher-order functions make non-varying variables easier to work with. We need not store a variable anywhere if all we‚Äôre doing is passing data through a long tunnel of functions.\nAll functions in Python are first-class objects. We define a first-class object as having one or more of these features:\n Created at runtime Assigned to a variable or element in a data structure Passed as an argument to a function Returned as the result of a function So all functions in Python are first-class and can be used as a higher-order function.  üé∂ Partial Application with Functions Partial application (also called closures) is weird but is cool. We can call a function without supplying all the arguments it requires. Let‚Äôs see this in an example. We want to create a function which takes 2 arguments, a base and an exponent, and returns base to the power of the exponent, like so:\ndef power(base, exponent): return base ** exponent Now we want to have a dedicated square function, to work out the square of a number using the power function:\ndef square(base): return power(base, 2) This works, but what if we want a cube function? or a function to the power of 4? Can we keep on writing them forever? Well, we could. But programmers are lazy. If we repeatedly do the same thing, it‚Äôs a sign that there is a much quicker way to speed things up and that will allow us to not repeat things. We can use partial applications here. Let‚Äôs see an example of the square function using a partial application:\nfrom functools import partial square = partial(power, exponent=2) print(square(2)) # output is 4 Isn‚Äôt that cool! We can call functions which require 2 arguments, using only 1 argument by telling Python what the second argument is.\nWe can also use a loop, to generate a power function that works from cubed up to powers of 1000.\nfrom functools import partial powers = [] for x in range(2, 1001): powers.append(partial(power, exponent = x)) print(powers[0](3)) # output is 9 üêç Functional Programming Isn‚Äôt Pythonic You might have noticed, but a lot of the things we want to do in functional programming revolve around lists. Other than the reduce function \u0026amp; partial application, all the functions we have seen generate lists. Guido (the inventor of Python) dislikes functional stuff in Python because Python already has its own way to generate lists.\nIf we write ‚Äúimport this‚Äù into a Python IDLE session, we‚Äôll get:\n\u0026gt;\u0026gt;\u0026gt; import this The Zen of Python, by Tim Peters Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren‚Äôt special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you‚Äôre Dutch. Now is better than never. Although never is often better than *right* now. If the implementation is hard to explain, it‚Äôs a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let‚Äôs do more of those! This is the Zen of Python. It‚Äôs a poem about what something being Pythonic means. The part we want to relate to here is:\nThere should be one ‚Äî and preferably only one ‚Äî obvious way to do it.\nIn Python, map \u0026amp; filter can do the same things as a list comprehension (discussed next). This breaks one rule of the Zen of Python, so these parts of functional programming ‚Äòpythonic‚Äô.\nAnother talking point is Lambda. In Python, a lambda function is a normal function. Lambda is syntactic sugar. Both are equivalent:\nfoo = lambda a: 2 def foo(a): return 2 A regular function can do everything a lambda function can, but it doesn‚Äôt work the other way around. A lambda function cannot do everything that a regular function can do.\nThis was a short argument about why functional programming doesn‚Äôt fit into the whole Python ecosystem very well. You may have noticed I mentioned list comprehensions earlier, we‚Äôll discuss them now.\nüéì List Comprehensions Earlier, I mentioned that anything we could do with map or filter, we could do with a list comprehension. This is the part where we‚Äôll learn about them.\nA list comprehension is a way to generate lists in Python. The syntax is:\n[function for item in iterable] So let‚Äôs square every number in a list, as an example:\nprint([x * x for x in [1, 2, 3, 4]]) Okay, so we can see how we can apply a function to every item in a list. How do we go around applying a filter? Well, look at this code from earlier:\nx = range(-5, 5) all_less_than_zero = list(filter(lambda num: num \u0026lt; 0, x)) print(all_less_than_zero) We can convert this into a list comprehension like so:\nx = range(-5, 5) all_less_than_zero = [num for num in x if num \u0026lt; 0] List comprehensions support if statements like this. We no longer need to apply a million functions to something to get what you want. If we‚Äôre trying to make some kind of list chances are that it‚Äôll look cleaner and easier using a list comprehension.\nWhat if we want to square every number below 0 in a list? Well, with lambda, map and filter we‚Äôll write:\nx = range(-5, 5) all_less_than_zero = list(map(lambda num: num * num, list(filter(lambda num: num \u0026lt; 0, x)))) This is long and complicated. With a list comprehension it is:\nx = range(-5, 5) all_less_than_zero = [num * num for num in x if num \u0026lt; 0] A list comprehension is only good for, well, lists. Map and filter work on any iterable, so what‚Äôs up with that? We can use any comprehension for any iterable object we encounter.\nü§î Comprehensions of Any Iterable We can generate any iterable using a comprehension. Since Python 2.7, we can even generate a dictionary (hashmap).\n# Taken from page 70 chapter 3 of Fluent Python by Luciano Ramalho DIAL_CODES = [ (86, ‚ÄòChina‚Äô), (91, ‚ÄòIndia‚Äô), (1, ‚ÄòUnited States‚Äô), (62, ‚ÄòIndonesia‚Äô), (55, ‚ÄòBrazil‚Äô), (92, ‚ÄòPakistan‚Äô), (880, ‚ÄòBangladesh‚Äô), (234, ‚ÄòNigeria‚Äô), (7, ‚ÄòRussia‚Äô), (81, ‚ÄòJapan‚Äô), ] \u0026gt;\u0026gt;\u0026gt; country_code = {country: code for code, country in DIAL_CODES} \u0026gt;\u0026gt;\u0026gt; country_code {‚ÄôBrazil‚Äô: 55, ‚ÄòIndonesia‚Äô: 62, ‚ÄòPakistan‚Äô: 92, ‚ÄòRussia‚Äô: 7, ‚ÄòChina‚Äô: 86, ‚ÄòUnited States‚Äô: 1, ‚ÄòJapan‚Äô: 81, ‚ÄòIndia‚Äô: 91, ‚ÄòNigeria‚Äô: 234, ‚ÄòBangladesh‚Äô: 880} \u0026gt;\u0026gt;\u0026gt; {code: country.upper() for country, code in country_code.items() if code \u0026lt; 66} {1: ‚ÄòUNITED STATES‚Äô, 7: ‚ÄòRUSSIA‚Äô, 62: ‚ÄòINDONESIA‚Äô, 55: ‚ÄòBRAZIL‚Äô}# Taken from page 70 chapter 3 of Fluent Python by Luciano Ramalho DIAL_CODES = [ (86, ‚ÄòChina‚Äô), (91, ‚ÄòIndia‚Äô), (1, ‚ÄòUnited States‚Äô), (62, ‚ÄòIndonesia‚Äô), (55, ‚ÄòBrazil‚Äô), (92, ‚ÄòPakistan‚Äô), (880, ‚ÄòBangladesh‚Äô), (234, ‚ÄòNigeria‚Äô), (7, ‚ÄòRussia‚Äô), (81, ‚ÄòJapan‚Äô), ] \u0026gt;\u0026gt;\u0026gt; country_code = {country: code for code, country in DIAL_CODES} \u0026gt;\u0026gt;\u0026gt; country_code {‚ÄôBrazil‚Äô: 55, ‚ÄòIndonesia‚Äô: 62, ‚ÄòPakistan‚Äô: 92, ‚ÄòRussia‚Äô: 7, ‚ÄòChina‚Äô: 86, ‚ÄòUnited States‚Äô: 1, ‚ÄòJapan‚Äô: 81, ‚ÄòIndia‚Äô: 91, ‚ÄòNigeria‚Äô: 234, ‚ÄòBangladesh‚Äô: 880} \u0026gt;\u0026gt;\u0026gt; {code: country.upper() for country, code in country_code.items() if code \u0026lt; 66} {1: ‚ÄòUNITED STATES‚Äô, 7: ‚ÄòRUSSIA‚Äô, 62: ‚ÄòINDONESIA‚Äô, 55: ‚ÄòBRAZIL‚Äô} If it‚Äôs an iterable, we can generate it. Let‚Äôs look at one last example of sets. If you don‚Äôt know what a set is, check out this other article I wrote. The TL;DR is:\n Sets are lists of elements, no element is repeated twice in that list The order in sets do not matter.  # taken from page 87, chapter 3 of Fluent Python by Luciano Ramalho \u0026gt;\u0026gt;\u0026gt; from unicodedata import name \u0026gt;\u0026gt;\u0026gt; {chr(i) for i in range(32, 256) if \u0026#39;SIGN\u0026#39; in name(chr(i), \u0026#39;\u0026#39;)} {\u0026#39;√ó\u0026#39;, \u0026#39;¬•\u0026#39;, \u0026#39;¬∞\u0026#39;, \u0026#39;¬£\u0026#39;, \u0026#39;¬©\u0026#39;, \u0026#39;#\u0026#39;, \u0026#39;¬¨\u0026#39;, \u0026#39;%\u0026#39;, \u0026#39;¬µ\u0026#39;, \u0026#39;\u0026gt;\u0026#39;, \u0026#39;¬§\u0026#39;, \u0026#39;¬±\u0026#39;, \u0026#39;¬∂\u0026#39;, \u0026#39;¬ß\u0026#39;, \u0026#39;\u0026lt;\u0026#39;, \u0026#39;=\u0026#39;, \u0026#39;¬Æ\u0026#39;, \u0026#39;$\u0026#39;, \u0026#39;√∑\u0026#39;, \u0026#39;¬¢\u0026#39;, \u0026#39;+\u0026#39;} You may notice that sets have the same curly braces as dictionaries. Python is smart. It‚Äôll know whether we\u0026rsquo;re writing a dictionary comprehension or a set comprehension based on whether we provide the extra value for the dictionary or not. If you want to learn more about comprehensions, check out this visual guide.\n","permalink":"https://polymath.cloud/functional/","summary":"In this short 10 minute article, you‚Äôll learn what the functional paradigm is in Python. You‚Äôll also learn about list comprehensions.\nüìå Functional Paradigm In an imperative paradigm, we do things by giving the computer a sequence of tasks and then it executes them. While executing them, it can change states. For example, let‚Äôs say we set A = 5, then we change the value of A. We have variables in the sense that the value inside the variable varies.","title":"Learn Functional Python in 10 Minutes"},{"content":"Introduction In this blog post we will:\n Create our own VPN on AWS Add PiHole to iit Use Unbound as our DNS resolver Access the VPN using Wireguard Not go bankrupt doing it!  Step 1 Create an AWS lightsail instance on Amazon.\nWe use Lightsail instead of EC2 because EC costs ¬£0.12 / GB on outbound transfers. That means for 1 TB / month it\u0026rsquo;ll cost ¬£120.\nLightsail costs ¬£3.50 / month and comes with 1 TB outbound transfer already.\nWe are saving ¬£116.50 by using Lightsail over EC2.\n Create a new Lightsail instance (Ubuntu) Manually configure, and click through each step until you get to Security groups, and add the following: Custom UDP, Port Range: 51820, Source: 0.0.0.0/0, and Description: Wireguard Download your new keypair and save it to .ssh Click Elastic IP to create an Elastic IP, then click actions and associate, and associate the Elastic IP to your new server  Step 2 Connect to your new instance.\nssh -i /Users/[your user]/.ssh/PiVPNHOLE.pem ubuntu@[your host]\rStep 3 Install PiHole\ncurl -sSL https://install.pi-hole.net | bash\r Take note of your PiHole\u0026rsquo;s web interface IP and the password  Step 4 Install PiVPN. This will automatically make a Wireguard VPN for us.\ncurl -L https://install.pivpn.io | bash\rStep 5 Creatr your user profiles.\npivpn add -n \u0026lt;config name\u0026gt;\r where [config name] is a unique name for each of your devices (e.g., mphone, mlaptop). You can repeat this step for as many devices that you want to connect to your Pi-hole.  Step 6 Display the QR codes to connect our mobile devices.\npivpn -qr [config name, e.g., mphone]\rStep 7 Download the configs for our desktops.\nscp -i /Users/[Your Name]/.ssh/PiVPNHOLE.pem ubuntu@[your host]:~/configs/[config name, e.g., mlaptop] [destination on your computer, e.g., ~/Documents/wireguard]\rAn example is:\nscp -i /Users/example/.ssh/PiVPNHOLE.pem ubuntu@ec2-1-2-3-4.location.compute.amazonaws.com:~/configs/ /Users/example/wireguard\rThis will download all of your config files to a folder on your computer called wireguard\nStep 8 Install Wireguard on your devices.\n Scan your QR code for your mobile devices, and/or install the downloaded configs for your laptop/desktop/other devices, turn them on. I set them to \u0026ldquo;on-demand\u0026rdquo; meaning it\u0026rsquo;ll always be on Go check out your PiHole at the address you saved in Step 2!  Step 9 Install Unbound. Unbound is a recursive DNS resolver. At first, it\u0026rsquo;ll be slow as it caches our DNS but over time it\u0026rsquo;ll be faster. It\u0026rsquo;s also privacy friendly!\n Follow this guide One thing to note, when you get to Configure Unbound instruction, it\u0026rsquo;ll say /etc/unbound/unbound.conf.d/pi-hole.conf, you actually need to add sudo nano to the start of that code in your Terminal to be able to create and paste in the configuration (or else you\u0026rsquo;ll just get an error). Then just copy/paste in the text from the guide and hit save/exit. sudo nano /etc/unbound/unbound.conf.d/pi-hole.conf.  Split Tunnel VPN This step is not needed.\nsudo nano /etc/wireguard/configs/[config name].conf\rChange AllowedIPs from \u0026ldquo;0.0.0.0/0, ::0\u0026rdquo; to \u0026ldquo;[PiHole IP address]/32, [DNS IP]/32\u0026rdquo;. The [DNS IP] is listed in [interface] and by default 10.6.0.1/32. Note spit-tunnelling only routes the DNS (i.e., PiHole ad-blocking) vs., all of your data through your VPN which will save bandwidth to keep you on the free tier. You\u0026rsquo;ll need to repeat this for each [config name] you created in step 5.\nTroubleshooting  Before being able to remotely log in, I had to run the command chmod 600 /Users/[your name]/.ssh/PiVPNHOLE.pem After clicking \u0026ldquo;generate keys\u0026rdquo; in PiVPN, you may get /tmp/setupVars.conf permission denied. I solved this by deleting that file. You may need to run the piVpn script as sudo. Run with curl -L https://install.pivpn.io | sudo bash  ","permalink":"https://polymath.cloud/pihole-vpn/","summary":"Introduction In this blog post we will:\n Create our own VPN on AWS Add PiHole to iit Use Unbound as our DNS resolver Access the VPN using Wireguard Not go bankrupt doing it!  Step 1 Create an AWS lightsail instance on Amazon.\nWe use Lightsail instead of EC2 because EC costs ¬£0.12 / GB on outbound transfers. That means for 1 TB / month it\u0026rsquo;ll cost ¬£120.\nLightsail costs ¬£3.","title":"Creating your own VPN with PiHole \u0026 UnBound on AWS"},{"content":"There are 5308 publically available Pi-Holes according to Shodan.io. This article will demonstrate how bad of an idea this is.\nIf you\u0026rsquo;ve spent any time over at r/pihole, you\u0026rsquo;ll know they always talk about not having publically available Pi-Holes. But, why? What\u0026rsquo;s the harm?\nOut of the 5308 Pi-Holes publically available, I found 100 of them are vulnerable. Vulnerable means:\n You can access /admin/index.php?login. This is because not all Pi-Holes listed by Shodan work in the way we expect them to.  However, in my research I came across something interesting:\nPasswordless Pi-Holes I came across many passwordless Pi-Holes. 578 passwordless Pi-Holes to be correct. These aren\u0026rsquo;t considered \u0026ldquo;vulnerable\u0026rdquo;, because they are by default open. It\u0026rsquo;s incredibly easy to find these, if you click around on Shodan enough you\u0026rsquo;ll find them. You can also search the Shodan API (like I did below) and try to access a page, /admin/queries.php and see if it doesn\u0026rsquo;t prompt for a password. Some of these Pi-Holes are meant to be public. You can tell because their domain name includes \u0026ldquo;public-pihole\u0026rdquo;.\nIt\u0026rsquo;s hard to differentiate between Pi-Holes meant to be publically accessible and those that aren\u0026rsquo;t, so I haven\u0026rsquo;t explored these much. Just know that these exist and to not make a publically facing Pi-Hole without a password for your personal use.\nFinding these Pi-Holes Shodan.io is a service that scans the web. It finds IoT or other devices like Pi-Hole. Using the Shodan API, we can programatically explore these Pi-Holes. Or, you can click here and explore them manually.\nFinding these Pi-Holes took a minimal amount of code. I was surprised to find my Pi-Hole on this list. You need a Shodan membership. Also, don\u0026rsquo;t attack Pi-Holes you don\u0026rsquo;t own.\nfrom shodan import Shodan\rimport requests\rapi = Shodan(\u0026#39;API_KEY\u0026#39;)\rdef url_ok(url):\rr = requests.head(\u0026#34;http://\u0026#34; + url)\rreturn r.status_code == 200\rdef check_page(url):\rr = requests.get(\u0026#34;http://\u0026#34; + url + \u0026#34;/admin/\u0026#34;)\rreturn \u0026#34;Pi-hole\u0026#34; in r.text\rdef pruneIPS(vulnerableIPs):\rfor i in vulnerableIPs:\rif not url_ok(i):\rif not check_page(i):\rvulnerableIPs.remove(i)\rreturn vulnerableIPs\rresult = api.search(\u0026#34;pi-hole\u0026#34;)\rVulnerableIP = []\rfor service in result[\u0026#39;matches\u0026#39;]:\rVulnerableIP.append(service[\u0026#39;ip_str\u0026#39;])\rHacking the Pi-Hole Pi-Hole doesn\u0026rsquo;t block bruteforcing. You can enter 200,000 incorrect passwords and Pi-Hole wouldn\u0026rsquo;t care. How easy is it to create a brute-force attack? With Hydra - very easy. Hydra is a brute-forcing tool that uses a dictionary to attack a target. The payload for brute-forcing a Pi-Hole is:\nhydra -l '' -P /usr/share/wordlists/rockyou.txt 192.168.0.1 http-post-form \u0026quot;/admin/index.php?login:pw=^PASS^:Forgot password\u0026quot;\rOur wordlist is the infamous rockyou.txt. We use the http-post-form module and enter some information. The form to post, the name of the variable for the password (\u0026ldquo;pw\u0026rdquo;), and what will be on the page when a failed login attempt happens (the forgotten password box).\nSince Pi-Hole doesn\u0026rsquo;t block brute-force attacks, it makes it trivial to brute-force most of the Pi-Holes assuming password length is low (under 9 chars optimally, although 9 chars can be done in 19 hours https://howsecureismypassword.net/). It\u0026rsquo;s worth mentioning that Pi-Hole\u0026rsquo;s default password is very secure, but the lack of any timeouts sucks. Not to mention that most people change their password to something more human.\nTo recap, it is possible to get a list of all the vulnerable Pi-Holes and to brute-force their passwords with a dictionary attack.\nI will not show code for this, because it is illegal. However, you can see the 2 separate parts in action above. Please test your own Pi-Hole. Do not test a Pi-Hole you do not own.\nWhat can an attacker see? Once the attacker has gained access to your Pi-Hole, they can see every website you visit. Your hosts\u0026rsquo; files, your clients and their IP addresses. Your top domains and your top blocked domains.\nNow, they have a pretty good idea of who you are. They know all your devices. They know your password (which, most people would reuse on at least one of their devices). And they know you, pretty well actually. Considering your entire internet history is there. There is no point in using a Pi-Hole if all of your DNS information is as easily accessible as this.\nDNS Amplification Attacks An attacker could use your DNS server to perform a DDoS attack. This is very common and is called a DNS amplification attack. This is likely illegal for you to allow this, depending on the country. Another reason to not use a publically facing Pi-Hole.\nHow to protect yourself Search your IP address on Shodan.io. Read the output. Shodan will tell you what ports are open, and will let you know whether it thinks a Pi-Hole service is running.\n Use a VPN to connect to your Pi-Hole: https://www.reddit.com/r/pihole/comments/bl4ka8/guide_pihole_on_the_go_with_wireguard/ Don\u0026rsquo;t have a publically facing Pi-Hole Choose a very strong password Turn your Pi-Hole into a no-logs Pi-Hole  Fun Facts Statistically, most people with exploitable Pi-Holes used Deutsche Telekom AG. However, most publically accessible Pi-Holes are hosted on:\n Digital Ocean OVH SAS Google Cloud Deutsche Telekom AG  There are 5308 publically available Pi-Holes according to Shodan.io. This article will demonstrate how bad of an idea this is.\nIf you\u0026rsquo;ve spent any time over at r/pihole, you\u0026rsquo;ll know they always talk about not having publically available Pi-Holes. But, why? What\u0026rsquo;s the harm?\nOut of the 5308 Pi-Holes publically available, I found 100 of them are vulnerable. Vulnerable means:\n You can access /admin/index.php?login. This is because not all Pi-Holes listed by Shodan work in the way we expect them to.  However, in my research I came across something interesting:\nPasswordless Pi-Holes I came across many passwordless Pi-Holes. 578 passwordless Pi-Holes to be correct. These aren\u0026rsquo;t considered \u0026ldquo;vulnerable\u0026rdquo;, because they are by default open. It\u0026rsquo;s incredibly easy to find these, if you click around on Shodan enough you\u0026rsquo;ll find them. You can also search the Shodan API (like I did below) and try to access a page, /admin/queries.php and see if it doesn\u0026rsquo;t prompt for a password. Some of these Pi-Holes are meant to be public. You can tell because their domain name includes \u0026ldquo;public-pihole\u0026rdquo;.\nIt\u0026rsquo;s hard to differentiate between Pi-Holes meant to be publically accessible and those that aren\u0026rsquo;t, so I haven\u0026rsquo;t explored these much. Just know that these exist and to not make a publically facing Pi-Hole without a password for your personal use.\nFinding these Pi-Holes Shodan.io is a service that scans the web. It finds IoT or other devices like Pi-Hole. Using the Shodan API, we can programatically explore these Pi-Holes. Or, you can click here and explore them manually.\nFinding these Pi-Holes took a minimal amount of code. I was surprised to find my Pi-Hole on this list. You need a Shodan membership. Also, don\u0026rsquo;t attack Pi-Holes you don\u0026rsquo;t own.\nfrom shodan import Shodan\rimport requests\rapi = Shodan(\u0026#39;API_KEY\u0026#39;)\rdef url_ok(url):\rr = requests.head(\u0026#34;http://\u0026#34; + url)\rreturn r.status_code == 200\rdef check_page(url):\rr = requests.get(\u0026#34;http://\u0026#34; + url + \u0026#34;/admin/\u0026#34;)\rreturn \u0026#34;Pi-hole\u0026#34; in r.text\rdef pruneIPS(vulnerableIPs):\rfor i in vulnerableIPs:\rif not url_ok(i):\rif not check_page(i):\rvulnerableIPs.remove(i)\rreturn vulnerableIPs\rresult = api.search(\u0026#34;pi-hole\u0026#34;)\rVulnerableIP = []\rfor service in result[\u0026#39;matches\u0026#39;]:\rVulnerableIP.append(service[\u0026#39;ip_str\u0026#39;])\rHacking the Pi-Hole Pi-Hole doesn\u0026rsquo;t block bruteforcing. You can enter 200,000 incorrect passwords and Pi-Hole wouldn\u0026rsquo;t care. How easy is it to create a brute-force attack? With Hydra - very easy. Hydra is a brute-forcing tool that uses a dictionary to attack a target. The payload for brute-forcing a Pi-Hole is:\nhydra -l '' -P /usr/share/wordlists/rockyou.txt 192.168.0.1 http-post-form \u0026quot;/admin/index.php?login:pw=^PASS^:Forgot password\u0026quot;\rOur wordlist is the infamous rockyou.txt. We use the http-post-form module and enter some information. The form to post, the name of the variable for the password (\u0026ldquo;pw\u0026rdquo;), and what will be on the page when a failed login attempt happens (the forgotten password box).\nSince Pi-Hole doesn\u0026rsquo;t block brute-force attacks, it makes it trivial to brute-force most of the Pi-Holes assuming password length is low (under 9 chars optimally, although 9 chars can be done in 19 hours https://howsecureismypassword.net/). It\u0026rsquo;s worth mentioning that Pi-Hole\u0026rsquo;s default password is very secure, but the lack of any timeouts sucks. Not to mention that most people change their password to something more human.\nTo recap, it is possible to get a list of all the vulnerable Pi-Holes and to brute-force their passwords with a dictionary attack.\nI will not show code for this, because it is illegal. However, you can see the 2 separate parts in action above. Please test your own Pi-Hole. Do not test a Pi-Hole you do not own.\nWhat can an attacker see? Once the attacker has gained access to your Pi-Hole, they can see every website you visit. Your hosts\u0026rsquo; files, your clients and their IP addresses. Your top domains and your top blocked domains.\nNow, they have a pretty good idea of who you are. They know all your devices. They know your password (which, most people would reuse on at least one of their devices). And they know you, pretty well actually. Considering your entire internet history is there. There is no point in using a Pi-Hole if all of your DNS information is as easily accessible as this.\nDNS Amplification Attacks An attacker could use your DNS server to perform a DDoS attack. This is very common and is called a DNS amplification attack. This is likely illegal for you to allow this, depending on the country. Another reason to not use a publically facing Pi-Hole.\nHow to protect yourself Search your IP address on Shodan.io. Read the output. Shodan will tell you what ports are open, and will let you know whether it thinks a Pi-Hole service is running.\n Use a VPN to connect to your Pi-Hole: https://www.reddit.com/r/pihole/comments/bl4ka8/guide_pihole_on_the_go_with_wireguard/ Don\u0026rsquo;t have a publically facing Pi-Hole Choose a very strong password Turn your Pi-Hole into a no-logs Pi-Hole  Fun Facts Statistically, most people with exploitable Pi-Holes used Deutsche Telekom AG. However, most publically accessible Pi-Holes are hosted on:\n Digital Ocean OVH SAS Google Cloud Deutsche Telekom AG  \r\r\rFollow me on Twitter: https://twitter.com/BeeeSec\n","permalink":"https://polymath.cloud/hacked-pihole/","summary":"There are 5308 publically available Pi-Holes according to Shodan.io. This article will demonstrate how bad of an idea this is.\nIf you\u0026rsquo;ve spent any time over at r/pihole, you\u0026rsquo;ll know they always talk about not having publically available Pi-Holes. But, why? What\u0026rsquo;s the harm?\nOut of the 5308 Pi-Holes publically available, I found 100 of them are vulnerable. Vulnerable means:\n You can access /admin/index.php?login. This is because not all Pi-Holes listed by Shodan work in the way we expect them to.","title":"How I Hacked Your Pi-Hole"},{"content":"Identity \u0026amp; Access Management Identities are required to authenticate to AWS accounts.\nUsername = identity Password = verification\nAccess management relates to what an identity can access once its been authenticated.\nThe AWS IAM service is used to centrally manage and control security permissions.\n Users: These are objects within IAM identifying different users. Groups: These are objects that contain multiple users. Roles: These are objects that different identities can adopt to assume a new set of permissions. Policy Permissions: These are JSON policies that define what resources can and can\u0026rsquo;t be accessed. And Access Control Mechanisms: These are mechanisms that govern how a resource is accessed.  IAM is a global service.\nUsers, Groups, and Roles Users represent a real person who requires access to operate and maintain your AWS environment.\nOr it can be an account used by an application that requires permissions to access your AWS resources programmatically.\nTo create a user we:\n Create a username Set the AWS Access Type Define a password Permission assignment through the use of policies or inherited from a group Review and confirm the information Download .csv for security credentials  It\u0026rsquo;s best practice to use groups over assigning individual permissions.\nIAM groups Used to authorise access via policies.\nIAM groups have IAM users and have IAM policies associated. These are either AWS managed policies or customer managed policies.\nGroups are normally created to relate to a specific requirement or job role.\nAny users who are members of that group inherit the permissions applied to that group.\nIt makes it easier to modify permissions for multiple users at once.\nAWS has a default maximum limit of 100 groups. A user can only be associated to 10 groups.\nIAM Roles IAM roles allow users to adopt a set of temporary IAM permissions.\nRoles don\u0026rsquo;t have access keys or credentials. They are dynamically assigned by AWS.\nWe may want to temporarily grant access to a permission for a user, we can allow the user to assume a role which replaces their existing permissions temporarily.\nThere are 4 different types of roles:\n AWS Service Role (used by other services). Some examples are EC2, Directory Service, Lambda. AWS Service Linked. Associated to certain AWS services. Pre-defined and permissions cannot be altered. Examples are \u0026ldquo;Amazon Lex - Bots\u0026rdquo; and \u0026ldquo;Amazon LEx - Channels\u0026rdquo;. Roles for cross account access. Providing access to an account we own, and providing access to an account we own from a third party access. Allows cross-account access to resources. Role for identity provider access. Such as Google, Cognito, Amazon. Grants access for Simple Sign on (SAML). And grants API access to SAML providers.  IAM Policies Used to assign permissions and are wriitten in JSON.\nThere are two types of policies available.\n AWS Managed Policies Customer Managed Policies  Assigning to a user is not best practice. AWS Managed is preconfigured by AWS to help us with the most common issues we may come across.\nIf we make changes to an AWS managed policy, it becomes a customer managed policy.\nThere are 3 ways to make a customer managed policy.\n Copy any AWS managed policy Policy Generator - make by series of drop down boxes Create your own policy - we can write it in JSON ourselves  Inline policies do not show up under the policy list but are directly attached to your IAM object. We use them when we dont want to risk the permissions being used by others.\nWhat happens when there are conflicting permissions?\n All access to resource is denied Access only allowed if specific \u0026ldquo;Allow\u0026rdquo; has been specified If a single deny exists in any policy that deny will override any previous deny. An explicit deny will always take precedence over an explicit allow.  Identity Federation Allows us to manage and access AWS even if we don\u0026rsquo;t have an IAM user account.\n","permalink":"https://polymath.cloud/aws-iam/","summary":"Identity \u0026amp; Access Management Identities are required to authenticate to AWS accounts.\nUsername = identity Password = verification\nAccess management relates to what an identity can access once its been authenticated.\nThe AWS IAM service is used to centrally manage and control security permissions.\n Users: These are objects within IAM identifying different users. Groups: These are objects that contain multiple users. Roles: These are objects that different identities can adopt to assume a new set of permissions.","title":"Introduction to IAM with AWS"},{"content":"Greedy Algorithms Greedy algorithms aim to make the optimal choice at that given moment. Each step it chooses the optimal choice, without knowing the future. It attempts to find the globally optimal way to solve the entire problem using this method.\nWhy Are Greedy Algorithms Called Greedy? Algorithms are called greedy when they utilise the greedy property. The greedy property is:\n At that exact moment in time, what is the optimal choice to make?\n Greedy algorithms are greedy. They do not look into the future to decide the global optimal solution. They are only concerned with the optimal solution locally. This means that the overall optimal solution may be different from the solution the algorithm chooses.\nThey never look backwards at what they\u0026rsquo;ve done to see if they could optimise globally. This is the main difference between Greedy and Dynamic Programming.\n What Are Greedy Algorithms Used For? Greedy algorithms are very fast. A lot faster than the two other alternatives (Divide \u0026amp; Conquer, and Dynamic Programming). They\u0026rsquo;re used because they\u0026rsquo;re fast.\nMost of the popular algorithms using Greedy have shown that Greedy gives the global optimal solution every time. Some of these include:\n Dijkstra\u0026rsquo;s Algorithm Kruskal\u0026rsquo;s algorithm Prim\u0026rsquo;s algorithm Huffman trees  We\u0026rsquo;re going to explore greedy algorithms using a famous example - counting change. There isn\u0026rsquo;t much to this paradigm.\n How Do I Create a Greedy Algorithm? Your algorithm needs to follow this property:\n At that exact moment in time, what is the optimal choice to make?\n And that\u0026rsquo;s it. There isn\u0026rsquo;t much to it. Greedy algorithms are generally easier to code than Divide \u0026amp; Conquer or Dynamic Programming.\n Counting Change Using Greedy Imagine you\u0026rsquo;re a vending machine. Someone gives you ¬£1 and buys a drink for ¬£0.70p. There\u0026rsquo;s no 30p coin in pound sterling, how do you calculate how much change to return?\nFor reference, this is the denomination of each coin in the UK:\n1p, 2p, 5p, 10p, 20p, 50p, ¬£1\rThe greedy algorithm starts from the highest denomination and works backwards. Our algorithm starts at ¬£1. ¬£1 is more than 30p, so it can\u0026rsquo;t use it. It does this for 50p. It reaches 20p. 20p \u0026lt; 30p, so it takes 1 20p.\nThe algorithm needs to return change of 10p. It tries 20p again, but 20p \u0026gt; 10p. It then goes to 10p. It chooses 1 10p, and now our return is 0 we stop the algorithm.\nWe return 1x20p and 1x10p.\nThis algorithm works quite well in real life. Let\u0026rsquo;s use another example, this time we have the denomination next to how many of that coin is in the machine, (denomination, how many).\n(1p, 10), (2p, 3), (5p, 1), (10p, 0), (20p, 1p), (50p, 19p), (100p, 16)\rThe algorithm is asked to return change of 30p again. 100p (¬£1) is no. Same for 50. 20p, we can do that. We pick 1x 20p. We now need to return 10p. 20p has run out, so we move down 1.\n10p has run out, so we move down 1.\nWe have 5p, so we choose 1x5p. We now need to return 5p. 5p has run out, so we move down one.\nWe choose 1 2p coin. We now need to return 3p. We choose another 2p coin. We now need to return 1p. We move down one.\nWe choose 1x 1p coin.\nIn total, our algorithm selected these coins to return as change:\n# (value, how many we return as change)\r (10, 1)\r(5, 1)\r(2, 2)\r(1, 1)\rLet\u0026rsquo;s code something. First, we need to define the problem. We\u0026rsquo;ll start with the denominations.\ndenominations = [1, 2, 5, 10, 20, 50, 100]\r# 100p is ¬£1\r Now onto the core function. Given denominations and an amount to give change, we want to return a list of how many times that coin was returned.\nIf our denominations list is as above, then [6, 3, 0, 0, 0, 0, 0] represents taking 6 1p coins and 3 2p coins, but 0 of all other coins.\ndenominations = [1, 2, 5, 10, 20, 50, 100]\r# 100p is ¬£1\r def returnChange(change, denominations):\rtoGiveBack = [0] * len(denominations)\rfor pos, coin in reversed(list(enumerate(denominations))):\rWe create a list, the size of denominations long and fill it with 0\u0026rsquo;s.\nWe want to loop backwards, from largest to smallest. Reversed(x) reverses x and lets us loop backwards. Enumerate means \u0026ldquo;for loop through this list, but keep the position in another variable\u0026rdquo;. In our example when we start the loop. coin = 100 and pos = 6.\nOur next step is repeatedly choosing a coin for as long as we can use that coin. If we need to give change = 40 we want our algorithm to choose 20, then 20 again until it can no longer use 20. We do this using a for loop.\ndenominations = [1, 2, 5, 10, 20, 50, 100]\r# 100p is ¬£1\r def returnChange(change, denominations):\r# makes a list size of length denominations filled with 0\r toGiveBack = [0] * len(denominations)\r# goes backwards through denominations list\r # and also keeps track of the counter, pos.\r for pos, coin in enumerate(reversed(denominations)):\r# while we can still use coin, use it until we can\u0026#39;t\r while coin \u0026lt;= change:\rWhile the coin can still fit into change, add that coin to our return list, toGiveBack and remove it from change.\ndenominations = [1, 2, 5, 10, 20, 50, 100]\r# 100p is ¬£1\r def returnChange(change, denominations):\r# makes a list size of length denominations filled with 0\r toGiveBack = [0] * len(denominations)\r# goes backwards through denominations list\r # and also keeps track of the counter, pos.\r for pos, coin in enumerate(reversed(denominations)):\r# while we can still use coin, use it until we can\u0026#39;t\r while coin \u0026lt;= change:\rchange = change - coin\rtoGiveBack[pos] += 1\rreturn(toGiveBack)\rprint(returnChange(30, denominations))\r# returns [0, 0, 0, 1, 1, 0, 0]\r # 1x 10p, 1x 20p\r The runtimeof this algorithm is dominated by the 2 loops, thus it is O(n^2).\n Is Greedy Optimal? Does Greedy Always Work? It is optimal locally, but sometimes it isn\u0026rsquo;t optimal globally. In the change giving algorithm, we can force a point at which it isn\u0026rsquo;t optimal globally.\nThe algorithm for doing this is:\n Pick 3 denominations of coins. 1p, x, and less than 2x but more than x.  We\u0026rsquo;ll pick 1, 15, 25.\n Ask for change of 2 * second denomination (15)  We\u0026rsquo;ll ask for change of 30. Now, let\u0026rsquo;s see what our Greedy algorithm does.\n[5, 0, 1]\rIt choses 1x 25p, and 5x 1p. The optimal solution is 2x 15p.\nOur Greedy algorithm failed because it didn\u0026rsquo;t look at 15p. It looked at 25p and thought \u0026ldquo;yup, that fits. Let\u0026rsquo;s take it.\u0026rdquo;\nIt then looked at 15p and thought \u0026ldquo;that doesn\u0026rsquo;t fit, let\u0026rsquo;s move on\u0026rdquo;.\nThis is an example of where Greedy Algorithms fail.\nTo get around this, you would either have to create currency where this doesn\u0026rsquo;t work or to brute-force the solution. Or use Dynamic Programming.\nGreedy Algorithms are sometimes globally optimal. From earlier, we saw these algorithms are globally optimal:\n Dijkstra\u0026rsquo;s Algorithm Kruskal\u0026rsquo;s algorithm Prim\u0026rsquo;s algorithm Huffman trees  There are other globally optimal solutions, but Greedy is faster and easier to program than these solutions.\n Dijkstra\u0026rsquo;s Algorithm Dijkstra\u0026rsquo;s algorithm finds the shortest path from a node to every other node in the graph. In our example, we\u0026rsquo;ll be using a weighted directed graph. Each edge has a direction, and each edge has a weight.\nDijkstra\u0026rsquo;s algorithm has many uses. It can be very useful within road networks where you need to find the fastest route to a place. The algorithm is also used for:\n IP Routing A* Algorithm Telephone networks  The algorithm follows these rules:\n Every time we want to visit a new node, we will choose the node with the smallest known distance. Once we\u0026rsquo;ve moved to the node, we check each of its neighbouring nodes. We calculate the distance from the neighbouring nodes to the root nodes by summing the cost of the edges that lead to that new node. If the distance to a node is less than a known distance, we\u0026rsquo;ll update the shortest distance.  Our first step is to pick the starting node. Let\u0026rsquo;s choose A. All the distances start at infinity, as we don\u0026rsquo;t know their distance until we reach a node that does know the distance.\nWe mark off A on our unvisited nodes list. The distance from A to A is 0. The distance from A to B is 4. The distance from A to C is 2. We updated our distance listing on the right-hand side.\nWe then pick the smallest edge where the vertex hasn\u0026rsquo;t been chosen. The smallest edge is A -\u0026gt; C, and we haven\u0026rsquo;t chosen C yet. We visit C.\nNotice how we\u0026rsquo;re picking the smallest distance from our current node to a node we haven\u0026rsquo;t visited yet. We\u0026rsquo;re being greedy. In this case, the greedy method is the global optimal solution.\nWe can get to B from C. We now need to pick a minimum. min(4, 2 + 1) = 3.\nSince A -\u0026gt; C -\u0026gt; B is smaller than A -\u0026gt; B, we update B with this information. We then add in the distances from the other nodes we can now reach.\nOur next smallest vertex with a node we haven\u0026rsquo;t visited yet is B, with 3. We visit B.\nWe do the same for B. Then we pick the smallest vertex we haven\u0026rsquo;t visited yet, D.\nWe don\u0026rsquo;t update any of the distances this time. Our last node is then E.\nThere are no updates again. To find the shortest path from A to the other nodes, we walk back through our graph.\nWe pick A first, then C, then B. If you need to create the shortest path from A to every other node as a graph, you can run this algorithm using a table on the right hand side.\nUsing this table it is easy to draw out the shortest distance from A to every other node in the graph:\n Fractional Knapsack Problem Using Greedy Algorithm Imagine you are a thief. You break into the house of Judy Holliday - 1951 Oscar winner for Best Actress. Judy is a hoarder of gems. Judy\u0026rsquo;s house is lined to the brim with gems.\nYou brought with you a bag - a knapsack if you will. This bag has a weight of 7. You happened to have a listing of all of Judy\u0026rsquo;s items, from some insurance paper. The items read as:\n![](https://skerritt.blog/content/images/2019/06/Screenshot_2019-06-23-Greedy-Algorithms-1-.png\nThe first step to solving the fractional knapsack problem is to calculate value/weight for each item.\nAnd now we greedily select the largest ones. To do this, we can sort them according to value/weight} in descending order. Luckily for us, they are already sorted. The largest one is 3.2.\nknapsack value = 16\rknapsack total weight = 5 (out of 7)\rThen we select Francium (I know it\u0026rsquo;s not a gem, but Judy is a bit strange üòâ)\nknapsack value = 19\rknapsack weight = 6\rNow, we add Sapphire. But if we add Sapphire, our total weight will come to 8.\nIn the fractional knapsack problem, we can cut items up to take fractions of them. We have a weight of 1 left in the bag. Our sapphire is weight 2. We calculate the ratio of:\nWeight of knapsack left / weight of item\nAnd then multiply this ratio by the value of the item to get how much value of that item we can take.\n1/2 * 6 = 3\nknapsack value = 21\rknapsack weight = 7\rThe greedy algorithm can optimally solve the fractional knapsack problem, but it cannot optimally solve the {0, 1} knapsack problem. In this problem instead of taking a fraction of an item, you either take it {1} or you don\u0026rsquo;t {0}. To solve this, you need to use Dynamic Programming.\nThe runtimefor this algorithm is O(n log n). Calculating value/weight is O(1). Our main step is sorting from largest value/weight, which takes O(n log n) time.\n Greedy vs Divide \u0026amp; Conquer vs Dynamic Programming  Conclusion Greedy algorithms are very fast, but may not provide the optimal solution. They are also easier to code than their counterparts.\nDivide \u0026amp; Conquer Divide and conquer algorithms aren\u0026rsquo;t really taught in programming textbooks, but it\u0026rsquo;s something every programmer should know. Divide and conquer algorithms are the backbone of concurrency and multi-threading.\nOften I\u0026rsquo;ll hear about how you can optimise a for loop to be faster or how switch statements are slightly faster than if statements. Most computers have more than one core, with the ability to support multiple threads. Before worrying about optimising for loops or if statements try to attack your problem at a different angle.\nDivide and Conquer is one of the ways to attack a problem from a different angle. Throughout this article, I\u0026rsquo;m going to talk about creating a divide and conquer solutions and what it is. Don\u0026rsquo;t worry if you have zero experience or knowledge on the topic. This article is designed to be read by someone with very little programming knowledge.\nI\u0026rsquo;m going to explain this using 3 examples. The first will be a simple explanation. The second will be some code. The final will get into the mathematical core of divide and conquer techniques. (Don\u0026rsquo;t worry, I hate maths too).\nNo time to read this? Sign up to my email list to get this in PDF form. You\u0026rsquo;ll also get some extra content that isn\u0026rsquo;t in this post ‚ú® Sign up here.\nWhat is divide and conquer? üåé Divide and conquer is where you divide a large problem up into many smaller, much easier to solve problems. The rather small example below illustrates this.\nWe take the equation \u0026ldquo;3 + 6 + 2 + 4\u0026rdquo; and we cut it down into the smallest possible set of equations, which is [3 + 6, 2 + 4]. It could also be [2 + 3, 4 + 6]. The order doesn\u0026rsquo;t matter, as long as we turn this one long equation into many smaller equations.\nLet‚Äôs say we have 8 numbers:\nAnd we want to add them all together. We first divide the problem into 8 equal sub-problems. We do this by breaking the addition up into individual numbers.\nWe then begin to add 2 numbers at a time.\nThen 4 numbers into 8 numbers which is our resultant.\nWhy do we break it down to individual numbers at stage 1? Why don\u0026rsquo;t we just start from stage 2? Because while this list of numbers is even if the list was odd you would need to break it down to individual numbers to better handle it.\nA divide and conquer algorithm tries to break a problem down into as many little chunks as possible since it is easier to solve with little chunks. It typically does this with recursion.\nFormally the technique is, as defined in the famous Introduction to Algorithms by Cormen, Leiserson, Rivest, and Stein is:\n Divide  If the problem is small, then solve it directly. Otherwise, divide the problem into smaller subsets of the same problem.\nConquer  Conquer the smaller problems by solving them recursively. If the subproblems are small enough, recursion is not needed and you can solve them directly.\nRecursion is when a function calls itself. It\u0026rsquo;s a hard concept to understand if you\u0026rsquo;ve never heard of it before. This page provides a good explanation. In short, a recursive function is one like this:\nn = 6\rdef recur_factorial(n):\rif n == 1:\rreturn n\relse:\rreturn n * recur_factorial(n-1)\rprint(recur_factorial(n))\rI\u0026rsquo;ll fully explain the code in a second.\nCombine  Take the solutions to the sub-problems and merge them into a solution to the original problem.\nWith the code from above, some important things to note. The Divide part is also the recursion part. We divide the problem up at return n * recur_factorial(n-1).\nSpecifically, the recur_factorial(n-1) part is where we divide the problem up.\nThe conquer part is the recursion part too, but also the if statement. If the problem is small enough, we solve it directly (by returning n). Else, we perform return n * recur_factorial(n-1).\nCombine. We do this with the multiplication symbol. Eventually, we return the factorial of the number. If we didn\u0026rsquo;t have the symbol there, and it was return recur_factorial(n-1) it wouldn\u0026rsquo;t combine and it wouldn\u0026rsquo;t output anything remotely similar to the factorial. (It\u0026rsquo;ll output 1, for those interested).\nWe\u0026rsquo;re going to explore how divide and conquer works in some famous algorithms, Merge Sort and the solution to the Towers of Hanoi.\n Merge Sort ü§ñ Merge Sort is a sorting algorithm. The algorithm works as follows:\n Divide the sequence of n numbers into 2 halves Recursively sort the two halves Merge the two sorted halves into a single sorted sequence  In this image, we break down the 8 numbers into separate digits. Just like we did earlier. Once we\u0026rsquo;ve done this, we can begin the sorting process.\nIt compares 51 and 13. Since 13 is smaller, it puts it in the left-hand side. It does this for (10, 64), (34, 5), (32, 21).\nIt then merges (13, 51) with (10, 64). It knows that 13 is the smallest in the first list, and 10 is the smallest in the right list. 10 is smaller than 13, therefore we don\u0026rsquo;t need to compare 13 to 64. We\u0026rsquo;re comparing \u0026amp; merging two sorted lists.\nIn recursion we use the term base case to refer to the absolute smallest value we can deal with. With Merge Sort, the base case is 1. That means we split the list up until we get sub-lists of length 1. That\u0026rsquo;s also why we go down all the way to 1 and not 2. If the base case was 2, we would stop at the 2 numbers.\nIf the length of the list (n) is larger then 1, then we divide the list and each sub-list by 2 until we get sub-lists of size 1. If n = 1, the list is already sorted so we do nothing.\nMerge Sort is an example of a divide and conquer algorithm. Let\u0026rsquo;s look at one more algorithm to really understand how divide and conquer works.\n Towers of Hanoi üóº The Towers of Hanoi is a mathematical problem which consists of 3 pegs and in this instance, 3 discs. This problem is mostly used to teach recursion, but it does have some real world uses.\nEach disc is a different size. We want to move all discs to peg C so that the largest is on the bottom, second largest on top of the largest, third largest (smallest) on top of all of them. There are some rules to this game:\n We can only move 1 disc at a time. A disc cannot be placed on top of other discs that are smaller than it.  We want to use the smallest number of moves possible. If we have 1 disc, we only need to move it once. If we have 2 discs, we need to move it 3 times.\nThe number of moves is powers of 2 minus 1. If we have 4 discs, we calculate the minimum number of moves as 2^4 = 16 - 1 = 15.\nTo solve the above example we want to store the smallest disc in a buffer peg (1 move). See below for a gif on solving Tower of Hanoi with 3 pegs and 3 discs.\nNotice how we need to have a buffer to store the discs.\nWe can generalise this problem. If we have n discs: move n-1 from A to B recursively, move largest from A to C, move n-1 from B to C recursively.\nIf there is an even number of pieces the first move is always into the middle. If there are an odd number of pieces the first move is always to the other end.\nLet\u0026rsquo;s begin to code the algorithm for ToH, in pseudocode.\nfunction MoveTower(disk, source, dest, spare):\rif disk == 0, then:\rmove disk from source to dest\rWe start with a base case, disk == 0. source is the peg you\u0026rsquo;re starting at. dest is the final destination peg. spare is the spare peg.\nFUNCTION MoveTower(disk, source, dest, spare):\rIF disk == 0, THEN:\rmove disk from source to dest\rELSE:\rMoveTower(disk - 1, source, spare, dest) // Step 1\rmove disk from source to dest // Step 2\rMoveTower(disk - 1, spare, dest, source) // Step 3\rEND IF\rNotice that with step 1 we switch dest and source. We do not do this for step 3.\nWith recursion, we can be sure of 2 things:\n It always has a base case (if it doesn\u0026rsquo;t, how does the algorithm know to end?) The function calls itself.  The algorithm gets a little confusing with steps 1 and 3. They both call the same function. This is where multi-threading comes in. You can run steps 1 and 3 on different threads - at the same time.\nSince 2 is more than 1, we move it down one more level again. So far you\u0026rsquo;ve seen what the divide and conquer technique is. You should understand how it works and what code looks like. Next, let\u0026rsquo;s learn how to formally define an algorithm to a problem using divide and conquer. This part is the most important in my opinion. Once you know this, it\u0026rsquo;ll be exponentially easier to create divide and conquer algorithms.\n Fibonacci Numbers üê∞ The Fibonacci numbers can be found in nature. The way rabbits produceis in the style of the Fibonacci numbers. You have 2 rabbits that make 3, 3 rabbits make 5, 5 rabbits make 9 and so on.\nThe numbers start at 1 and the next number is the current number + the previous number. Here it‚Äôs 1 + 0 = 1. Then 1 + 1 = 2. 2 + 1 = 3 and so on.\nWe can describe this relation using a recursion. A recurrence is an equation which defines a function in terms of its smaller inputs. Recurrence and recursion sound similar and are similar.\nWith Fibonacci numbers if n = 0 or 1, it results in 1. Else, recursively add f(n-1) + f(n -2) until you reach the base case. Let\u0026rsquo;s start off by creating a non-recursive Fibonacci number calculator.\nWe know that if n = 0 or 1, return 1.\ndef f(n):\rif n == 0 or n == 1:\rreturn 1\rThe Fibonacci numbers are the last two numbers added together.\ndef f(n):\rif n == 0 or n == 1:\rreturn 1\relse:\rfibo = 1\rfibroPrev = 1\rfor i in range (2, n):\rtemp = fibo\rfibo = fibo + fiboPrev\rfiboPrev = temp\rreturn fibo\rNow we\u0026rsquo;ve seen this, let\u0026rsquo;s turn it into recursion using a recurrence.\nWhen creating a recurrence, we always start with the base case. The base case here is if n == 0 or 1, return n.\nIf we don\u0026rsquo;t return n, but instead return 1 this leads to a bug. For example, F(0) would result in 1. When really, it should result in 0.\nNext, we have the formula. If n isn\u0026rsquo;t 0 or 1, what do we do? We calculate F(n - 1) + F(n - 2). In the end, we want to merge all the numbers together to get our final result. We do this using addition.\nThis is the formal definition of the Fibonacci numbers. Normally, recurrences are used to talk about the running time of a divide and conquer algorithm. My algorithms professor and I think it\u0026rsquo;s actually a good tool to create divide and conquer algorithms.\ndef F(n):\rif n == 0 or n == 1:\rreturn n\relse:\rreturn F(n-1)+F(n-2)\rWith knowledge of divide and conquer, the above code is cleaner and easier to read.\nWe often calculate the result of a recurrence using an execution tree. Computer overlords ü§ñ don\u0026rsquo;t need to do this, but it\u0026rsquo;s useful for humans to see how your divide and conquer algorithm works. For F(4) this looks like:\nn is 4, and n is larger than 0 or 1. So we do f(n-1) + f(n-2). We ignore the addition for now. This results in 2 new nodes, 3 and 2. 3 is larger than 0 or 1 so we do the same. Same for 2. We do this until we get a bunch of nodes which are either 0 or 1. We then add all the nodes together. 1 + 1 + 0 + 0 + 1 = 3, which is the right answer.\n Conclusion üìï Once you\u0026rsquo;ve identified how to break a problem down into many smaller pieces, you can use concurrent programming to execute these pieces at the same time (on different threads) thereby speeding up the whole algorithm.\nDivide and conquer algorithms are one of the fastest and perhaps easiest ways to increase the speed of an algorithm and are incredibly useful in everyday programming. Here are the most important topics we covered in this article:\n What is divide and conquer? Recursion MergeSort Towers of Hanoi Coding a divide and conquer algorithm Recurrences Fibonacci numbers  The next step is to explore multithreading. Choose your programming language of choice and Google, as an example, \u0026ldquo;Python multithreading\u0026rdquo;. Figure out how it works and see if you can attack any problems in your own code from this new angle.\nYou can also learn about how to solve recurrences (finding out the asymptotic running time of a recurrence), which is the next article I\u0026rsquo;m going to write. If you don\u0026rsquo;t want to miss it, or you liked this article do consider subscribing to my email list üòÅ‚ú®\nDynamic Programming Dynamic programming (DP) is breaking down an optimisation problem into smaller sub-problems, and storing the solution to each sub-problems so that each sub-problem is only solved once.\nIt is both a mathematical optimisation method and a computer programming method.\nOptimisation problems seek the maximum or minimum solution. Dynamic programming is often used for optimisation problems. The general rule is that if you encounter a problem where the initial algorithm is solved in 2n time, it might be better solved using DP. \n Why Is Dynamic Programming Called Dynamic Programming? Richard Bellman invented DP in the 1950s. Bellman named it Dynamic Programming because at the time, RAND (his employer) disliked mathematical research and didn\u0026rsquo;t want to fund it. He named it Dynamic Programming to hide the fact he was really doing mathematical research.\nBellman explains the reasoning behind the term dynamic programming in his autobiography, Eye of the Hurricane: An Autobiography (1984, page 159). He explains:\n \u0026ldquo;I spent the Fall quarter (of 1950) at RAND. My first task was to find a name for multistage decision processes. An interesting question is, Where did the name, dynamic programming, come from? The 1950s were not good years for mathematical research. We had a very interesting gentleman in Washington named Wilson. He was Secretary of Defense, and he actually had a pathological fear and hatred of the word research. I‚Äôm not using the term lightly; I‚Äôm using it precisely. His face would suffuse, he would turn red, and he would get violent if people used the term research in his presence. You can imagine how he felt, then, about the term mathematical. The RAND Corporation was employed by the Air Force, and the Air Force had Wilson as its boss, essentially. Hence, I felt I had to do something to shield Wilson and the Air Force from the fact that I was really doing mathematics inside the RAND Corporation. What title, what name, could I choose? In the first place I was interested in planning, in decision making, in thinking. But planning, is not a good word for various reasons. I decided therefore to use the word ‚Äúprogramming‚Äù. I wanted to get across the idea that this was dynamic, this was multistage, this was time-varying. I thought, let\u0026rsquo;s kill two birds with one stone. Let\u0026rsquo;s take a word that has an absolutely precise meaning, namely dynamic, in the classical physical sense. It also has a very interesting property as an adjective, and that is it\u0026rsquo;s impossible to use the word dynamic in a pejorative sense. Try thinking of some combination that will possibly give it a pejorative meaning. It\u0026rsquo;s impossible. Thus, I thought dynamic programming was a good name. It was something not even a Congressman could object to. So I used it as an umbrella for my activities.\u0026rdquo;\n  What are Sub-Problems? Sub-problems are smaller versions of the original problem. Let\u0026rsquo;s see an example. With the equation below:\n1 + 2 + 3 + 4\nWe can break this down to:\n1 + 2\n3 + 4\nOnce we solve these two smaller problems, we can add the solutions to these problems to find the solution to the overall problem.\nNotice how this sub-problem breaks down the original problem into components that build up the solution. While this is a small example, it illustrates the beauty of DP well. If we expand the problem to adding 100\u0026rsquo;s of numbers it becomes clearer as to why we need DP. Take this example:\n6 + 5 + 3 + 3 + 2 + 4 + 6 + 5\nWe have 6 + 5 twice. We work out what 6 + 5 is the first time. When we see it the second time we think to ourselves:\n \u0026ldquo;Ah, 6 + 5. I\u0026rsquo;ve seen this before. It\u0026rsquo;s 11!\u0026rdquo;\n In DP we store the solution to the problem in memory so we do not need to recalculate it. By finding the solutions for every single sub-problem, we can tackle the original problem itself.\nThe act of storing a solution is called memoisation.\n What is Memoisation in Dynamic Programming? First, let\u0026rsquo;s see why storing answers to solutions make sense. We\u0026rsquo;re going to look at a famous divide and conquer problem, Fibonacci sequence. Divide and conquer is dynamic programming, but without storing the solution.\nThere are 3 main parts to divide and conquer:\n Divide the problem into smaller sub-problems of the same type. Conquer - solve the sub-problems recursively. Combine - Combine all the sub-problems to create a solution to the original problem.  Dynamic programming has one extra step added to step 2. This is memoisation.\nThe Fibonacci sequence is a sequence of numbers. It\u0026rsquo;s the last number + the current number. We start at 1.\n1 + 0 = 1\n1 + 1 = 2\n2 + 1 = 3\n3 + 2 = 5\n5 + 3 = 8\nIn Python, this is common programmed as:\ndef F(n):\rif n == 0 or n == 1:\rreturn n\relse:\rreturn F(n-1)+F(n-2)\rIf you\u0026rsquo;re not familiar with recursion I have a blog post written for you that you should read first.\nLet\u0026rsquo;s calculate F(4). In an execution tree, this looks like:\nWe calculate F(2) twice. This may be a small example, but on bigger inputs (such as F(10)) the repetition builds up. The purpose of dynamic programming is to not calculate the same thing twice.\nInstead of calculating F(2) twice, we store the solution somewhere and only calculate it once.\nWe\u0026rsquo;ll store the solution in an array. F(2) = 1. Our array will then look like memo[2] = 1. Below is some Python code to calculate the Fibbonacci sequence using DP.\ndef fibonacciVal(n):\rmemo[0], memo[1] = 0, 1\rfor i in range(2, n+1):\rmemo[i] = memo[i-1] + memo[i-2]\rreturn memo[n]\rThe examples set out here are in Python. I‚Äôll do my best to keep the code agnostic. Meaning that if you want to program this in Java, it shouldn‚Äôt be too hard to convert it over.\n How to Identify Dynamic Programming Problems In theory, every problem can be solved dynamically. The question is then:\n \u0026ldquo;When should I solve this problem with dynamic programming?\u0026rdquo;\n We should use dynamic programming for problems that are on the border between tractable problems and intracable problems.\nTractable problems are those that can be solved in polynomial time. That\u0026rsquo;s just a fancy way of saying we can solve it in a fast manner. Binary search and sorting,are all fast. Intractable problems are those that run in exponential time. They\u0026rsquo;re slow. Generally speaking, intractable problems are those that can only be solved by bruteforcing through every single combination (NP hard).\nWhen we see terms such as:\n \u0026ldquo;shortest/longest, minimized/maximized, least/most, fewest/greatest, biggest/smallest\u0026rdquo;\n We know it\u0026rsquo;s an optimisation problem.\nAnother cool thing with DP algorithms is that their proof of correctness is usually self-evident. Other algorithmic strategies are often much harder to prove correct, and therefore more error-prone.\nFor instance, greedy algorithms may seem conceptually simpler, and usually, run faster, but they‚Äôre much harder to prove correct because they require making a lot of implicit assumptions about the structure of the input.\nWhen we see these kinds of terms, the problem may ask for a specific number ( \u0026ldquo;find the minimum number of edit operations\u0026rdquo;) or it may ask for a result ( \u0026ldquo;find the longest common subsequence\u0026rdquo;). The latter type of problem is harder to recognize as a dynamic programming problem. If something sounds like optimisation, it could be solved by DP.\nNow, imagine we\u0026rsquo;ve found a problem that\u0026rsquo;s an optimisation problem, but we\u0026rsquo;re not sure if it can be solved with DP. First, identify what we\u0026rsquo;re optimising for. Once we realize what we\u0026rsquo;re optimising for, we have to decide how easy it is to perform that optimisation. Sometimes, the greedy approach is sufficient for an optimal solution.\nDynamic programming takes the brute force approach. It Identifies repeated work, and eliminates the repetition.\nBefore we even start to formulate the problem as a dynamic programming problem, we think about what the brute force solution might look like. Could there possibly be repeated substeps in the brute force solution? If so, we try to formulate the problem as a dynamic programming problem.\nMastering dynamic programming is all about understanding the problem. List all the inputs that can affect the answers. Once we\u0026rsquo;ve identified all the inputs and outputs, try to identify whether the problem can be broken into subproblems. If we can identify subproblems, we can probably use DP.\nList all inputs that affect the answer, and worry about reducing the size of that set later. Once we have identified the inputs and outputs, we try to identify whether the problem can be broken into smaller subproblems. If we can identify smaller subproblems, then we can probably apply dynamic programming to solve the problem. Then, figure out what the recurrence is and solve it. When we\u0026rsquo;re trying to figure out the recurrence, remember that whatever recurrence we write has to help us find the answer. Sometimes the answer will be the result of the recurrence, and sometimes we will have to obtain the result by looking at a few results from the recurrence\nJust because a problem can be solved with dynamic programming does not mean there isn\u0026rsquo;t a more efficient solution out there. Solving a problem with dynamic programming feels like magic, but remember that dynamic programming is merely a clever brute force. Sometimes it pays off well, and sometimes it helps only a little.  How to Solve Problems using Dynamic Programming Now we have an understanding of what dynamic programming is and how it generally works, let\u0026rsquo;s look at how we\u0026rsquo;ll create a dynamic programming solution to a problem. We\u0026rsquo;re going to explore the process of dynamic programming using the Weighted Interval Scheduling Problem.\nPretend you\u0026rsquo;re the owner of a dry cleaner. You have n customers come in and give you clothes to clean. You can only clean one customers pile of clothes (PoC) at a time. Each pile of clothes, i, must be cleaned at some pre-determined start time s_i and some predetermined finish time f_i.\nEach pile of clothes has an assiocated value, v_i, based on how important it is to your business. For example, some customers may pay more to have their clothes cleaned faster. Or some may be repeating customers and you want them to be happy.\nAs the owner of this dry cleaners you must determine the optimal schedule of clothes that maximises the total value of this day. This problem is a re-wording of the Weighted Interval scheduling problem.\nYou will now see 4 steps to solving a DP problem. Sometimes, you can skip a step. Sometimes, your problem is already well defined and you don\u0026rsquo;t need to worry about the first few steps.\nStep 1. Write the Problem out Grab a piece of paper. Write out the problem. Specifically:\n What is the problem? What are the subproblems? What would the solution roughly look like?  In the dry cleaner problem, let\u0026rsquo;s put down into words the subproblems. What we want to determine is the maximum value schedule for each pile of clothes such that the clothes are sorted by start time.\nWhy sorted by start time? Good question! We want to keep track of processes which are currently running. If we sort by finish time, it doesn\u0026rsquo;t make much sense in our heads. We could have 2 with similar finish times, but entirely different start times. Time moves in a linear fashion. If we have piles of clothes that start at 1 pm, we know that. If we have a pile of clothes that finishes at 3 pm, it\u0026rsquo;s kind of seeing it backwards. Doesn\u0026rsquo;t make so much sense.\nWe can find the maximum value schedule for piles n-1 through to n. And then for n - 2 through to n. And so on. By finding the solution to every single sub-problem, we can tackle the original problem itself. The maximum value schedule for piles 1 through n. Since the sub-problems are smaller versions of the original problem, sub-problems can be used to solve the original problem.\nWith the interval scheduling problem, the only way we can solve it is by brute-forcing all subsets of the problem until we find an optimal one. What we\u0026rsquo;re saying is that instead of brute-forcing one by one, we divide it up. We brute force from n-1 through to n. Then we do the same for n-2 through to n. Eventually, we have loads of smaller problems, which we can solve dynamically. We want to build the solutions to our sub-problems such that each sub-problem builds on the previous problems.\n2. Mathematical Recurrences I know, mathematics sucks. If you\u0026rsquo;ll bare with me here you\u0026rsquo;ll find that this isn\u0026rsquo;t that hard. Mathematical recurrences are used to:\n Define the running time of a divide and conquer (dynamic programming) technique\n But, between you and me, they can also be used to define a problem. If it\u0026rsquo;s difficult to turn your subproblems into maths, then it may be the wrong subproblem.\nThere are 2 steps to creating a mathematicla recurrence:\n1: Define the Base Case Base cases are the smallest possible denomination of a problem.\nWhen creating a recurrence, ask yourself these questions:\n \u0026ldquo;What decision do I make at step 0?\u0026rdquo;\n It doesn\u0026rsquo;t have to be 0. The base case is the smallest possible denomination of a problem. We saw this with the Fibonacci sequence. The base was was:\n If n == 0 or n == 1, return 1  It\u0026rsquo;s important to know where the base case lies, so we can create the recurrence. In our problem, we have one decision to make:\n Put that pile of clothes on to be washed  or\n Don‚Äôt wash that pile of clothes today  If n is 0, that is, if we have 0 PoC then we do nothing. Our base case is then:\n if n == 0, return 0\n 2: What Decision Do I Make at Step n? Now we know what the base case is, if we\u0026rsquo;re at step n what do we do? For each pile of clothes that is compatible with the schedule so far (compatible means that the start time is after the finish time of the pile of clothes currently being washed), the algorithm chooses two options.\nNow we know what happens at the base case, and what happens else. We now need to find out what information the algorithm needs to go backwards (or forwards).\n \u0026ldquo;If my algorithm is at step i, what information would it need to decide what to do in step i+1?\u0026rdquo;\n To decide between the two options, the algorithm needs to know the next compatible PoC (pile of clothes). The next compatible PoC for a given pile, p, is the PoC, n, such that s_n (the start time for PoC n) happens after f_p (the finish time for PoC p). The difference between s_n and f_p should be minimised.\nIn English, imagine we have one washing machine. We put in a pile of clothes at 13:00. Our next pile of clothes starts at 13:01. We can\u0026rsquo;t just open the washing machine and put them in. Our next compatible pile of clothes is the one that starts after the finish time of the one currently being washed.\n \u0026ldquo;If my algorithm is at step i, what information did it need to decide what to do in step i-1?\u0026rdquo;\n The algorithm needs to know about future decisions. The ones made for PoC i through n in order to decide to run or not to run PoC i-1.\nNow that we‚Äôve answered these questions, perhaps we‚Äôve started to form a recurring mathematical decision in our mind. If not, that‚Äôs also okay, it becomes easier to write recurrences as we get exposed to more problems.\nHere‚Äôs our recurrence:\nLet\u0026rsquo;s explore in detail what makes this mathematical recurrence. OPT(i) represents the maximum value schedule for PoC i through to n such that PoC are sorted by start times. OPT(i) is our subproblem from earlier.\nWe start with the base case. All recurrences need somewhere to stop. If we call OPT(0) we\u0026rsquo;ll be returned with 0.\nTo determine the value of OPT(i), we consider two options. We want to take the maximum of these options to meet our goal. Our goal is the maximum value schedule for all piles of clothes. Once we choose the option that gives the maximum result at step i, we memoize its value as OPT(i).\nThe two options‚Ää‚Äî‚Ääto run or not to run PoC i‚Ää‚Äî‚Ääare represented mathematically as follows:\nv_i + OPT(next[n])\nThis represents the decision to run PoC i. It adds the value gained from PoC i to OPT(next[n]), where next[n] represents the next compatible pile of clothing following PoC i. When we add these two values together, we get the maximum value schedule from i through to n such that they are sorted by start time if i is ran.\nSorted by start time here because next[n] is the one immediately after v_i, so by default, they are sorted by start time.\nOPT(i + 1)\nIf we decide not to run i, our value is then OPT(i + 1). The value is not gained. OPT(i + 1) gives the maximum value schedule for i+1 through to n, such that they are sorted by start times.\n3. Determine the Dimensions of the Memoization Array and the Direction in Which It Should Be Filled The solution to our DP problem is OPT(1). We can write out the solution as the maximum value schedule for PoC 1 through n such that PoC are sorted by start time. This goes hand in hand with \u0026ldquo;maximum value schedule for PoC i through to n\u0026rdquo;. Our solution can be written as OPT(1).\nFrom step 2:\nGoing back to our Fibonacci numbers earlier, our DP solution relied on the fact that the Fibonacci numbers for 0 through to n - 1 were already memoised. That is, to find F(5) we already memoised F(0), F(1), F(2), F(3), F(4). We want to do the same thing here.\nThe problem we have is figuring out how to fill out a memoisation table. In the scheduling problem, we know that OPT(1) relies on the solutions to OPT(2) and OPT(next[1]). PoC 2 and next[1] have start times after PoC 1 due to sorting. We need to fill our memoisation table from OPT(n) to OPT(1).\nWe can clearly see our array is one dimensional, from 1 to n. But, if we couldn\u0026rsquo;t clearly see that we can work it out another way. The dimensions of the array are equal to the number and size of the variables on which OPT(x) relies. In our algorithm, we have OPT(i) - one variable, i. This means our array will be 1-dimensional and its size will be n, as there are n piles of clothes.\nIf we know that n = 5, then our memoization array might look like this:\nmemo = [0, OPT(1), OPT(2), OPT(3), OPT(4), OPT(5)]\n0 is also the base case. memo[0] = 0, per our recurrence from earlier.\n4. Coding Our Solution Personally, when I am coding a Dynamic Programming solution, I like to read the recurrence and try to recreate it. Our first step is to initialise the array to size (n + 1). In Python, we don\u0026rsquo;t need to do this. But you may need to do it if you\u0026rsquo;re using a different language.\nOur second step is to set the base case.\nTo find the profit with the inclusion of job[i]. we need to find the latest job that doesn‚Äôt conflict with job[i]. The idea is to use Binary Search to find the latest non-conflicting job. I\u0026rsquo;ve copied the code from herebut edited slightly.\nFirst, let\u0026rsquo;s define what a \u0026ldquo;job\u0026rdquo; is. As we saw, a job consists of 3 things:\n# Class to represent a job  class Job: def __init__ (self, start, finish, profit): self.start = start self.finish = finish self.profit = profit Start time, finish time, and the total profit (benefit) of running that job.\nThe next step we want to program is the schedule.\n# The main function that returns the maximum possible  # profit from given array of jobs\r def schedule(job): # Sort jobs according to start time  job = sorted(job, key = lambda j: j.start) # Create an array to store solutions of subproblems. table[i]  # stores the profit for jobs till arr[i] (including arr[i])  n = len(job) table = [0 for _ in range(n)] table[0] = job[0].profit;\rEarlier, we learnt that the table is 1 dimensional. We sort the jobs by start time, create this empty table and set table[0] to be the profit of job[0]. Since we\u0026rsquo;ve sorted by start times, the first compatiable job is always job[0].\nOur next step is to fill in the entries using the recurrence we learnt earlier. To find the next compatiable job, we\u0026rsquo;re using Binary Search. In the full code posted later, it\u0026rsquo;ll include this. For now, let\u0026rsquo;s worry about understanding the algorithm.\nIf the next compatiable job returns -1, that means that all jobs before index, i, conflict with it (so cannot be used). Inclprof means we\u0026rsquo;re including that item in the maximum value set. We then store it in table[i], so we can use this calculation again later.\n# Fill entries in table[] using recursive property  for i in range(1, n): # Find profit including the current job  inclProf = job[i].profit l = binarySearch(job, i) if (l != -1): inclProf += table[l]; # Store maximum of including and excluding  table[i] = max(inclProf, table[i - 1]) Our final step is then to return the profit of all items up to n-1.\nreturn table[n-1] The full code can be seen below:\n# Python program for weighted job scheduling using Dynamic  # Programming and Binary Search  # Class to represent a job  class Job: def __init__ (self, start, finish, profit): self.start = start self.finish = finish self.profit = profit # A Binary Search based function to find the latest job  # (before current job) that doesn\u0026#39;t conflict with current  # job. \u0026#34;index\u0026#34; is index of the current job. This function  # returns -1 if all jobs before index conflict with it.  def binarySearch(job, start_index): # https://en.wikipedia.org/wiki/Binary_search_algorithm\r # Initialize \u0026#39;lo\u0026#39; and \u0026#39;hi\u0026#39; for Binary Search  lo = 0\rhi = start_index - 1\r# Perform binary Search iteratively  while lo \u0026lt;= hi: mid = (lo + hi) // 2\rif job[mid].finish \u0026lt;= job[start_index].start: if job[mid + 1].finish \u0026lt;= job[start_index].start: lo = mid + 1\relse: return mid else: hi = mid - 1\rreturn -1\r# The main function that returns the maximum possible  # profit from given array of jobs  def schedule(job): # Sort jobs according to start time  job = sorted(job, key = lambda j: j.start) # Create an array to store solutions of subproblems. table[i]  # stores the profit for jobs till arr[i] (including arr[i])  n = len(job) table = [0 for _ in range(n)] table[0] = job[0].profit; # Fill entries in table[] using recursive property  for i in range(1, n): # Find profit including the current job  inclProf = job[i].profit l = binarySearch(job, i) if (l != -1): inclProf += table[l]; # Store maximum of including and excluding  table[i] = max(inclProf, table[i - 1]) return table[n-1] # Driver code to test above function  job = [Job(1, 2, 50), Job(3, 5, 20), Job(6, 19, 100), Job(2, 100, 200)] print(\u0026#34;Optimal profit is\u0026#34;), print(schedule(job))\rCongrats! ü•≥ We\u0026rsquo;ve just written our first dynamic program! Now that we‚Äôve wet our feet, lets walk through a different type of dynamic programming problem.\n Knapsack Problem Imagine you are a criminal. Dastardly smart. You break into Bill Gate‚Äôs mansion. Wow, okay!?!? How many rooms is this? His washing machine room is larger than my entire house??? Ok, time to stop getting distracted. You brought a small bag with you. A knapsack - if you will.\nYou can only fit so much into it. Let‚Äôs give this an arbitrary number. The bag will support weight 15, but no more. What we want to do is maximise how much money we\u0026rsquo;ll make, b.\nThe greedy approach is to pick the item with the highest value which can fit into the bag. Let\u0026rsquo;s try that. We\u0026rsquo;re going to steal Bill Gate\u0026rsquo;s TV. ¬£4000? Nice. But his TV weighs 15. So\u0026hellip; We leave with ¬£4000.\nBill Gate\u0026rsquo;s has a lot of watches. Let\u0026rsquo;s say he has 2 watches. Each watch weighs 5 and each one is worth ¬£2250. When we steal both, we get ¬£4500 with a weight of 10.\nIn the greedy approach, we wouldn\u0026rsquo;t choose these watches first. But to us as humans, it makes sense to go for smaller items which have higher values. The Greedy approach cannot optimally solve the {0,1} Knapsack problem. The {0, 1} means we either take the item whole {1} or we don\u0026rsquo;t {0}. Dynamic programming can however optimally solve the {0, 1} knapsack problem.\nThe simple solution to this problem is to consider all the subsets of all items. For every single combination of Bill Gate\u0026rsquo;s stuff, we calculate the total weight and value of this combination.\nWe consider only those with weight less than W_max. We then pick the combination which has the highest value. This is a disaster! How long would this take? Bill Gate\u0026rsquo;s would come back home far before you\u0026rsquo;re even 1/3rd of the way there! In Big O, this algorithm takes O(n^2) time.\nYou can see we already have a rough idea of the solution and what the problem is, without having to write it down in maths!\n Maths Imagine we had a listing of every single thing in Bill Gate\u0026rsquo;s house. Maybe we stole it from some insurance papers. Now, think about the future. What is the optimal solution to this problem?\nWe have a subset, L, which is the optimal solution. L is a subset of S, the set containing all of Bill Gate\u0026rsquo;s stuff.\nLet\u0026rsquo;s pick a random item, N. L either contains N or it doesn\u0026rsquo;t. If it doesn\u0026rsquo;t use N, the optimal solution for the problem is the same as {1, 2, \u0026hellip;, N-1}. This is assuming that Bill Gate\u0026rsquo;s stuff is sorted by value / weight.\nSuppose that the optimum of the original problem is not optimum of the sub-problem. if we have sub-optimum of the smaller problem then we have a contradiction - we should have an optimum of the whole problem.\nIf L contains N, then the optimal solution for the problem is the same as {1, 2, 3, \u0026hellip;, N-1}. We know the item is in, so L already contains N. To complete the computation we focus on the remaining items. We find the optimal solution to the remaining items.\nBut, we now have a new maximum allowed weight of W_max - W_n. If item N is contained in the solution, the total weight is now the max weight take away item N (which is already in the knapsack).\nThese are the 2 cases. Either item N is in the optimal solution or it isn\u0026rsquo;t.\nIf the weight of item N is greater than W_max, then it cannot be included so case 1 is the only possibility.\nTo more precisely define this recursive solution, let S_k = {1, 2, \u0026hellip;, k} and S_0 = ‚àÖ\nLet B[k, w] be the maximum total benefit obtained using a subset of S_k. Having total weight at most w.\nThen we define B[0, w] = 0 for each w \\le W_max, and:\nOur desired solution is then B[n, W_max].\nTabulation of Knapsack Problem Okay, pull out some pen and paper. No, really. Things are about to get confusing real fast. This memoisation table is 2-dimensional. We have these items:\n(1, 1), (3, 4), (4, 5), (5, 7)\rWhere the tuples are (weight, value).\nWe have 2 variables, so our array is 2-dimensional. The first dimension is from 0 to 7. Our second dimension is the values.\nAnd we want a weight of 7 with maximum benefit.\nThe weight is 7. We start counting at 0 (not a DP thing, just a programming thing). We put each tuple on the left-hand side. Ok. Now to fill out the table!\nThe columns are weight. At weight 0, we have a total weight of 0. At weight 1, we have a total weight of 1. Obvious, I know. But this is an important distinction to make which will be useful later on.\nWhen our weight is 0, we can\u0026rsquo;t carry anything no matter what. The total weight of everything at 0 is 0.\nIf our total weight is 1, the best item we can take is (1, 1). As we go down through this array, we can take more items. At the row for (4, 3) we can either take (1, 1) or (4, 3). But for now, we can only take (1, 1). Our maximum benefit for this row then is 1.\nIf our total weight is 2, the best we can do is 1. We only have 1 of each item. We cannot duplicate items. So no matter where we are in row 1, the absolute best we can do is (1, 1).\nLet\u0026rsquo;s start using (4, 3) now. If the total weight is 1, but the weight of (4, 3) is 3 we cannot take the item yet until we have a weight of at least 3.\nNow we have a weight of 3. Let\u0026rsquo;s compare some things. We want to take the max of:\nMAX(4 + T[0][0], 1)\nIf we\u0026rsquo;re at 2, 3 we can either take the value from the last row or use the item on that row. We go up one row and count back 3 (since the weight of this item is 3).\nActually, the formula is whatever weight is remaining when we minus the weight of the item on that row. The weight of (4, 3) is 3 and we\u0026rsquo;re at weight 3. 3 - 3 = 0. Therefore, we\u0026rsquo;re at T[0][0]. T[previous row\u0026rsquo;s number][current total weight - item weight].\nMAX(4 + T[0][0], 1)\nThe 1 is because of the previous item. The max here is 4.\nmax(4 + t[0][1], 1)\nTotal weight is 4, item weight is 3. 4 - 3 = 1. Previous row is 0. t[0][1].\nI won\u0026rsquo;t bore you with the rest of this row, as nothing exciting happens. We have 2 items. And we\u0026rsquo;ve used both of them to make 5. Since there are no new items, the maximum value is 5.\nOnto our next row:\nHere\u0026rsquo;s a little secret. Our tuples are ordered by weight! That means that we can fill in the previous rows of data up to the next weight point. We know that 4 is already the maximum, so we can just fill it in. This is where memoisation comes into play! We already have the data, why bother re-calculating it?\nWe go up one row and head 4 steps back. That gives us:\nmax(4 + T[2][0], 5).\nNow we calculate it for total weight 5.\nmax(5 + T[2][1], 5) = 6\nWe just do the same thing again:\nmax(5 + T[2][2], 5) = 6\nNow we have total weight 7. We choose the max of:\nmax(5 + T[2][3], 5) = max(5 + 4, 5) = 9\nIf we had total weight 7 and we had the 3 items (1, 1), (4, 3), (5, 4) the best we can do is 9.\nSince our new item starts at weight 5, we can just copy from the previous row until we get to weight 5.\nWe then do another max.\nTotal weight - new item\u0026rsquo;s weight. This is 5 - 5 = 0. We want previous row at position 0.\nmax(7 + T[3][0], 6)\nThe 6 comes from the best on the previous row for that total weight.\nmax(7 + 0, 6) = 7\nmax(7 + T[3][1], 6) = 8\nmax(7+T[3][2], 9) = 9\n9 is the maximum value we can get by picking items from the set of items such that the total weight is \\le 7.\nFinding the Optimal Set for {0, 1} Knapsack Problem Using Dynamic Programming Now, what items do we actually pick for the optimal set? We start from this item:\nWe want to know where the 9 comes from. It\u0026rsquo;s coming from the top because the number directly above 9 on the 4th row is 9. Since it\u0026rsquo;s coming from the top, the item (7, 5) is not used in the optimal set.\nWhere does this 9 come from?\nThis 9 is not coming from the row above it. Item (5, 4) must be in the optimal set.\nWe now go up one row, and go back 4 steps. 4 steps because the item, (5, 4), has weight 4.\n4 does not come from the row above. The item (4, 3) must be in the optimal set.\nThe weight of item (4, 3) is 3. We go up and we go back 3 steps and reach:\nAs soon as we reach a point where the weight is 0, we\u0026rsquo;re done. Our two selected items are (5, 4) and (4, 3). The total weight is 7 and our total benefit is 9. We just add the two tuples together to find this out.\nLet\u0026rsquo;s begin coding this.\n Coding It Now we kn0w how it works, and we\u0026rsquo;ve derived the recurrence for it - it shouldn\u0026rsquo;t be too hard to code it. If our two-dimensional array is i (row) and j (column) then we have:\nif j \u0026lt; wt[i]:\rIf our weight j is less than the weight of item i (i does not contribute to j) then:\nif j \u0026lt; wt[i]:\rT[i][j] = T[i - 1][j]\relse:\r// weight of i \u0026gt;= j\rT[i][j] = max(val[i] + t[i - 1][j-wt(i), t[i-1][j])\r// previous row, subtracting the weight of the item from the total weight or without including ths item\rThis is what the core heart of the program does. I\u0026rsquo;ve copied some code from hereto help explain this. I\u0026rsquo;m not going to explain this code much, as there isn\u0026rsquo;t much more to it than what I\u0026rsquo;ve already explained. If you\u0026rsquo;re confused by it, leave a comment (can be left anonymously) below or email me üòÅ\n# Returns the maximum value that can be put in a knapsack of  # capacity W  def knapSack(W , wt , val , n): # Base Case  if n == 0 or W == 0: return 0\r# If weight of the nth item is more than Knapsack of capacity  # W, then this item cannot be included in the optimal solution  if (wt[n-1] \u0026gt; W): return knapSack(W , wt , val , n-1) # return the maximum of two cases:  # (1) nth item included  # (2) not included  else: return max(val[n-1] + knapSack(W-wt[n-1] , wt , val , n-1), knapSack(W , wt , val , n-1)) # To test above function  val = [60, 100, 120] wt = [10, 20, 30] W = 50\rn = len(val) print(knapSack(W , wt , val , n))\r# output 220\r  Time Complexity of a Dynamic Programming Problem In DP, time complexity is calculated as:\nNumber of unique states * time taken per state\nFor our original problem, the Weighted Interval Scheduling Problem, we had n piles of clothes. Each pile of clothes is solved in constant time. The time complexity is:\nO(n) + O(1) = O(n)\nI\u0026rsquo;ve written a post about Big O notationif you want to learn more about time complexities.\nWith our Knapsack problem, we had n number of items. The table grows depending on the total capacity of the knapsack, our time complexity is:\nO(nw)\nWhere n is the number of items, and w is the capactity of the knapsack.\nI\u0026rsquo;m going to let you in on a little secret. It\u0026rsquo;s possible to work out the time complexity of an algorithm from its recurrence. You can use something called the Master Theorem to work it out. This is the theorem in a nutshell:\nTaken from here\nNow, I\u0026rsquo;ll be honest. The master therom deserves a blog post of its own. For now, I\u0026rsquo;ve found this video to be excellent:\n{% youtube OynWkEj0S-s %}\n Dynamic Programming vs Divide \u0026amp; Conquer vs Greedy Dynamic Programming \u0026amp; Divide and Conquer are incredibly similar. Dynamic Programming is based on Divide and Conquer, except we memoise the results.\nGreedy, on the other hand, is different. It aims to optimise by making the best choice at that moment. Sometimes, this doesn\u0026rsquo;t optimse for the whole problem. Take this question as an example. We have 3 coins:\n1p, 15p, 25p\nAnd someones wants us to give change of 30p. With Greedy, it would select 25, then 5 * 1 for a total of 6 coins. The optimal solution is 2 * 15. Greedy works from largest to smallest. At the point where it was at 25, the best choice would be to pick 25.\n Tabulation (Bottom-Up) vs Memoisation (Top-Down) There are 2 types of dynamic programming. Tabulation and Memoisation.\nMemoisation (Top-Down) We\u0026rsquo;ve computed all the subproblems but have no idea what the optimal evaluation order is. We would then perform a recursive call from the root, and hope we get close to the optimal solution or obtain a proof that we will arrive at the optimal solution. Memoisation ensures you never recompute a subproblem because we cache the results, thus duplicate sub-trees are not recomputed.\nFrom our Fibonacci sequence earlier, we start at the root node. The subtree F(2) isn\u0026rsquo;t calculated twice.\nThis starts at the top of the tree and evaluates the subproblems from the leaves/subtrees back up towards the root. Memoisation is a top-down approach.\nTabulation (Bottom-Up) We\u0026rsquo;ve also seen Dynamic Programming being used as a \u0026lsquo;table-filling\u0026rsquo; algorithm. Usually, this table is multidimensional. This is like memoisation, but with one major difference. We have to pick the exact order in which we will do our computations. The knapsack problem we saw, we filled in the table from left to right - top to bottom. We knew the exact order of which to fill the table.\nSometimes the \u0026lsquo;table\u0026rsquo; is not like the tables we\u0026rsquo;ve seen. It can be a more complicated structure such as trees. Or specific to the problem domain, such as cities within flying distance on a map.\nTabulation \u0026amp; Memosation - Advantages and Disadvantages Generally speaking, memoisation is easier to code than tabulation. Wecan write a \u0026lsquo;memoriser\u0026rsquo; wrapper function that automatically does it for we. With tabulation, we have to come up with an ordering.\nMemoisation has memory concerns. If we\u0026rsquo;re computing something large such as F(10^8), each computation will be delayed as we have to place them into the array. And the array will grow in size very quickly.\nEither approach may not be time-optimal if the order we happen (or try to) visit subproblems is not optimal, specifically if there is more than one way to calculate a subproblem (normally caching would resolve this, but it\u0026rsquo;s theoretically possible that caching might not in some exotic cases). Memoization will usually add on our time-complexity to our space-complexity (e.g. with tabulation we have more liberty to throw away calculations, like using tabulation with Fib lets us use O(1) space, but memoization with Fib uses O(N) stack space).\nConclusion Most of the problems you\u0026rsquo;ll encounter within Dynamic Programmg already exist in one shape or another. Often, your problem will build on from the answers for previous problems. Here\u0026rsquo;s a list of common problems that use Dynamic Programming.\nI hope that whenever you encounter a problem, you think to yourself \u0026ldquo;can this problem be solved with DP?\u0026rdquo; and try it.\n","permalink":"https://polymath.cloud/algorithms/","summary":"Greedy Algorithms Greedy algorithms aim to make the optimal choice at that given moment. Each step it chooses the optimal choice, without knowing the future. It attempts to find the globally optimal way to solve the entire problem using this method.\nWhy Are Greedy Algorithms Called Greedy? Algorithms are called greedy when they utilise the greedy property. The greedy property is:\n At that exact moment in time, what is the optimal choice to make?","title":"Algorithmic Design Paradigms"},{"content":" How to Win Friends and Influence People  If you talk to other humans, if you interact with humans, you must read this book. No exceptions. All my life, people told me that making friends and influencing people is an artform - something you can\u0026rsquo;t learn. This book showed me the hidden rules required to win friends.\nSince reading this book, every aspect of my friendships / relationships have gone up tenfold. As a result, everything else in my life has greatly improved. If you go to a foreign country and you\u0026rsquo;re only allowed to bring 1 thing with you, make it this book. That is how good this work is.\nThis book has sold over 16 million copies - with good reason. It is one of the best books out there, ever, period. I\u0026rsquo;ve read this book 13 times. That\u0026rsquo;s how ridiculously good this book is.\nThe Richest Man in Babylon  This book is about a gold lender from the age of Babylon. Published in the early 1900s but based on a story from Babylon, it truly is an old book. This gold lender started off with nothing. Less than nothing, they were a slave. This gold lender learnt the secrets to becoming rich and he became The Richest Man in Babylon.\nThe king was so impressed with his rules he paid scribes to inscribe the rules of money into stone tablets and sent them far and wide. He wanted everyone to know these rules and to prosper, just like Babylon did.\nIf you want to be rich, this is the book to read. Not only will it teach you personal finance lessons that have worked for thousands of years but it\u0026rsquo;ll teach it to you in stories - interesting stories of The Richest Man in Babylon.\nI Will Teach You To Be Rich  A modern day version of the Richest Man in Babylon. If you want to be rich, read this book. This book covers all the same principles as The Richest Man in Babylon, but with modern day takes on credit cards, travel hacking, investing and more.\nPersonal finance isn\u0026rsquo;t about personal finance. It\u0026rsquo;s about so much more. Having good personal finance makes you happy. It makes others in your life happy. It gives you discipline. And discipline gives you freedom.\nIf you\u0026rsquo;re overweight, you don\u0026rsquo;t have discipline. Can you afford to eat that McDonalds? No. If you\u0026rsquo;re fit, you can. This disciplinegives you more freedom. By learning about personal finance, you\u0026rsquo;re creating more freedom for yourself.\nI prefer The Richest Man in Babylon, so if you can - read both.\nThe Alchemist  The Alchemist is a fictional fable with more life lessons in it than the average nonfiction book. It\u0026rsquo;s been said that non-fiction cannot distill lessons as easily as fiction. You cannot learn something you can only experience, you can only experience it. By reading fiction and seeing others experience it - it brings you a step closer to learning those fundamental life lessons.\nThis book is a story about following your dreams.\nHow to Become a Straight-A Student  I failed my GCSEs 8 times. I dropped out of sixth form. Yet, in university, I have straight A\u0026rsquo;s. Getting marks of 95% on final exams. How did I do it? I read this book twice a semester. Once at the start, once at the end. This book is what helped me get those good grades. Highly recommend.\nThe Code Book  The single most influential book in my life. I read this book when I was a child, it got me into encryption and codes. Because of this, I started to program when I was 10. Because of that, I went on to study computer science at university. Because of that, this blog exists.\nShoe Dog  One of the best biographies I\u0026rsquo;ve read. This is a memoir by the creator of Nike. From his insane business partner to his insane team, this has it all. His story is good. He doesn\u0026rsquo;t hide the fact he comes from a well-off family, but at the same time it\u0026rsquo;s clear as to why he\u0026rsquo;s just like us.\nOne of the richest men in the world, but yet hardly anyone knows of his story. This is a tour de force through the business world, through startups, through discovering yourself and learning to love.\nMeditations  Marcus Aurelius ruled the Roman empire. He was also a philosopher who thought about life a lot. His books will teach you to deal with pain, to deal with loss, to deal with life. Some of my favourite quotes are:\n\u0026ldquo;Many lumps of incense on the same altar. One crumbles now, one later, but it makes no difference.\u0026rdquo; \u0026ldquo;You have power over your mind - not outside events. Realize this, and you will find strength.\u0026rdquo; \u0026ldquo;At dawn, when you have trouble getting out of bed, tell yourself: ‚ÄúI have to go to work ‚Äî as a human being. What do I have to complain of, if I‚Äôm going to do what I was born for ‚Äî the things I was brought into the world to do? Or is this what I was created for? To huddle under the blankets and stay warm?‚Äù\nSo you were born to feel ‚Äúnice‚Äù? Instead of doing things and experiencing them? Don‚Äôt you see the plants, the birds, the ants and spiders and bees going about their individual tasks, putting the world in order, as best they can? And you‚Äôre not willing to do your job as a human being? Why aren‚Äôt you running to do what your nature demands?\nYou don‚Äôt love yourself enough. Or you‚Äôd love your nature too, and what it demands of you.\u0026rdquo; His original books can be found online for free. But be warned, they\u0026rsquo;re not in an English tongue you can decipher unless you\u0026rsquo;ve studied it. I\u0026rsquo;ve linked the modern day translation above. It\u0026rsquo;s more expensive, but it\u0026rsquo;s more understandable in my opinion.\nHow Not To Die  An ode to veganism or a desperate plea to increase the longevity of human lives? Either way, it\u0026rsquo;s a great book. This book backs up the facts. Eating more plants makes you live longer. Not only that, it goes through all the plants which make you live longer.\nIt references the China Study, a study on everyone in China - all 1.2 billion people and found that meat causes cancer in the same way that smoking causes cancer.\nAlthough this book doesn\u0026rsquo;t beg you to turn vegan. It just encourages you to eat more plants. An overall great book and essential reading if you want to not die anytime near in the future.\nTuring\u0026rsquo;s Vision  In 1939 Alan Turing invented Computer Science. This book explains his phenominal world changing paper and gives background on it. If you study computer science, this is a must. It shows you the birth of computer science, the history of computer science and more.\nAlan Turing is a mastermind. Inventing the computer. Inventing the Turing machine. Inventing artifical intelligence. Not many people know of his existance. This is a good book on that famous first paper.\nHis Dark Matierals  On the rare occasion that I read fiction, I tend to stop halfway through because of how boring it is. This book is the exception. This book discusses all sorts. Love, quantum phyics, friendships, being nice to others and above all else - magic.\nI really enjoyed this series and would highly reccomend it.\nAtomic Habits  Losers and winners have the same goals. You don\u0026rsquo;t rise to your goals. You fall to your systems. Habits are what makes us. This book isn\u0026rsquo;t just about making or breaking habits - it\u0026rsquo;s about habits. What is a habit? How do they form?\nHabits are such a vital part of life. It\u0026rsquo;d be stupid to not learn about them. Atomic - small. Habit - something you routinely do. By creating small habits, getting 1% better every day you\u0026rsquo;ll improve every aspect of your life.\n$$0.99^{365} = 0.03$$ $$1.01^{365} = 37.7$$\n1% better every day. That\u0026rsquo;s all you need.\nOn Writing Well  The author of this book is an expert on writing - well. if you write things, this book is essential for you. A lot of the content of this book is common knowledge. But, common knowledge stated clearly is knowledge all the same.\n","permalink":"https://polymath.cloud/books/","summary":"How to Win Friends and Influence People  If you talk to other humans, if you interact with humans, you must read this book. No exceptions. All my life, people told me that making friends and influencing people is an artform - something you can\u0026rsquo;t learn. This book showed me the hidden rules required to win friends.\nSince reading this book, every aspect of my friendships / relationships have gone up tenfold.","title":"Favourite Books"},{"content":"By the end of this article, you\u0026rsquo;ll thoroughly understand Big O notation. You\u0026rsquo;ll also know how to use it in the real world, and even the mathematics behind it!\nIn computer science, time complexity is the computational complexity that describes the amount of time it takes to run an algorithm.\nBig O notation is a method for determining how fast an algorithm is. Using Big O notation, we can learn whether our algorithm is fast or slow. This knowledge lets us design better algorithms.\nThis article is written using agnostic Python. That means it will be easy to port the Big O notation code over to Java, or any other language. If the code isn\u0026rsquo;t agnostic, there\u0026rsquo;s Java code accompanying it.\n ‚ùì How Do We Measure How Long an Algorithm Takes to Run?  No matter how many elements, it will always take x operations to perform. In this case, 2.  We could run an algorithm 10,000 times and measure the average time taken.\n‚ûú python3 -m timeit '[print(x) for x in range(100)]' 100 loops, best of 3: 11.1 msec per loop ‚ûú python3 -m timeit '[print(x) for x in range(10)]' 1000 loops, best of 3: 1.09 msec per loop # We can see that the time per loop changes depending on the input! Say we have an algorithm that takes a shopping list and prints out every item on the shopping list. If the shopping list has 3 items, it\u0026rsquo;ll execute quickly. If it has 10 billion items, it\u0026rsquo;ll take a long time.\nWhat is the ‚Äúperfect‚Äù input size to get the ‚Äúperfect‚Äù measure of how long the algorithm takes?\nOther things we need to consider:\n Different processor speeds exist. Languages matter. Assembly is faster than Scratch; how do we consider this?  For this reason, we use Big O (pronounced Big Oh) notation. ü§î What Is Big O Notation? /media/bigo/big_o_constant_time-1.png\nBig O is a formal notation that describes the behaviour of a function when the argument tends towards the maximum input. It was invented by Paul Bachmann, Edmund Landau and others between 1894 and 1820s. Popularised in the 1970s by Donald Knuth. Big O takes the upper bound. The worst-case results in the worst execution of the algorithm. For our shopping list example, the worst-case is an infinite list.\nInstead of saying the input is 10 billion, or infinite - we say the input is n size. The exact size of the input doesn\u0026rsquo;t matter, only how our algorithm performs with the worst input. We can still work out Big O without knowing the exact size of an input.\nBig O is easy to read once we learn this table: The Big O Notation\u0026rsquo;s Order of GrowthConstant Logarithm Linear Polynomial Exponential\n The Big O Notation's Order of Growth      Constant   Logarithm   Linear   Polynomial   Exponential    O($1$) O($log\\;n$) O($n$) O($n^2$), O($n^3$), O($n^x$) O($2^n$)    Where the further right they are, the longer it takes. n is the size of the input. Big O notation uses these functions to describe algorithm efficiency.\nIn our shopping list example, in the worst-case of our algorithm it prints out every item in the list sequentially. Since there are n items in the list, it takes $O(n)$ polynomial time to complete the algorithm.\nOther asymptotic (time-measuring) notations are:\n Asymptotic Notation      Big Omega (lower bound)  Big Theta (average bound)  Big O (max bound)   $\\omega (n)$  $\\theta (n)$ $O(n)$    Informally this is:\n Big Omega (best case) Big Theta (average case) Big O (worst case)  Let\u0026rsquo;s walk through every single column in our \u0026ldquo;The Big O Notation Table\u0026rdquo;.\nüü¢ Constant Time  No matter how many elements, it will always take x operations to perform. In this case, 2.  No matter how many elements, it will always take x operations to perform. In this case, 2. Constant algorithms do not scale with the input size, they are constant no matter how big the input. An example of this is addition. $1 + 2$ takes the same time as $500 + 700$. They may take more *physical time, *but we do not add more steps in the algorithm for addition of big numbers. The underlying algorithm doesn\u0026rsquo;t change at all.\nWe often see constant as $O(1)$, but any number could be used and it would still be constant. We sometimes change the number to a 1, because it doesn\u0026rsquo;t matter at all about how many steps it takes. What matters is that it takes a constant number of steps.\nConstant time is the fastest of all Big O time complexities. The formal definition of constant time is:\n It is upper-bounded by a constant\n An example is:\ndef OddOrEven(n): return \u0026#34;Even\u0026#34; if n % 2 else \u0026#34;Odd\u0026#34; Or in Java:\nboolean isEven(double num) { return ((num % 2) == 0); } In most programming languages, all integers have limits. Primitive operations (such as modulo, %) are all upper-bounded by this limit. If we go over this limit, we get an overflow error.\nBecause of this upper-bound, it satisfies $O(1)$.\nüîµ Logarithmic Time  Log is less than O(1) with 1 element, but in Big O we don't care about element sizes  Here\u0026rsquo;s a quick explainer of what a logarithm is.\n$$Log_{3}^{9}$$\nWhat is being asked here is ‚Äú3 to what power gives us 9?‚Äù This is 3 to the power of 2 gives us 9, so the whole expression looks like:\n$$Log_{3}^{9} = 2$$\nA logarithmic algorithm **halves **the list every time it‚Äôs run.\nLet\u0026rsquo;s look at binary search. Given the below sorted list:\na = [1, 2, 3, 4, 5, 6 , 7, 8, 9, 10] We want to find the number \u0026ldquo;2\u0026rdquo;.\nWe implement Binary Search as:\ndef binarySearch(alist, item): first = 0 last = len(alist)-1 found = False while first \u0026lt;= last and not found: midpoint = (first + last)//2 if alist[midpoint] == item: found = True else: if item \u0026lt; alist[midpoint]: last = midpoint-1 else: first = midpoint+1 return found In English this is:\n Go to the middle of the list Check to see if that element is the answer If it\u0026rsquo;s not, check to see if that element is more than the item we want to find If it is, ignore the right-hand side (all the numbers higher than the midpoint) of the list and choose a new midpoint. Start over again, by finding the midpoint in the new list.  binary_search_gif\n From here  The algorithm halves the input every single time it iterates. Therefore it is logarithmic. Other examples include:\n Fibonacci number calculations Searching a Binary Search Tree Searching AVL trees  üü° Linear Time  Linear time increases linearly. [2, 2], [4, 4] and so on.  Linear time algorithms mean that every single element from the input is visited exactly once, O(n) times. As the size of the input, N, grows our algorithm\u0026rsquo;s run time scales exactly with the size of the input.\n Linear running time algorithms are widespread. Linear runtime means that the program visits every element from the input. Linear time complexity O(n) means that as the input grows, the algorithms take proportionally longer to complete.2 Apr 2019\n Remember our shopping list app from earlier? The algorithm ran in O(n) which is linear time!\nLinear time is where every single item in a list is visited once, in a worst-case scenario.\nTo read out our shopping list, our algorithm has to read out each item. It can\u0026rsquo;t half the list, or add more items that we didn\u0026rsquo;t add. It has to list all n items, one at a time.\nshopping_list = [\u0026#34;Bread\u0026#34;, \u0026#34;Butter\u0026#34;, \u0026#34;The Nacho Libre soundtrack from the 2006 film Nacho Libre\u0026#34;, \u0026#34;Reusable Water Bottle\u0026#34;] for item in shopping_list: print(item) Let\u0026rsquo;s look at another example.\nThe largest item of an unsorted array Given the list:\na = [2, 16, 7, 9, 8, 23, 12] How do we work out what the largest item is?\nWe need to program it like this:\na = [2, 16, 7, 9, 8, 23, 12] max_item = a[0] for item in a: if item \u0026gt; max_item: max_item = item We have to go through every item in the list, 1 by 1.\nüî¥ Polynomial Time  Notice how polynomial time dwarfs the others?  Notice how polynomial time dwarfs the others? Polynomial time is a polynomial function of the input. A polynomial function looks like $n^2$ or $n^3$ and so on.\nIf one loop through a list is $O(n)$, 2 loops must be $O(n^2)$. For each loop, we go over the list once. For each item in that list, we go over the entire list once. Resulting in n2 operations.\na = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] for i in a: for x in a: print(\u0026#34;x\u0026#34;) For each nesting on the same list, that adds an extra +1 onto the powers.\nA triple nested loop is $O(n^3)$.\nBubblesort is a good example of an $O(n^2)$ algorithm. The sorting algorithm takes the first number and swaps it with the adjacent number if they are in the wrong order. It does this for each number, until all numbers are in the right order - and thus sorted.\ndef bubbleSort(arr): n = len(arr) # Traverse through all array elements for i in range(n): # Last i elements are already in place for j in range(0, n-i-1): # traverse the array from 0 to n-i-1 # Swap if the element found is greater # than the next element if arr[j] \u0026gt; arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] # Driver code to test above arr = [64, 34, 25, 12, 22, 11, 90] bubbleSort(arr)  From here  As a side note, my professor refers to any algorithm with a time of polynomial or above as:\n A complete and utter disaster! This is a disaster! A catastrophe!\n But the thing with large time complexities is that they often show us that something can be quickened.\nFor instance, a problem I had. Given a sentence, how many of those words appear in the English Dictionary? We can imagine the $O(n^2)$ method. One for loop through the sentence, another through the dictionary.\ndictionary = [\u0026#34;a\u0026#34;, \u0026#34;an\u0026#34;] # imagine if this was the dictionary sentence = \u0026#34;hello uu988j my nadjjrjejas is brandon nanndwifjasj banana\u0026#34;.split(\u0026#34; \u0026#34;) counter = 0 for word in sentence: for item in dictionary: if word == item: counter = counter + 1 $O(n^2)$! A disaster! But, knowing that this is a disaster means we can speed it up. Dictionaries are sorted by default. What if we sort our list of words in the sentence, and checked each word that way? We only need to loop through the dictionary once. And if the word we want to check is less than the word we\u0026rsquo;re on in the dictionary, we switch to the second word in the list.\nNow our algorithm is $O(n ; log ; n)$. We recognise that this isn\u0026rsquo;t a disaster, so we can move on! Knowing time complexities isn\u0026rsquo;t only useful in interviews. It\u0026rsquo;s an essential tool to improve our algorithms.\nWe can hasten many polynomial algorithms we construct using knowledge of algorithmic design.\n‚ùå Exponential Time  Exponential time looks like a line going straight up  Exponential time is $2^n$, where 2 depends on the permutations involved.\nThis algorithm is the slowest of them all. You saw how my professor reacted to polynomial algorithms. He was jumping up and down in furiosity at exponential algorithms!\nSay we have a password consisting only of numbers (so that‚Äôs 10 numbers, 0 through to 9). we want to crack a password which has a length of n, so to bruteforce through every combination we\u0026rsquo;ll have:\n$$10^n$$\nCombinations to work through.\nOne example of exponential time is to find all the subsets of a set.\n\u0026gt;\u0026gt;\u0026gt; subsets(['']) [''] \u0026gt;\u0026gt;\u0026gt; subsets(['x']) ['', 'x'] \u0026gt;\u0026gt;\u0026gt; subsets(['a', 'b']) ['', 'a', 'b', 'ab'] We can see that when we have an input size of 2, the output size is $2^2 = 4$.\nNow, let\u0026rsquo;s code up subsets.\nfrom itertools import chain, combinations def subsets(iterable): s = list(iterable) return chain.from_iterable(combinations(s, r) for r in range(len(s)+1)) Taken from the documentation for itertools.\nWhat\u0026rsquo;s important here is to see that it exponentially grows depending on the input size. Java code can be found here.\nExponential algorithms are horrific, but like polynomial algorithms we can learn a thing or two. Let\u0026rsquo;s say we have to calculate $10^4$. We need to do this:\n$$10 * 10 * 10 * 10 = 10^2 * 10^2$$\nWe have to calculate $10^2$ twice! What if we store that value somewhere and use it later so we do not have to recalculate it? This is the principle of Dynamic Programming, which you can read about here.\nWhen we see an exponential algorithm, dynamic programming can often be used to speed it up.\nAgain, knowing time complexities allows us to build better algorithms.\nHere\u0026rsquo;s our Big O notation graph where the numbers are reduced so we can see all the different lines.\n Code to generate this can be found here.   üòå Simplifying Big O notation Rarely will time complexity be as easy as counting how many for loops we have. What if our algorithm looks like $O(n + n^2)$? We can simplify our algorithm using these simple rules:\nDrop the constants If we have an algorithm described as $O(2n)$, we drop the $2$ so it becomes $O(n)$.\nDrop the non-dominant terms $O(n¬≤ + n)$ becomes $O(n¬≤)$. Only keep the larger one in Big O.\nIf we have a sum such as $O(b¬≤ + a)$ we can‚Äôt drop either without knowledge of what b and a are.\nIs that it? Yup! The hardest part is figuring out what our program\u0026rsquo;s complexity is first. Simplifying is the easy part! Just remember the golden rule of Big O notation:\n \u0026ldquo;What is the worst-case scenario here?\u0026rdquo;\n  ‚òÅ Other Big O Times to Learn (But Not Essential) ü•á O(n log n)  $n \\; log \\; n$ is between $log n$ and $n^2$   It falls between O(n) and O(n2) This is the fastest time possible for a comparison sort. We cannot get any faster unless we use some special property, like Radix sort. O($n ; log ; n$) is the fastest comparison sort time.\nIt\u0026rsquo;s rather famous, because Mergesort runs in O($n ; log ; n$). Mergesort is a great algorithm not only because it sorts fast, but because the idea is used to build other algorithms.\nMergesort is used to teach divide \u0026amp; conquer algorithms. And for good reason, it\u0026rsquo;s a fantastic sorting algorithm that has roots outside of sorting.\nMergesort works by breaking down the list of numbers into individual numbers:\n   And then sorting each list, before merging them:    def mergeSort(alist): print(\u0026#34;Splitting \u0026#34;,alist) if len(alist)\u0026gt;1: mid = len(alist)//2 lefthalf = alist[:mid] righthalf = alist[mid:] mergeSort(lefthalf) mergeSort(righthalf) i=0 j=0 k=0 while i \u0026lt; len(lefthalf) and j \u0026lt; len(righthalf): if lefthalf[i] \u0026lt;= righthalf[j]: alist[k]=lefthalf[i] i=i+1 else: alist[k]=righthalf[j] j=j+1 k=k+1 while i \u0026lt; len(lefthalf): alist[k]=lefthalf[i] i=i+1 k=k+1 while j \u0026lt; len(righthalf): alist[k]=righthalf[j] j=j+1 k=k+1 print(\u0026#34;Merging \u0026#34;,alist) alist = [54,26,93,17,77,31,44,55,20] mergeSort(alist) print(alist) Read more on Mergesort here.\nüëø O(n!)  Factorial dwarfs all over complexities.   This one is so large, it makes all other times look constant!\nThis time complexity is often used as a joke, referring to Bogo Sort. I have yet to find a real life (not-a-joke) algorithm that runs in O(n!) that isn\u0026rsquo;t an algorithm calculating O(6!) or the likes.\n üßÆ How to Calculate Big O Notation for Our Own Algorithms with Examples Our own algorithms will normally be based on some famous algorithm that already has a Big O notation. If it\u0026rsquo;s not, do not worry! Working out the Big O of our algorithm is easy.\nJust think:\n \u0026ldquo;What is the absolute worst input for my program?\u0026rdquo;\n Take, for instance, a sequential searching algorithm.\ndef search(listInput, toFind): for counter, item in enumerate(listInput): if toFind == item: return (counter, item) return \u0026#34;did not find the item!\u0026#34; The best input would be:\nsearch([\u0026#34;apples\u0026#34;], \u0026#34;apples\u0026#34;) But the worst input is if the item was at the end of a long list.\nsearch([\u0026#34;apples\u0026#34;, \u0026#34;oranges\u0026#34;, \u0026#34;The soundtrack from the 2006 film Nacho Libre\u0026#34;, \u0026#34;Shrek\u0026#34;], \u0026#34;Shrek\u0026#34;) The worst-case scenario is $O(n)$, because we have to go past every item in the list to find it.\nWhat if our search algorithm was binary search? We learnt that binary search divides the list into half everytime. This sounds like log n!\nWhat if our binary search looks for an object, and then looks to find other similar objects?\n# here we want to find the film shrek, find its IMDB rating and find other films with that IMDB rating. We are using binary search, then sequential search toFind = {title: \u0026#34;Shrek\u0026#34;, IMDBrating: None} ret = search(toFind) ret = search(ret[\u0026#39;IMDBrating\u0026#39;]) We find Shrek with an IMDB score of 7.8. But we\u0026rsquo;re only sorted on the title, not the IMDB rating. We have to use sequential search to find all other films with the same rating.\nBinary search is $O(log ; n)$ and sequential search is $O(n)$, this makes our algorithm $O(n ; log ; n)$. This isn\u0026rsquo;t a disaster, so we can sure it\u0026rsquo;s not a terrible algorithm.\nEven in the instances where our algorithms are not strictly related to other algorithms, we can still compare them to things we know. $O(log ; n)$ means halfing. $O(n^2)$ means a nested for loop.\nOne last thing, we don\u0026rsquo;t always deal with n. Take this below algorithm:\nx = [1, 2, 3, 4, 5] y = [2, 6] y = iter(y) counter = 0 total = 0.0 while counter != len(x): # cycles through the y list. # multiplies 2 by 1, then 6 by 2. Then 2 by 3.  total = total + x[counter] * next(y) counter += 1 print(total) We have 2 inputs, x and y. Our notation is then $$O(x + y)$$. Sometimes we cannot make our notation smaller without knowing more about the data.\n ü§Ø Big O Notation Cheat Sheet I made this little infographic for you! The \u0026ldquo;add +1 for every nested for loop\u0026rdquo; depends on the for loop, as we saw earlier. But explaining that all over again would take up too much space üòÖ\n üéì How to Calculate Big O Notation of a Function (Discrete Maths) Okay, this is where it gets hard. A lot of complaints against Big O notation is along the lines of:\n \u0026ldquo;You didn\u0026rsquo;t really teach it, to really understand it you have to understand the maths!\u0026rdquo;\n And I kinda agree. The surface level knowledge above will be good for most interviews, but the stuff here is the stuff needed to master Big O notation.\nJust as a reminder, we want to master asymptotic time complexity as it allows us to create better algorithms.\nI\u0026rsquo;m going to be writing out the formal notation, and then explaining it simply. Over-simplification causes misinformation, so if you are studying for a test take my simplifications as generalities and not the truth. The mathematics is the whole truth, and you would be better of studying the maths rather than studying my simplifications. As I once read on the internet:\n Shut up and calculate.\n Is Big O Notation the Worst-Case? First things first, when I said:\n Big O notation is the worst-case\n That\u0026rsquo;s not true at all. It\u0026rsquo;s a white lie designed to help you learn the basics. Often used to get us to know enough to just pass interviews, but not enough to use it in the real world.\nThe formal definition of Big O notation is:\n The upper-bounded time limit of the algorithm\n Now, this often means \u0026ldquo;the worst-case\u0026rdquo; but not always. We can put upper bounds on whatever we want. But more often than not, we put upper-bounds on the worst-case. In one of our examples, we\u0026rsquo;ll come across a weird formula where \u0026ldquo;the worst-case\u0026rdquo; isn\u0026rsquo;t necessarily the one we choose for Big O.\nThis is an important distinction to make, because some caveats will confuse us otherwise.\nGiven 2 positive functions, $f(n)$ and $g(n)$ we say $f(n)$ is $O(g(n))$, written $f(n) \\in O(g(n))$, if there are constants $c$ and $n_0$ such that:\n$$f(n) \\le c * g(n) \\forall ;n \\geq n_o$$\nSide note: Asymptotic notation leans heavily into set theory. Check out my article on set theory here.\nAlso, sometimes $n_0$ is called $k$. But $c$ stays the same.\nThis looks confusing, but is just a fancy way of saying that the function (algorithm) is a part of another function (the Big O notation used). Simplifying again: Our algorithm falls within the range of a Big O notation time complexity (O(n), O(log n), etc). So our algorithm is that time complexity (to simplify it).\nLet\u0026rsquo;s see an example.\n$$7n - 4 \\in O(n)$$\nHere we are claiming that $7n - 4$ is in $O(n)$ time. In formal Big O notation, we don\u0026rsquo;t say it is that time. We say it falls within the range of that time.\nWe need to find constants $c$ and $n_0$ such that $7n-4 \\le cn$ for all $n \\geq n_0$.\nOne choice is $c = 7$ and $n_0 = 1$. $7 * 7 = 42 - 4 = 38$ and $7 * 1 = 7$ so for all where $n \\geq 7$ this function holds true.\nThis is just one of the many choices, because any real number $c \\geq 7$ and any integer $n_0 \\geq 1$ would be okay.\nAnother way to rephrase this is:\n$$7n-4 \\le 7n ; where ; n \\geq 1$$\nThe left hand side, $7n-4$ is f(n). c = 10. g(n) = n. Therefore we can say $f(n) =O(n)$ because $g(n) = n$. We say $f(n) \\in O(n)$.\nAll we have to do is substitute values into the formula until we find values for c and n that work. Let\u0026rsquo;s do 10 examples now.\nExample 1 $$f(n) = 4n^2 + 16n + 2$$\n Is f(n) O(n4)?\n We need to take this function:\n$$f(n) = 4n^2 + 16n + 2$$\nand say \u0026ldquo;is this less than some constant times $n^4$?\u0026rdquo; We need to find out if there is such a constant.\n$$n^2 + 16n + 2 \\le n^4$$\nLet\u0026rsquo;s do a chart. If $n = 0$ we get:\n$$0 + 0 + 2 = 2 \\le 0$$\nThis isn\u0026rsquo;t true, so N = 0 is not true.\nWhen $n = 1$:\n$$ 4 * 1 * 16 * 2 = 22 \\le 1^4 = 22 \\le 1$$\nIs not true. Let\u0026rsquo;s try it again with n = 3.\n$$50 \\le 16$$\nNot true, so let\u0026rsquo;s try another one. $n = 3$.\n$$86 \\le 3^3 = 86 \\le 81$$\nNot true. Looks like the next one should work as we are approaching the tipping point. $n = 4$.\n$$ 130 \\le 256$$\nThis is true. When $n = 4$ or a greater number then this function where it\u0026rsquo;s less than N4 becomes True. When $C = 1, N \\geq 4$ this holds true.\nThe answer to the question \u0026ldquo;is this function, $n^2 + 16n + 2$, Big O of n4 true?\u0026rdquo; Yes, when $c = 1$ and $n \\geq 4$.\u0026rdquo;\nNote: I\u0026rsquo;m saying $c=1$ but I\u0026rsquo;m not writing $cn$ every time. Later on, using c will become important. But for these starter examples we\u0026rsquo;ll just assume $c = 1$ until said otherwise.\nExample 2 $$3n^2 + n + 16$$\n Is this $O(n^2)$?\n We know that $n \\le n^2$ for all $n \\geq 1$. Also, $16 \\le n^2$ for $n \\geq 4$.\nSo: $$3n^2 + n + 16 \\le 3n^2 + n^2 + n^2 = 5n^2$$\nfor all $n \\geq 4$. The constant C is 5, and $n_0 = 3$.\nExample 3 $$13n^3 + 7n ;log ;n + 3$$\n is $O(n^3)$\n Because $log ;n \\le n \\geq n^2$ for all $n \\geq 1$, and for similar reasons as above we may conclude that:\n$13n^3 + 6nlog ;n + 3 \\le 21 n^3$ for all \u0026lsquo;large enough\u0026rsquo; n.\nIn this instance, $c = 21$.\nExample 4 $$45n^5 - 10n^2 + 6n - 12$$\n is $O(n^2)$?\n Any polynomial $a_k n^k + \u0026hellip; + a_2 n^2 + a_1 n + a_0$ with $a_k \u0026gt; 0$ is $O(n^k)$.\nAlong the same lines, we can arrgue that any polynomial $a_k n^k + \u0026hellip; + a_2 n^2 + a_1 n + a-0$ with $a_k \u0026gt; 0$ is also $O(n^j)$ for all $j \\geq k$.\nTherefore $45n^5 - 10n^2 + 6n - 12$ is $O(n^2)$ (and is also $O(n^8)$ or $O(n^9)$ or $O(n^k)$ for any $n \\geq 5$).\nExample 5 $$\\sqrt{n}$$\n is $O(n)$?\n This doesn\u0026rsquo;t hold true. $\\sqrt{n} = n^{1/2}$. Therefore $O(n^{1/2}) \u0026lt; O(n)$.\nI hope you appreciate the easy example to break up the hard maths üòâ\nExample 6 $$ 3 ;log ;n + ;log ;log ;n$$\n is $O(log ;n)$?\n First we have this equality that $log ;n \\le n$ for every $n \\geq 1$. We can put a double log here like so: $log;log;n \\le log ;n$. Log log n is smaller than log n. We replaced \u0026ldquo;n\u0026rdquo; with \u0026ldquo;log n\u0026rdquo; on both sides of $log ;n \\le n$. So:\n$$3 ;log ;n + ;log;log ;n \\le 4 ;log ;n$$\nSo:\n$$c = 4, n_0 = 1$$\nExample 7 $log ; n$\n is $\u0026lt; O(\\sqrt{n})$\n Log n grows slower than any function where this holds:\n$$log ; m \\le m^\\epsilon$$ for every $\\epsilon \u0026gt; 0$ no matter how small it is, as long as it is positive.\nUsing this inequality if we plug in $\\epsilon = \\frac{1}{2}$ and we plug that into our equation $\\sqrt{m} = m^{\\frac{1}{2}}$.\nKnowing that $log ; m \\le m^\\epsilon$ we know that $O(log ; n) \u0026lt; O(\\sqrt{n})$\nExample 8 $$2n + 3$$\n What is the Big O of this?\n $$2n + 3 \\le 10n, n \\geq 1$$\n$$f(n) = O(n)$$.\nThis is because n is more than or equal to 1, it will always be larger than g(n) which is $2n + 3$. Therefore, we have $O(n)$.\nExample 9 $$2n + 3 \\le 10n$$\nWe don\u0026rsquo;t have to write 10, it can be whatever we want so long as the equation holds true.\n$$2n + 3 \\le 2n + 3n$$\n$$2n + 3 \\le 5n, n \\geq 1$$\nTherefore $f(n) = O(n)$.\nOr we can write:\n$$2n + 3 \\le 5n^2 , n \\geq 1$$\n$$f(n) = 2n + 3$$\n$$c = 5$$\n$$g(n) = n^2$$\nCan this same function be both $O(n)$ and $O(n^2)$? Yes. It can be. This is where our definition of big o comes into play. It\u0026rsquo;s the upperbounded limit. We can say it is $n^2, 2^n$ and any higher. But we cannot say it\u0026rsquo;s lower.\nWhen we write big o, we often want to use the closet function. Otherwise we could say that every algorithm has an upperbound of $O(2^n)$, which isn\u0026rsquo;t true. Note: what we want to do (choose the closet function) is just personal preference for most courses. All functions which work, which are the upperbound, are true.\nThere\u0026rsquo;s a fantastic video on this strange concept here (and I took this example from there).\n üëã Summary Big O represents how long an algorithm takes but sometimes we care about how much memory (space complexity) an algorithm takes too. If you\u0026rsquo;re ever stuck, come back to this page and check out the infographics!\n","permalink":"https://polymath.cloud/big-o-notation/","summary":"By the end of this article, you\u0026rsquo;ll thoroughly understand Big O notation. You\u0026rsquo;ll also know how to use it in the real world, and even the mathematics behind it!\nIn computer science, time complexity is the computational complexity that describes the amount of time it takes to run an algorithm.\nBig O notation is a method for determining how fast an algorithm is. Using Big O notation, we can learn whether our algorithm is fast or slow.","title":"All You Need to Know About Big O Notation [Python Examples]"},{"content":"We\u0026rsquo;ll need to invoke our disaster recovery plans to restore our data if our storage or server fails.\nWith traditional backup methods, the data we need might not be available because:\n Backup data is stored in the same location as the production data, and the disaster impacted the backups. If using a tape backup method, the tapes could fail making the data unreadable. The tapes could get lost when in transit. Manual involvement could lead to errors, such as incorrect tape rotation and labelling.  Not to mention how ineffective traditional backups might be:\n Scalability: As our infrastructure expands, so will our backup systems. This can be very costly. Costs: Implementing an effective backup solution can be a huge upfront cost. Data Availability: If our data is stored off site, it may take longer to get our data.  The speed at which we can launch our environment in AWS to replicate our production system is of significant value.\nBenefits of using Cloud Storage for our DR include:\n Offsite backup. No scalability constraints. No huge upfront costs. High Durability and availability.  Now lets imagine our production environment in our local data centre experiences an outage.\nWe can launch a new VPC with new AMIs with custom applications. We can create EBS storage volumes based on the backed up data within AWS s3 and attach those volumes to our instances.\nWe now have our production back up and running.\nThe main benefits are:\n Cost Efficient. Scalable. Available and Durable. Secure. Reliable. Zero maintenance of hardware. Offsite storage. Replication \u0026amp; automation easily configured. Readily Available. Easy to test DR plans using AWS infrastructure.  Considerations when using AWS as a DR solution We have to balance storage solution fit for our purposes with conforming to specific DR compliance set by government regulations.\nLet\u0026rsquo;s discuss 2 terms.\n Recovery Time Objective (RTO) Maximum amount of time in which a service can remain unavailable before it\u0026rsquo;s classed as damaging to the business. Recovery Point Objective (RPO) Maximum amount of time for which data could be lost for a service.  How to get data in and out of AWS? The method in which we choose to move our data from on-premise to the cloud varies on our own infrastructure. If we have a direct connection to AWS, we can use that with a connectivity of 10 gbp/s.\nWe may need a hardware/software VPN that can be use.\nOr we can use our own internet connection to AWS.\nDepending on how much data we need to use, we may need to use something else as the lines won\u0026rsquo;t have enough bandwidth.\nWe can use AWS snowball.\n   They come in 50TB or 80TB in size to our datacentre, where we can copy our data to it before it is shipped back to AWS for uploading to S3.\nWe can use multiple snowballs to transfer petabyte of data.\nIn extreme circumstances, we can use Snowmobile.\n  This can transfer up to 100PB per snowmobile (45-foot shipping container) pulled by a semi-trailer truck. It is for exabyte-scale transfer service.\nStorage Gateway A software appliance is configured on site in our data centre and offers a range of moving our data into AWS.\nHow quickly do we need our data back? This closely relates to our RTO requirements and how critical the data is to our business.\nOur connectivity to AWS also plays an important part in this timeframe.\nHow much data to import / export? We should also calculate our target transfer rate. TO help us calculate this, we can use a calculator.\nOur data backup solution needs to offer the capacity and we have the means to transfer the data there.\nSecurity Ensuring our data has the right level of security and safeguarding it from unauthorised access is essential.\nWhen working with sensitive information, we must encrypt the data in-transit and at rest.\nCompliance Compliant with laws.\nAWS has AWS artifact which allows us to review and access AWS compliance reports.\nWe can issue to auditors.\nAccessed via the AWS management console and issued by external auditors to AWS themselves.\nUsing Amazon S3 as a backup solution S3 has:\n Huge capacity to scale Store data from 1 byte to 5TB Multiple security features 3 storage classes offering different benefits Highly durable Highly available     Class Durability Availability Price     Standard 11 9s 4 9s ¬£¬£¬£   Infrequent Access 11 9s 3 9s ¬£¬£   Glacier 11 9s N/A ¬£    Standard The reliability has an SLA of the service. This level of durability is achieved by automatic-replication to multiple devices and multiple accessibility zones.\nAlso supports in-rest and in-transit encryption.\nData management capabilities through life cycle policies to automatically move data to another storage class for cost optimisation or it can delete the data all together.\nInfrequent Access Used for data that is accessed less frequently than standard. The availability takes a hit, but the cost is far less than standard class.\nCommonly used for backups as we have same durability and immeditade retrieval when needed.\nUses the same SLA as S3 standard class.\nSame security \u0026amp; device management as standard class.\nThe main different is the cost!\nGlacier This is classed as a different service, but it operates in conjunction with S3.\nStores data in archives, as opposed to S3 buckets.\nCan be up to 40TB in size.\nStored in vaults, with different security measures to that of S3.\nUsed for data archiving and is commonly referred to as the cold storage service.\nWe can move data into glacier using:\n Lifecycle rules from S3 AWS SDKs Amazon Glacier API  Also retains the same level as durability, and encryption in-transit and in-rest.\nAlso has its own security measures that differ from S3. Such as write-once-read-many (WORM) and vault access policies.\nCan help comply to HIPAA and PCI in an overall solution.\nThe most significant difference is that we do not have immediate access.\nDepending on what we use, data retrieval can take from minutes to hours. This can be a problem if we are in a DR situation whereby we need immediate access.\nThere are a number of retrieval methods.\nExpedited  Used for urgent access to a subset of an archive. Less than 250mb. Data in 1 - 5 minutes. 3 cents per GB, 1 cent per request.  Standard  Retrieve any of our archives, regardless of size. Takes 3 - 5 hours 1 cent per GB, 5 cents per 1000 requests (cheaper).  Bulk  Cheapest option Petabytes of data 5 - 12 hours 0.0025 per GB, 0.025 per 1,000 requests.  S3 Cross Region Replication By default, S3 will not replicate across regions, we have to specifically request that.\nFrom a DR point of view, we want to configure this to help with:\n Reduced latency of data retrieval (if one datacentre is having a bad time, we can use another in a different region). Governance \u0026amp; Compliance (We may need to store backup data at a minimum distance from the source)  Multipart uploads  Multiple concurrent reads \u0026amp; writes (performance). If a folder is larger than 100MB, we should use multi-part upload. This allows us to break an object down into separate parts and upload it (like BitTorrent).  S3 Security  IAM policies - allow and restrict access to S3 buckets. Bucket Policies - JSON policies assigned to individual S3 buckets Access control lists - which user or AWS account can access an object? Lifecycle policies - automatically manage and move data between classes based on compliance and governance controls. MFA delete - User has to enter MFA code to delete object which prevents accidental deletion Versioning - Ensures we can recover from misuse of object or accidental deletion. But requires additional space as a separate object is made for each version.  We should use as many of these as possible based on the risk factor of the data being stored.\nAWS Snowball  Petabyte of scale 50TB or 80TB device Dust, water and tamper resistant. All data is automatically encrypted with keys generated by AWS Key Management Service. End to end tracking with E ink shipping label. Can be tracked with AWS SNS or via management console. AWS Snowball is HIPAA compliant.  We need ot create an export job in AWS. We then receive delivery of Snowball. We connect it to our local network. We then transfer the data.\nAWS Storage Gateway Downloaded as a VM, and allows us to use file, volume, and tape gateway configurations.\nFile Gateways Mount or map drives to an S3 bucket as it it were a share held locally.\nEncrypted with SSE-S3.\nAs well as this, also has a local cache on premise which reduces egress traffic loss.\nWe must associate with S3 bucket which it then presents as an NFS gateway.\nLike Dropbox, but for S3.\nStored Volume Gateways Backup local storage volumes to S3 while entire data library is on premise for low latency access. iSCSI devices mapped to on-premise storage.\nData written to NAs/SAN/DAS then asynchronously sync with S3. Also provides a buffer, and has a maximum storage of 512TiB.\nData is sent over an encrypted SSL channel, and storage gateway makes it easy to take snapshots which are stored as EBS snapshots on S3. These snapshots are incremental so only the changes are stored.\nMakes recovering from a disaster very simple.\nCached Volume Gateways  Primary data storage is S3 Local data storage is used for buffering and a local cache for recently accessed data. Each volume can be up to 32TiB with 32 gateways so up to 1024TiB total. Possible to take EBS snapshots.  Virtual Tape Library  Use Glacier for data archiving Replacing physical components with virtual Tape backup infrastructure with AWS Storage gateway has a capacity to hold 1500 tapes. Virtual tapes with 100GiB to 2.5TiB in size. Backed by S3 and appear in virtual table library. Every VTL has 10 Tape Drives. Media changer - manages tapes to and from tape drive to VTL and is presented as an iSCSI. Archive - archive tapes from our VTL to glacier (VTL = virtual tape library). Storage gateway uses standard retrieval which takes 3 - 5 hours.  ","permalink":"https://polymath.cloud/aws-disaster-recovery/","summary":"We\u0026rsquo;ll need to invoke our disaster recovery plans to restore our data if our storage or server fails.\nWith traditional backup methods, the data we need might not be available because:\n Backup data is stored in the same location as the production data, and the disaster impacted the backups. If using a tape backup method, the tapes could fail making the data unreadable. The tapes could get lost when in transit.","title":"Disaster Recovery with AWS for CCP"},{"content":"I hate the current state of hacking education, or of hacking tools. None of it is accessible to any minority.\nIn this post, I aim to distil some guidelines for making hacking accessible.\nI am by no means an expert. I don‚Äôt even work in A11Y. However, I do have some wonderful friends that do ‚Äî and I am passionate about this subject.\nWhy We Need to Focus on Accessibility  Basic human rights An expansion in the infosec community of new tools, new learning platforms, and new hackers SEO It is legally required. It makes the experience better for everyone.  Let‚Äôs go through these.\nBasic Human Rights Hacking isn‚Äôt just inaccessible, it is the opposite ‚Äî it is actively discluding members from the community because of some issues they were born or developed that they cannot help.\nIt is a basic human right to extend everything we do to be accessible to everyone. In the same way, it is a right for you to get healthcare, to get an education.\nAround 15% of all people suffer from some sort of disability. See this blog post for more info on why accessibility is important or the world report on disability for statistics.\nAn Expansion in Infosec  ‚ÄúI have never seen a hacker that required accessibility adjustments. They just don‚Äôt exist, so why bother catering for a market when none of them need it?‚Äù\n This is a quote from someone I argued with once. You see. Here‚Äôs the thing.\nThe reason why you don‚Äôt see hackers that require accessibility because hacking has never been accessible.\nIt‚Äôs like saying:\n ‚ÄúWhy don‚Äôt we see more students applying to our internships?‚Äù\n And then on the application page for those internships:\n 10 years WebDev experience required  It‚Äôs literally an oxymoron.\nCan\u0026#39;t apply to my dream job on Linkedin because \u0026quot;Minimum 12 years\u0026#39; experience in Kubernetes\u0026quot; is needed. #Kubernetes is \u0026lt;6 years old. @brendandburns @jbeda @cmcluck @tiangolo pic.twitter.com/wDbqfsy3Ga\n\u0026mdash; Ashish (@ashishwt) July 16, 2020 \rSEO Accessibility isn‚Äôt just screenreaders. It‚Äôs a whole host of things.\nMost hacking platforms I‚Äôve come across just aren‚Äôt mobile-friendly. At all. This is very weird to see. Any large platform or medium-sized blogger will tell you that SEO is the reigning champion of views, clicks and good analytics.\nGood SEO is a godsend, something that is impossible to achieve unless you work for it.\nGoogle uses a ‚Äúmobile-first indexing‚Äù system. That means that when Google checks your website out to see how to rank your site in their search results (SEO), they predominantly use the mobile browser.\nIf your website is not mobile-friendly, you will have extremely bad SEO.\nMobile friendly is an accessibility issue, as not everyone can afford laptops or desktops. Mobile friendly is the absolute bare minimum for SEO of a website since‚Ä¶. 2012?\nI don‚Äôt need to explain why SEO is important. Either you understand why it‚Äôs important, or you\u0026rsquo;re not big enough yet to understand why SEO is important. Either way, it‚Äôs important.\nBetter Experience for Everyone Accessibility improves the experience for everyone. As an example, think of a mobile-friendly site.\nTryHackMe has a streaks system. If you go out with your friends and you‚Äôre about to lose your streak, you could log into the mobile-friendly TryHackMe, complete a question and save your streak.\nThe mobile-friendly part is to appeal to people who do not have computers, but it improves the experience for people who do.\nAll the time we see things changed because of accessibility reasons, and the people that never needed the change now appreciate and enjoy the change more than before.\n\rHacking Tools Let‚Äôs start with the basics; hacking tools. If hacking tools aren‚Äôt accessible, no matter how hard learning platforms try they will never be accessible.\nLet‚Äôs take a look at what I think are the worst offenders, and what we can do to improve upon them.\nMetasploit Metasploit is one of the most essential pentesting tools around. And it‚Äôs entirely text-based, so surely it is accessible? Let‚Äôs start at Metasploit.\n Call trans opt: received. 2-19-98 13:24:18 REC:Loc\rTrace program: running\rwake up, Neo...\rthe matrix has you\rfollow the white rabbit.\rknock, knock, Neo.\r(`. ,-,\r` `. ,;' /\r`. ,'/ .'\r`. X /.'\r.-;--''--.._` ` (\r.' / `\r, ` ' Q '\r, , `._ \\\r,.| ' `-.;_'\r: . ` ; ` ` --,.._;\r' ` , ) .'\r`._ , ' /_\r; ,''-,;' ``-\r``-..__``--`\rhttps://metasploit.com\r=[ metasploit v5.0.88-dev ]\r+ -- --=[ 2014 exploits - 1097 auxiliary - 343 post ]\r+ -- --=[ 562 payloads - 45 encoders - 10 nops ]\r+ -- --=[ 7 evasion ]\rMetasploit tip: You can upgrade a shell to a Meterpreter session on many platforms using sessions -u \u0026lt;session_id\u0026gt;\rmsf5 \u0026gt;\rThat‚Äôs a lot of ASCII art for a text-based program. If you put this into https://www.naturalreaders.com/, an online TTS (I shorten screenreader to TTS. Note: not all TTS software is a screenreader) program you‚Äôd notice it would be okay with the Matrix quote, but then we get the bunny. And let me tell you. That bunny looks nice, but when read back to you it is not fun at all.\nLook at how they display information.\n+ -- --=[ 2014 exploits - 1097 auxiliary - 343 post ]\rThis is also horrific in a screenreader.\nNow, enough dunking on Metasploit. They support a ‚Äîquiet mode which turns off the banner and makes it okay.\nThe only issues that haven‚Äôt been fixed are typical ASCII art. Such as the search command.\nMatching Modules\r================\r# Name Disclosure Date Rank Check Description\r- ---- --------------- ---- ----- -----------\r0 auxiliary/admin/smb/ms17_010_command 2017-03-14 normal No MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution\rAs you might be able to tell, this isn‚Äôt read very well in a screenreader either.\nThe quiet mode is good, but it‚Äôs not good enough.\nSherlock Sherlock is a rather nice tool for OSINT. But let‚Äôs take a look at their interface.\n sherlock johnhammond\r[*] Checking username johnhammond on:\r[-] ResearchGate: Illegal Username Format For This Site!\r[-] 2Dimensions: Not Found!\r[-] 3dnews: Not Found!\r[-] 4pda: Not Found!\r[-] 500px: Not Found!\r[-] 7Cups: Not Found!\r[-] 9GAG: Not Found!\r[+] About.me: https://about.me/johnhammond\rThe [*] is nice for people who can see them, as it visually breaks things apart.\nHowever, Sherlock does not have any options to get rid of this.\nIn TTS software, listen to how it pronounces this:\n [*] Checking username johnhammond on:\n It‚Äôs not very nice. Not to mention that Sherlock prints everything its tried, even if it has failed ‚Äî with no argument to only print the successful things.\n\rThe Bottom Line Normally GUIs are the ones with A11Y (accessibility, 11 letters between A and Y) problems, but in the hacking subculture, it is clear many hacking tools also have A11Y problems.\nThey are text tools, but their text causes them to not be accessible.\nThe absolute bare minimum should be an argument, a flag which enables an accessible mode that gets rid of the unnecessary ASCII and just keeps the important parts, as text, as they should be.\nDon‚Äôt forget that a lot of text sucks too. As sighted people, we can easily see the green text with [+] and only read the successes. Each failure of Sherlock is printed to the screen, and there is no way to turn this off.\nSo every single person using TTS will have to go through the 200+ social media sites Sherlock has, even if they do not return successful?\nWhat You Can Do as a Tool Creator  Run your terminal app through a screenreader. Use Google Translate if you want.  Try and see if you can get through the entire output of your app from start to finish. If you find it too boring, if it‚Äôs reading out ASCII titles like ‚Äú‚Äî‚Äî‚Äî‚Äî‚Äî‚Äù or if it takes 20 minutes to read out your basic app ‚Äî change them.\nGoogle Translate isn‚Äôt the most advanced TTS system in the world, but it is the absolute bare minimum you can do.\n Ensure that your app doesn‚Äôt use an extremely weird colour scheme Ensure there isn‚Äôt a bunch of text printed out all on one line. Some people, myself included, find it incredibly hard to read very long text with no paragraphing.  So long as you use common sense and imagine what its like for people of all backgrounds to use your tool, it is better than nothing and will be appreciated.\n\rBox Creators This section is dedicated to everyone who makes rooms, boxes, or whatever you call them.\nNow, let‚Äôs assume the tools we‚Äôre using are made to be accessible. How will we go around making sure rooms are accessible?\nThis section covers both walkthroughs and actual VM-based boxes. TryHackMe uses walkthrough rooms to teach a concept (imagine a blog post), and challenge rooms as your typical CTF boxes.\nPictures Pictures are easily the most inaccessible part of a room. And easily my largest pet peeve when it comes to these things. Let‚Äôs take a look at both images in walkthroughs and images in CTFs.\nWalkthroughs Firstly, I‚Äôm not sure how this has happened ‚Äî but don‚Äôt use images to explain core concepts, lines of code, or anything that needs to be copied and pasted.\nLet‚Äôs look at a real-life example.\n\rSorry, Cmnatic.\r\rIn this screenshot, we see the text:\n Let‚Äôs unzip the archive.\n And then a screenshot of a terminal window, where the creator unzips the archive using a Linux command.\nFirstly, accessibility aside, this is a stupid idea.\nNo one can copy and paste the command from an image. This command looks rather complicated for a complete newbie. You cannot just copy and paste from an image. So why use one?\nNot to mention the fact that the image doesn‚Äôt scale properly. Try looking at this on a mobile device. Have fun! Or perhaps you need to use a much larger font to see the text. You cannot increase the font size of a screenshot.\nThis is one of the worst ideas I have ever come across. You know earlier how I said making things accessible improves the experience for everyone else? Imagine you didn‚Äôt have any accessibility requirements. By pushing this to be accessible you will gain:\n Copy and paste the command Can easily read it no matter the screen size You won‚Äôt run into many problems when the command can be copied and pasted You will have to work out what the command is compared to the output. In the screenshot the $ is the same colour as the unzip command. To a complete newbie they may think you need the ‚Äú$‚Äù for the command.  So now we understand that screenshots of code or commands are bad for non-accessible reasons, let‚Äôs talk about the accessible reasons.\nIf someone were to use a screenreader that just so happened to have OCR support (which, by the way, I have never heard of) then guess what? It will read everything in that image.\nCopy and paste this into a TTS program.\n iot@iot:~/Desktop$ ls\n I can assure you, this is horrific in TTS.\nNow you may be thinking ‚ÄúOh don‚Äôt worry, it has alt text which has the command‚Äù.\n It doesn‚Äôt have alt text (by the way, Google uses alt text for SEO reasons). Even if it did, you can‚Äôt copy and paste alt text. Good luck trying. The screen reader will read ‚Äúan image of ‚Äòls‚Äô‚Äù. The user will then have to manually write out the command  I‚Äôm going to recreate this part of the task in an accessible format to show you how much easier it is.\n Let‚Äôs unzip the archive.\nls Find the .zip file we want to unzip. In this case for me, it‚Äôs called ‚ÄúWNAP320 FirmWare Version 2.0.3.zip‚Äù\nunzip ‚ÄúWNAP320 FirmWare Version 2.0.3.zip‚Äù\n This text will easily expand to all screen sizes. Mobile, laptops, 4k monitors and more.\nYou can easily copy \u0026amp; paste the commands.\nI explain how to choose the file to unzip. This is a lot less ambiguous than simply showing the output of ‚Äúls‚Äù and assuming the user will understand.\nNo need to use alt text or images.\nThe font size changes depending on the user\u0026rsquo;s personal settings.\nOverall, not only is this a better choice for non-accessible reasons, but it is a better choice for accessible reasons.\nDo not use images for code.\nIf you are sad because the website you are using doesn‚Äôt support syntax highlighting and just leaves you with a box of code, this is not your problem. This is the websites problem. Submit anyway with the ‚Äúbad‚Äù highlighting and let the website work it out.\nStop giving the website the alternative of just using images. Force their hand into adding syntax highlighting. Do not lower yourself to a level where A11Y is ignored, force the website to raise itself to a standard of good A11Y.\nNow, let‚Äôs talk about something different.\nDon‚Äôt Rely on Images to Tell Your Story Images are intrinsically inaccessible to almost everyone.\nThey are hard to read, their colour schemes may put people off, colour-blindness is a thing, they don‚Äôt scale.\nImages are just bad mojo.\nDon‚Äôt use images when you want code.\nDon‚Äôt use images when you want quotes.\nDon‚Äôt use images when you want paragraphs of text.\nTry to stick closely to the HTML and not to the images.\nNow, here‚Äôs the cool thing.\nIf you have a network graph, such as this:\n\r\r\rAnd you have to write a lot of alt text to explain that graph‚Ä¶. Maybe you should just, pull the alt text out of the image and label the image like normal text?\nThis way everyone benefits from a clear explanation.\nAlt-text is used for things that visually impaired cannot see, but those who are sighted can. But, we should also be mindful of those who are sighted.\nLook at this picture of Ada Lovelace:\n\r\r\rIf you have a question such as:\n ‚Äúwhat colour is in her hair‚Äù\n You will need to explain in alt text what Ada looks like, but not in normal text as sighted people can see that.\nNot all images need alt text. Fun fact.\n\r\r\rIn this task in a walkthrough room, the image on the right-hand side (of someone physically placing blocks of apps into an iPad) does not need alt text.\nIt does not add to the narrative, it does nothing other than to visually break up the text for the sighted (which, by the way, you should do for A11Y reasons. Not everyone can read entire chunks of text with no images).\nWhen you don‚Äôt add alt text to an image, most screenreaders will simply skip over the image.\nTo a visually impaired user, the images add nothing to the story. Imagine alt text. If you are sighted, you probably won‚Äôt need to read the alt text of every image. It‚Äôs the same with images. If the image doesn‚Äôt add to the story, it doesn‚Äôt need to be read out loud.\nFor sighted users, we will still want to break up large walls of text.\nI am sighted, but I cannot read anything that is 1000 words of text with no breaks in between.\nThis is basic SEO but also A11Y. Here are some ways you can break up the text:\n Images Quotes Code blocks different sized text Italic \u0026amp; bold text Unordered Lists Ordered Lists  The general order of images should be:\n No image Image with no alt text (because it is explained in the body, or it is not an image that needs alt text). Alt text.  Fancy ASCII Markup Do not use ASCII instead of HTML elements like \u0026lt;h1\u0026gt;.\nTake a look at this:\n\r\r\rThat header may look fancy, but let‚Äôs take a look at the HTML.\n\u0026lt;span style=\u0026quot;font-size:18px\u0026quot;\u0026gt;.:. Objects .:.\u0026lt;/span\u0026gt;\nSo not only is it not a header tag (instead, the font size is just slightly increased) but instead of using a header, it uses ‚Äú.:.‚Äù to signify it‚Äôs a header.\nLet me tell you, reading this through TTS is not fun. It quite literally reads:\n ‚Äúfull stop colon full stop Objects full stop colon full stop‚Äù\n Now, let‚Äôs talk about header tags.\nScreenreaders are very good at identifying headers. When you read a book, we often read like this:\n Chapter 1. The Unknown Fawn. [1 second break]. Daisy and her‚Ä¶.\n It‚Äôs just more natural. Screenreaders know this and can make the reading experience more natural. But completely forgoing basic HTML to create your own header is just bad.\nThis goes for any ASCII markup. Instead of using a horizontal rule people often use dashes.I don‚Äôt understand how it‚Äôs 2020 and people still forgo the use of these basic HTML tags to create their own Frankenstein tags or to try and recreate basic HTML using ASCII only.\nIt‚Äôs just bad practice and takes more work than using regular HTML.\nThe worst part is that the editor for writing this has buttons you can click which use HTML tags. But instead, people forgo clicking a single button to make their own tags, or to use some weird ASCII markup to ‚Äúlook cool‚Äù. You are not cool for deliberately excluding a vast majority of people from using your work.\nThe Unknown Fawn\r-------------\rNow, there\u0026rsquo;s 2 things about this.\n This is completely unreadable in TTS. This won\u0026rsquo;t scale well on any devices other than the creators device.  I don‚Äôt understand how it‚Äôs 2020 and people still forgo the use of these basic HTML tags to create their own Frankenstein tags or to try and recreate basic HTML using ASCII only.\nIt‚Äôs just bad practice and takes more work than using regular HTML.\nThe worst part is that the editor for writing this has buttons you can click which use HTML tags. But instead, people forgo clicking a single button to make their own tags, or to use some weird ASCII markup to ‚Äúlook cool‚Äù. You are not cool for deliberately excluding a vast majority of people from using your work.\nTesting your Box There are 2 tools you can use to test your room which are better than nothing.\n Google Lighthouse  Google Lighthouse will rank your website (or room, in this case) on a scale of 0 to 100 on a whole bunch of metrics, and it will tell you how to improve upon them.\nMost importantly, Google Lighthouse will rank your website (or blog post/walkthrough) for accessibility and will tell you how to improve upon it.\nIt‚Äôs not the best tool in the world, but it is a start.\nAny online TTS  Grab your text and paste it into a TTS. Listen to it back playback to you.\nConclusion While I mainly talked about TTS here, there is so much more to A11Y than visually impaired. Check out Mozilla‚Äôs docs on A11Y for more info.\n\rCTFs Now let‚Äôs talk about CTFs. Traditionally when people think of A11Y Hacking they think of walkthroughs. But CTFs can also be A11Y.\nDue to the nature of operating systems, most OS‚Äô are A11Y friendly (especially things such as Ubuntu). And especially if you only access it through a terminal interface.\nUnlike walkthroughs, there isn‚Äôt much to do to make a CTF accessible. Although I‚Äôll admit, I‚Äôve never tried this ‚Äî but I can guess what the biggest hurdles will be.\n The tools that are used  Forcing the user to use something like Metasploit or Sherlock, which are inherently inaccessible (until they change) will make your CTF inaccessible.\nFor Metasploit it‚Äôs quite easy to point to a manual exploit and say ‚Äútry this instead‚Äù, but be wary of the tools you use. At the start of the article, I showed you how to make accessible tooling.\nUse that information to decide on the tools required for your CTF.\n Websites, documents, or other items  A lot of the time in a CTF you‚Äôll present the user with a website. Be mindful if you are creating a custom-built website, make sure it adheres to A11Y.\nOtherwise, make sure the website isn‚Äôt horrific for A11Y purposes.\nThere was this one CTF where one of the flags was an image on the website. Try to avoid hiding flags in images if you can.\nNot only is steganography not fun, but it‚Äôs also inaccessible. I‚Äôm not saying not to do it. If you have an amazing stego idea, go ahead. But try to avoid it if you can. Stego is a cool skill to learn, but it‚Äôs not for everyone.\nThere isn‚Äôt much more to talk about that hasn‚Äôt been covered already, but I will mention one thing.\nThe Try Harder Mentality Imagine this.\nYou are competing in a CTF on HackTheBox. One part of this CTF is that you have to listen to a sound file which contains some kind of encrypted text.\nYou ask for help, and immediately you get bashed with ‚ÄúTry Harder KEKW‚Äù.\nTry Harder is an alright mentality to push yourself with, but when it is physically impossible for the person to try due to the box creators incapacity to consider A11Y try harder is toxic.\nTry Harder mentality doesn‚Äôt work when the room is inaccessible, and it especially doesn‚Äôt work when every room is inaccessible and you can‚Äôt try at all because of it.\nBut you shouldn‚Äôt just disclude people from entire challenges because it is inaccessible to them. All it takes is someone to say ‚Äúhey can anyone help me, I can‚Äôt hear the audio due to a disability‚Äù and for a mentor to reply with ‚Äúsure, let me DM you the transcript :)‚Äù to help make the room, the mood, and the community a more wholesome place.\nIt‚Äôs all about Try Harder until it is physically impossible for you to try harder, or for you to try at all.\nInfographics \r\r\rCTF Writeups CTF writeups are literally just blog posts read any A11Y blog about making them better, like this one.\n\rWebsite A11Y I‚Äôve already discussed hacking tools and CTFs, but let‚Äôs talk about websites. This is for you, developers of TryHackMe, HackTheBox, ImmersiveLabs \u0026amp; more.\nIf the room is accessible, and the tools are accessible, but your website is not ‚Äî you are the problem.\nAs an organisation, you can hire someone who is an expert in A11Y, or you can promote an employee to study A11Y. Either way, I‚Äôm not qualified to teach you. So instead, I will show you why.\nTake a look at this exemplary person, Elvis. Elvis learnt to code on their phone, created an app (from their phone) and now works for an MIT startup.\nThis happened because the websites used to learn to code or code themselves were mobile-friendly.\nElvis changed his life because privileged people chose to make their sites accessible.\nImagine this. Imagine being told one day that your website changed someone\u0026rsquo;s life like this.\nThe vast majority of the world do not own laptops or desktops. They use mobile phones. To make the website non-accessible on a mobile you are missing a very large market.\nThink of how many hacking websites are mobile related. I‚Äôll tell you something. I have never seen a single one.\nFrom a business perspective, this is a unique selling point. Make the worlds first mobile-friendly hacking website and destroy your competition, get millions and millions of new users from all over the world who can only access the web via their phones.\nGet sight-impaired users, hard of hearing users.\nBe accessible, be kind, and you will thrive.\nFrom a business perspective, you want good SEO? You need accessibility.\nGoogle ranks websites based on their mobile performance, as well as ease of readability, use of alt text to describe images and much more.\nGoogle is accessible first by its very nature.\nIf you want great SEO, you need to make your website accessible.\nI‚Äôm not an SEO expert either. But consult an SEO expert and they will tell you accessibility is #1.\nHeck, if you hire or train an A11Y dev you likely won‚Äôt need an SEO dev. Your website is unique, unlike blogs or recipe sites. By the very nature of the category of the website you own, all you need to do is focus on accessibility and gaining more users and you‚Äôll increase your SEO substantially.\nAfter this, if you want a slight increase in SEO to consult the experts. But if you do that now, I can almost guarantee they‚Äôll just say ‚Äúaccessibility is important‚Äù.\nConclusion This is it for my rant on making hacking accessible.\nI‚Äôm a moderator for TryHackMe, so if you ever need any help or have qualms with this article message me via TryHackMe :)\n","permalink":"https://polymath.cloud/a11y/","summary":"I hate the current state of hacking education, or of hacking tools. None of it is accessible to any minority.\nIn this post, I aim to distil some guidelines for making hacking accessible.\nI am by no means an expert. I don‚Äôt even work in A11Y. However, I do have some wonderful friends that do ‚Äî and I am passionate about this subject.\nWhy We Need to Focus on Accessibility  Basic human rights An expansion in the infosec community of new tools, new learning platforms, and new hackers SEO It is legally required.","title":"Making Hacking Accessible"},{"content":"What is Python? Python is a programming language created by Guido (pronounced gree-do) Van Rossum. Specifically, Python is an intrepreted, high-level, general purpose programming language.\nLet\u0026rsquo;s talk about what these mean.\nGeneral Purpose General Purpose means that Python was created to do everything. Some programming languages like Matlab or R were created for data science. Others like HTML / CSS were created for web development.\nPython aims to do everything, it is generalised. This is both a fault and an advantage. You can do everything you want in Python, but it does not have one area where it shines.\nHigh Level Let\u0026rsquo;s use a different language as an example, C++. When we write code in C++ code, we write it in a language similar to English.\n#include \u0026lt;iostream\u0026gt;\rint main()\r{\rstd::cout \u0026lt;\u0026lt; \u0026#34;Hello, World!\u0026#34; \u0026lt;\u0026lt; std::endl;\rreturn 0;\r}\rThis code prints \u0026ldquo;Hello, World!\u0026rdquo; to the screen. Looks confusing, right? But if you read the words you can see some English words. main, include, end, \u0026ldquo;Hello, World!\u0026quot;, return and some more.\nWhen we write code, we write it in a language that is similar to English but also technical enough for the computer to understand.\nNormal English is a bad programming language, since we can mean different things from the same sentence. For example:\n\u0026ldquo;Alright\u0026rdquo; and \u0026ldquo;Alright\u0026rdquo; mean 2 different things in British English (Alright means \u0026ldquo;hello\u0026rdquo; and \u0026ldquo;it\u0026rsquo;s good\u0026rdquo;).\nThe computer would have no idea how to interpret this. English is a bad programming language, so we have to use something that\u0026rsquo;s a mixture of something the computer can understand and something we can understand.\nIn the case of C++ that mixture is more 50% human, 50% computer (arbitrary numbers). The more the mixture leans to the human side, the more \u0026ldquo;high level\u0026rdquo; it is\n\r\r\rPython is more high level, so it leans more to the human side.\n\r\r\rTake a look at this Python code:\ndef hello_world():\rprint(\u0026#34;Hello, World!\u0026#34;)\rIf I told you that def was short for define you\u0026rsquo;d now know every single word in that program. Whereas with C++ it was a lot harder to understand.\nThis is what we mean by high level and low level.\nPython is high level because it is more understandable by humans with no programming experience. Whereas C++ is less understandable.\nNow, what if I told you that I lied to you? The computer doesn\u0026rsquo;t understand any human language at all.\nThat\u0026rsquo;s right! Even C++ it doesn\u0026rsquo;t understand. What if I told you that there\u0026rsquo;s an even more un-readable language called Assembly?\nHere\u0026rsquo;s an example I stole from the web, \u0026ldquo;Hello, World!\u0026rdquo; in x86 Assembly.\nglobal _start\rsection .text\r_start: mov rax, 1 ; system call for write\rmov rdi, 1 ; file handle 1 is stdout\rmov rsi, message ; address of string to output\rmov rdx, 13 ; number of bytes\rsyscall ; invoke operating system to do the write\rmov rax, 60 ; system call for exit\rxor rdi, rdi ; exit code 0\rsyscall ; invoke operating system to exit\rsection .data\rmessage: db \u0026#34;Hello, World\u0026#34;, 10 ; note the newline at the end\rThis language right here is very machine-like, but the computer still cannot understand it!\n\r\r\rSo, what does the computer understand? In terms of our very weird see-saw:\n\r\r\rImagine someone takes our see-saw, they carry the plank to Mars and they stand it up. That\u0026rsquo;s what it\u0026rsquo;s like. The computer does not understand the human language at all.\nIf computers cannot understand the human language, why do we write human language? Why do we not write in machine language? How does the computer understand human language, the?\n1.Why do we write human language, not machine language?\nAbstraction. Abstraction is where we take something complex, we remove some of the complexity and make it simpler.\nAbstraction is the backbone of every computer scientist in the world, and all machines. Abstraction is what causes exploits in machines, but it\u0026rsquo;s also what causes better \u0026amp; more secure code to be written.\nThe \u0026ldquo;Hello, World!\u0026rdquo; function in x86 assembly you saw is 12 lines. In Python, we can make it one line:\nprint(\u0026#34;Hello, World!\u0026#34;)\rIf we had to write 12 lines for every 1 line of Python, we\u0026rsquo;d never finish any software.\nNot to mention that it\u0026rsquo;s far easier for us to introduce bugs in code if there are more lines then less.\nWith Python, we know that other people smarter than us have read the print code and can confirm it cannot be exploited.\nWith our hand-written Assembly, we cannot.\nIn fact, we cannot even confirm that our assembly code is the most efficient method. In C++ we use something called zero cost abstractions for this. See my Rust room for more information room code: rust.\n How does the computer understand human language?  Bingo! This is where I was going with this.\nLet\u0026rsquo;s say you\u0026rsquo;re from the United Kingdom. And you visit China. Here\u0026rsquo;s a typical conversation:\n You: \u0026ldquo;Oi bruv givs a botla ov wotr\u0026rdquo;\nShop Keeper: ‰Ω†Ëøô‰∏™ÂÇªÂ∞èÂ≠êÔºåÊàë‰ª¨ËøôÈáå‰∏çËØ¥ËøôÁßçËØ≠Ë®Ä\n Do you see the problem here?\nNow, how would you go about talking to the shop keeper?\nYou\u0026rsquo;d use a translator. Either a person, or an app.\nHow does our human-readable code talk to the computer? We use a translator called a compiler.\nThe compiler converts our code into binary code for the computer to understand. And at the end, we get an executable file we can run.\nTranslating is rather slow and expensive. We don\u0026rsquo;t want to spend 5 minutes translating!\nThis brings us onto\u0026hellip;. Let\u0026rsquo;s use a different language as an example, C++. When we write code in C++ code, we write it in a language similar to English.\n#include \u0026lt;iostream\u0026gt;\rint main()\r{\rstd::cout \u0026lt;\u0026lt; \u0026#34;Hello, World!\u0026#34; \u0026lt;\u0026lt; std::endl;\rreturn 0;\r}\rThis code prints \u0026ldquo;Hello, World!\u0026rdquo; to the screen. Looks confusing, right? But if you read the words you can see some English words. main, include, end, \u0026ldquo;Hello, World!\u0026quot;, return and some more.\nWhen we write code, we write it in a language that is similar to English but also technical enough for the computer to understand.\nNormal English is a bad programming language, since we can mean different things from the same sentence. For example:\n\u0026ldquo;Alright\u0026rdquo; and \u0026ldquo;Alright\u0026rdquo; mean 2 different things in British English (Alright means \u0026ldquo;hello\u0026rdquo; and \u0026ldquo;it\u0026rsquo;s good\u0026rdquo;).\nThe computer would have no idea how to interpret this. English is a bad programming language, so we have to use something that\u0026rsquo;s a mixture of something the computer can understand and something we can understand.\nIn the case of C++ that mixture is more 50% human, 50% computer (arbitrary numbers). The more the mixture leans to the human side, the more \u0026ldquo;high level\u0026rdquo; it is\nPython is more high level, so it leans more to the human side.\nTake a look at this Python code:\ndef hello_world():\rprint(\u0026#34;Hello, World!\u0026#34;)\rIf I told you that def was short for define you\u0026rsquo;d now know every single word in that program. Whereas with C++ it was a lot harder to understand.\nThis is what we mean by high level and low level.\nPython is high level because it is more understandable by humans with no programming experience. Whereas C++ is less understandable.\nNow, what if I told you that I lied to you? The computer doesn\u0026rsquo;t understand any human language at all.\nThat\u0026rsquo;s right! Even C++ it doesn\u0026rsquo;t understand. What if I told you that there\u0026rsquo;s an even more un-readable language called Assembly?\nHere\u0026rsquo;s an example I stole from the web, \u0026ldquo;Hello, World!\u0026rdquo; in x86 Assembly.\nglobal _start\rsection .text\r_start: mov rax, 1 ; system call for write\rmov rdi, 1 ; file handle 1 is stdout\rmov rsi, message ; address of string to output\rmov rdx, 13 ; number of bytes\rsyscall ; invoke operating system to do the write\rmov rax, 60 ; system call for exit\rxor rdi, rdi ; exit code 0\rsyscall ; invoke operating system to exit\rsection .data\rmessage: db \u0026#34;Hello, World\u0026#34;, 10 ; note the newline at the end\rThis language right here is very machine-like, but the computer still cannot understand it!\nSo, what does the computer understand? In terms of our very weird see-saw:\nImagine someone takes our see-saw, they carry the plank to Mars and they stand it up. That\u0026rsquo;s what it\u0026rsquo;s like. The computer does not understand the human language at all.\nIf computers cannot understand the human language, why do we write human language? Why do we not write in machine language? How does the computer understand human language, the?\n1.Why do we write human language, not machine language?\nAbstraction. Abstraction is where we take something complex, we remove some of the complexity and make it simpler.\nAbstraction is the backbone of every computer scientist in the world, and all machines. Abstraction is what causes exploits in machines, but it\u0026rsquo;s also what causes better \u0026amp; more secure code to be written.\nThe \u0026ldquo;Hello, World!\u0026rdquo; function in x86 assembly you saw is 12 lines. In Python, we can make it one line:\nprint(\u0026#34;Hello, World!\u0026#34;)\rIf we had to write 12 lines for every 1 line of Python, we\u0026rsquo;d never finish any software.\nNot to mention that it\u0026rsquo;s far easier for us to introduce bugs in code if there are more lines then less.\nWith Python, we know that other people smarter than us have read the print code and can confirm it cannot be exploited.\nWith our hand-written Assembly, we cannot.\nIn fact, we cannot even confirm that our assembly code is the most efficient method. In C++ we use something called zero cost abstractions for this. See my Rust room for more information room code: rust.\n How does the computer understand human language?  Bingo! This is where I was going with this.\nLet\u0026rsquo;s say you\u0026rsquo;re from the United Kingdom. And you visit China. Here\u0026rsquo;s a typical conversation:\n You: \u0026ldquo;Oi bruv givs a botla ov wotr\u0026rdquo;\nShop Keeper: ‰Ω†Ëøô‰∏™ÂÇªÂ∞èÂ≠êÔºåÊàë‰ª¨ËøôÈáå‰∏çËØ¥ËøôÁßçËØ≠Ë®Ä\n Do you see the problem here?\nNow, how would you go about talking to the shop keeper?\nYou\u0026rsquo;d use a translator. Either a person, or an app.\nHow does our human-readable code talk to the computer? We use a translator called a compiler.\nThe compiler converts our code into binary code for the computer to understand. And at the end, we get an executable file we can run.\nTranslating is rather slow and expensive. We don\u0026rsquo;t want to spend 5 minutes translating!\nThis brings us onto\u0026hellip;.\nIntrepreted Python is an interpreted language. That means that instead of translating the whole code into machine code at once, it translates the code piece by piece. And once it\u0026rsquo;s converted a piece of code, it runs it, and then continues until the program stops running.\nTooling Tooling Before we begin writing Python code, let\u0026rsquo;s get the tooling right.\nHere we\u0026rsquo;ll install Python and a text editor / IDE.\nCheck if you have Python installed already with:\npython --version\rIf this number is below 3, try:\npython3 --version\r If python3 works, whenever I say python type python3 instead. If neither of these worked and presented a version higher than 3 then:  Install the latest release of Python from here. Note that on Windows, this website defaults to 32-bit Python. Please install 64-bit Python, tool developers will thank you.\nNow, let\u0026rsquo;s install a text editor or IDE. I would suggest an IDE, but they are rather heavy on resources.\nAn IDE will show you errors before you run the code, and will help you to automatically fix those errors.\nThe best Python IDE is PyCharm.\nHowever, if your computer has limited resources you may want to use a text editor. I use Visual Studio Code but you can use Atom or Sublime.\nHonestly if you\u0026rsquo;re not going to use PyCharm the choice of text editor at this stage doesn\u0026rsquo;t matter too much. In the wise words of someone I once knew:\n Deciding on the tooling is another form of procrastination. Choose something and get it over with.\n Download Visual Studio Code if PyCharm didn\u0026rsquo;t work.\nHello, World! Hello, World! It is very traditional for every programmer, when starting out, to start with a hello world program.\nCreate a new file called hello.py and open it up in your text editor of choice (the one you downloaded in the last section).\nIn this new file, copy and paste this line:\nprint(\u0026#34;Hello, World!\u0026#34;)\rLet\u0026rsquo;s explain what this does:\n Print  Print is a function. We give it some text and it\u0026rsquo;ll print it to the screen.\n \u0026ldquo;Hello, World!\u0026rdquo;  Is what we call a string (a string of characters). It\u0026rsquo;s just text.\nNow, open up a Terminal, navigate to your directory and run:\npython hello.py\r_Make sure you use python or python3, whichever one worked for you in the last section.\nAnd you\u0026rsquo;ll see on your screen printed:\n$ Hello, World!\rCongratulations! You have just run your first Python program! ü•≥\n","permalink":"https://polymath.cloud/python/","summary":"What is Python? Python is a programming language created by Guido (pronounced gree-do) Van Rossum. Specifically, Python is an intrepreted, high-level, general purpose programming language.\nLet\u0026rsquo;s talk about what these mean.\nGeneral Purpose General Purpose means that Python was created to do everything. Some programming languages like Matlab or R were created for data science. Others like HTML / CSS were created for web development.\nPython aims to do everything, it is generalised.","title":"Python Zero to Hero"},{"content":"Today, we\u0026rsquo;re going to do a technical deep-dive into how Tor really works.\nNo mention of how to access Tor, no mention of what might be on Tor. This is how Tor works.\nWithout speculation and without exaggeration of what Tor is. Just a deep-dive into the technical stuff of how Tor works.\nThis article is designed to be read by anyone, with **ZERO **knowledge on networking or Tor.\nLet\u0026rsquo;s dive right in.\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  At least this isn\u0026rsquo;t a full screen pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\nTable of Contents  Overview üåé Tor Itself üëà  2.1. What Tor Isn\u0026rsquo;t ‚ùå\n2.2. The Difference Between Tor and a Vpn üíª\n Table of Contents  Overview üåé Tor Itself üëà  What Tor Isn\u0026rsquo;t ‚ùå The Difference Between Tor and a VPN üíª Onion Routing üîê   How Is a Circuit Created? üíª  Guard Pinning üìå What Is a Directory Node? üìÇ   What Are Bridge Nodes? üåâ Tor Hidden Services üïµÔ∏è‚Äç‚ôÄÔ∏è   Attacks on Tor ü§∫  Conclusion üìï At least this isn\u0026rsquo;t a full screen pop up! üòÖ    The United States Naval Research Laboratory developed The Onion Routing Protocol (Tor) to project U.S. intelligence communications online. Ironically, Tor has seen widespread use by everyone - even those organisations which the U.S. Navy fights against.\nYou may know Tor as the hometown of online illegal activities, a place where you can buy any drug you want, a place for all things illegal. Tor is much larger than what the media makes it out to be. According to Kings College much of Tor is legal.\nWhen you normally visit a website, your computer makes a direct TCP connection with the website\u0026rsquo;s server. Anyone monitoring your internet could read the TCP packet. They can find out what website you\u0026rsquo;re visiting and your IP address. As well as what port you\u0026rsquo;re connecting to.\nIf you\u0026rsquo;re using HTTPS, no one will know what the message said. But, sometimes all an adversary needs to know is who you\u0026rsquo;re connecting to.\nUsing Tor, your computer never communicates with the server directly. Tor creates a twisted path through 3 Tor nodes, and sends the data via that circuit.\nThe core principle of Tor is onion routing which is a technique for anonymous \u0026amp; secure communication over a public network. In onion routing messages are encapsulated in several layers of encryption.\n \u0026ldquo;Onions have layers\u0026rdquo; - Shrek\n So does a message going through Tor. Each layer in Tor is encryption, you are adding layers of encryption to a Tor message, as opposed to just adding 1 layer of encryption.\nThis is why it\u0026rsquo;s called The Onion Routing Protocol, because it adds layers at each stage.\nThe resulting onion (fully encapsulated message) is then transmitted through a series of computers in a network (called onion routers) with each computer peeling away a layer of the ‚Äòonion‚Äô. This series of computers is called a path. Each layer contains the next destination - the next router the packet has to go to. When the final layer is decrypted you get the plaintext (non-encrypted message).\nThe original author remains anonymous because each node in the network is only aware of the preceding and following nodes in the path (except the first node that does know who the sender is, but doesn‚Äôt know the final destination).\nThis has led to attacks where large organisations with expansive resources run servers to attempt to be the first and last nodes in the network. If the organisation\u0026rsquo;s server is the first node, it knows who sent the message. If the organisation server is the last node, it knows the final destination and what the message says.\nNow we have a basic overview of Tor, let\u0026rsquo;s start exploring how each part of Tor works. Don\u0026rsquo;t worry if you\u0026rsquo;re confused, every part of Tor will be explained using gnarly diagrams üòÅ‚ú®\n Overview üåé  Onion Routing is a distributed overlay network designed to anonymise TCP-based applications like web browsing, secure shell and instant messaging.\n Clients choose a *path *through the network and build a circuit where each onion router in the path knows the predecessor and the successor, but no other nodes in the circuit. Paths and circuits are synonyms. The original author (the question mark on the far left) remains anonymous, unless you\u0026rsquo;re the first path in the node as you know who sent you the packet. No one knows what data is being sent until it reaches the last node in the path; who knows the data but doesn\u0026rsquo;t know who sent it. The second to last node in the path doesn\u0026rsquo;t know what the data is, only the last node in the path does. This has led to attacks whereby large organisations with expansive resources create Tor servers which aim to be the first and last onion routers in a path. If the organisation can do this, they get to know who sent the data and what data was sent, effectively breaking Tor. Oh no! Now large organisation knows you watch Netflix üçø It\u0026rsquo;s incredibly hard to do this without being physically close to the location of the organisations servers, we\u0026rsquo;ll explore this more later.\nThroughout this article I\u0026rsquo;ll be using Netflix as a normal service (Bob) and Amazon Prime Video as the adversary (Eve). In the real world, this is incredibly unlikely to be the case. I\u0026rsquo;m not here to speculate on what organisations might want to attack Tor, so I\u0026rsquo;ve used 2 unlikely examples to avoid the political side of it.\nEach packet flows down the network in fixed-size cells. These cells have to be the same size so none of the data going through the Tor network looks suspiciously big.\nThese cells are unwrapped by a symmetric key at each router and then the cell is relayed further down the path. Let\u0026rsquo;s go into Tor itself.\n Tor Itself üëà  There is strength in numbers\n Tor needs a lot of users to create anonymity, if Tor was hard to use new users wouldn\u0026rsquo;t adopt it so quickly. Because new users won\u0026rsquo;t adopt it, Tor becomes less anonymous. By this reasoning it is easy to see that usability isn\u0026rsquo;t just a design choice of Tor but a security requirement to make Tor more secure.\nIf Tor isn\u0026rsquo;t usable or designed nicely, it won\u0026rsquo;t be used by many people. If it\u0026rsquo;s not used by many people, it\u0026rsquo;s less anonymous.\nTor has had to make some design choices that may not improve security but improve usability with the hopes that an improvement in usability is an improvement in security.\nWhat Tor Isn\u0026rsquo;t ‚ùå Tor is not a completely decentralised peer-to-peer system like many people believe it to be. If it was completely peer to peer it wouldn‚Äôt be very usable. Tor requires a set of directory servers that manage and keep the state of the network at any given time.\nTor is not secure against end to end attacks. An end to end attack is where an entity has control of both the first and last node in a path, as talked about earlier. This is a problem that cyber security experts have yet to solve, so Tor does not have a solution to this problem.\nTor does not hide the identity of the sender.\nIn 2013 during the Final Exams period at Harvard a student tried to delay the exam by sending in a fake bomb threat. The student used Tor and Guerrilla Mail (a service which allows people to make disposable email addresses) to send the bomb threat to school officials.\nThe student was caught, even though he took precautions to make sure he wasn‚Äôt caught.\nGurillar mail sends an originating IP address header along with the email that‚Äôs sent so the receiver knows where the original email came from. With Tor, the student expected the IP address to be scrambled but the authorities knew it came from a Tor exit node (Tor keeps a list of all nodes in the directory service) so the authorities simply looked for people who were accessing Tor (within the university) at the time the email was sent.\nTor isn\u0026rsquo;t an anonymising service, but it is a service that can encrypt all traffic from A to B (so long as an end-end attack isn\u0026rsquo;t performed). Tor is also incredibly slow, so using it for Netflix isn\u0026rsquo;t a good use case. The Difference Between Tor and a VPN üíª When you use a VPN, the VPN forwards all your internet traffic to the appropriate destination. When it does so, the VPN encrypts your traffic. All your internet service provider can see is encrypted traffic heading from your computer to the VPN. They can‚Äôt see inside your packets. They don‚Äôt know who you‚Äôre talking to - other than the VPN.\nVPN‚Äôs aren‚Äôt private in the same way that Tor is. VPNs protect you against ISPs or local adversaries (ones monitoring your laptop‚Äôs WiFi). But, they don‚Äôt protect you from themselves.\nThe VPN is the man in the middle. It knows who you are and who you‚Äôre talking to. Depending on the traffic, the VPN also decrypts your packet. Meaning they know everything. With a VPN, you have to trust it. With Tor, you don‚Äôt have to put a lot of trust in.\nIn Tor, one rogue node is survivable. If one of the nodes in our graph earlier was an adversary, they‚Äôll only know our IP address or our data packet. Tor protects you from Tor. VPN‚Äôs expect that you trust them.\nTor protects you from the Tor network. One rogue node is survivable. They don‚Äôt expect you to trust the network.\nNo one, apart from you, should know the IP addresses of the origin and destination - and know the contents of the message. Now that we have a good handle on what Tor is, let\u0026rsquo;s explore onion routing.\n Onion Routing üîê Given the network above, we are going to simulate what Tor does. Your computer is the one on the far left, and you\u0026rsquo;re sending a request to watch *Stranger Things *on Netflix (because what else is Tor used for üòâ). This path of nodes is called a *circuit. *Later on, we\u0026rsquo;re going to look into how circuits are made and how the encryption works. But for now we\u0026rsquo;re trying to generalise how Tor works. We start off with the message (we haven\u0026rsquo;t sent it yet). We need to encrypt the message N times (where N is how many nodes are in the path). We encrypt it using AES, a symmetric key crypto-system. The key is agreed using Diffie-Hellman. Don\u0026rsquo;t worry, we\u0026rsquo;ll discuss all of this later. There is 4 nodes in the path (minus your computer and Netflix) so we encrypt the message 4 times. Our packet (onion) has 4 layers. Blue, purple, orange, and teal. Each colour represents one layer of encryption. We send the onion to the first node in our path. That node then removes the first layer of encryption.\nEach node in the path knows what the key to decrypt their layer is (via Diffie-Hellman). Node 1 removes the blue layer with their symmetric key (that you both agreed on). Node 1 knows you sent the message, but the message is still encrypted by 3 layers of encryption, it has no idea what the message is.\nAs it travels down the path, more and more layers are stripped away. The next node does not know who sent the packet. All it knows is that Node 1 sent them the packet, and it\u0026rsquo;s to be delivered to Node 3. Now Node 3 strips away a layer. The final node knows what the message is and where it‚Äôs going, but it doesn‚Äôt know who sent it. All it knows is that Node 3 sent them the message, but it doesn\u0026rsquo;t know about anyone else in the path. One of the key properties here is that once a node decrypts a layer, it cannot tell how many more layers there are to decrypt. It could be as small as 1 or 2 or as large as 200 layers of encryption. Now there\u0026rsquo;s no way Amazon can find out you watch Netflix! Netflix sends back a part of Stranger Things.\nLet\u0026rsquo;s see how it works in reverse. Node 4 adds its layer of encryption now. It doesn\u0026rsquo;t know who originally made the request, all it knows is that Node 3 sent the request to them so it sends the response message back to Node 3. And so on for the next few nodes. Now the response packet is fully encrypted. Now the packet is fully encrypted, the only one who still knows what the message contains is Node 4. The only one who knows who made the message is Node 1. Now that we have the fully encrypted response back, we can use all the symmetric keys to decrypt it. You might be thinking \u0026ldquo;I\u0026rsquo;ve seen snails üêå faster than this\u0026rdquo; and you would be right. This protocol isn\u0026rsquo;t designed for speed, but at the same time it has to care about speed.\nThe algorithm could be much slower, but much more secure (using entirely public key cryptography instead of symmetric key cryptography) but the usability of the system matters. So yes, it\u0026rsquo;s slow. No it\u0026rsquo;s not as slow as it could be. But it\u0026rsquo;s all a balancing act here.\nThe encryption used is normally AES with the key being shared via Diffie-Hellman.\nThe paths Tor creates are called circuits. Let\u0026rsquo;s explore how Tor chooses what nodes to use in a circuit.\n How Is a Circuit Created? üíª Each machine, when it wants to create a circuit, chooses the exit node first, followed by the other nodes in the circuit. Tor circuits are always 3 nodes. Increasing the length of the circuit does not create better anonymity. If an attacker owns the first and last nodes in the network, you can have 1500 nodes in the circuit and it still wouldn\u0026rsquo;t make you more secure.\nWhen Tor selects the exit node, it selects it following these principles:\n Does the client\u0026rsquo;s torrc (the configuration file of Tor) have settings about which exit nodes not to choose? Tor only chooses an exit relay which allows you to exit the Tor network. Some exit nodes only allow web traffic (HTTP/S port 80) which is not useful when someone wants to send email (SMTP port 25). The exit node has to have the available capacity to support you. Tor tries to choose an exit node which has enough resources available.  All paths in the circuit obey these rules:\n We do not choose the same router twice for the same path.  If you choose the same node twice, it\u0026rsquo;s guaranteed that the node will either be the guard node (the node you enter at) or the exit node, both dangerous positions. There is a 2/3 chance of it being both the guard and exit nodes, which is even more dangerous. We want to avoid the entry / exit attacks. This isn\u0026rsquo;t okay. Node colour changes to show it\u0026rsquo;s the same.\n We do not choose any router in the same family as another in the same path. (Two routers are in the same family if each one lists the other in the ‚Äúfamily‚Äù entries of its descriptor.)  Operators who run more than 1 Tor node can choose to signify their nodes as \u0026lsquo;family\u0026rsquo;. This means that the nodes have all the same parent (the operator of their network). This is again a countermeasure against the entry / exit attacks, although operators do not have to declare family if they wish. If they want to become a guard node (discussed soon) it is recommended to declare family, although not required. Not allowed\n We do not choose more than one router in a given /16 subnet.  Subnets define networks. IP addresses are made up of 8 octets of bits. As an example, Google\u0026rsquo;s IP address in binary is:\n01000000.11101001.10101001.01101010  The first 16 bits (the /16 subnet) is 01000000.11101001 which means that Tor does not choose any nodes which start with the same 16 bits as this IP address. Again, a counter-measure to the entry / exit attacks. Not allowed If subnets sound confusing, I\u0026rsquo;ve written this Python code to help explain them:\n# ip addresses are in binary, not the usual base 10 subnets are usually powers of 2, this is 2^4. IP = \u0026quot;01000000.11101001.10101001.01101010\u0026quot; subnet = 16 # this will store the subnet address once we find it subnet_ip = [] IP_list = list(IP) counter = 0 for i in IP_list: # we want to end the loop when we reach the subnet number if counter \u0026gt;= subnet: break # the ip address segments each oclet of bits with full stops # we don't want to count a fullstop as a number # but we want to include it in the final subnet if i == \u0026quot;.\u0026quot;: subnet_ip.append(\u0026quot;.\u0026quot;) continue else: # else it is a number so we append and increment counter subnet_ip.append(i) counter = counter + 1 print(\u0026quot;Subnet is \u0026quot; + ''.join(subnet_ip))   We don‚Äôt choose any non-running or non-valid router unless we have been configured to do so. By default, we are configured to allow non-valid routers in ‚Äúmiddle‚Äù and ‚Äúrendezvous‚Äù positions.  Non-running means the node currently isn\u0026rsquo;t online. You don\u0026rsquo;t want to pick things that aren\u0026rsquo;t online. Non-valid means that some configuration in the nodes torrc is wrong. You don\u0026rsquo;t want to accept strange configurations in case they are trying to hack or break something.\n The first node must be a Guard node.  A guard node is a privileged node because it sees the real IP of the user. It‚Äôs ‚Äòexpensive‚Äô to become a guard node (maintain a high uptime for weeks and have good bandwidth). This is possible for large companies who have 99.9% uptime and high bandwidth (such as Netflix). Tor has no way to stop a powerful adversary from registering a load of guard nodes. Right now, Tor is configured to stick with a single guard node for 12 weeks at a time, so you choose 4 new guard nodes a year.\nThis means that if you use Tor once to watch Amazon Prime Video, it is relatively unlikely for Netflix to be your guard node. Of course, the more guard nodes Netflix creates the more likely it is. Although, if Netflix knows you are connecting to the Tor network to watch Amazon Prime Video then they will have to wait 4 weeks for their suspicions to be confirmed, unless they attack the guard node and take it over.\nBecoming a guard node is relatively easy for a large organisation. Becoming the exit node is slightly harder, but still possible. We have to assume that the large organisation has infinite computational power to be able to do this. The solution is to make the attack highly expensive with a low rate of success.\nThe more regular users of Tor, the harder is if for a large organisation to attack it. If Netflix controls $\\frac{50}{100}$ nodes in the network: The chance of you choosing a guard node from Netflix is 50%.\nIf suddenly 50 more normal user nodes join then that\u0026rsquo;s $\\frac{50}{150}$, reducing the probability of Netflix owning a guard node (and thus, a potential attack) and making it even more expensive. There is strength in numbers within the Tor service.\nGuard Pinning üìå When a Tor client starts up for the first time, it chooses a small \u0026amp; random set of guard nodes. For the next few months, it makes sure each circuit is using one of these pre-selected nodes as its guard node.\nThe official proposal from the Tor documentation states:\n1. Introduction and motivation Tor uses entry guards to prevent an attacker who controls some a fraction of the network from observing a fraction of every user's traffic. If users chose their entries and exits uniformly at random from the list of servers every time they build a circuit, then an adversary who had (k/N) of the network would deanonymize F=(k/N)^2 of all circuits... and after a given user had built C circuits, the attacker would see them at least once with probability 1-(1-F)^C. With large C, the attacker would get a sample of every user's traffic with probability 1. To prevent this from happening, Tor clients choose a small number of guard nodes (currently 3). These guard nodes are the only nodes that the client will connect to directly. If they are not compromised, the user's paths are not compromised. But attacks remain. Consider an attacker who can run a firewall between a target user and the Tor network, and make many of the guards they don't control appear to be unreachable. Or consider an attacker who can identify a user's guards, and mount denial-of-service attacks on them until the user picks a guard that the attacker controls.  Guard node pinning is important because of Tor‚Äôs threat model. Tor assumes that it may only take a single opening for an adversary to work out who you are talking to, or who you are. Since a single vulnerability circuit can destroy your integrity, Tor tries to minimise the probability that we will ever construct one or more vulnerable circuits.\nTor guard nodes can be DOS‚Äôd, or an attacker could have a majority share of guard nodes on the internet when you connect to try and get you. By guard node pinning, it aims to make this much harder.\nIn the event of an attacker working out your guard nodes and shutting them down, forcing you to connect to their guard nodes. Or, you connect to a guard node controlled by an adversary Tor has algorithms in place to try and detect this. Outined here.\nWhat Is a Directory Node? üìÇ The state of the Tor network is tracked and publicised by a group of 9 trusted servers (as of 2019) known as directory nodes. Each of which is controlled by a different organisation.\nEach node is a seperate organisation because it provides redundancy and distributes trust. The integrity of the Tor network relies on the honesty and correctness of the directory nodes. So making the network resilient and distributing trust is critical.\nDirectory nodes maintain a list of currently running relays (publicly listed node in the Tor network). Once per hour directory nodes publish a consensus together. The consensus is a single document compiled and voted on by each directory node. It ensures that all clients have the same information about the relays that make up Tor.\nWhen a Tor user (a client or a node) wants to know the current state of the network, it asks a directory node. As we‚Äôll see later, directory nodes are essential for all parts of Tor, especially in hidden services. Relays keep the directory nodes up to date. They send directory node(s) a notification whenever they come online or updated. Whenever a directory node receives a notification, it updates its personal opinion on the current state of the Tor network. All directory nodes then use this opinion to form a consensus of the network. Let‚Äôs now look at what happens when disagreements arise in the directory services when forming a consensus.\nThe first version of Tor took a simple approach to conflict resolution. Each directory node gave the state of the network as it personally saw it. Each client believed whichever directory node it had spoken to recently. There is no consensus here among all directory nodes.\nIn Tor, this is a disaster. There was nothing ensuring that directory nodes were telling the truth. If an adversary took over one directory node, they would be able to lie about the state of the network. If a client asked this adversary controlled directory for the state of the network, it‚Äôd return a list. This list contains only nodes that the adversary controlled. The client would then connect to these adversary nodes.\nThe second version of the Tor directory system made this attack harder. Instead of asking a single directory node for its opinion, clients asked every directory node and combined their opinions into a consensus. But, clients could form differing views on the network depending on when they had last spoken to each directory node. This gave way to statistical information leakage - not as bad as Tor 1.0. Besides, every client had to talk to every directory node, which took time and was expensive.\nThe third and current version of the directory system moved the responsibility of calculating a consensus from clients to directory nodes. What Are Bridge Nodes? üåâ I‚Äôm not sure if you saw it earlier, but I made the distinction between nodes in the directory services and nodes that aren‚Äôt.\nIf a repressive state wants to block Tor, it uses the directory nodes. Directory nodes keep up-to-date lists of Tor relay nodes and are publicly available for anyone to download.\nThe state can query a directory node for a list of active Tor relays, and censor all traffic to them.\nTor keeps an up-to-date listing of countries where it is possibly blocked (censored) if you\u0026rsquo;re interested.\nTor helps its users circumvent the censorship by hiding the fact they are using Tor. They do this through a proxy known as a Bridge Node. Tor users send their traffic to the bridge node, which forwards the traffic onto the user‚Äôs chosen guard nodes. The full list of Bridge nodes is never published, making it difficult for states to completely block Tor. You can view some bridge nodes here. If this doesn‚Äôt work, Tor suggests:\n Another way to get bridges is to send an email to bridges@torproject.org. Please note that you must send the email using an address from one of the following email providers: Riseup or Gmail.\n It‚Äôs possible to block Tor another way. Censoring states can use Deep Packet Inspection (DPI)to analyse the shape, volume, and feel of each packet. Using DPI states can recognise Tor traffic, even when they connect to unknown IP addresses or are encrypted.\nTo circumvent this, Tor developers have made Pluggable Transports (PT). These transform Tor traffic flow between the client and the bridge. In the words of Tor‚Äôs documentation:\nThis way, censors who monitor traffic between the client and the bridge will see innocent-looking transformed traffic instead of the actual Tor traffic. External programs can talk to Tor clients and Tor bridges using the pluggable transport API, to make it easier to build interoperable programs.\n Tor Hidden Services üïµÔ∏è‚Äç‚ôÄÔ∏è Ever heard those rumours \u0026ldquo;there are websites on the dark-web, on Tor that when you visit them you\u0026rsquo;ll see people doing nasty things, selling illegal things or worse: watching The Hangover Part 3\u0026rdquo;\nWhen people talk about these websites they are talking about Tor Hidden Services.\nThese are a wild concept and honestly deserve an entire blogpost on their own. Hidden services are servers, like any normal computer server. Except in a Tor Hidden Service it is possible to communicate without the user and server knowing who each other are. The device (the question mark) knows that it wants to access Netflix, but it doesn\u0026rsquo;t know anything about the server and the server doesn\u0026rsquo;t know anything about the device that\u0026rsquo;s asked to access it. This is quite confusing, but don\u0026rsquo;t worry, I\u0026rsquo;m going to explain it all with cool diagrams. ‚ú®\nWhen a server is set up on Tor to act as a hidden service, the server sends a message to some selected Onion Routers asking if they want to be an introduction point to the server. It is entirely up to the server as to who gets chosen as an introduction point, although usually they ask 3 routers to be their introduction points. The introduction points know that they are going to be introducing people to the server.\nThe server will then create something called a hidden service descriptor which has a public key and the IP address of each introduction point. It will then send this hidden service descriptor to a distributed hash table which means that every onion router (not just the introduction points) will hold some part of the information of the hidden service.\nIf you try to look up a hidden service the introduction point responsible for it will give you the full hidden service descriptor, the address of the hidden service\u0026rsquo;s introduction points.\nThe key for this hash table is the onion address and the onion address is derived from the public key of the server.\nThe idea is that the onion address isn‚Äôt publicised over the whole Tor network but instead you find it another way like from a friend telling you or on the internet (addresses ending in .onion).\nThe way that the distributed hash table is programmed means that the vast majority of the nodes won\u0026rsquo;t know what the descriptor is for a given key.\nSo almost every single onion router will have minimal knowledge about the hidden service unless they explicitly want to find it. Let\u0026rsquo;s say someone gave you the onion address. You request the descriptor off the hash table and you get back the services introduction points.\nIf you want to access an onion address you would first request the descriptor from the hash table and the descriptor has, let‚Äôs say 4 or 5 IP addresses of introductory nodes. You pick one at random let\u0026rsquo;s say the top one. You‚Äôre going to ask the introduction point to introduce you to the server and instead of making a connection directly to the server you make a rendezvous point at random in the network from a given set of Onion Routers. This should say \u0026ldquo;Tor node\u0026rdquo;. I\u0026rsquo;ve lost the files for these graphs (thanks LucidChart). Terribly sorry I can\u0026rsquo;t update this. You then make a circuit to that rendezvous point and you send a message to the rendezvous point asking if it can introduce you to the server using the introduction point you just used. You then send the rendezvous point a one time password (in this example, let\u0026rsquo;s use \u0026lsquo;Labrador\u0026rsquo;).\nThe rendezvous point makes a circuit to the introduction point and sends it the word \u0026lsquo;Labrador\u0026rsquo; and its IP address. The introduction point sends the message to the server and the server can choose to accept it or do nothing. If the server accepts the message it will then create a circuit to the rendezvous point. The server sends the rendezvous point a message. The rendezvous point looks at both messages from your computer and the server. It says \u0026ldquo;well, I\u0026rsquo;ve received a message from this computer saying it wants to connect with this service and I‚Äôve also received a message from the service asking if it can connect to a computer, therefore they must want to talk to each other\u0026rdquo;.\nThe rendezvous point will then act as another hop on the circuit and connect them. In short, a hidden service works like this, taken from here:\n A hidden service calculates its key pair (private and public key, asymmetric encryption). Then the hidden service picks some relays as its introduction points. It tells its public key to those introduction points over Tor circuits. After that the hidden-service creates a hidden service descriptor, containing its public key and what its introduction points are. The hidden service signs the hidden service descriptor with its private key. It then uploads the hidden service descriptor to a distributed hash table (DHT). Clients learn the .onion address from a hidden service out-of-band. (e.g. public website) (A $hash.onion is a 16 character name derived from the service‚Äôs public key.) After retrieving the .onion address the client connects to the DHT and asks for that $hash. If it exists the client learns about the hidden service‚Äôs public key and its introduction points. The client picks a relay at random to build a circuit to it, to tell it a one-time secret. The picked relay acts as rendezvous point. The client creates a introduce message, containing the address of the rendezvous point and the one-time secret, before encrypting the message with the hidden service‚Äôs public key. The client sends its message over a Tor circuit to one of the introduction points, demanding it to be forwarded to the hidden service. The hidden service decrypts the introduce message with its private key to learn about the rendezvous point and the one-time secret. The hidden service creates a rendezvous message, containing the one-time secret and sends it over a circuit to the rendezvous point. The rendezvous point tells the client that a connection was established. Client and hidden service talk to each other over this rendezvous point. All traffic is end-to-end encrypted and the rendezvous point just relays it back and forth. Note that each of them, client and hidden service, build a circuit to the rendezvous point; at three hops per circuit this makes six hops in total.   Attacks on Tor ü§∫ Tor projects its users from analysis attacks. The adversary wants to know who Alice is talking to. Yet, Tor does not protect against confirmation attacks. In these attacks, the adversary aims to answers the question ‚ÄúIs Alice talking to Bob?‚Äù\nConfirmation attacks are hard and need a lot of preparation and resources. The attacker needs to be able to track both ends of the circuit. The attacker can either directly track each devices internet connection or the guard and exit nodes.\nIf Alice sends a packet like this:\n# (timestamp, size, port, protocol) (17284812, 3, 21, SSH)  And Bob receives this packet, the attacker can see that the packets are the same - even though the attacker cannot see what the packet is as it is encrypted. Does Bob tend to receive packets at the same time that Alice sends them? Are they the same size? If so, it is reasonable to infer that Alice and Bob are communicating with each other.\nTor breaks packets up into sizeable chunks for a reason - to try and prevent this kind of thing. Tor is working on padding all packets to make this harder.\nThey‚Äôre discussing adding packet order randomisation too. But this is too costly at the moment. The Tor browser does add some extra defences, such as reordering packets.\nIf Alice sends the packets, A, B, C and Bob receives them in B, A, C it is harder to detect that they are the same. It‚Äôs not foolproof, but it does become harder.\nAn attack where the attacker tries to control both ends of the circuit is called a Sylbil Attack. Named after the main character of the book Sybil by Flora Rheta Schreiber. We discussed some of this earlier, where an attacker controls both the guard \u0026amp; exit nodes.\nSybil attacks are not theoretical. In 2014 researchers at Carnegie Mellon University appeared to successfully carry out a Sybil Attack against the real-life Tor network.\nWhen Lizard Squad - a group of hackers tried to perform a Sybil attack, a detection system alarmed. Tor has built-in monitoring against these kinds of events, and they are working on more sophisticated monitoring against Sybil attacks.\nIn 2007 Dan Egerstad - a Swedish security consultant, revealed he has intercepted usernames and passwords sent through Tor by being an exit node. At the time, these were not TLS or SSL encrypted.\nInterestingly, Dan Egerstad had this to say on the Tor nodes:\n If you actually look into where these Tor nodes are hosted and how big they are, some of these nodes cost thousands of dollars each month just to host because they‚Äôre using lots of bandwidth, they‚Äôre heavy-duty servers and so on. Who would pay for this and be anonymous?\n Tor does not normally hide the fact that you are using Tor. Many websites (such as BBC‚ÄôS iPlayer or editing Wikipedia) block you when using a known Tor node.\nSome applications, under Tor, reveal your true IP address. One such application is BitTorrent.\nJansen et al described an attack where they DDOS exit nodes. By degrading the network (removing exit nodes) an attacker increases the chance to getting an exit node.\nTor users who visit a site twice, once on Tor and once off, can be tracked. The way you move your mouse is unique. There is a JavaScript time measurement bug report on the Tor project that shows how it‚Äôs possible to monitor the mouse locations on a site (even when on Tor). Once you fingerprint someone twice, you know they‚Äôre the same person.\nIt should be noted, that Tor browser offers 3 levels of security (located in the settings). The highest security level disables JavaScript, some images (as they can be used to track you) and some fonts too. The lesson is, if you want high-security Tor, use the high-security version.\nNow, all these attacks sound cool. But that‚Äôs not how most Tor users are caught. Most Tor users make mistakes and are caught because of themselves.\nTake Dredd pirate Roberts, Founder of the Silk Road dark marketplace. He gave himself away by posting about it on social media.\nMost Tor users are caught (if they‚Äôre doing illegal things) by bad operational security, and not normally because of a security issue with Tor.\nIt‚Äôs worth repeating this story, that we saw earlier.\nIn 2013 during the Final Exams period at Harvard, a student tried to delay the exam by sending in a fake bomb threat. The student used Tor and Guerrilla Mail (a service which allows people to make disposable email addresses) to send the bomb threat to school officials.\nThe student was caught, even though he took precautions to make sure he wasn‚Äôt caught.\nGuerilla mail sends an originating IP address header along with the email that‚Äôs sent to the receiver, so it knows where the original email came from. With Tor, the student expected the IP address to be scrambled but the authorities knew it came from a Tor exit node (Tor keeps a list of all nodes in the directory service) so the authorities looked for people who were accessing Tor (within the university) at the time the email was sent.\nIf this person went to a coffee shop or something, he probably would of be fine.\nThere‚Äôs a fantastic talk at DEFCON 22 about how Tor users got caught. None of the stories mentioned was caused by Tor, but rather bad OpSec.\n Conclusion üìï Tor is a fascinating protocol full of algorithms that have been refined over the years. I\u0026rsquo;ve come to appreciate Tor, and I hope you have to. Here is a list of things we\u0026rsquo;ve covered:\n What Tor is What Tor Isn\u0026rsquo;t Attacks on the Tor network Onion Routing How circuits are made How nodes in a circuit are selected How hidden services work  If you want to learn more, check out the paper on Tor titled \u0026ldquo;Tor: The Second-Generation Onion Router\u0026quot;.\nIf you liked this article and want more like it, sign up to my email list below ‚ú® I\u0026rsquo;ll only send you an email when I have something new, which is every month / 2 months or so.\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  At least this isn\u0026rsquo;t a full screen pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\nIf you\u0026rsquo;re feeling extra generous, I have a PayPal  and even a Patreon. I\u0026rsquo;m a university student who writes these articles in my spare time. This blog is my full time job, so any and all donations are appreciate\n","permalink":"https://polymath.cloud/how-does-tor-really-work/","summary":"Today, we\u0026rsquo;re going to do a technical deep-dive into how Tor really works.\nNo mention of how to access Tor, no mention of what might be on Tor. This is how Tor works.\nWithout speculation and without exaggeration of what Tor is. Just a deep-dive into the technical stuff of how Tor works.\nThis article is designed to be read by anyone, with **ZERO **knowledge on networking or Tor.\nLet\u0026rsquo;s dive right in.","title":"How Does Tor Really Work? The Definitive Visual Guide (2020)"},{"content":"This is an informed opinion piece on designing effective peer to peer (P2P) networks. I\u0026rsquo;ve written extensively about peer to peer networks, and have even designed my own (albeit, bad) cryptocurrency.\nBy the end of the article, we should have a good understanding of the important questions to answer when designing effective P2P networks.\nWhen Should I Use a Peer to Peer Network? P2P networks can be used for all networking. We need to use the right tool for the job.\nQuickly \u0026amp; automatic scaling is their game. P2P networks enhance with more users, not degrade.\nIf we are building a platform with a shared goal (i.e. shares files) and we can imagine the platform growing uncontrollably big, P2P networks are good.\nOr if we do not want anyone to shut down our network (in a client-server model, turn off your servers) a P2P network is effective.\nThere are 2 types of P2P Networks:\n Full P2P networks  These are networks where everyone node is equal.\nHybrid P2P networks  Certain nodes have more power than others.\nLet\u0026rsquo;s walk through what all good peer to peer networks share.\n\rRewards All great peer to peer networks have reward systems. The user does some work, and they are rewarded.\nEven if the reward isn\u0026rsquo;t clearly defined, there is always a reward for taking part in the peer to peer network. And always a reward for giving back to the network.\nRewards are paramount to P2P networks and my favourite thing to talk about!\nIn Bitcoin, this is earning Bitcoin. BitTorrent rewards participants with faster download speeds. Tor rewards other Tor members with more privacy.\nAll of these rewards are given for contributing to the network.\nThe idea of a reward is to eliminate free-riders who partake in the network without giving anything back. There are 2 ways to discourage free-riders:\n Forcing every user to give back. Rewarding users who give back.  Tor is the former. The only reward that can be given is to become a guard node, which provides no obvious benefit for the user other than to feel good about themselves.\nThe latter is what most peer to peer networks use, rewarding users who give back.\nIn BitTorrent, those who seed (upload) are rewarded with higher download rates. The more you seed, the faster you can download.\nIn Bitcoin, users are rewarded for mining the blockchain with Bitcoin.\nThis leads us to look at peer to peer networks from 2 interesting perspectives. Human civilisations, or reinforcement learning machines.\nLet\u0026rsquo;s start with human civilisations.\n\rHuman Civilisations We do work, and we get rewarded. Capitalism. In semi P2P networks (where one node has more power than the others) we can almost perfectly replicate capitalism.\nIf we force everyone to do the same work for the same reward then it is communism.\nLuxury communism uses machines to do the heavy lifting leaving humans to do other things and is a new 21st-century take. This more closely relates to P2P networks than traditional communism.\nAs P2P networks grow, eventually if not governed properly it will fall back into an client-server architecture. Why use Jim\u0026rsquo;s computer to download ubuntu.iso when you can download it from LargeCorp which has a much faster speed.\nWith planning, we can build a dictatorship of the proletariat where every ordinary node has power in the network. Not just those with higher rewards.\nThere will always be those with more power than others (perhaps they have more computers on the network) but the point is that everyone has some power over the network.\nAnd the ordinary nodes will likely always have more power than larger clusters of nodes, as seen in Bitcoin.\nModelling P2P networks as political movements allows us to talk about P2P networks as more than just networks, as entire communities.\nEventually people with little to no knowledge about networking can discuss and change how the network operates using these abstractions.\n\rReinforcement Learning We can use artificial intelligence to automatically optimise a P2P network. Humans are slow when it comes to making changes compared to computers.\nP2P networks already use technology to find the shortest routes or preferred routes. As networks become more and more complicated, simple handwritten algorithms might not be enough.\nPicture this nifty example.\nIn our network, we have multiple nodes all interconnected. Each node has a rating.\nThis rating signifies how good that node is. A good rating based on how much reward an individual has. Whether that reward is from speed, accuracy or trust is problem dependant.\nEvery time this node is used, its personal reward is increased. Much like Kohonen\u0026rsquo;s competitive learning rules.\nBut why stop there? If the node is faster, trustworthy, contributes heavily to the network it should have a higher reward rating.\nAnd our goal is to create the \u0026ldquo;best\u0026rdquo; path across the network, taking into account all of these numbers and to maximise our reward, whatever that may be.\nTor already has a similar (albeit smaller) system in place like this. Guard nodes, bridge nodes, and more.\nThis seems like the perfect scenario for reinforcement learning. Multiple inputs to maximise our reward. Exploratory choices, meaning that a node with a \u0026ldquo;bad\u0026rdquo; reating is chosen, preventing some nodes from hogging all the resources.\nReinforcement learning is the closet computer learning to how humans learn according to Sutton \u0026amp; Barto.\nHumans will eventually optimise manually. Where good nodes have better jobs or are chosen more than others. Reinforcement learning is much faster than any human could be.\nWe, as humans, naturally \u0026amp; manually improve the network over time. What if we could use AI to speed this process up?\n\rOptimisation of the Network An ideal P2P network will improve the more people that use it.\nIn Tor, the more people that use it the more privacy is given. I talk more about this in my Tor blog post.\nA simple distinction, but one that must be made. As the network grows older, ideally, it reaches its global optimised state.\nUnlike client-server, where the more users there are the harder it becomes to maintain the network.\n\rEase of maintaining the network decreasing day-by-day\r\rTake the example of downloading a file. Client-Server starts out being incredibly fast, but over time as the file becomes more popular that download speed degrades.\n\rEase of maintaining network increases.\r\rWith a P2P network, at the start it is slow to download (assuming the initial uploader is slow) but the speed increases over time. What\u0026rsquo;s important is that over ttime, client-server gets worse with more users but P2P gets better.\nOptimisation of the network as it grows is often done through the rewards system.\nAs Tor grows, the privacy of each user increases. Thus, the more that use Tor, the better the privacy.\nEach user has their personal reward, but together this creates a positive reward for the whole network.\nIn Bitcoin, the more that mine Bitcoin, the harder it is to mine, and the larger incentive it is to use better computers. Better computers = faster mines = more money.\nThis creates competition amongst users. Who can contribute to the network the most? Users are fighting for their own personal reward, but this fight improves the network as a whole.\nIt is almost impossible to perform a 51% attack on the network when miners are hyper-competitive like this.\nUsers work towards their own personal rewards, which means the network gets better from not only more users but better rewards. The entire network scales majestically upward.\nWhen choosing a reward, it is important to look at the local rewards (what the user gets) and to look at the greater rewards (what the network will get for participating).\nI also recommend rewards which increase as the network grows. Scalable rewards. If the price of Bitcoin did not scale with how many users it had, the network degrades or upgrades much slower over time.\n\rHumble Beginnings With a client-server architecture, it can be amazing from the start. But with a peer to peer network, it sucks for the first few users.\nWith Bitcoin, what was the incentive? You get this worth coin\u0026hellip;. nothing at all.\nTor. The incentive? Well, if there are only 3 users then there is no incentive. No privacy. 51% attacks is a matter of whether someone loses WiFi on the train or not.\nBitTorrent. The incentive? You can download this one person\u0026rsquo;s files.\nIn peer to peer networks, generally, they suck for the first couple users and are only worthwhile over time.\nSo how then, do we build an effective peer to peer network that other people will want to use?\nThere are 2 methods to this.\n  Forceful use You can force users to use the network. This is how Tor got its start. The US Naval Resarch Labs built Tor, and effectively they could force others in the Navy to use it\n  Incredible Technology The other option is incredible technology. In a peer to peer network, the first few users are often those who recognise how incredible the technology is.\n  Think about Bitcoin. The first few users fell in love with the technology behind it, and truly believed it could one day be great.\nWith a great rewards system in place, the first users of Bitcoin realised it could grow up to be something huge. Amazing technology attracts the first few users, and those users are often technologically minded.\n\rJobs for the People In almost all peer to peer networks, jobs are assigned to nodes.\nIn Bitcoin, we have miners whose job it is to mine the blockchain.\nIn Tor, we have guard nodes.\nIf a node has proven to be trustworthy than we shall make it a guard node. If a node wants to mine the blockchain, it becomes a miner.\nThese nodes do not have more rights than the other nodes, they simply have a job to do. And sometimes this job provides a reward, and sometimes it doesn\u0026rsquo;t.\nIf we give everyone the same job, the network will tend towards global optimisation much slower.\nLet\u0026rsquo;s say we have a new file-sharing system. Our system will let you download files from others.\nWe have a file, Ubuntu.iso, which is being seeded by 10 people.\nWe choose at randomly a seed to download from. This seed has an upload speed of 1 Mbps while all the other seeders have an upload speed of 200mbps.\nIt makes logical sense to use the uploaders with faster speed.\nIt makes sense logically to choose from a subsection of people with high upload speeds. Effectively, we have given these people \u0026lsquo;jobs\u0026rsquo;.\nThere are 2 types of jobs in peer to peer networks:\n Rewarded Jobs Unpaid Internships (jobs)  With rewarded jobs, the uploaders get a higher reward for working. This reward might be faster download speeds, such as in BitTorrent.\nWith unpaid jobs, there is no reward. There is no incentive for one to choose a job, it is gifted to those. This is how guard nodes work in Tor.\nIf we have a job which peopl have to opt-in to, but doesn\u0026rsquo;t provide a reward it is unlikely for many people to opt-in.\nDeciding on what jobs to give, and whether it is rewarded or not is problem specific.\nFor example, we have a job called \u0026ldquo;maintainer of the Blockchain\u0026rdquo;. This job means people have a copy of the blockchain and maintains it. And only they do, no one else can. Any cryptocurrency nerd reading this may already see the problem.\nTo view the blockchain, you need to have this job. But not every citizen of the world has a spare 300gb to view the chain. They cannot get the job, because they do not meet the required specification.\nYou also have to meet a plethora of other specifications. Most of them a normal home user cannot achieve.\nThis is another issue. Can we reject people if they do not meet the job specification? Again, problem specific.\nWith only a small per cent controlling the blockchain, it leaves it open to a 51% attack. A small few will hold all the power. It will not work well in this instance.\nI propose that jobs are automatically assigned based on the specification of the user, but any user can request a job.\nThe only jobs they should be rejected for is high trust jobs, such as guard nodes. But, the specification of their computer should not be taken into account for trust jobs.\nHumans picking jobs are too slow. The network needs to react fast and scale fast. Humans are not fast. So automatic assignment it is.\nBut we do not want to prevent humans from accessing resources because of their circumstances.\nWhen assigning jobs, the jobs must work in harmony.\nWe should take inspiration from beehives or ant colonies for this. Human jobs are simply too hard to model, to focus on a much smaller example is wise.\nShould there be a punishment if someone takes a job for which they are unfit? Should a 30gb computer take the punishment for trying to maintain a 300gb file?\nOn the one hand, only a very small per cent of the population will ignore the assigned job and choose something for which they are unfit.\nBut, to achieve global optimisation we must make sure every single thing is accounted for.\nUnfortunately, in this world, those that do jobs that they are not capable of should be punished. I would not say to reduce the resources available to them through the job, but perhaps reduce the reward of using the network in some way.\n\rData Structures Every single effective peer to peer network uses data structures.\nThe blockchain is just a fancy linked list with some extra properties.\nBitTorrent\u0026rsquo;s magnet links work based on distributed hash tables.\nData structures are vital to peer to peer networks. I do not want to get into every data structure available, but knowledge of them is important.\nWe can design a network using a distributed data structure that already exists, or we can build a new data structure/algorithm based on pre-existing ones.\n\rPolicy Changes Throughout this article, I have talked about designing the network to be perfect from the get-go. Anyone knows this isn\u0026rsquo;t possible. So how then, do we change the network when it\u0026rsquo;s already running? How do we implement policy changes?\n Dictatorship Let the people decide The people can form a democracy  In our first instance, we have a dictatorship.\nYou, the creator decides on changes. You create these changes, and they go out to the network. We don\u0026rsquo;t care what the participants think, only that the change has taken place.\nThis is the most effective for easily implementing policy changes, but it ruins the trust.\nGood peer to peer networks reduces trust. We should not need to trust anyone. However, trust is important in some networks. It depends on the network itself.\nIf the network was for a digital currency, why would you trust this entire currency in the hands of a single person?\nBut for a privacy centred network, having this trust in one person or body of people can increase the trust throughout the network. It reduces the chance of a 51% attack backdoor in the early days, building trust from day 0.\nAs the network progresses, it strays further and further away from a 51% attack. Which means we lose trust, we do not need to trust that it is safe from a 51% attack if the network is large enough.\nIn the early days of a P2P network, it is very much a dictatorship. A few small people decide on changes to the network (think of the early days of Bitcoin) and this eventually moves towards democracy as the network grows.\nBut again, this brings problems. What if there is a critical failure in the code and there needs to be a change made during the networks primetime? This is for the designer to decide.\nWe can alternatively let the people decide.\nFrom the get-go, no single person has full control. Every time a change is made, a % of the network (likely 51) will need to agree to the change. Complete control for the network. No trusting the developer involved.\nAt the start, this may be problematic. What if we have a node in the network purely from FOMO and doesn\u0026rsquo;t care about updates?\nHumans are incredibly slow too. Imagine a critical bug in the code that had to be fixed right there and then. Humans may take weeks to decide. Many will not even respond to the decision.\nThe alternative is a democracy.\nGive certain people more power than others. Have the community vote in leaders, or have the leaders be pre-selected.\nThese leaders then decide on changes to the codebase. This reduces trust, especially if they are voted in.\nBut nothing is stopping them from teaming together to get the maximum personal reward while not doing anything for the many.\nAll in all, deciding on policy changes is a tricky subject. And one that should be decided before the network is made.\nAlthough something to remember is trust. Will the users need to trust you, personally?\nIf so, try and work towards a goal where that trust is reduced. Diversify that trust over to others. Remove trust completely, make them only trust themselves.\nEffective peer to peer networks is unlike client-server models where one person controls all the power. Effective P2P networks are for the people.\n\rThe Cathedral or the Bazaar The Cathedral is waterfall development. Slow, well planned. The people working on it are cathedral builders. The final product is presented and sold to the public as the final product.\nThe Bazaar is the opposite. Work fast. Break things. Release early. Release often. Listen to your customers.\nWhen building a full P2P network, we would build both the cathedral and the bazaar.\nIn an ideal full P2P network, eventually, the creator\u0026rsquo;s power dwindles to almost nothing (they become just another normal node in the network).\nThis is what Satoshi Nakamoto did. They created the cathedral first, and then over time moved to the bazaar - eventually losing all power to change anything in the network without the permission of the network.\nOur P2P network could explode on day 1 and we would have no control to finish building the cathedral.\nFor this reason, in a full P2P network where all nodes are equal, we should build a cathedral and then transition naturally to a bazaar.\nIn semi P2P network where some nodes have more power than others, the developer doesn\u0026rsquo;t have to give up their child anytime soon.\nHowever, this requires the nodes to trust the developers. Something that not all P2P networks have the liberty of.\n\rOpen Source or Not? The main thing in P2P networks is removing trust. We don\u0026rsquo;t necessarily want people to trust us when building a network, preferably we would want to remove as much trust as possible.\nClosed source systems do not instil much trust, therefore we must choose an open-source system.\n\rConclusion We now know the biggest questions to ask when desiging effective P2P networks.\n What will the rewards be? What jobs are there? Can users choose their own jobs? Should there be a punishment? If so, what punishment? Are jobs paid or unpaid? Is it hybrid, or a full network?  ","permalink":"https://polymath.cloud/p2pnetworks/","summary":"This is an informed opinion piece on designing effective peer to peer (P2P) networks. I\u0026rsquo;ve written extensively about peer to peer networks, and have even designed my own (albeit, bad) cryptocurrency.\nBy the end of the article, we should have a good understanding of the important questions to answer when designing effective P2P networks.\nWhen Should I Use a Peer to Peer Network? P2P networks can be used for all networking.","title":"Designing Effective Peer to Peer Networks"},{"content":"You want to do TryHackMe, but perhaps you do not want to pay for a subscription. This means you will not get access to paths, which are a guided series of rooms to take you from not knowing something to knowing something.\nThis blog post will detail a free path I have created for you, taking you from a beginner to a medium level. This blog post will stay continuously updated with new rooms as they come out and will improve with suggestions from the community.\nThis will be for an offensive pentesting path, but some rooms will feature blue teaming too. Red teaming is offensive, blue teaming is defensive.\nNote: This is a community provided path for you featuring free rooms only. For the best experience, with a path made for you with premium rooms please subscribe.\nPlease scroll down to the end to get a Markdown version, so you can use this in your personal notes.\nNote: If you have any concerns with these rooms or want to add more, DM on Discord or on Reddit. I\u0026rsquo;m Mod Bee üëã\nIntroduction This blog post is split into multiple levels, each one aiming to teach you one part. You can skip levels if you\u0026rsquo;d like, but they are all essential to a hackers mindset.\nRooms on TryHackMe are broken into two types:\n Walkthroughs  They walk you through the problem domain and teach you the skills required.\n Challenge (CTF)  You are given a machine and you have to hack into it, without any help.\nYou are allowed to look at walkthroughs for challenge CTFs, however, try to only read what is necessary if you get stuck. And only read the walkthrough if you are really stuck.\nIf you would like a hint without reading a walkthrough, you can ask on our Discord, Subreddit or Forums.\nLevel 1 - Intro The absolute bare minimum you should know before doing any CTFs.\nOpenVPN https://tryhackme.com/room/openvpn Welcome https://tryhackme.com/jr/welcome Intro to Researching https://tryhackme.com/room/introtoresearch Learn Linux https://tryhackme.com/room/zthlinux Crash Course Pentesting https://tryhackme.com/room/ccpentesting\nHere are some introductory style capture the flag (challenge) like rooms to help you out. These are classed on the site as walkthroughs other than OHsint, however, they feature a lot of challenge\nGoogle Dorking https://tryhackme.com/room/googledorking OHsint https://tryhackme.com/room/ohsint Shodan.io https://tryhackme.com/room/shodan\nLevel 2 - Tooling The most important thing in a pentester\u0026rsquo;s toolbox, tooling. This section aims to teach you the absolute minimum of neccesary tools to make you a better hacker.\nTmux https://tryhackme.com/room/rptmux Nmap https://tryhackme.com/room/rpnmap Web Scanning https://tryhackme.com/room/rpwebscanning Sublist3r https://tryhackme.com/room/rpsublist3r Metasploit https://tryhackme.com/room/rpmetasploit Hydra https://tryhackme.com/room/hydra Linux Privesc https://tryhackme.com/room/linuxprivesc Web Scanning https://tryhackme.com/room/rpwebscanning\nAgain, here are some more introductory CTFs. These are a little harder but with your new knowledge of tools, you should smash them in no time. Don\u0026rsquo;t worry if you can\u0026rsquo;t, that\u0026rsquo;s what hacking is all about ‚Äì trying harder until you can no longer try and then learning from what you couldn\u0026rsquo;t do.\nVulnversity - https://tryhackme.com/room/vulnversity Blue - https://tryhackme.com/room/blue Simple CTF https://tryhackme.com/room/easyctf Bounty Hacker https://tryhackme.com/room/cowboyhacker\nLevel 3 - Crypto \u0026amp; Hashes with CTF practice Understanding cryptography is essential to any hacker. This section will teach you the basics and give you some CTF practice.\nCrack the hash https://tryhackme.com/room/crackthehash Agent Sudo https://tryhackme.com/room/agentsudoctf The Cod Caper https://tryhackme.com/room/thecodcaper Ice https://tryhackme.com/room/ice Lazy Admin https://tryhackme.com/room/lazyadmin Basic Pentesting https://tryhackme.com/room/basicpentestingjt\nLevel 4 - Web OWASP top 10 https://tryhackme.com/room/owasptop10 Inclusion https://tryhackme.com/room/inclusion Injection https://tryhackme.com/room/injection Vulnversity https://tryhackme.com/room/vulnversity Basic Pentesting https://tryhackme.com/room/basicpentestingjt Juiceshop https://tryhackme.com/room/owaspjuiceshop Ignite https://tryhackme.com/room/ignite Overpass https://tryhackme.com/room/overpass Year of the Rabbit https://tryhackme.com/room/yearoftherabbit DevelPy https://tryhackme.com/room/bsidesgtdevelpy Jack of all trades https://tryhackme.com/room/jackofalltrades Bolt https://tryhackme.com/room/bolt\nLevel 5 - Reverse Engineering Reverse engineering is the art of taking a compiled program and figuring out what it does. This section will teach you everything you need to know about it.\nIntro to x86 64 https://tryhackme.com/room/introtox8664 CC Ghidra https://tryhackme.com/room/ccghidra CC Radare2 https://tryhackme.com/room/ccradare2 CC Steganography https://tryhackme.com/room/ccstego Reverse Engineering https://tryhackme.com/room/reverseengineering Reversing ELF https://tryhackme.com/room/reverselfiles Dumping Router Firmware https://tryhackme.com/room/rfirmware\nLevel 6 - Privilege Escalation Sudo Security Bypass https://tryhackme.com/room/sudovulnsbypass Sudo Buffer Overflow https://tryhackme.com/room/sudovulnsbof Linux Privesc Arena https://tryhackme.com/room/linuxprivescarena Windows Privesc Arena https://tryhackme.com/room/windowsprivescarena Windows Privesc https://tryhackme.com/room/windows10privesc Blaster https://tryhackme.com/room/blaster Ignite https://tryhackme.com/room/ignite Kenobi https://tryhackme.com/room/kenobi Capture the flag https://tryhackme.com/room/c4ptur3th3fl4g Pickle Rick https://tryhackme.com/room/picklerick\nLevel 7 - CTF practice Here\u0026rsquo;s some CTF practice for you.\nPost Exploitation Basics https://tryhackme.com/room/postexploit Smag Grotto https://tryhackme.com/room/smaggrotto Inclusion https://tryhackme.com/room/inclusion Dogcat https://tryhackme.com/room/dogcat LFI basics https://tryhackme.com/room/lfibasics Buffer Overflow Prep https://tryhackme.com/room/bufferoverflowprep Overpass https://tryhackme.com/room/overpass Break out the cage https://tryhackme.com/room/breakoutthecage1 Lian Yu https://tryhackme.com/room/lianyu\nLevel 8 - Windows And finally, Windows practice! Note that Windows machines physically cost more resources to run, so most of the Windows machines are locked behind a subscription.\nAttacktive Directory https://tryhackme.com/room/attacktivedirectory Retro https://tryhackme.com/room/retro Blue Print https://tryhackme.com/room/blueprint Anthem https://tryhackme.com/room/anthem Relevant https://tryhackme.com/room/relevant\nMarkdown Version # Level 1 - Intro\r- [ ] OpenVPN https://tryhackme.com/room/openvpn\r- [ ] Welcome https://tryhackme.com/jr/welcome\r- [ ] Intro to Researching https://tryhackme.com/room/introtoresearch\r- [ ] Learn Linux https://tryhackme.com/room/zthlinux\r- [ ] Crash Course Pentesting https://tryhackme.com/room/ccpentesting\r**Introductory CTFs to get your feet wet**\r- [ ] Google Dorking https://tryhackme.com/room/googledorking\r- [ ] OHsint https://tryhackme.com/room/ohsint\r- [ ] Shodan.io https://tryhackme.com/room/shodan\r# Level 2 - Tooling\r- [ ] Tmux https://tryhackme.com/room/rptmux\r- [ ] Nmap https://tryhackme.com/room/rpnmap\r- [ ] Web Scanning https://tryhackme.com/room/rpwebscanning\r- [ ] Sublist3r https://tryhackme.com/room/rpsublist3r\r- [ ] Metasploit https://tryhackme.com/room/rpmetasploit\r- [ ] Hydra https://tryhackme.com/room/hydra\r- [ ] Linux Privesc https://tryhackme.com/room/linuxprivesc\r- [ ] Web Scanning https://tryhackme.com/room/rpwebscanning\r**More introductory CTFs**\r- [ ] Vulnversity - https://tryhackme.com/room/vulnversity\r- [ ] Blue - https://tryhackme.com/room/blue\r- [ ] Simple CTF https://tryhackme.com/room/easyctf\r- [ ] Bounty Hacker https://tryhackme.com/room/cowboyhacker\r# Level 3 - Crypto \u0026amp; Hashes with CTF practice\r- [ ] Crack the hash https://tryhackme.com/room/crackthehash\r- [ ] Agent Sudo https://tryhackme.com/room/agentsudoctf\r- [ ] The Cod Caper https://tryhackme.com/room/thecodcaper\r- [ ] Ice https://tryhackme.com/room/ice\r- [ ] Lazy Admin https://tryhackme.com/room/lazyadmin\r- [ ] Basic Pentesting https://tryhackme.com/room/basicpentestingjt\r# Level 4 - Web\r- [ ] OWASP top 10 https://tryhackme.com/room/owasptop10\r- [ ] Inclusion https://tryhackme.com/room/inclusion\r- [ ] Injection https://tryhackme.com/room/injection\r- [ ] Vulnversity https://tryhackme.com/room/vulnversity\r- [ ] Basic Pentesting https://tryhackme.com/room/basicpentestingjt\r- [ ] Juiceshop https://tryhackme.com/room/owaspjuiceshop\r- [ ] Ignite https://tryhackme.com/room/ignite\r- [ ] Overpass https://tryhackme.com/room/overpass\r- [ ] Year of the Rabbit https://tryhackme.com/room/yearoftherabbit\r- [ ] DevelPy https://tryhackme.com/room/bsidesgtdevelpy\r- [ ] Jack of all trades https://tryhackme.com/room/jackofalltrades\r- [ ] Bolt https://tryhackme.com/room/bolt\r# Level 5 - Reverse Engineering\r- [ ] Intro to x86 64 https://tryhackme.com/room/introtox8664\r- [ ] CC Ghidra https://tryhackme.com/room/ccghidra\r- [ ] CC Radare2 https://tryhackme.com/room/ccradare2\r- [ ] CC Steganography https://tryhackme.com/room/ccstego\r- [ ] Reverse Engineering https://tryhackme.com/room/reverseengineering\r- [ ] Reversing ELF https://tryhackme.com/room/reverselfiles\r- [ ] Dumping Router Firmware https://tryhackme.com/room/rfirmware\r# Level 6 - PrivEsc\r- [ ] Sudo Security Bypass https://tryhackme.com/room/sudovulnsbypass\r- [ ] Sudo Buffer Overflow https://tryhackme.com/room/sudovulnsbof\r- [ ] Windows Privesc Arena https://tryhackme.com/room/windowsprivescarena\r- [ ] Linux Privesc Arena https://tryhackme.com/room/linuxprivescarena\r- [ ] Windows Privesc https://tryhackme.com/room/windows10privesc\r- [ ] Blaster https://tryhackme.com/room/blaster\r- [ ] Ignite https://tryhackme.com/room/ignite\r- [ ] Kenobi https://tryhackme.com/room/kenobi\r- [ ] Capture the flag https://tryhackme.com/room/c4ptur3th3fl4g\r- [ ] Pickle Rick https://tryhackme.com/room/picklerick\r# Level 7 - CTF practice\r- [ ] Post Exploitation Basics https://tryhackme.com/room/postexploit\r- [ ] Smag Grotto https://tryhackme.com/room/smaggrotto\r- [ ] Inclusion https://tryhackme.com/room/inclusion\r- [ ] Dogcat https://tryhackme.com/room/dogcat\r- [ ] LFI basics https://tryhackme.com/room/lfibasics\r- [ ] Buffer Overflow Prep https://tryhackme.com/room/bufferoverflowprep\r- [ ] Overpass https://tryhackme.com/room/overpass\r- [ ] Break out the cage https://tryhackme.com/room/breakoutthecage1\r- [ ] Lian Yu https://tryhackme.com/room/lianyu\r# Level 8 - Windows\r- [ ] Attacktive Directory https://tryhackme.com/room/attacktivedirectory\r- [ ] Retro https://tryhackme.com/room/retro\r- [ ] Blue Print https://tryhackme.com/room/blueprint\r- [ ] Anthem https://tryhackme.com/room/anthem\r- [ ] Relevant https://tryhackme.com/room/relevant\rConclusion Now you will have a good understanding of hacking, all for free! You should now be able to do the easiest challenges quickly, and medium challenges are where you will now gain the most amount of knowledge.\nIf you got this far, consider subscribing to unlock even better rooms. Most Windows rooms are subscriber-only because Windows uses more resources than Linux. If you want to learn more Windows pentesting, a subscription is one of the better ways to go about it.\nThanks to CatchUpHackers for writing Zero to Hero, which inspired this article.\nWhat to do next? Subscribe to TryHackMe to get paths featuring subscriber-only rooms. Trust me, they are far better than anything I could make! New challenge rooms are released weekly, have a go at them before the writeups come out! Keep a list of interesting CTFs and do them. Sign up to other platforms such as CTF time and take part in competitive CTFs. You\u0026rsquo;ll be surprised by how far you can get with the knowledge you have! Start a blog with writeups of new rooms. Create your own challenge rooms for TryHackMe. Did you like reverse engineering? How about Windows? Or perhaps privesc? You can specialise in one area if you really like it. Just search for rooms with that on TryHackMe, or ask in the Discord/Forums/Sub-reddit \u0026ldquo;I liked X and want to do more\u0026rdquo;.\n","permalink":"https://polymath.cloud/free-rooms/","summary":"You want to do TryHackMe, but perhaps you do not want to pay for a subscription. This means you will not get access to paths, which are a guided series of rooms to take you from not knowing something to knowing something.\nThis blog post will detail a free path I have created for you, taking you from a beginner to a medium level. This blog post will stay continuously updated with new rooms as they come out and will improve with suggestions from the community.","title":"What rooms should you do? A free guide for beginners"},{"content":"I recently went through the trouble of distributing a Rust package. I wished that there was a simple guide on distributing one package to many platforms, so I wrote this guide.\nFollow me as we publish my package, RustScan, to multiple distributions.\nSemantic Versioning Semantic Versioning is a system defining how to write version numbers. The 3 numbers are:\nMajor.Minor.Bugs  If you have fixed some bugs, increment the bugs counter.\nIf you have added a minor feature, increment the minor counter.\nIf you have done something major, increment the major counter.\nWe can signify whether a release is still being rested or not by adding \u0026ldquo;rc\u0026rdquo; (release candidate) to the end of the version. \u0026ldquo;5.0.0rc1\u0026rdquo; signifies \u0026ldquo;release candidate 1\u0026rdquo; which means this is the first public testing release of version 5.0.0.\nCargo Cargo is a package registry system for Rust. Imagine it as PyPi (Pip for Python) or NPM (for JavaScript).\nAs a rustacean, you may have heard of this ‚Äì and even used it to download packages yourself. So let\u0026rsquo;s skip right to the good part.\nBefore publishing to Cargo, we need to make sure our cargo.toml file has the required information.\nThere are 3 things we need:\n Name  The name of our project.\n Description  Describe what the project does.\n License  What license do you use? Specifically, we need to use a license identification code. View the Linux Foundation\u0026rsquo;s SPDX website for all the license identification codes.\nHowever, you will probably want more than these for your package. Some good ones are:\n Readme  The location of your README file, which is used to fill out the README on the Cargo website.\n Keywords  This is tags for your project. When a user searches a keyword such as \u0026ldquo;sewing\u0026rdquo;, and your project has that keyword, your project will come up in the search results.\nThis is RustScan\u0026rsquo;sCargo.toml:\n[package] name = \u0026quot;rustscan\u0026quot; version = \u0026quot;1.0.1\u0026quot; authors = [\u0026quot;Brandon \u0026lt;my_email@skerritt.blog\u0026gt;\u0026quot;] edition = \u0026quot;2018\u0026quot; description = \u0026quot;Faster Nmap Scanning with Rust\u0026quot; homepage = \u0026quot;https://github.com/brandonskerritt/rustscan\u0026quot; repository = \u0026quot;https://github.com/brandonskerritt/rustscan\u0026quot; license = \u0026quot;MIT\u0026quot; keywords = [\u0026quot;port\u0026quot;, \u0026quot;scanning\u0026quot;, \u0026quot;nmap\u0026quot;] categories = [\u0026quot;command-line-utilities\u0026quot;] readme=\u0026quot;README.md\u0026quot;  For more information on the manifest file, look here:\nNow we\u0026rsquo;re ready to publish! Go to the Crates.io website and register an account. Then, go into the settings and create a new API key.\nNow in a terminal, execute cargo login \u0026lt;API_KEY\u0026gt;. You\u0026rsquo;re now logged into Crates.io and can publish!\nBuild your Rust package using the release profile, which optimises it at the highest level Rust can provide:\ncargo build --release  And then publish it.\ncargo publish  Ta-da! Your package is now available on the Crates.io website, and can be installed with cargo \u0026lt;your_package_name\u0026gt;.\nHomebrew Homebrew is a package manager used by Mac OS users, but can is also used on Linux.\nUnfortunately, I found the documentation to be lacklustre in explaining how to get a package into Homebrew.\nLet\u0026rsquo;s assume we are using GitHub to store our code.\nHomebrew expects a TAR archive. To get this, we create a new release on GitHub.\nOn the GitHub repo\u0026rsquo;s homepage, click \u0026ldquo;Releases\u0026rdquo; on the right hand side menu. You should be taken to this page. Click \u0026ldquo;Draft a new release\u0026rdquo;. Now create a new release. Use semantic versioning to create the Tag Version. Create a new release title, and describe the release.\nA good format for release descriptions is:\n# Features # Maintenance # Bugs  Similar to the semantic versioning rules. I normally pull these from pull requests, or write them down as I merge commits.\nOnce we\u0026rsquo;ve entered some information, click Publish release. We now have a published release of our app!\nOur code is now in .tar.gz format if we look on the releases page again. GitHub does it for us! Right click **Source code (tar.gz) **and click on \u0026ldquo;get link\u0026rdquo;. Now we have the link to our tar.gz folder.\nGo into a terminal, and type:\nwget \u0026lt;link\u0026gt;  where \u0026lt;link\u0026gt; is replaced by the link you just copied.\nWe need the SHA256 Hash of the archive, so let\u0026rsquo;s calculate it:\nshasum -a 256 rustscan.tar.gz  Where rustscan.tar.gz is the file you just downloaded with wget.\nNote down the shasum, this is an important step for later. Also note down the link we used to download it with.\nThe GitHub Repository Homebrew requires a separate GitHub repository for your project. Or you can change the name of your current repository.\nHomebrew calls these taps. Taps are third party GitHub repositories with specific names and a configuration file.\nGo to GitHub and create a new repository. Naming it:\nhomebrew-\u0026lt;project\u0026gt;  Where  is the name of your project. Note it must start with the name \u0026ldquo;homebrew-\u0026quot;.\nIn my case, it is:\nhomebrew-rustscan  RustScan\u0026rsquo;s HomeBrew Repository. \nNow clone your new repo onto your machine:\ngit clone homebrew-\u0026lt;project\u0026gt;  Creating the formula Homebrew requires a file called a formula. This is a Ruby file that details your project along with how to install the binary. You do not need to know Ruby to create this.\ncd into our newly cloned repo, and create the following file structure:\n- Formula/ - \u0026lt;project\u0026gt;.rb  In my case:\n- Formula/ - rustscan.rb  Capitalise the folder name if it is not already.\nNow copy and paste the following file into your rustscan.rb (or whatever your project is called).\n# Documentation: https://docs.brew.sh/Formula-Cookbook # https://rubydoc.brew.sh/Formula # PLEASE REMOVE ALL GENERATED COMMENTS BEFORE SUBMITTING YOUR PULL REQUEST! class Rustscan \u0026lt; Formula desc \u0026quot;Faster Nmap Scanning with Rust\u0026quot; homepage \u0026quot;https://github.com/brandonskerritt/rustscan\u0026quot; url \u0026quot;https://github.com/RustScan/RustScan/archive/1.3.tar.gz\u0026quot; sha256 \u0026quot;3bbaf188fa4014a57596c4d4f928b75bdf42c058220424ae46b94f3a36b61f81\u0026quot; version \u0026quot;1.3.0\u0026quot; depends_on \u0026quot;rust\u0026quot; =\u0026gt; :build def install system \u0026quot;cargo\u0026quot;, \u0026quot;build\u0026quot;, \u0026quot;--release\u0026quot;, \u0026quot;--bin\u0026quot;, \u0026quot;rustscan\u0026quot; bin.install \u0026quot;target/release/rustscan\u0026quot; end end  Change the class name to match the name of your program:\nclass Rustscan \u0026lt; Formula  Then add a short description and link the homepage (in my case, the GitHub repo).\n desc \u0026quot;Faster Nmap Scanning with Rust\u0026quot; homepage \u0026quot;https://github.com/brandonskerritt/rustscan\u0026quot;  Now we need to fill out the download link and the SHA-256.\n url \u0026quot;https://github.com/RustScan/RustScan/archive/1.3.tar.gz\u0026quot; sha256 \u0026quot;3bbaf188fa4014a57596c4d4f928b75bdf42c058220424ae46b94f3a36b61f81\u0026quot;  Remember earlier when I told you to write down the link \u0026amp; the shasum? This is exactly where you\u0026rsquo;d place them!\nNow insert your version number, the same one for the whole release:\nversion \u0026quot;1.3.0\u0026quot;  Our program relies on Rust to build the binary, we note this down here:\n depends_on \u0026quot;rust\u0026quot; =\u0026gt; :build  The next step is to detail how to build the binary and install our program. We tell Homebrew to build the binary using cargo build, and then to install it with bin.install.\n def install system \u0026quot;cargo\u0026quot;, \u0026quot;build\u0026quot;, \u0026quot;--release\u0026quot;, \u0026quot;--bin\u0026quot;, \u0026quot;rustscan\u0026quot; bin.install \u0026quot;target/release/rustscan\u0026quot; end  And just like that, we\u0026rsquo;ve made the formula file.\nUpload this to your homebrew-\u0026lt;project\u0026gt; repository like so:\ngit add . git commit -m 'First release' git push  Installing the Package Let\u0026rsquo;s install the package to double check everything went well.\nbrew tap brandonskerritt/rustscan brew install rustscan  Where brandonskerritt/rustscan is your GitHub username combined with the project\u0026rsquo;s name.\nMy username is Brandonskerritt, and the project is called rustscan.\nI created a one command install for my users. which is just the 2 commands combined. You may find this helpful.\nbrew tap brandonskerritt/rustscan \u0026amp;\u0026amp; brew install rustscan  Debian The easiest way to create Debian binaries is to use the crate cargo-deb. Cargo-deb is installed\ncargo install cargo-deb  Once it is installed, run the command:\ncargo-deb  And we now have a .deb file for our project on our system architecture.\nBut what if we wanted to package for other architectures?\nLuckily I\u0026rsquo;ve created a (albeit badly made) Docker script to package for other architectures.\nThe script packages the project for:\n Amd64 Arm64 i386  It requires some editing (as it was made for RustScan), but once done it will automatically package your script for you.\nCreate a separate folder in your main project\u0026rsquo;s repo, such as rustscan-debbuilder.\nThen place these 3 files in there:\nentrypoint.sh\n#!/bin/bash cd /RustScan git pull --force #amd64 cargo deb #arm64 rustup target add arm-unknown-linux-gnueabihf cargo deb --target=arm-unknown-linux-gnueabihf #i386 rustup target add i686-unknown-linux-gnu cargo deb --target=i686-unknown-linux-gnu find target/ -name \\*.deb -exec cp {} /debs \\;  Change cd /RustScan to your project name.\nrun.sh\n#!/bin/bash docker build -t rustscan-builder . || exit # This creates a volume which binds your currentdirectory/debs to # the location where the deb files get spat out in the container. # You don't need to worry about it. Just chmod +x run.sh \u0026amp;\u0026amp; ./run.sh and # you'll get yer .deb file in a few minutes. It runs faster after you've used it the first time. docker run -v \u0026quot;$(pwd)/debs:/debs\u0026quot; rustscan-builder  Dockerfile\nFROM rust:latest RUN git clone https://github.com/brandonskerritt/RustScan WORKDIR \u0026quot;/RustScan\u0026quot; RUN git pull --force RUN cargo install cargo-deb RUN apt update -y \u0026amp;\u0026amp; apt upgrade -y RUN apt install libc6-dev-i386 -y RUN git clone --depth=1 https://github.com/raspberrypi/tools /raspberrypi-tools ENV PATH=/raspberrypi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/:$PATH ENV CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc RUN mkdir /root/.cargo RUN echo \u0026quot;[target.arm-unknown-linux-gnueabihf]\u0026quot; \u0026gt;\u0026gt; /root/.cargo/config RUN echo \u0026quot;strip = { path = \\\u0026quot;arm-linux-gnueabihf-strip\\\u0026quot; }\u0026quot; \u0026gt;\u0026gt; /root/.cargo/config RUN echo \u0026quot;objcopy = { path = \\\u0026quot;arm-linux-gnueabihf-objcopy\\\u0026quot; }\u0026quot; \u0026gt;\u0026gt; /root/.cargo/config COPY ./entrypoint.sh /entrypoint.sh RUN chmod +x /entrypoint.sh ENTRYPOINT [\u0026quot;/entrypoint.sh\u0026quot;]  Change RUN git clone [https://github.com/brandonskerritt/RustScan](https://github.com/brandonskerritt/RustScan) to the git repository link of your choice.\nChange WORKDIR \u0026quot;/RustScan to your project\u0026rsquo;s name.\nThe directory should look like:\n- rustscan-debbuilder / Dockerfile run.sh entrypoint.sh  Now to run this builder:\ncd rustscan-debbuilder chmod +x run.sh ./run.sh  And it will build 3 Debian binaries for you.\nInstallation of .deb files To install .deb files, you can run dpkg -i on the file, or you can double-click the file (on some systems).\nArc The easiest way to distribute for AUR is to use the Cargo package cargo-aur. Cargo-aur automatically builds a PKGBUILD file, which is the file needed by Arch package management tools to install the software.\nThe PKGBUILD file is similar to cargo.toml, or our Homebrew file.\nLet\u0026rsquo;s open up the file and edit some fields (if we want to).\n# Maintainer: Bee \u0026lt;bee@fake.com\u0026gt; pkgname=rustscan pkgver=1.4.1 pkgrel=1 pkgdesc=\u0026quot;Faster Nmap Scanning with Rust\u0026quot; url=\u0026quot;https://github.com/brandonskerritt/rustscan\u0026quot; license=(\u0026quot;MIT\u0026quot;) arch=(\u0026quot;x86_64\u0026quot;) provides=(\u0026quot;rustscan\u0026quot;) options=(\u0026quot;strip\u0026quot;) source=(\u0026quot;https://github.com/brandonskerritt/rustscan/releases/download/v$pkgver/rustscan-$pkgver-x86_64.tar.gz\u0026quot;) sha256sums=(\u0026quot;7bed834f5df925b720316341150df74ac2533cc968de54bb1164c95ea9b65db8\u0026quot;) package() { install -Dm755 rustscan -t \u0026quot;$pkgdir/usr/bin/\u0026quot; }  The pkgname is the name of the package. Please see the Arch wiki for guidance on naming conventions.\npkgver is the semantic version of our package. This is automatically taken from cargo.toml.\npkgrel means \u0026ldquo;this package has updated\u0026rdquo;. Nothing more to it, but the Arch Wiki explains this concept in more detail.\npkgdesc is the description of our package.\narch is the architecture our package will compile on.\nprovides is an array of packages that the software provides the features are. Packages providing the same item can be installed side-by-side unless one of them has a conflicts array.\noptions per the Arch Wiki:\n This array allows overriding some of the default behavior of makepkg, defined in /etc/makepkg.conf. To set an option, include the name in the array. To disable an option, place an ! before it.\n Personally, I don\u0026rsquo;t know why this is needed. But it\u0026rsquo;s an automated generation, so we can\u0026rsquo;t complain too much.\nsource is the location of the release on GitHub, and sha256sums are the checksums of the package.\nFinally, package() shows Arch how to install our package.\nUploading this package to the AUR  cargo aur built a tarball .tar file. Create a new release on GitHub and attach the.tar` file that was just created.  2. Create an account on the AUR https://aur.archlinux.org/\n Upload your SSH public key to your account.  Check for SSH keys with:\nls -al ~/.ssh  And you\u0026rsquo;re likely looking for a file like *id_rsa.pub. *\nIf this doesn\u0026rsquo;t exist, generate a new SSH key with:\n$ ssh-keygen -t rsa -b 4096 -C \u0026quot;your_email@example.com\u0026quot;  And follow the on-screen prompts. Or follow this guide if you are still confused.\nNext, go to your account page on the AUR and upload your public SSH key.\n In a new directory, git clone your repo on the AUR.  This is kind of confusing. But say the package name is rustscan (confirm there is no other package on the AUR using your projects name by searching here).\ngit clone ssh://aur@aur.archlinux.org/rustscan.git  I normally clone this in a folder format like:\n- rustscan / - rustscan / # the rust package - rustscan / # the package we have git cloned - homebrew-rustscan /  Make sure to change the name of the package rustscan to the name you want.\n  Copy the PKGBUILD you built in stage 1 into the new Git repo.\n  Run makepkg --printsrcinfo \u0026gt; .SRCINFO in the repo.\n  Your directory should now look like:\n rustscan /  rustscan / # the rust package rustscan / # the package we have git cloned  PKGBUILD .SRCINFO   homebrew-rustscan /      Now push these:\ngit add . git commit -m \u0026lsquo;initial release\u0026rsquo; git push\n  And Ta-Da! We now have an Arch Linux AUR package!\nEventually, you may want to clean up the default Rust AUR package for whatever reason. This is the one RustScan uses. Feel free to copy \u0026amp; change it however you wish:\n# Maintainer: Hao Last_name_emited_for_privacy \u0026lt;email_emited_for_privacy\u0026gt; pkgname=rustscan _pkgname=RustScan pkgver=1.6.0 pkgrel=1 pkgdesc=\u0026quot;Faster Nmap Scanning with Rust\u0026quot; arch=(\u0026quot;x86_64\u0026quot; \u0026quot;i686\u0026quot;) url=\u0026quot;https://github.com/rustscan/RustScan\u0026quot; license=(\u0026quot;GPL3\u0026quot;) provides=('rustscan') conflicts=('rustscan') depends=(\u0026quot;nmap\u0026quot;) makedepends=(\u0026quot;cargo\u0026quot;) source=(\u0026quot;${pkgname}-${pkgver}.tar.gz::${url}/archive/${pkgver}.tar.gz\u0026quot;) sha256sums=('a4ebe4b8eda88dd10d52d961578c95b5427cc34b3bf41e5df729a37122c68965') build() { cd ${_pkgname}-${pkgver} cargo build --release --locked --all-features --target-dir=target } package() { cd ${_pkgname}-${pkgver} install -Dm755 target/release/${pkgname} ${pkgdir}/usr/bin/${pkgname} }  Note: someone else made this for RustScan.\n","permalink":"https://polymath.cloud/packaging-your-rust-package/","summary":"I recently went through the trouble of distributing a Rust package. I wished that there was a simple guide on distributing one package to many platforms, so I wrote this guide.\nFollow me as we publish my package, RustScan, to multiple distributions.\nSemantic Versioning Semantic Versioning is a system defining how to write version numbers. The 3 numbers are:\nMajor.Minor.Bugs  If you have fixed some bugs, increment the bugs counter.","title":"Packaging Your Rust Code"},{"content":"I recently went through the trouble of distributing a Rust package. I wished that there was a simple guide on distributing one package to many platforms, so I wrote this guide.\nFollow me as we publish my package, RustScan, to multiple distributions.\nSemantic Versioning Semantic Versioning is a system defining how to write version numbers. The 3 numbers are:\nMajor.Minor.Bugs  If you have fixed some bugs, increment the bugs counter.\nIf you have added a minor feature, increment the minor counter.\nIf you have done something major, increment the major counter.\nWe can signify whether a release is still being rested or not by adding \u0026ldquo;rc\u0026rdquo; (release candidate) to the end of the version. \u0026ldquo;5.0.0rc1\u0026rdquo; signifies \u0026ldquo;release candidate 1\u0026rdquo; which means this is the first public testing release of version 5.0.0.\nCargo Cargo is a package registry system for Rust. Imagine it as PyPi (Pip for Python) or NPM (for JavaScript).\nAs a rustacean, you may have heard of this ‚Äì and even used it to download packages yourself. So let\u0026rsquo;s skip right to the good part.\nBefore publishing to Cargo, we need to make sure our cargo.toml file has the required information.\nThere are 3 things we need:\n Name  The name of our project.\n Description  Describe what the project does.\n License  What license do you use? Specifically, we need to use a license identification code. View the Linux Foundation\u0026rsquo;s SPDX website for all the license identification codes.\nHowever, you will probably want more than these for your package. Some good ones are:\n Readme  The location of your README file, which is used to fill out the README on the Cargo website.\n Keywords  This is tags for your project. When a user searches a keyword such as \u0026ldquo;sewing\u0026rdquo;, and your project has that keyword, your project will come up in the search results.\nThis is RustScan\u0026rsquo;sCargo.toml:\n[package] name = \u0026quot;rustscan\u0026quot; version = \u0026quot;1.0.1\u0026quot; authors = [\u0026quot;Brandon \u0026lt;my_email@skerritt.blog\u0026gt;\u0026quot;] edition = \u0026quot;2018\u0026quot; description = \u0026quot;Faster Nmap Scanning with Rust\u0026quot; homepage = \u0026quot;https://github.com/brandonskerritt/rustscan\u0026quot; repository = \u0026quot;https://github.com/brandonskerritt/rustscan\u0026quot; license = \u0026quot;MIT\u0026quot; keywords = [\u0026quot;port\u0026quot;, \u0026quot;scanning\u0026quot;, \u0026quot;nmap\u0026quot;] categories = [\u0026quot;command-line-utilities\u0026quot;] readme=\u0026quot;README.md\u0026quot;  For more information on the manifest file, look here: [\nThe Manifest Format - The Cargo Book\nThe Cargo Book\n](https://doc.rust-lang.org/cargo/reference/manifest.html) Now we\u0026rsquo;re ready to publish! Go to the Crates.io website and register an account. Then, go into the settings and create a new API key. Now in a terminal, execute cargo login \u0026lt;API_KEY\u0026gt;. You\u0026rsquo;re now logged into Crates.io and can publish!\nBuild your Rust package using the release profile, which optimises it at the highest level Rust can provide:\ncargo build --release  And then publish it.\ncargo publish  Ta-da! Your package is now available on the Crates.io website, and can be installed with cargo \u0026lt;your_package_name\u0026gt;.\nHomebrew Homebrew is a package manager used by Mac OS users, but can is also used on Linux.\nUnfortunately, I found the documentation to be lacklustre in explaining how to get a package into Homebrew.\nLet\u0026rsquo;s assume we are using GitHub to store our code.\nHomebrew expects a TAR archive. To get this, we create a new release on GitHub.\nOn the GitHub repo\u0026rsquo;s homepage, click \u0026ldquo;Releases\u0026rdquo; on the right hand side menu. You should be taken to this page. Click \u0026ldquo;Draft a new release\u0026rdquo;. Now create a new release. Use semantic versioning to create the Tag Version. Create a new release title, and describe the release.\nA good format for release descriptions is:\n# Features # Maintenance # Bugs  Similar to the semantic versioning rules. I normally pull these from pull requests, or write them down as I merge commits.\nOnce we\u0026rsquo;ve entered some information, click Publish release. We now have a published release of our app!\nOur code is now in .tar.gz format if we look on the releases page again. GitHub does it for us! Right click **Source code (tar.gz) **and click on \u0026ldquo;get link\u0026rdquo;. Now we have the link to our tar.gz folder.\nGo into a terminal, and type:\nwget \u0026lt;link\u0026gt;  where \u0026lt;link\u0026gt; is replaced by the link you just copied.\nWe need the SHA256 Hash of the archive, so let\u0026rsquo;s calculate it:\nshasum -a 256 rustscan.tar.gz  Where rustscan.tar.gz is the file you just downloaded with wget.\nNote down the shasum, this is an important step for later. Also note down the link we used to download it with.\nThe GitHub Repository Homebrew requires a separate GitHub repository for your project. Or you can change the name of your current repository.\nHomebrew calls these taps. Taps are third party GitHub repositories with specific names and a configuration file.\nGo to GitHub and create a new repository. Naming it:\nhomebrew-\u0026lt;project\u0026gt;  Where  is the name of your project. Note it must start with the name \u0026ldquo;homebrew-\u0026quot;.\nIn my case, it is:\nhomebrew-rustscan  [\nRustScan/homebrew-rustscan\nRustScan‚Äôs HomeBrew repo. Contribute to RustScan/homebrew-rustscan development by creating an account on GitHub.\nRustScanGitHub\n](https://github.com/RustScan/homebrew-rustscan) Now clone your new repo onto your machine:\ngit clone homebrew-\u0026lt;project\u0026gt;  Creating the formula Homebrew requires a file called a formula. This is a Ruby file that details your project along with how to install the binary. You do not need to know Ruby to create this.\ncd into our newly cloned repo, and create the following file structure:\n- Formula/ - \u0026lt;project\u0026gt;.rb  In my case:\n- Formula/ - rustscan.rb  Capitalise the folder name if it is not already.\nNow copy and paste the following file into your rustscan.rb (or whatever your project is called).\n# Documentation: https://docs.brew.sh/Formula-Cookbook # https://rubydoc.brew.sh/Formula # PLEASE REMOVE ALL GENERATED COMMENTS BEFORE SUBMITTING YOUR PULL REQUEST! class Rustscan \u0026lt; Formula desc \u0026quot;Faster Nmap Scanning with Rust\u0026quot; homepage \u0026quot;https://github.com/brandonskerritt/rustscan\u0026quot; url \u0026quot;https://github.com/RustScan/RustScan/archive/1.3.tar.gz\u0026quot; sha256 \u0026quot;3bbaf188fa4014a57596c4d4f928b75bdf42c058220424ae46b94f3a36b61f81\u0026quot; version \u0026quot;1.3.0\u0026quot; depends_on \u0026quot;rust\u0026quot; =\u0026gt; :build def install system \u0026quot;cargo\u0026quot;, \u0026quot;build\u0026quot;, \u0026quot;--release\u0026quot;, \u0026quot;--bin\u0026quot;, \u0026quot;rustscan\u0026quot; bin.install \u0026quot;target/release/rustscan\u0026quot; end end  Change the class name to match the name of your program:\nclass Rustscan \u0026lt; Formula  Then add a short description and link the homepage (in my case, the GitHub repo).\n desc \u0026quot;Faster Nmap Scanning with Rust\u0026quot; homepage \u0026quot;https://github.com/brandonskerritt/rustscan\u0026quot;  Now we need to fill out the download link and the SHA-256.\n url \u0026quot;https://github.com/RustScan/RustScan/archive/1.3.tar.gz\u0026quot; sha256 \u0026quot;3bbaf188fa4014a57596c4d4f928b75bdf42c058220424ae46b94f3a36b61f81\u0026quot;  Remember earlier when I told you to write down the link \u0026amp; the shasum? This is exactly where you\u0026rsquo;d place them!\nNow insert your version number, the same one for the whole release:\nversion \u0026quot;1.3.0\u0026quot;  Our program relies on Rust to build the binary, we note this down here:\n depends_on \u0026quot;rust\u0026quot; =\u0026gt; :build  The next step is to detail how to build the binary and install our program. We tell Homebrew to build the binary using cargo build, and then to install it with bin.install.\n def install system \u0026quot;cargo\u0026quot;, \u0026quot;build\u0026quot;, \u0026quot;--release\u0026quot;, \u0026quot;--bin\u0026quot;, \u0026quot;rustscan\u0026quot; bin.install \u0026quot;target/release/rustscan\u0026quot; end  And just like that, we\u0026rsquo;ve made the formula file.\nUpload this to your homebrew-\u0026lt;project\u0026gt; repository like so:\ngit add . git commit -m 'First release' git push  Installing the Package Let\u0026rsquo;s install the package to double check everything went well.\nbrew tap brandonskerritt/rustscan brew install rustscan  Where brandonskerritt/rustscan is your GitHub username combined with the project\u0026rsquo;s name.\nMy username is Brandonskerritt, and the project is called rustscan.\nI created a one command install for my users. which is just the 2 commands combined. You may find this helpful.\nbrew tap brandonskerritt/rustscan \u0026amp;\u0026amp; brew install rustscan  Debian The easiest way to create Debian binaries is to use the crate cargo-deb. Cargo-deb is installed\ncargo install cargo-deb  Once it is installed, run the command:\ncargo-deb  And we now have a .deb file for our project on our system architecture.\nBut what if we wanted to package for other architectures?\nLuckily I\u0026rsquo;ve created a (albeit badly made) Docker script to package for other architectures.\nThe script packages the project for:\n Amd64 Arm64 i386  It requires some editing (as it was made for RustScan), but once done it will automatically package your script for you.\nCreate a separate folder in your main project\u0026rsquo;s repo, such as rustscan-debbuilder.\nThen place these 3 files in there:\nentrypoint.sh\n#!/bin/bash cd /RustScan git pull --force #amd64 cargo deb #arm64 rustup target add arm-unknown-linux-gnueabihf cargo deb --target=arm-unknown-linux-gnueabihf #i386 rustup target add i686-unknown-linux-gnu cargo deb --target=i686-unknown-linux-gnu find target/ -name \\*.deb -exec cp {} /debs \\;  Change cd /RustScan to your project name.\nrun.sh\n#!/bin/bash docker build -t rustscan-builder . || exit # This creates a volume which binds your currentdirectory/debs to # the location where the deb files get spat out in the container. # You don't need to worry about it. Just chmod +x run.sh \u0026amp;\u0026amp; ./run.sh and # you'll get yer .deb file in a few minutes. It runs faster after you've used it the first time. docker run -v \u0026quot;$(pwd)/debs:/debs\u0026quot; rustscan-builder  Dockerfile\nFROM rust:latest RUN git clone https://github.com/brandonskerritt/RustScan WORKDIR \u0026quot;/RustScan\u0026quot; RUN git pull --force RUN cargo install cargo-deb RUN apt update -y \u0026amp;\u0026amp; apt upgrade -y RUN apt install libc6-dev-i386 -y RUN git clone --depth=1 https://github.com/raspberrypi/tools /raspberrypi-tools ENV PATH=/raspberrypi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/:$PATH ENV CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc RUN mkdir /root/.cargo RUN echo \u0026quot;[target.arm-unknown-linux-gnueabihf]\u0026quot; \u0026gt;\u0026gt; /root/.cargo/config RUN echo \u0026quot;strip = { path = \\\u0026quot;arm-linux-gnueabihf-strip\\\u0026quot; }\u0026quot; \u0026gt;\u0026gt; /root/.cargo/config RUN echo \u0026quot;objcopy = { path = \\\u0026quot;arm-linux-gnueabihf-objcopy\\\u0026quot; }\u0026quot; \u0026gt;\u0026gt; /root/.cargo/config COPY ./entrypoint.sh /entrypoint.sh RUN chmod +x /entrypoint.sh ENTRYPOINT [\u0026quot;/entrypoint.sh\u0026quot;]  Change RUN git clone [https://github.com/brandonskerritt/RustScan](https://github.com/brandonskerritt/RustScan) to the git repository link of your choice.\nChange WORKDIR \u0026quot;/RustScan to your project\u0026rsquo;s name.\nThe directory should look like:\n- rustscan-debbuilder / Dockerfile run.sh entrypoint.sh  Now to run this builder:\ncd rustscan-debbuilder chmod +x run.sh ./run.sh  And it will build 3 Debian binaries for you.\nSee how we did it with RustScan here: [\nRustScan/RustScan\nFaster Nmap Scanning with Rust. Contribute to RustScan/RustScan development by creating an account on GitHub.\nRustScanGitHub\n](https://github.com/RustScan/RustScan/tree/master/rustscan-debbuilder)\nInstallation of .deb files To install .deb files, you can run dpkg -i on the file, or you can double-click the file (on some systems).\nArch The easiest way to distribute for AUR is to use the Cargo package cargo-aur. [\nfosskers/cargo-aur\nPrepare Rust projects to be released on the Arch Linux User Repository - fosskers/cargo-aur\nfosskersGitHub\n](https://github.com/fosskers/cargo-aur) Cargo-aur automatically builds a PKGBUILD file, which is the file needed by Arch package management tools to install the software.\nThe PKGBUILD file is similar to cargo.toml, or our Homebrew file.\nLet\u0026rsquo;s open up the file and edit some fields (if we want to).\n# Maintainer: Bee \u0026lt;bee@fake.com\u0026gt; pkgname=rustscan pkgver=1.4.1 pkgrel=1 pkgdesc=\u0026quot;Faster Nmap Scanning with Rust\u0026quot; url=\u0026quot;https://github.com/brandonskerritt/rustscan\u0026quot; license=(\u0026quot;MIT\u0026quot;) arch=(\u0026quot;x86_64\u0026quot;) provides=(\u0026quot;rustscan\u0026quot;) options=(\u0026quot;strip\u0026quot;) source=(\u0026quot;https://github.com/brandonskerritt/rustscan/releases/download/v$pkgver/rustscan-$pkgver-x86_64.tar.gz\u0026quot;) sha256sums=(\u0026quot;7bed834f5df925b720316341150df74ac2533cc968de54bb1164c95ea9b65db8\u0026quot;) package() { install -Dm755 rustscan -t \u0026quot;$pkgdir/usr/bin/\u0026quot; }  The pkgname is the name of the package. Please see the Arch wiki for guidance on naming conventions.\npkgver is the semantic version of our package. This is automatically taken from cargo.toml.\npkgrel means \u0026ldquo;this package has updated\u0026rdquo;. Nothing more to it, but the Arch Wiki explains this concept in more detail.\npkgdesc is the description of our package.\narch is the architecture our package will compile on.\nprovides is an array of packages that the software provides the features are. Packages providing the same item can be installed side-by-side unless one of them has a conflicts array.\noptions per the Arch Wiki:\n This array allows overriding some of the default behavior of makepkg, defined in /etc/makepkg.conf. To set an option, include the name in the array. To disable an option, place an ! before it.\n Personally, I don\u0026rsquo;t know why this is needed. But it\u0026rsquo;s an automated generation, so we can\u0026rsquo;t complain too much.\nsource is the location of the release on GitHub, and sha256sums are the checksums of the package.\nFinally, package() shows Arch how to install our package.\nUploading this package to the AUR  cargo aur built a tarball .tar file. Create a new release on GitHub and attach the .tar` file that was just created.  2. Create an account on the AUR https://aur.archlinux.org/\nUpload your SSH public key to your account.  Check for SSH keys with:\nls -al ~/.ssh  And you\u0026rsquo;re likely looking for a file like *id_rsa.pub. *\nIf this doesn\u0026rsquo;t exist, generate a new SSH key with:\n$ ssh-keygen -t rsa -b 4096 -C \u0026quot;your_email@example.com\u0026quot;  And follow the on-screen prompts. Or follow this guide if you are still confused.\nNext, go to your account page on the AUR and upload your public SSH key.\nIn a new directory, git clone your repo on the AUR.  This is kind of confusing. But say the package name is rustscan (confirm there is no other package on the AUR using your projects name by searching here).\ngit clone ssh://aur@aur.archlinux.org/rustscan.git  I normally clone this in a folder format like:\n- rustscan / - rustscan / # the rust package - rustscan / # the package we have git cloned - homebrew-rustscan /  Make sure to change the name of the package rustscan to the name you want.\n Copy the PKGBUILD you built in stage 1 into the new Git repo.\n  Run makepkg --printsrcinfo \u0026gt; .SRCINFO in the repo.\n  Your directory should now look like:\n rustscan /  rustscan / # the rust package rustscan / # the package we have git cloned  PKGBUILD .SRCINFO   homebrew-rustscan /      Now push these:\ngit add . git commit -m \u0026lsquo;initial release\u0026rsquo; git push\n  And Ta-Da! We now have an Arch Linux AUR package!\nEventually, you may want to clean up the default Rust AUR package for whatever reason. This is the one RustScan uses. Feel free to copy \u0026amp; change it however you wish:\n# Maintainer: Hao Last_name_emited_for_privacy \u0026lt;email_emited_for_privacy\u0026gt; pkgname=rustscan _pkgname=RustScan pkgver=1.6.0 pkgrel=1 pkgdesc=\u0026quot;Faster Nmap Scanning with Rust\u0026quot; arch=(\u0026quot;x86_64\u0026quot; \u0026quot;i686\u0026quot;) url=\u0026quot;https://github.com/rustscan/RustScan\u0026quot; license=(\u0026quot;GPL3\u0026quot;) provides=('rustscan') conflicts=('rustscan') depends=(\u0026quot;nmap\u0026quot;) makedepends=(\u0026quot;cargo\u0026quot;) source=(\u0026quot;${pkgname}-${pkgver}.tar.gz::${url}/archive/${pkgver}.tar.gz\u0026quot;) sha256sums=('a4ebe4b8eda88dd10d52d961578c95b5427cc34b3bf41e5df729a37122c68965') build() { cd ${_pkgname}-${pkgver} cargo build --release --locked --all-features --target-dir=target } package() { cd ${_pkgname}-${pkgver} install -Dm755 target/release/${pkgname} ${pkgdir}/usr/bin/${pkgname} }  Note: someone else made this for RustScan.\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  At least this isn\u0026rsquo;t a pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\n","permalink":"https://polymath.cloud/packaging-your-rust-package/","summary":"I recently went through the trouble of distributing a Rust package. I wished that there was a simple guide on distributing one package to many platforms, so I wrote this guide.\nFollow me as we publish my package, RustScan, to multiple distributions.\nSemantic Versioning Semantic Versioning is a system defining how to write version numbers. The 3 numbers are:\nMajor.Minor.Bugs  If you have fixed some bugs, increment the bugs counter.","title":"Packaging Your Rust Code"},{"content":"Hey! This is a new newsletter I am trialing. Basically, with previous newsletters I had to stick to a certain topic. Which sucks. I obsess over new things all the time. Soooo‚Ä¶. This newsletter is just a mish-mash of things I think about, and things I learn. Enjoy! :)\nAn Algorithm for clouds I was looking up at the clouds one sunny day, and thought to myself ‚Äúthat‚Äôs an awfully lonely cloud.‚Äù\nAnd I was right. The cloud was by itself. Higher up, you can see it has cloud-friends looking over it. But otherwise, the cloud is alone.\nAnd it got me thinking. Why was the cloud alone? Why does the cloud have smaller sub-clouds, almost like a tail? How is the distance \u0026amp; spacing between clouds determined?\n Is there a mathematical algorithm to determine how clouds work?\n I started to research the topic. It turns out, we know almost nothing. And most cloud simulations are about as good as my simulation of autonomous driving robots for my dissertation, which is to say, not very effective at real-world usage.\nI read The Cloud Book, which only left me more confused about how clouds operate. The major players in cloud simulations are video games, but we don‚Äôt really know how they operate.\nThis Scientific American article tries to explain how clouds form.\nThe premise is the same as how bubbles form in boiling water. A spot of the water gets hotter than others. When a bubble gets hot enough, the water‚Äôs surface tension can no longer hold it so it rises to the top where it bursts into steam.\nThe same can be said about clouds. Hot buildings can form bubbles of hot air, which bubbles to the top of the atmosphere (well, not always). There the cool air condenses the hot air into water droplets, which becomes a cloud.\nThis makes me wonder, if we develop a mathematical model for how heat works ‚Äî could we theoretically \u0026amp; perfectly predict cloud formation over an area? Assuming heat is not totally random.\nIf this turns out to be the case, I would like to see at least once in my life ‚Äúcloud art‚Äù, where the ground is heated, and the air cooled perfectly to form the cloud into the shape of some art. Assuming these are the only known variables, which most certainly isn‚Äôt the case this early on in this scientific regime. https://cloudatlas.wmo.int/en/varieties-cumulus-radiatus-cu-ra.html\nThoughts on RustScan, Ciphey, and Popularity on GitHub Recently I have found some success on GitHub. 2 of my tools have reached some level of fame. One of them is Ciphey, an automated decryption tool using AI \u0026amp; NLP. Put in encrypted text, get back decrypted text. The other is RustScan, a fast port scanner. I built this tool to learn Rust, but it‚Äôs gained more popularity than I can imagine Okay, enough of the flexing. Let‚Äôs talk about why they gained popularity.\nI believe this is down to 2 simple things:\n Solve a problem people have (that you have had too, preferably). Advertise clearly in the first few words they see, the problem being solved.  The first point is harder than it sounds. Solve a problem people have. If everyone could do this, we‚Äôd all be billionaires. The first step is to seeing a problem you have, and then seeing if other people have it.\nFor Ciphey, this was the fact that in capture the flag events (hacking competitions) many times we‚Äôd have some stupid encryption scheme. Encoded with Base64 then encrypted with Caesar Cipher. Good luck figuring that out by hand!\nThis meant that a very simple encryption scheme (base64 -\u0026gt; Caesar cipher) could easily take hours and hours of just manual, boring, brute force work. Ciphey solves this problem. RustScan solves the problem of slow Nmap scans. In pentesting, the very first thing you‚Äôd do is Nmap. In fact, you wouldn‚Äôt pentest without a port scan. It‚Äôs essential. But Nmap frequently takes \u0026gt; 20 minutes to scan.\nIn a CTF where time is quite literally money (faster = more points = more chance to get money), Nmap just wasn‚Äôt cutting it. RustScan fixes this problem. The second point, show it clearly as soon as the user sees it is the most important.\nYou can have the best tool in the world, but no one has time to read the source code to understand why your tool. You‚Äôve got to advertise it front and centre.\nCiphey‚Äôs tagline is ‚Äúautomated decryption tool with AI \u0026amp; NLP‚Äù. This explains immediately that its a decryption tool like CyberChef, but automated. The automated part is what people want. They don‚Äôt want to think about doing it by hand. RustScan‚Äôs Tagline is ‚ÄúFaster Nmap scans‚Äù and right below it, it shows clearly how it makes Nmap faster. Notice how the logos both say exactly what it does. This is because when people share the GitHub repo on social media, the image appears.\nAnd with the GitHub description too. Look at this social card from RustScan You don‚Äôt even need to click on the repo to learn what it does, it says it right there. Once in the description, and once in the image.\nFinally, a closing remark. Very early on in the README I clearly take the largest possible competitor, and I show exactly the need for the tool using Gifs and real time. CyberChef takes too long, too many steps to do what Ciphey can do in 2 seconds. Nmap‚Äôs manual scan takes too long.\nShow your readers not only the purpose of your tool, but exactly why their current tool aren‚Äôt isn‚Äôt suitable for the job.\nThis is why I believe my tools are popular.\nCool tools I found this week Since I‚Äôve been learning Rust lately, I decided to explore tools rewritten in Rust. Mostly based on this article.\nBat A cat clone but better in almost every single way. Syntax highlighting, line numbers, and more. Exa Exa is LS rewritten. It uses colour by default, so automatically it‚Äôs awesome.\n FD - Find clone that‚Äôs better and simpler. Also, in my opinion, faster. Tokei - Code statistics calculator. Flex on your friends with useless metrics like lines of code or # of comments. Grex - Given inputs, generate a Regex to match those inputs. NuShell - A new command line shell that looks gorgeous.  Entropy \u0026amp; Compression ratios I‚Äôve been learning about entropy recently. Entropy is a measure of how ‚Äúchaotic‚Äù a string is, how much ‚Äúorder‚Äù it has. This principle has uses in many applications, such as determining the difference between an attack and normal traffic on a network see here.\nWe use entropy in Ciphey to determine when we are ‚Äúgoing in the right direction‚Äù of decryption. Here‚Äôs a cool example. This is encrypted with Base64 -\u0026gt; Rot13 -\u0026gt; Vigen√®re (key: ‚Äúkey‚Äù).\nThe Shannen Entropy is 5.23.\nNow if we ‚Äúdecode Base64‚Äù and get the entropy again: It‚Äôs now 3.88. Even though we have no idea how many more decryptions there are, or if our Base64 decoding successfully resulted in the correct decoding (just because it decodes as Base64 does not mean it is Base64 - fun fact) we know we are going in the right direction because the Entropy is decreasing.\nCiphey is using this as part of a heuristic in A* search (we have many other things that go into the algorithm, more on it when I actually code it :P ).\nBut I thought this was a cool application of entropy. If you ever need to tell the difference between order \u0026amp; randomness, entropy is very useful.\nCo-existing plants Recently I had taken 2 cuttings of my Spider Plant, and created 2 new cute spider plant babies.\nI had actually taken 3 cuttings. 1 of them in its own pot, 2 of them in the same pot. And it got me thinking ‚Äî do these plants fight each other to survive in the plant pot?\nWell it turns out, plants do know who their siblings are. And they don‚Äôt compete for the same space with siblings, they co-exist. But when thrown in with foreign plants, they do fight for root control and space.\nThis helped clarify that I am not a sadistic plant murderer, and in fact placing 2 sibling plants together wasn‚Äôt such a bad idea overall.\nBye! Anyway, this has been my first newsletter in this weird series of things I am interested in. Have a good week :D \u0026lt;3\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  At least this isn\u0026rsquo;t a pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\n","permalink":"https://polymath.cloud/weekly_thoughts_1/","summary":"Hey! This is a new newsletter I am trialing. Basically, with previous newsletters I had to stick to a certain topic. Which sucks. I obsess over new things all the time. Soooo‚Ä¶. This newsletter is just a mish-mash of things I think about, and things I learn. Enjoy! :)\nAn Algorithm for clouds I was looking up at the clouds one sunny day, and thought to myself ‚Äúthat‚Äôs an awfully lonely cloud.","title":"Weekly Thoughts"},{"content":"If you\u0026rsquo;ve spent time on HackerRank or LeetCode, you might have noticed most of the optimal solutions use Set Theory.\nBy reading this article, you will gain a deeper knowledge into set theory and how to use it to create optimal algorithms.\nSet Theory was invented (or found, depending on how you view maths) by George Cantor. \nIt revolves around the idea of sets, as in collections of objects. Set theory is incredibly powerful and can be used to write some beautiful \u0026amp; elegant code.\nü§î What is a Set? A set is simply a set of objects. They don\u0026rsquo;t have to be the same type, or have any relation to one another.\nset = (apples, pears, oranges)  Sets are denoted with parenthesis ( ). With the separation of elements being a comma. Or sometimes { }.\nSets follow 2 rules:\n Only unique items.  Sets can only contain unique items. It cannot contain the same item twice or more.\n The set is unordered.  There is no order or structure to a set.\nThe first rule is quite useful. Say, for example we have a list of words from a book:\nwords = [\u0026quot;hello\u0026quot;, \u0026quot;my\u0026quot;, \u0026quot;name\u0026quot;, \u0026quot;is\u0026quot;, \u0026quot;brandon\u0026quot;, \u0026quot;and\u0026quot;, \u0026quot;your\u0026quot;, \u0026quot;name\u0026quot;, \u0026quot;is\u0026quot;, \u0026quot;brandon\u0026quot;]  To find all the unique words, we put the words into a set:\nwords = [\u0026quot;hello\u0026quot;, \u0026quot;my\u0026quot;, \u0026quot;name\u0026quot;, \u0026quot;is\u0026quot;, \u0026quot;brandon\u0026quot;, \u0026quot;and\u0026quot;, \u0026quot;your\u0026quot;, \u0026quot;name\u0026quot;, \u0026quot;is\u0026quot;, \u0026quot;brandon\u0026quot;] unique = set(words) # {'hello', 'is', 'and', 'brandon', 'my', 'your', 'name'}  The 2nd rule ties in nicely with the 1st rule. **A set aims to replicate how we see things in our lives. **\nImagine we are on a road trip with Jahan, Olivia, and Ryan.\nNext year, we want to go on a field trip again. It doesn\u0026rsquo;t make much sense to invite Jahan, Olivia, Jahan, Ryan, Jahan.\nAnd it also doesn\u0026rsquo;t make sense to assign an \u0026ldquo;order\u0026rdquo; to them. They\u0026rsquo;re people, not elements in an array!\nThere are other types of sets too. Such as a a multiset which allows non-unique elements but no order.\n ü¶Å Cardinality The cardinality of a set is the length of the set. For the set:\n$$A = {1, 2, 3, 4, 5, 6}$$\nThe cardinality is\n$$|A| = 6$$\n üö¥‚Äç‚ôÄÔ∏è Equality of Sets 2 sets are equal when all the elements match.\n$$a = {1, 2, 3}$$\n$$b = {3, 2, 1}$$\n$$a == b$$\nRemember, order doesn\u0026rsquo;t matter - so sets are equal despite being in the \u0026lsquo;wrong\u0026rsquo; order!\nüöá Infinite Sets Some sets are infinite. Such as the set containing all the natural numbers, or all the real numbers.\nWe can express infinite sets using a little bit of maths. Heard of list comprehensions? It looks the same syntactically, but operates infinitely.\nThe set of all even numbers is:\n$$A = {2n: n \\in \\mathbb{Z}}$$\nRead this as \u0026ldquo;for each number, n, in the set of all integers, $\\mathbb{Z}$, multiply the number by 2\u0026rdquo;. Which will give us the set of all even numbers.\nIn a list comprehension, it would look like:\n[2 * n for n in naturalNumbers]  However, this won\u0026rsquo;t work as Python doesn\u0026rsquo;t allow infinite sets.\nüêà‚Äç‚¨õ The Empty Set The empty set is the set containing nothing at all. It is much like 0. It is nothing, and serves the purpose as a negated value. We don\u0026rsquo;t have 0 apples, we have no apples.\nThe empty set serves the same purpose. We don\u0026rsquo;t have a set containing all the words, we have nothing.\nIts symbol is $\\varnothing$\nüåå The Universal Set The Universal Set $\\mathbb{U}$ is the set which contains all objects, including itself.\nIf our universe contains only integers, 1, 2, 3, \u0026hellip;, then the universal set is the set of all integers.\n üè• Operations Just like with other data types, sets have operations! Let\u0026rsquo;s start with some operations you may already know.\n‚ùå Union The union is combining 2 sets together (think addition). The symbol for the union is $\\cup$. Let\u0026rsquo;s look at an example.\n$$A = {1, 2, 3}$$\n$$B = {3, 4, 5}$$\n$$B \\cup A = {1, 2, 3, 4, 5}$$\nNotice how when we perform a union, we have two 3\u0026rsquo;s. Since sets only contain unique elements, we simply toss the extra 3 away. Also note, there is no order. So B $\\cup$ A does not result in (3, 4, 5\u0026hellip;) as the order doesn\u0026rsquo;t exist. We can even say B $\\cup$ A = {3, 5, 1, 4, 2}. What if we union an empty set with a non-empty set? Or an empty set with another empty set?\n$$\\varnothing \\cup {1, 2, 3} = {1, 2, 3}$$\n$$\\varnothing \\cup \\varnothing = \\varnothing$$\nWhen we get onto subsets and the likes we\u0026rsquo;ll learn to appreciate the empty set and this simplistic maths.\nü¶Ñ Intersection The intersection of a set is every item in set A that is also in set B.\nThink of it like the boolean operator AND. Its symbol is $\\cap$.\n$$A = {1, 2, 3}$$\n$$B = {3, 4, 5}$$\n$$A \\cap B = {3}$$\nLet\u0026rsquo;s say we have a list of flights with passengers on board. And we have a list of the people that took my daughter (Taken reference).\nWe can use the intersection operation to find the list of flights that contain the people who took my daughter.\nBecause sets only contain unique elements, it is very fast to calculate this. However, creating the set itself may take time. But, if we do not know all the names of the people in the child trafficking ring we can build the set first and use the intersection to query it.\nüíç Belongs To We can create sets which belong to other sets. $1$ belongs to the set ${1, 2, 3}$. In notation this is:\n$$1 \\in {1, 2, 3}$$\nWe say that \u0026ldquo;1 is in the set {1, 2, 3}\u0026quot;.\nBut don\u0026rsquo;t get caught out!\n$${1} \\in {1, 2, 3}$$\nIs not true. We say the element is not in $\\notin$ the set.\n$${1} \\notin {1, 2, 3}$$\nit would be true if:\n$${1} \\in {{1}, 2, 3}$$\nThis is a very, very useful feature. Let\u0026rsquo;s say we have the word \u0026ldquo;FLAG{\u0026rdquo; that we want to find in some text.\nWe turn the text into a set, like so:\ntext = \u0026quot;FLAG{\u0026quot; corpus = set(\u0026quot;Hello\u0026quot;, \u0026quot;my\u0026quot;, \u0026quot;name\u0026quot;, \u0026quot;is\u0026quot;) if text in corpus: print(\u0026quot;It's in there!\u0026quot;)  Because sets do not contain unique items, this is rather fast. However, you have to take into account that to turn it into a set is expensive.\n üõ©Ô∏è Subset original = {1, 2, 3, 4} subset1 = {1} subset2 = {3, 4} subset3 = {4, 3, 2, 1}  Remember sets don\u0026rsquo;t have an order to them! The symbol for subset is ${1} \\subset {1, 2}$.\nThe empty set is a subset of all sets, but it is not an element of all sets.\nFun fact, we can do:\n$$ \\mathbb{U} - \\varnothing$$\nThis equates to a new set, which contains all the elements of the set apart from the empty set. However, it is not the universal set - it\u0026rsquo;s a new set!\nThe power in subsets, in my opinion, comes from the power set.\nüîã Power Set The Power set is the set of all subsets of a set, including the empty set and the set itself.\nFor the set {2, 9} we have 4 subsets.\n{} {2} {9} {2, 9}  Remember, order doesn\u0026rsquo;t matter! The power set will be:\n$$\\frak{P} (\\mathbb{A}) = \\emptyset, {2}, {9}, {2, 9}$$\nNote: For home use or exams we can denote using P(a). For websites where we want to impress people with our fancy use of the alphabet, use LaTeX.\nWhen building subsets, the element can either be included in the subset or not. This is binary. It\u0026rsquo;s either in it, or it isn\u0026rsquo;t.\nThat leads us to the formula for calculating how large a powerset is.\n$$2^s$$\nWhere $s$ is the size of the set and 2 is because elements are either in the set or not.\nLet\u0026rsquo;s say we have a list of ingredients.\n{cabbage, lettuce, tomato, chips, carrots}  It makes sense to use a set because the order doesn\u0026rsquo;t matter for a list of ingredients and we don\u0026rsquo;t want to have cabbage twice for some reason.\nNow, how many combinations of food can we make with this?\n$$2^5 = 32$$\nThe empty set doesn\u0026rsquo;t count here (unless we want to starve), so we can reduce this to 31.\nü•∫ Infographic Cheat Sheet for Set Theory I made this for you! Feel free to print and use it however you want. Personally, when I was studying for exams, the symbols section proved to be most useful!  üêç Python Sets aren\u0026rsquo;t Real Sets In Python, sets remember insertion order.\n\u0026gt;\u0026gt;\u0026gt; a = set() \u0026gt;\u0026gt;\u0026gt; a.add(1) \u0026gt;\u0026gt;\u0026gt; a.add(2) \u0026gt;\u0026gt;\u0026gt; a.add(3) \u0026gt;\u0026gt;\u0026gt; a.remove(2) \u0026gt;\u0026gt;\u0026gt; a.add(4) \u0026gt;\u0026gt;\u0026gt; a {1, 3, 4}  Because they remember insertion order, technically they can be sorted (although in Set Theory maths, sets cannot be sorted. I mean sorted as in insert the elements in a sorted manner).\nIf we insert things into a set alphabetically, it is theoretically possible to make use of both Binary Search and the no repeating elements rule of sets.\nIt takes longer to program this up-front, but it will be much faster if we do not know what we want to find in the text, and we have time to spare at the start of the program. We can always save the sorted set so the next time the program runs, it is faster.\n\u0026gt;\u0026gt;\u0026gt; for item in a: ... print(item) ... 1 3 4  Why is this in the belongs to section? Well, sets can also store other sets.\nLet\u0026rsquo;s say we have a world leader who says a lot. But they often say \u0026ldquo;I\u0026rsquo;ve never said that before\u0026rdquo;. How we can work out if they have said it before?\nWe can build a set of sets, where each subset is the exact quote the person said.\nüíª Sets in Programming Languages Are Often Sorted Not only do sets in most programming languages remember insertion order, but they are often automatically sorted. Take a look at this Python code:\n\u0026gt;\u0026gt;\u0026gt; x = [9, 8, 7, 6, 5, 4, 3, 2, 1] \u0026gt;\u0026gt;\u0026gt; set(x) {1, 2, 3, 4, 5, 6, 7, 8, 9}  And that\u0026rsquo;s just the tip of the iceberg. Sets are implemented as hash maps in many programming languages. This means that we get O(1) lookup time. To perform 6 in x will take O(1) time. For more on Big O notation, check out my other article.\nüìñ Dictionary Checking We have a text such as:\ntext = [\u0026quot;hello\u0026quot;, \u0026quot;my\u0026quot;, \u0026quot;name\u0026quot;, \u0026quot;is\u0026quot;, \u0026quot;lkmxjja\u0026quot;, \u0026quot;brandon\u0026quot;]  And we want to find out how many words in text appear in another list, text_dict.\ntext_dict = [\u0026quot;hello\u0026quot;, \u0026quot;hello\u0026quot;, \u0026quot;my\u0026quot;, \u0026quot;brandon\u0026quot;, \u0026quot;name\u0026quot;]  The quickest way to do this without using sets is to sort both lists, and then go through each one, one-at-a-time to count how many times an item in text appears in text_dict.\nIn a real world example, we could be checking to see if a text is English or not by counting how many times the words in the text appear in the English dictionary.\nBy using sets, we delete the repetitions in text_dict. It also automatically sorts the two sets, so it is much easier for us to search through them. Not to mention the O(1) lookup time. 3 birds with 1 stone!\nHowever, looping through both of them ourselves is unruly. We\u0026rsquo;d have to write a loop and keep track of it ourselves. Luckily, we can use set theories intersection function to do this for us.\n\u0026gt;\u0026gt;\u0026gt; text = [\u0026quot;hello\u0026quot;, \u0026quot;my\u0026quot;, \u0026quot;name\u0026quot;, \u0026quot;is\u0026quot;, \u0026quot;lkmxjja\u0026quot;, \u0026quot;brandon\u0026quot;] \u0026gt;\u0026gt;\u0026gt; text_dict = [\u0026quot;hello\u0026quot;, \u0026quot;hello\u0026quot;, \u0026quot;my\u0026quot;, \u0026quot;brandon\u0026quot;, \u0026quot;name\u0026quot;] \u0026gt;\u0026gt;\u0026gt; text = set(text) \u0026gt;\u0026gt;\u0026gt; text_dict = set(text_dict) \u0026gt;\u0026gt;\u0026gt; text.intersection(text_dict) {'brandon', 'name', 'hello', 'my'} \u0026gt;\u0026gt;\u0026gt; len(text.intersection(text_dict)) 4  üëã Conclusion Set theory is gnarly, and incredibly useful in not just competitive programming but all kinds of programming. We\u0026rsquo;ve not only learnt the theory behind set theory, but also how programming languages such as Python have implemented it.\n","permalink":"https://polymath.cloud/set-theory-for-competitive-programming/","summary":"If you\u0026rsquo;ve spent time on HackerRank or LeetCode, you might have noticed most of the optimal solutions use Set Theory.\nBy reading this article, you will gain a deeper knowledge into set theory and how to use it to create optimal algorithms.\nSet Theory was invented (or found, depending on how you view maths) by George Cantor. \nIt revolves around the idea of sets, as in collections of objects. Set theory is incredibly powerful and can be used to write some beautiful \u0026amp; elegant code.","title":"Set Theory for Competitive Programming"},{"content":"I was looking to package my project, Ciphey, for operating systems and for managers that isn\u0026rsquo;t PyPi. Unforuantely, there seemed to be very little information on the web about this.\nThis is a guide on packaging your Python project for:\n PyPi HomeBrew Windows Package Manager Arch User Respository  Ideas Publish each one seperately, and include a pdf containing the full book\nInclude github actions for these\nExplain semenatic versioning\nSemantic Versioning Semantic Versioning is a system defining how to write version numbers. The 3 numbers are:\nMajor.Minor.Bugs  If you have fixed some bugs, increment the bugs counter.\nIf you have added a minor feature, increment the minor counter.\nIf you have done something major, increment the major counter.\nWe can signify whether a release is still being rested or not by adding \u0026ldquo;rc\u0026rdquo; (release candidate) to the end of the version. \u0026ldquo;5.0.0rc1\u0026rdquo; signifies \u0026ldquo;release canidate 1\u0026rdquo; which means this is the first public testing release of version 5.0.0.\nPyPi The traditional method of using Setuptools is outdated and old. There\u0026rsquo;s a new cowboy in town, and their name is Poetry.\nPoetry creates a pyproject.yml file, which is the successor to the 3-file Setuptools sytem.\nYou should use Poetry because:\n Instead of 3 files, it is now 1 file That 1 file is yaml, which means you don\u0026rsquo;t have to cry reading weirdly formatted Python code used as a replacement for yaml You can seperate dev \u0026amp; normal dependencies, so users only install the dependencies they need to run the app It\u0026rsquo;s physically easier to build and upload to PyPi And a host of other things  Install poetry with pip3 install poetry.\nNavigate to your projects directory and run the command poetry init.\nThis will generate a pyproject.toml file. This file contains everything PyPi needs to upload your project, and allow other users to download it.\nLet\u0026rsquo;s run through the sections in this new file, and fill then out as we go.\n[tool.poetry]\nThis section relates to the metadata of your project.\nThe name, description, version etc.\nTo add a new variable to a .toml file, write it as if it were python name = \u0026quot;project name\u0026quot;.\nThe most important ones we\u0026rsquo;ll want are:\n Name  What is the name of the project?\nname = \u0026quot;Ciphey`   Version  The semantic version number.\nversion = \u0026quot;5.0.0rc6\u0026quot;   Description  Short one line description.\ndescription = \u0026quot;Automated decryption tool\u0026quot;   Authors  A list containing the authors name and email address. In the format of authors = [\u0026quot;brandon \u0026lt;brandon@fake.com\u0026gt;\u0026quot;]\n License  What license does the project use?\nlicense = \u0026quot;MIT\u0026quot;   readme  The name of the README.md file, in the same directory as pyproject.toml.\nreadme = \u0026quot;README.md\u0026quot;  Here is what Ciphey\u0026rsquo;s Pyproject looks like:\n[tool.poetry] name = \u0026quot;ciphey\u0026quot; version = \u0026quot;5.0.0rc4\u0026quot; description = \u0026quot;Automated Decryption Tool\u0026quot; authors = [\u0026quot;Brandon \u0026lt;brandon@skerritt (dot) blog\u0026gt;\u0026quot;] license = \u0026quot;MIT\u0026quot; documentation = \u0026quot;https://docs.ciphey.online\u0026quot; exclude = [\u0026quot;tests/hansard.txt\u0026quot;] readme = \u0026quot;README.md\u0026quot;  To find out what else you can include, check out the Poetry documentation.\n[tool.poetry.dependencies]\nA list of all the dependnecies your project uses. Don\u0026rsquo;t worry! You don\u0026rsquo;t have to manually add them to te list.\nRun the command poetry add \u0026lt;dependency\u0026gt; to add a dependency to your project, and Poetry will automatically add it to your project.\nFor example, to add rich we would write poetry add rich.\n[tool.poetry.dev-dependencies]\nThe dependencies the developers of your tool rely on. To add the testing library Pytest, write poetry add --dev pytest.\n[tool.poetry.scripts]\nThis is the 2nd most important part! As it contains an entry point. When a user installs your package, you\u0026rsquo;d probably like them to be able to run package in their terminal and use your package.\nFor a folder called Ciphey with a file named Ciphey.py with a function called main(), we would write:\nciphey = 'ciphey.ciphey:main'  When the user runs the command ciphey, it actually runs the main function of the file ciphey of the folder ciphey.\nFor a more detailed explanation, check this out.\nPoetry Run poetry run runs our script, but includes the pyproject.toml file. It executes the given command inside of a virtual environment, essentially it allows us to test our project in the same way a user might run our program.\nPoetry Install Poetry install installs our program and all its dependencies. Essentially, we can test exactly what our users will do when they install the project for themselves.\nPoetry Update poetry update updates our dependencies.\nPoetry Build Now onto the most important commands. Poetry build builds our project, which means it generates some files that other users can install and use on their system.\nPoetry publish Poetry Publish will publish the package to PyPi for us. All we need to do is enter a username / password.\nAnd just like that, our project is now on PyPi for the whole world to download!\nAutomatic Uploading using github actions Windows Package Manager (WinGet) There are 3 steps to submitting your app to WinGet.\n Turning your project into an EXE Create a manifest file Create a pull request on GitHub  Turning your project into an EXE Windows requires an exe file for Python projects. Don\u0026rsquo;t fret! Turning your project into a exe file isn\u0026rsquo;t that difficult.\nDownload Pyinstaller, and then create an entry point in the root directory.\nAn entry point is a python file that when ran, will run the program. So for instance:\nCiphey/ |-entry_point.py |-ciphey/ |----main.py  Here the project code is in ciphey/. To run the program, we\u0026rsquo;d have to run python3 ciphey/main.py.\nThis is the typical file structure of a project. We have README.md and similar in the root, and all the source code into a sub-directory.\nWe need to create a program that calls our program using an entry point. The entry point is a function which runs the program.\nIf you have a setup.py or pyproject.yml, you may already have entry points defined in them.\nIn entry_point.py, we\u0026rsquo;d write:\nfrom ciphey.__main__ import main if __name__ == '__main__': main()  Or however your entry point is defined.\nNow, run Pyinstaller on the entry_point.py file. It will generate a new folder called dist/. If you are using the default Python .gitignore it will automatically disclude dist/. If not, please add it to the .gitignore!\nPyinstaller will also generate an entry_point.spec file in the root directory. This file contains a specification of how Pyinstaller should build your program.\nOnce built, run the program.\nYou will likely see some errors. Most likely bad imports. To fix this, define them in the spec file. There are a couple main lists in the spec file you should know about:\n Binaries  If you already hold a binary for a specific file / library (such as C++ compiled) then define the location here.\n Datas  If your program relies on .txt data, or anything that isn\u0026rsquo;t a Python file define it here.\n Hidden Imports  Hidden imports look like __import__. These types of imports are not visible to Pyinstaller\u0026rsquo;s analysis, so to get around this define the imports in the Hidden imports section.\n Excludes  Exclude a package from Pyinstaller. I had an error with Setuptools, but since Setuptools isn\u0026rsquo;t needed to run Ciphey I told Pyinstaller to exclude the entire package.\nIf you have edited the .spec file, you may want to delete the line from the .gitignore which states to ignore the file. Otherwise, all the hard work you\u0026rsquo;ve spent in getting Pyinstaller to work may be lost.\nOne thing to note. Pyinstaller only creates executables for the system you are on. You cannot build a Windows .exe from Linux. You have to be on the system you are trying to build for. Pyinstaller can create these binaries (assuming you own the operating systems for them):\n Windows .exe Mac OS\u0026rsquo; .app Linux\u0026rsquo;s Binary Files  Once built and packaged, running the executable on Windows / Mac will bring up the Terminal (assuming you do not have any GUI). If you do, it will bring up the GUI.\nPyinstaller packages an entire Python intrepreter with the binary, So do not worry about the user having Python installed.\nManifest File Now we have an exe. I would suggest converting to MSIX.\nExes are cool and all, but they\u0026rsquo;re not really package manager matieral. Winget with an .exe is a glorified Softonic / CNET Software. MSIX gives us the real power to:\n Automatically update the app Uninstall cleanly Understand what dependencies are required  So in short, if we use an .exe it is just a glorified Software downloader. If we use .msix it is more of a package mamnager.\nBelow is the manifest.yml file for Ciphey.\nId: Ciphey.Ciphey Publisher: Ciphey Name: Ciphey Version: 5 AppMoniker: Ciphey MinOSVersion: 10.0.0.0 Description: Automated Decryption Tool Homepage: https://www.github.com/ciphey/ciphey License: MIT LicenseUrl: https://opensource.org/licenses/MIT InstallerType: exe Installers: - Arch: x64 Url: https://statics.teams.cdn.office.net/production-windows-x64/1.3.00.4461/Teams_windows_x64.exe Sha256: 712f139d71e56bfb306e4a7b739b0e1109abb662dfa164192a5cfd6adb24a4e1 ManifestVersion: 0.1.0  Ciphey\u0026rsquo;s manifest file Let\u0026rsquo;s walk through quickly what each potentially confusing part is. I\u0026rsquo;ll leave things like \u0026ldquo;Name\u0026rdquo; and \u0026ldquo;License\u0026rdquo; as they are self-explanatory.\n ID  This follows a publisher.package format. Your publishers name, and then the package name.\n App Moniker  What\u0026rsquo;s the common name people search for your package with? For example \u0026ldquo;Visual Studio Code\u0026rdquo; can also be found with \u0026ldquo;vscode\u0026rdquo;.\nIf you have a long package name and your users often shorten it, this will be helpful to you.\n MinOSVersion  What is the minimum version of Windows the app supports? 10.0.0.0 means Windows 10 and above.\n InstallerType  What type of installer do you have? If you followed along, you should have an .exe file.\n Installers  This details how to install your package.\n Architecturue  What architecture does your project support? Examples include arm, arm64, x86, x64 and neutral.\nThe ones you\u0026rsquo;re probably after are either x86 or x64. x86 is for 32-bit operating systems, x64 is for 64-bit operating systems.\nURL  What is the URL of the .exe installer for your project? Personally, I hosted this on GitHub.\nSHA256  What is the SHA256 checksum of your .exe file? There\u0026rsquo;s an article here detailing how to calculate it.\n Manifest Version  Everytime you update this file, update the manifest version numbering using Semantic Versioning.\nArch User Respository ","permalink":"https://polymath.cloud/packaging-your-python-project/","summary":"I was looking to package my project, Ciphey, for operating systems and for managers that isn\u0026rsquo;t PyPi. Unforuantely, there seemed to be very little information on the web about this.\nThis is a guide on packaging your Python project for:\n PyPi HomeBrew Windows Package Manager Arch User Respository  Ideas Publish each one seperately, and include a pdf containing the full book\nInclude github actions for these\nExplain semenatic versioning","title":"Packaging your Python Project"},{"content":"This article was written in collaboration with Emily. Emily is an artist specialising in Digital Culture and is currently writing for Daily Art Magazine, she also didn\u0026rsquo;t ask me to write this about her.\nShe is looking for a job. If you are interested in an amazing artist who understands digital culture and isn\u0026rsquo;t shy to ask the big questions, please check her out.\nThe art in this article is from Emily. If your company is even slightly interested in Digital Culture, please consider reaching out to her.\nIdeas:\n When we die, do we really die? We live on in the digital world Facebook accounts Artifical intelligence to replace dead humans Our content lives on. Blog post ,code etc. If we create a chatbot, that chatbot lives past us. What happens to our data when we die? Online personas, fake identities. Hackers often live life under a persona that no one irl knows, when tey die, their persona dies too. 2nd brain online personal wikis Social impact of the person (george floyd) (digital tools make it mroe obviousto more people) When will someone be forgotten? Do we reserve the right to be forgotten? Some people dont have the right to be forgotten(epstein\u0026rsquo;s crimes came out after he died, and people got even more angry and tried to humilate him. But what about his human rights?) If someone dies, the online communities they were involved in wouldn\u0026rsquo;t know. They would assume they had given up, that they were lazy? Family doesn\u0026rsquo;t know about technical details, they won\u0026rsquo;t know how to tell the online communities they had died https://www.vice.com/en_us/article/9a3a5a/death-is-a-high-tech-trip-in-japans-futuristic-cemeteries San Jumipero (black mirror) is inspired by japans high tech cemeteary Democratiation and digital death. Everyone looks the same, whether they enjoyed privleges or not. Had children or not. You cant judge them o ntheir grvaestojne / location of the gaveyard anymore.  What is digital legacy? fingerprint / facial recongition details (smartphones)\nCrypto currencies, photos (google photos), browsing history, DNA test results, digital family tree\nDigital legacy contains info of other people\nIf I search someone online, they are linked to my browsing history, Privacy issues to tackle\nGitHub archive\nIf we die, and we have an open source project on github, should the contributors continue contributing to a deadmans account?\nDeleting digital accounts \u0026ldquo;activie euthanasia) as we actively end the digital persons life via a delete button\nWhat we do online is like mirroring what we do in real life, like interacting with a digital clone of ourselves.\n","permalink":"https://polymath.cloud/neodeath-digital-death/","summary":"This article was written in collaboration with Emily. Emily is an artist specialising in Digital Culture and is currently writing for Daily Art Magazine, she also didn\u0026rsquo;t ask me to write this about her.\nShe is looking for a job. If you are interested in an amazing artist who understands digital culture and isn\u0026rsquo;t shy to ask the big questions, please check her out.\nThe art in this article is from Emily.","title":"NeoDeath - What happens when you die in the age of information?"},{"content":"This is an informed opinion piece on designing effective peer to peer (P2P) networks. I\u0026rsquo;ve written extensively about peer to peer networks, and have even designed my own (albeit, bad) cryptocurrency.\nBy the end of the article, we should have a good understanding of the important questions to answer when designing effective P2P networks.\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  Want the ebook?  This blog post is from my 79 page ebook on effective peer to peer networks. Sign up now and get the ebook for free along with:   A free 81 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\nAlternatively, you can buy the ebook for ¬£49.99 from Gumroad.\n When Should I Use a Peer to Peer Network? P2P networks can be used for all networking. We need to use the right tool for the job.\nQuickly \u0026amp; automatic scaling is their game. P2P networks enhance with more users, not degrade.\nIf we are building a platform with a shared goal (i.e. shares files) and we can imagine the platform growing uncontrollably big, P2P networks are good.\nOr if we do not want anyone to shut down our network (in a client-server model, turn off your servers) a P2P network is effective.\nThere are 2 types of P2P Networks:\n Full P2P networks  These are networks where everyone node is equal.\n Hybrid P2P networks  Certain nodes have more power than others.\nLet\u0026rsquo;s walk through what all good peer to peer networks share.\n Rewards All great peer to peer networks have reward systems. The user does some work, and they are rewarded.\nEven if the reward isn\u0026rsquo;t clearly defined, there is always a reward for taking part in the peer to peer network. And always a reward for giving back to the network.\nRewards are paramount to P2P networks and my favourite thing to talk about!\nIn Bitcoin, this is earning Bitcoin. BitTorrent rewards participants with faster download speeds. Tor rewards other Tor members with more privacy.\nAll of these rewards are given for contributing to the network.\nThe idea of a reward is to eliminate free-riders who partake in the network without giving anything back. There are 2 ways to discourage free-riders:\n Forcing every user to give back. Rewarding users who give back.  Tor is the former. The only reward that can be given is to become a guard node, which provides no obvious benefit for the user other than to feel good about themselves.\nThe latter is what most peer to peer networks use, rewarding users who give back.\nIn BitTorrent, those who seed (upload) are rewarded with higher download rates. The more you seed, the faster you can download.\nIn Bitcoin, users are rewarded for mining the blockchain with Bitcoin.\nThis leads us to look at peer to peer networks from 2 interesting perspectives. Human civilisations, or reinforcement learning machines.\nLet\u0026rsquo;s start with human civilisations.\n Human Civilisations We do work, and we get rewarded. Capitalism. In semi P2P networks (where one node has more power than the others) we can almost perfectly replicate capitalism.\nIf we force everyone to do the same work for the same reward then it is communism.\nLuxury communism uses machines to do the heavy lifting leaving humans to do other things and is a new 21st-century take. This more closely relates to P2P networks than traditional communism.\nAs P2P networks grow, eventually if not governed properly it will fall back into an client-server architecture. Why use Jim\u0026rsquo;s computer to download ubuntu.iso when you can download it from LargeCorp which has a much faster speed.\nWith planning, we can build a dictatorship of the proletariat where every ordinary node has power in the network. Not just those with higher rewards.\nThere will always be those with more power than others (perhaps they have more computers on the network) but the point is that everyone has some power over the network.\nAnd the ordinary nodes will likely always have more power than larger clusters of nodes, as seen in Bitcoin.\nModelling P2P networks as political movements allows us to talk about P2P networks as more than just networks, as entire communities.\nEventually people with little to no knowledge about networking can discuss and change how the network operates using these abstractions.\n Reinforcement Learning We can use artificial intelligence to automatically optimise a P2P network. Humans are slow when it comes to making changes compared to computers.\nP2P networks already use technology to find the shortest routes or preferred routes. As networks become more and more complicated, simple handwritten algorithms might not be enough.\nPicture this nifty example.\nIn our network, we have multiple nodes all interconnected. Each node has a rating.\nThis rating signifies how good that node is. A good rating based on how much reward an individual has. Whether that reward is from speed, accuracy or trust is problem dependant.\nEvery time this node is used, its personal reward is increased. Much like Kohonen\u0026rsquo;s competitive learning rules.\nBut why stop there? If the node is faster, trustworthy, contributes heavily to the network it should have a higher reward rating.\nAnd our goal is to create the \u0026ldquo;best\u0026rdquo; path across the network, taking into account all of these numbers and to maximise our reward, whatever that may be.\nTor already has a similar (albeit smaller) system in place like this. Guard nodes, bridge nodes, and more.\nThis seems like the perfect scenario for reinforcement learning. Multiple inputs to maximise our reward. Exploratory choices, meaning that a node with a \u0026ldquo;bad\u0026rdquo; reating is chosen, preventing some nodes from hogging all the resources.\nReinforcement learning is the closet computer learning to how humans learn according to Sutton \u0026amp; Barto.\nHumans will eventually optimise manually. Where good nodes have better jobs or are chosen more than others. Reinforcement learning is much faster than any human could be.\nWe, as humans, naturally \u0026amp; manually improve the network over time. What if we could use AI to speed this process up?\n Optimisation of the Network An ideal P2P network will improve the more people that use it.\nIn Tor, the more people that use it the more privacy is given. I talk more about this in my Tor blog post.\nA simple distinction, but one that must be made. As the network grows older, ideally, it reaches its global optimised state.\nUnlike client-server, where the more users there are the harder it becomes to maintain the network**.** Take the example of downloading a file. Client-Server starts out being incredibly fast, but over time as the file becomes more popular that download speed degrades. With a P2P network, at the start it is slow to download (assuming the initial uploader is slow) but the speed increases over time. What\u0026rsquo;s important is that over ttime, client-server gets worse with more users but P2P gets better.\nOptimisation of the network as it grows is often done through the rewards system.\nAs Tor grows, the privacy of each user increases. Thus, the more that use Tor, the better the privacy.\nEach user has their personal reward, but together this creates a positive reward for the whole network.\nIn Bitcoin, the more that mine Bitcoin, the harder it is to mine, and the larger incentive it is to use better computers. Better computers = faster mines = more money.\nThis creates competition amongst users. **Who can contribute to the network the most? **Users are fighting for their own personal reward, but this fight improves the network as a whole.\nIt is almost impossible to perform a 51% attack on the network when miners are hyper-competitive like this.\n**Users work towards their own personal rewards, which means the network gets better from not only more users but better rewards. **The entire network scales majestically upward.\nWhen choosing a reward, it is important to look at the local rewards (what the user gets) and to look at the greater rewards (what the network will get for participating).\nI also recommend rewards which increase as the network grows. Scalable rewards. If the price of Bitcoin did not scale with how many users it had, the network degrades or upgrades much slower over time.\n Humble Beginnings With a client-server architecture, it can be amazing from the start. But with a peer to peer network, it sucks for the first few users.\nWith Bitcoin, what was the incentive? You get this worth coin\u0026hellip;. nothing at all.\nTor. The incentive? Well, if there are only 3 users then there is no incentive. No privacy. 51% attacks is a matter of whether someone loses WiFi on the train or not.\nBitTorrent. The incentive? You can download this one person\u0026rsquo;s files.\nIn peer to peer networks, generally, they suck for the first couple users and are only worthwhile over time.\nSo how then, do we build an effective peer to peer network that other people will want to use?\nThere are 2 methods to this.\n Forceful use  You can force users to use the network. This is how Tor got its start. The US Naval Resarch Labs built Tor, and effectively they could force others in the Navy to use it.\n Incredible technology  The other option is incredible technology. In a peer to peer network, the first few users are often those who recognise how incredible the technology is.\nThink about Bitcoin. The first few users fell in love with the technology behind it, and truly believed it could one day be great.\nWith a great rewards system in place, the first users of Bitcoin realised it could grow up to be something huge. Amazing technology attracts the first few users, and those users are often technologically minded.\n Jobs for the People In almost all peer to peer networks, jobs are assigned to nodes.\nIn Bitcoin, we have miners whose job it is to mine the blockchain.\nIn Tor, we have guard nodes.\nIf a node has proven to be trustworthy than we shall make it a guard node. If a node wants to mine the blockchain, it becomes a miner.\nThese nodes do not have more rights than the other nodes, they simply have a job to do. And sometimes this job provides a reward, and sometimes it doesn\u0026rsquo;t.\nIf we give everyone the same job, the network will tend towards global optimisation much slower.\nLet\u0026rsquo;s say we have a new file-sharing system. Our system will let you download files from others.\nWe have a file, Ubuntu.iso, which is being seeded by 10 people.\nWe choose at randomly a seed to download from. This seed has an upload speed of 1 Mbps while all the other seeders have an upload speed of 200mbps.\nIt makes logical sense to use the uploaders with faster speed.\nIt makes sense logically to choose from a subsection of people with high upload speeds. Effectively, we have given these people \u0026lsquo;jobs\u0026rsquo;.\nThere are 2 types of jobs in peer to peer networks:\n Rewarded Jobs Unpaid Internships (jobs)  With rewarded jobs, the uploaders get a higher reward for working. This reward might be faster download speeds, such as in BitTorrent.\nWith unpaid jobs, there is no reward. There is no incentive for one to choose a job, it is gifted to those. This is how guard nodes work in Tor.\nIf we have a job which peopl have to opt-in to, but doesn\u0026rsquo;t provide a reward it is unlikely for many people to opt-in.\nDeciding on what jobs to give, and whether it is rewarded or not is problem specific.\nFor example, we have a job called \u0026ldquo;maintainer of the Blockchain\u0026rdquo;. This job means people have a copy of the blockchain and maintains it. And only they do, no one else can. Any cryptocurrency nerd reading this may already see the problem.\nTo view the blockchain, you need to have this job. But not every citizen of the world has a spare 300gb to view the chain. They cannot get the job, because they do not meet the required specification.\nYou also have to meet a plethora of other specifications. Most of them a normal home user cannot achieve.\nThis is another issue. Can we reject people if they do not meet the job specification? Again, problem specific.\nWith only a small per cent controlling the blockchain, it leaves it open to a 51% attack. A small few will hold all the power. It will not work well in this instance.\nI propose that jobs are automatically assigned based on the specification of the user, but any user can request a job.\nThe only jobs they should be rejected for is high trust jobs, such as guard nodes. But, the specification of their computer should not be taken into account for trust jobs.\nHumans picking jobs are too slow. The network needs to react fast and scale fast. Humans are not fast. So automatic assignment it is.\nBut we do not want to prevent humans from accessing resources because of their circumstances.\nWhen assigning jobs, the jobs must work in harmony.\nWe should take inspiration from beehives or ant colonies for this. Human jobs are simply too hard to model, to focus on a much smaller example is wise.\nShould there be a punishment if someone takes a job for which they are unfit? Should a 30gb computer take the punishment for trying to maintain a 300gb file?\nOn the one hand, only a very small per cent of the population will ignore the assigned job and choose something for which they are unfit.\nBut, to achieve global optimisation we must make sure every single thing is accounted for.\nUnfortunately, in this world, those that do jobs that they are not capable of should be punished. I would not say to reduce the resources available to them through the job, but perhaps reduce the reward of using the network in some way.\n Data Structures Every single effective peer to peer network uses data structures.\nThe blockchain is just a fancy linked list with some extra properties.\nBitTorrent\u0026rsquo;s magnet links work based on distributed hash tables.\nData structures are vital to peer to peer networks. I do not want to get into every data structure available, but knowledge of them is important.\nWe can design a network using a distributed data structure that already exists, or we can build a new data structure/algorithm based on pre-existing ones.\n Policy Changes Throughout this article, I have talked about designing the network to be perfect from the get-go. Anyone knows this isn\u0026rsquo;t possible. So how then, do we change the network when it\u0026rsquo;s already running? How do we implement policy changes?\n Dictatorship Let the people decide The people can form a democracy  In our first instance, we have a dictatorship.\nYou, the creator decides on changes. You create these changes, and they go out to the network. We don\u0026rsquo;t care what the participants think, only that the change has taken place.\nThis is the most effective for easily implementing policy changes, but it ruins the trust.\nGood peer to peer networks reduces trust. We should not need to trust anyone. However, trust is important in some networks. It depends on the network itself.\nIf the network was for a digital currency, why would you trust this entire currency in the hands of a single person?\nBut for a privacy centred network, having this trust in one person or body of people can increase the trust throughout the network. It reduces the chance of a 51% attack backdoor in the early days, building trust from day 0.\nAs the network progresses, it strays further and further away from a 51% attack. Which means we lose trust, we do not need to trust that it is safe from a 51% attack if the network is large enough.\nIn the early days of a P2P network, it is very much a dictatorship. A few small people decide on changes to the network (think of the early days of Bitcoin) and this eventually moves towards democracy as the network grows.\nBut again, this brings problems. What if there is a critical failure in the code and there needs to be a change made during the networks primetime? This is for the designer to decide.\nWe can alternatively let the people decide.\nFrom the get-go, no single person has full control. Every time a change is made, a % of the network (likely 51) will need to agree to the change. Complete control for the network. No trusting the developer involved.\nAt the start, this may be problematic. What if we have a node in the network purely from FOMO and doesn\u0026rsquo;t care about updates?\nHumans are incredibly slow too. Imagine a critical bug in the code that had to be fixed right there and then. Humans may take weeks to decide. Many will not even respond to the decision.\nThe alternative is a democracy.\nGive certain people more power than others. Have the community vote in leaders, or have the leaders be pre-selected.\nThese leaders then decide on changes to the codebase. This reduces trust, especially if they are voted in.\nBut nothing is stopping them from teaming together to get the maximum personal reward while not doing anything for the many.\nAll in all, deciding on policy changes is a tricky subject. And one that should be decided before the network is made.\nAlthough something to remember is trust. Will the users need to trust you, personally?\nIf so, try and work towards a goal where that trust is reduced. Diversify that trust over to others. Remove trust completely, make them only trust themselves.\nEffective peer to peer networks is unlike client-server models where one person controls all the power. Effective P2P networks are for the people.\n The Cathedral or the Bazaar The Cathedral is waterfall development. Slow, well planned. The people working on it are cathedral builders. The final product is presented and sold to the public as the final product.\nThe Bazaar is the opposite. Work fast. Break things. Release early. Release often. Listen to your customers.\nWhen building a **full **P2P network, we would build both the cathedral and the bazaar.\nIn an ideal **full **P2P network, eventually, the creator\u0026rsquo;s power dwindles to almost nothing (they become just another normal node in the network).\nThis is what Satoshi Nakamoto did. They created the cathedral first, and then over time moved to the bazaar - eventually losing all power to change anything in the network without the permission of the network.\nOur P2P network could explode on day 1 and we would have no control to finish building the cathedral.\nFor this reason, in a full P2P network where all nodes are equal, we should build a cathedral and then transition naturally to a bazaar.\nIn semi P2P network where some nodes have more power than others, the developer doesn\u0026rsquo;t have to give up their child anytime soon.\nHowever, this requires the nodes to trust the developers. Something that not all P2P networks have the liberty of.\n Open Source or Not? The main thing in P2P networks is removing trust. We don\u0026rsquo;t necessarily want people to trust us when building a network, preferably we would want to remove as much trust as possible.\nClosed source systems do not instil much trust, therefore we must choose an open-source system.\n Conclusion We now know the biggest questions to ask when desiging effective P2P networks.\n  What will the rewards be?\n  What jobs are there?\n  Can users choose their own jobs?\n  Should there be a punishment? If so, what punishment?\n  Are jobs paid or unpaid?\n  Is it hybrid, or a full network?\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px;\n }  #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }\n  Want the ebook?  This blog post is from my 79 page ebook on effective peer to peer networks. Sign up now and get the ebook for free along with:   A free 81 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\n","permalink":"https://polymath.cloud/designing-effective-peer-to-peer-networks/","summary":"This is an informed opinion piece on designing effective peer to peer (P2P) networks. I\u0026rsquo;ve written extensively about peer to peer networks, and have even designed my own (albeit, bad) cryptocurrency.\nBy the end of the article, we should have a good understanding of the important questions to answer when designing effective P2P networks.\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  Want the ebook?","title":"Designing Effective Peer to Peer Networks"},{"content":"Quotes\n\u0026ldquo;An arists job is to make master pieces. Period\u0026rdquo; https://medium.com/s/story/your-work-is-the-only-thing-that-matters-26a47ccf778c\n‚Äúpeople who are thinking about things other than making the best product, never make the best product.‚Äù\n\u0026ldquo;The two greatest days of your life are the day you were born and the day you found out why\u0026rdquo;\n\u0026ldquo;Someone once told me the definition of hell; on your last day on earth, the person you could have become will meet the person you became.‚Äù\u0026rdquo;\n\u0026ldquo;How would the person I like to become do the things I am doing today\u0026rdquo;\n\u0026ldquo;I am the captain of my ship; the master of my fate. If I don\u0026rsquo;t believe it, if I don\u0026rsquo;t say it - no one else will.\u0026rdquo;\n\u0026ldquo;You will become what you think about\u0026rdquo;\n\u0026ldquo;Working really hard is what successful people do\u0026rdquo;\n\u0026ldquo;Seriously you can become the richest guy in the world in the future. You\u0026rsquo;re insane\u0026rdquo; - Slava\n\u0026ldquo;You love your work more than you love me\u0026rdquo; - Flower girl\n\u0026ldquo;Delayed gratification is a good thing. Always practice it. Never buy something on a whim, unless it is to satisfy your curiosity. Always buy books when you see them. Never ever delay your curiosity.\u0026rdquo;\n\u0026ldquo;If your dreams do not scare you they are not big enough\u0026rdquo;\n‚ÄúThe greatest reward in becoming a millionaire is not the amount of money that you earn. It is the kind of person that you have to become to become a millionaire.‚Äù‚Ää‚Äî‚ÄäJim Rohn\n\u0026ldquo;If you‚Äôre not invested in your relationships, you‚Äôre probably more focused on what you can get than what you can give.\u0026rdquo;\n\u0026ldquo;Nearly every second spent on social media is consumed time. You can‚Äôt have that time back. Rather than making your future better, it actually made your future worse. Just like eating bad food, every consumed moment leaves you worse off. Every invested moment leaves you better off.\nEntertainment is all well and good. But only when that entertainment is an investment in your relationships or yourself. You‚Äôll know if it was an investment if that entertainment continues to yield returns over and over in your future. That may include positive memories, transformational learning, or deepened relationships.\u0026rdquo;\n‚ÄúWhen you are young, work to learn, not to earn.‚Äù‚Ää‚Äî‚ÄäRobert Kiyosaki\n‚ÄúThe world gives to the givers and takes from the takers.‚Äù‚Ää‚Äî‚ÄäJoe Polish\n\u0026ldquo;Beyond acknowledging your dependence, constantly express your appreciation to the people in your life. That which you appreciate, appreciates. Relationships are assets that can and should grow bigger and better over time. As the brilliant entrepreneur Michael Fishman has said, ‚ÄúSelf-made is an illusion. There are many people who played divine roles in you having the life that you have today. Be sure to let them know how grateful you are.‚Äù\n\u0026ldquo;If you are not willing to learn, no one can help you. If you\u0026rsquo;re willing to learn, no one can stop you.\u0026rdquo;\n\u0026ldquo;You need a baseline. Invest in yourself and get an MBA. You won\u0026rsquo;t have to worry about being paid less because the MBA is the foundation to your career. You can only ever be paid more from there.\u0026rdquo;\n\u0026ldquo;If you look for the light, you\u0026rsquo;ll often find it. If you look for the dark, that\u0026rsquo;s all you\u0026rsquo;ll ever find.\u0026rdquo;\n\u0026ldquo;Success is neither magical nor mysterious. Success is the natural consequence of consistently applying basic fundamentals.‚Äù - Jim Rohn\n\u0026ldquo;Everyone knows Brandon\u0026rdquo; - Octavia\n\u0026ldquo;I ain\u0026rsquo;t gonna have a problem if you aim high and miss. I\u0026rsquo;ll have a problem if you aim low and hit\u0026rdquo;\n\u0026ldquo;Whether you think you can or you think you can\u0026rsquo;t, you\u0026rsquo;re right\u0026rdquo; - Henry ford\n\u0026ldquo;I would rather be an hour early than a minute late\u0026rdquo;\n\u0026ldquo;You are what you repeatedly do. Therefore excellence ought to be a habit, not an act\u0026rdquo;\n\u0026ldquo;While you\u0026rsquo;re struggling at rock bottom remember this.rock bottom can also be a great foundation on which to build\u0026rdquo;\n\u0026ldquo;How you do anything is how you do everything\u0026rdquo;\n\u0026ldquo;There Is a market for maybe 5 computers\u0026rdquo; - IBM Founder\n\u0026ldquo;The ones who are crazy enough to think they can change the world, are the ones that do.\u0026rdquo;\n\u0026ndash; Anonymous\n\u0026ldquo;winners focus on winning, losers focus on the winners\u0026rdquo;\n\u0026ldquo;A typical millionaire has around 7 sources of income.\n  Salary\n  Profit from business 3\n  Interest\n  Dividends\n  Rental incom\n  Capital gains\n  Royalties\n  How diversified are you?\u0026rdquo;\n\u0026ldquo;Think big. If every little helps, and everyone did a little, we wouldn\u0026rsquo;t get very far. We need everyone to think big.\u0026rdquo;\n\u0026ldquo;The question is: \u0026lsquo;what do we owe eachother?'\u0026rdquo;\n\u0026ldquo;So other people hurt me? That‚Äôs their problem. Their character and actions are not mine. What is done to me is ordained by nature, what I do by my own\u0026rdquo;\n\u0026ldquo;But it‚Äôs nicer here.‚Ä¶ So you were born to feel ‚Äúnice‚Äù? Instead of doing things and experiencing them? Don‚Äôt you see the plants, the birds, the ants and spiders and bees going about their individual tasks, putting the world in order, as best they can? And you‚Äôre not willing to do your job as a human being? Why aren‚Äôt you running to do what your nature demands? ‚ÄîBut we have to sleep sometime.‚Ä¶ Agreed. But nature set a limit on that‚Äîas it did on eating and drinking. And you‚Äôre over the limit. You‚Äôve had more than enough of that. But not of working. There you‚Äôre still below your quota\u0026rdquo;\n\u0026ldquo;I saw myself as the weakest guy ever created - but I never blamed God for that.\u0026rdquo;\n\u0026ldquo;To grow, you must suffer.\u0026rdquo;\n\u0026ldquo;I don\u0026rsquo;t care what you believe in. God, Buddha, Muhammad. You have to believe in yourself no matter what\u0026rdquo;\n\u0026ldquo;I want you to go home tonight after you beat the living shit out of me while I was smiling my face off and I want you to feel worse than I do\u0026rdquo;\n‚Äúyou can‚Äôt talk your way out of problems you behave yourself into.‚Äù\n\u0026ldquo;The subtle juxtaposition of fact and opinion is used to make the reader believe every part of the article is fact\u0026rdquo;\n\u0026ldquo;Slow. It. Down. Going too fast is one of the mistakes all negotiators are prone to making. If we‚Äôre too much in a hurry, people can feel as if they‚Äôre not being heard. You risk undermining the rapport and trust you‚Äôve built\u0026rdquo;\n\u0026ldquo;I didn\u0026rsquo;t have time to write a short letter so I wrote a long one instead\u0026rdquo;\n\u0026ldquo;Your entire life changes the day that you decide you will no longer accept mediocrity for yourself\u0026rdquo;\n\u0026ldquo;The key is not to prioritize what‚Äôs on your schedule, but to schedule your priorities. And this can best be done in the context of the week. \u0026quot;\n\u0026ldquo;But he was most phobic about diets. Price Waterhouse would have made Hayes a partner, without hesitation, despite all his many vices, but the firm couldn‚Äôt overlook his weight.\u0026rdquo;\n\u0026ldquo;Mirrors work magic. Repeat the last three words (or the critical one to three words) of what someone has just said. We fear what‚Äôs different and are drawn to what‚Äôs similar. Mirroring is the art of insinuating similarity, which facilitates bonding. Use mirrors to encourage the other side to empathize and bond with you, keep people talking, buy your side time to regroup, and encourage your counterparts to reveal their strategy\u0026rdquo;\n\u0026ldquo;It‚Äôs not what happens to us, but our response to what happens to us that hurts us\u0026rdquo;\n\u0026ldquo;Writing a book is a horrible, exhausting struggle, like a long bout with some painful illness. One would never undertake such a thing if one were not driven on by some demon whom one can neither resist nor understand.‚Äù\n\u0026ldquo;Deciding on the best tools to use is another form of procrastination\u0026rdquo;\n\u0026ldquo;You have power over your mind - not outside events. Realize this, and you will find strength.\u0026rdquo;\n\u0026ldquo;Any fool can criticise, condemn and complain ‚Äì and most fools do. But it takes character and self-control to be understanding and forgiving. \u0026quot;\n\u0026ldquo;Jim Bennett: I‚Äôve been up two and a half million.\nFrank: What you got on you?\nJim Bennett: Nothing.\nFrank: What you put away?\nJim Bennett: Nothing.\nFrank: You get up two and a half million dollars, any asshole in the world knows what to do: you get a house with a 25 year roof, an indestructible Jap-economy shitbox, you put the rest into the system at three to five percent to pay your taxes and that‚Äôs your base, get me? That‚Äôs your fortress of fucking solitude. That puts you, for the rest of your life, at a level of fuck you. Somebody wants you to do something, fuck you. Boss pisses you off, fuck you! Own your house. Have a couple bucks in the bank. Don‚Äôt drink. That‚Äôs all I have to say to anybody on any social level. Did your grandfather take risks?\nJim Bennett: Yes.\nFrank: I guarantee he did it from a position of fuck you. A wise man‚Äôs life is based around fuck you. The United States of America is based on fuck you. You have a navy? Greatest army in the history of mankind? Fuck you! Blow me. We‚Äôll fuck it up ourselves.\u0026rdquo;\n\u0026ldquo;If it starts to rain just as you have to leave your house, that is unfortunate. But if you have to go out, apart from putting on a raincoat or getting your umbrella, or cancelling your appointment, there isn\u0026rsquo;t much you can do about it. You can\u0026rsquo;t stop the rain no matter how much you want to. Should you be upset about this? Or should you just be philosophical? ‚ÄòBeing philosophical‚Äô simply means accepting what you can\u0026rsquo;t change\u0026rdquo;\n\u0026ldquo;Keeping Commitments Keeping a commitment or a promise is a major deposit; breaking one is a major withdrawal. \u0026quot;\n‚ÄúMy crime is that of outsmarting you, something that you will never forgive me for.‚Äù\nWhen people injure you, ask yourself what good or harm they thought would come of it. If you understand that, you‚Äôll feel sympathy rather than outrage or anger. Your sense of good and evil may be the same as theirs, or near it, in which case you have to excuse them. Or your sense of good and evil may differ from theirs. In which case they‚Äôre misguided and deserve your compassion. Is that so hard?\nStop perceiving the pain you imagine and you‚Äôll remain completely unaffected\nThe best kind of revenge is, not to become like unto them\nLeaning back in my recliner each night, staring at the ceiling, I tried to settle myself. I told myself: Life is growth. You grow or you die\nOwn a musket for home defense, since that\u0026rsquo;s what the founding fathers intended. Four ruffians break into my house. \u0026ldquo;What the devil?\u0026rdquo; As I grab my powdered wig and Kentucky rifle. Blow a golf ball sized hole through the first man, he\u0026rsquo;s dead on the spot. Draw my pistol on the second man, miss him entirely because it\u0026rsquo;s smoothbore and nails the neighbors dog. I have to resort to the cannon mounted at the top of the stairs loaded with grape shot, \u0026ldquo;Tally ho lads\u0026rdquo; the grape shot shreds two men in the blast, the sound and extra shrapnel set off car alarms. Fix bayonet and charge the last terrified rapscallion.He Bleeds out waiting on the police to arrive since triangular bayonet wounds are impossible to stitch up, Just as the founding fathers intended\nAlways try to inject some humor when you are trying to help people wrap their heads around a complex subject, especially if they are new to the topic or have a low level of understanding about it. Humor is also a useful tool to deflect controversy or to relieve your audience from traumatic events. Millions of people tuned in to Saturday Night Live after 9/11 to get some relief from the constant barrage of horrifying images that were ubiquitous on television, in newspapers, and on the Internet. When comedian Will Ferrell appeared in one of the first skits with nothing but an American-flag-colored thong that showed his butt cheeks, the world knew it was okay to laugh again‚Äînot to forget, but to give our brains a break from the trauma.\nIf you‚Äôre not yet wealthy but want to be someday, never purchase a home that requires a mortgage that is more than twice your household‚Äôs total annual realized income.\n**Perfection in the art of swordsmanship is reached . . . when the heart is troubled by no more thought of I and You, of the opponent and his sword, of one‚Äôs own sword and how to wield it. . . . All is emptiness: your own self, the flashing sword, and the arms that wield it. Even the thought of emptiness is no longer there. **\nWhen another person speaks, we‚Äôre usually ‚Äúlistening‚Äù at one of four levels. We may be ignoring another person, not really listening at all. We may practice pretending. ‚ÄúYeah. Uh-huh. Right.‚Äù We may practice selective listening, hearing only certain parts of the conversation. We often do this when we‚Äôre listening to the constant chatter of a preschool child. Or we may even practice attentive listening, paying attention and focusing energy on the words that are being said. But very few of us ever practice the fifth level, the highest form of listening, empathic listening.\n\u0026ldquo;First‚Ä¶MAKE A SCHEDULE THE NIGHT BEFORE. No matter how big or small, PLAN THIS OUT the night before so you don‚Äôt just wake up and figure out with what you‚Äôre going to do without a goal. Trust me, just seeing a to-do list is going to motivate you to get it done. And when it comes to productivity, that‚Äôs what matters the most. Second‚Ä¶MAKE YOUR BED EVERY SINGLE MORNING. I NEVER did this before, but I gotta say‚Ä¶it‚Äôs nice. Apparently, the logic behind making your bed every morning is that it starts your day off right and sets the tone for the entire day. Basically, you‚Äôve accomplished the first task of the day and because of that, you‚Äôre more likely to accomplish other tasks, as well. It‚Äôs also supposed to relieve stress because you now have a clean, tidy room, and that encourages you to clean OTHER parts of the room and house to match the freshly made bed. With less mess, you can think better, and with that, you tend to do better work. Third‚Ä¶GET THINGS DONE IMMEDIATELY. If there‚Äôs ANYTHING I‚Äôve done that leads to increased productivity and money, it‚Äôs NOT procrastinating on something. By doing it immediately, you‚Äôre going to want to do other things immediately, too. Fourth‚Ä¶MAKING WHATEVER YOU NEED TO DO A MUST. Tony Robbins talks about this all the time‚Ä¶you have wants, and you have MUSTS. The wants just become desires, and the MUSTS become a reality. I can‚Äôt even begin to tell you how true this is. When you turn your goals or to-do lists into MUSTS, and you DO THEM IMMEDIATELY, they happen. If you want it badly enough, you HAVE to make it a MUST. Fifth‚Ä¶EXERCISE DAILY. I find that when I work out, I do better quality work, I think quicker, I‚Äôm able to be more creative, and I‚Äôm able to be a more energetic person. If you‚Äôre not going to the gym, force yourself to go. Try it for 3 months‚Ä¶even if that means you just go to the gym and walk on a treadmill for 20 minutes just to say you‚Äôve done, do it. Then evaluate after 3 months whether you feel it‚Äôs a waste of time. I wholeheartedly agree that weight lifting or going to the gym has made me a MUCH more effective person, and a happier person. It becomes a huge stress relief, it‚Äôs one of the few times I can just listen to music and zone out, and even if I didn‚Äôt have ANYTHING else to do that day, as long as I go to the gym, I feel accomplished. And lastly‚Ä¶do these consistently. This doesn‚Äôt work if you do it for a week and stop. This is about doing this long term and making it a part of WHO YOU ARE, and from my perspective, these few habits make a NOTICEABLE difference. \u0026quot;\nYou can get everything in life you want if you will just help enough other people get what they want.\nSELFISHNESS. The leader who claims all the honor for the work of his followers, is sure to be met by resentment. The really great leader CLAIMS NONE OF THE HONORS. He is contented to see the honors, when there are any, go to his followers, because he knows that most men will work harder for commendation and recognition than they will for money alone.\nAccording to Martin, studies show that when we meet people who have a good sense of humor, we are more likely to attribute other desirable traits to their personalities. Studies have shown that humorous people are seen as friendly, extroverted, considerate, pleasant, interesting, imaginative, intelligent, perceptive, and emotionally stable.\nToo many people refuse to set high goals for themselves, or even neglect selecting a career, because they fear the criticism of relatives and \u0026ldquo;friends\u0026rdquo; who may say \u0026ldquo;Don\u0026rsquo;t aim so high, people will think you are crazy.\n\u0026ldquo;You will never go to university. Lower your expectations, you can\u0026rsquo;t keep on living this fantasy life\u0026rdquo; - old social work\nIf anyone can refute me‚Äîshow me I‚Äôm making a mistake or looking at things from the wrong perspective‚ÄîI‚Äôll gladly change. It‚Äôs the truth I‚Äôm after, and the truth never harmed anyone. What harms us is to persist in self-deceit and ignorance.\nThen remind yourself that past and future have no power over you. Only the present‚Äîand even that can be minimized. Just mark off its limits. And if your mind tries to claim that it can‚Äôt hold out against that ‚Ä¶ well, then, heap shame upon it.\nLabeling is a simple, versatile skill that lets you reinforce a good aspect of the negotiation, or diffuse a negative one. But it has very specific rules about form and delivery. That makes it less like chatting than like a formal art such as Chinese calligraphy\nThe difference between people who exercise initiative and those who don‚Äôt is literally the difference between night and day. I‚Äôm not talking about a 25 to 50 percent difference in effectiveness; I‚Äôm talking about a 5000-plus percent difference, particularly if they are smart, aware, and sensitive to others.\n\u0026ldquo;successful people and unsuccessful people have the same goals, so dreaming big isn\u0026rsquo;t enough. You don\u0026rsquo;t rise to the level of your goals, you fall to the level of your systems\u0026rdquo;\nMany lumps of incense on the same altar. One crumbles now, one later, but it makes no difference.\nIf we come up with a Lose/Win, you may appear to get what you want for the moment. But how will that affect my attitude about working with you, about fulfilling the contract? I may not feel as anxious to please you. I may carry battle scars with me into any future negotiations. My attitude about you and your company may be spread as I associate with others in the industry. So we‚Äôre into Lose/Lose again. Lose/Lose obviously isn‚Äôt viable in any context.\nOnly the educated are free\nIf you wish to improve, be content to appear stupid or clueless in extraenous activities\nWe thought of life by analogy with a journey, a pilgrimage, which had a serious purpose at the end, and the thing was to get to that end, success or whatever it is, maybe heaven after you‚Äôre dead. But we missed the point the whole way along. It was a musical thing and you were supposed to sing or to dance while the music was being played.‚Äô\nI‚Äôm begging you, Prince Zuko! It‚Äôs time for you to look inward and begin asking yourself the big questions: Who are you? And what do you want?\nThose who consistently fall victim to desire are not respected by the ones around them. A person who falls victim to the desires of the world around him/her is weak in spirit, and unhealthy in body. Practice ignoring your desires to be unpredictable in life. Practice saying no to what most would say yes to based on its attractive properties. Practice overcoming sexual thoughts and mammalian urges, not indulging in sugary foods for mere oral pleasure, and not allowing anger to drive your being into a dark existence.\nSometimes life is like this dark tunnel, you can‚Äôt always see the light at the end of the tunnel, but if you just keep moving, you will come to a better place.\nIt is important to draw wisdom from different places. If you take it from only one place it become rigid and stale.\nPrince Zuko, pride is not the opposite of shame, but it‚Äôs source. True humility is the only antidote to shame.\nAnyone‚Äôs capable of great good and great evil. Everyone, even the Firelord and the Fire Nation, have to be treated like their worth giving a chance.\n‚ÄúSharing tea with a fascinating stranger is one of life‚Äôs true delights.‚Äù\nThe best time to plant a tree was 20 years ago. The second best time is now.\n‚ÄúYou have no responsibility to live up to what other people think you ought to accomplish. I have no responsibility to be like they expect me to be. It\u0026rsquo;s their mistake, not my failing.‚Äù\nNothing in the world can take the place of Persistence. Talent will not; nothing is more common than unsuccessful men with talent. Genius will not; unrewarded genius is almost a proverb. Education will not; the world is full of educated derelicts. Persistence and determination alone are omnipotent. The slogan \u0026lsquo;Press On\u0026rsquo; has solved and always will solve the problems of the human race.\n\u0026ldquo;You have enemies? Good. That means you\u0026rsquo;ve stood up for something, sometime in your life.\u0026rdquo;\nSometimes the best way to solve your own problems is to help someone else\u0026rdquo;\n\u0026ldquo;Another one got caught today, it\u0026rsquo;s all over the papers. \u0026ldquo;Teenager Arrested in Computer Crime Scandal\u0026rdquo;, \u0026ldquo;Hacker Arrested after Bank Tampering\u0026rdquo;\u0026hellip; Damn kids. They\u0026rsquo;re all alike. But did you, in your three-piece psychology and 1950\u0026rsquo;s technobrain, ever take a look behind the eyes of the hacker? Did you ever wonder what made him tick, what forces shaped him, what may have molded him? I am a hacker, enter my world\u0026hellip; Mine is a world that begins with school\u0026hellip; I\u0026rsquo;m smarter than most of the other kids, this crap they teach us bores me\u0026hellip; Damn underachiever. They\u0026rsquo;re all alike. I\u0026rsquo;m in junior high or high school. I\u0026rsquo;ve listened to teachers explain for the fifteenth time how to reduce a fraction. I understand it. \u0026ldquo;No, Ms. Smith, I didn\u0026rsquo;t show my work. I did it in my head\u0026hellip;\u0026rdquo; Damn kid. Probably copied it. They\u0026rsquo;re all alike. I made a discovery today. I found a computer. Wait a second, this is cool. It does what I want it to. If it makes a mistake, it\u0026rsquo;s because I screwed it up. Not because it doesn\u0026rsquo;t like me\u0026hellip; Or feels threatened by me\u0026hellip; Or thinks I\u0026rsquo;m a smart ass\u0026hellip; Or doesn\u0026rsquo;t like teaching and shouldn\u0026rsquo;t be here\u0026hellip; Damn kid. All he does is play games. They\u0026rsquo;re all alike. And then it happened\u0026hellip; a door opened to a world\u0026hellip; rushing through the phone line like heroin through an addict\u0026rsquo;s veins, an electronic pulse is sent out, a refuge from the day-to-day incompetencies is sought\u0026hellip; a board is found. \u0026ldquo;This is it\u0026hellip; this is where I belong\u0026hellip;\u0026rdquo; I know everyone here\u0026hellip; even if I\u0026rsquo;ve never met them, never talked to them, may never hear from them again\u0026hellip; I know you all\u0026hellip; Damn kid. Tying up the phone line again. They\u0026rsquo;re all alike\u0026hellip; You bet your ass we\u0026rsquo;re all alike\u0026hellip; we\u0026rsquo;ve been spoon-fed baby food at school when we hungered for steak\u0026hellip; the bits of meat that you did let slip through were pre-chewed and tasteless. We\u0026rsquo;ve been dominated by sadists, or ignored by the apathetic. The few that had something to teach found us will- ing pupils, but those few are like drops of water in the desert. This is our world now\u0026hellip; the world of the electron and the switch, the beauty of the baud. We make use of a service already existing without paying for what could be dirt-cheap if it wasn\u0026rsquo;t run by profiteering gluttons, and you call us criminals. We explore\u0026hellip; and you call us criminals. We seek after knowledge\u0026hellip; and you call us criminals. We exist without skin color, without nationality, without religious bias\u0026hellip; and you call us criminals. You build atomic bombs, you wage wars, you murder, cheat, and lie to us and try to make us believe it\u0026rsquo;s for our own good, yet we\u0026rsquo;re the criminals. Yes, I am a criminal. My crime is that of curiosity. My crime is that of judging people by what they say and think, not what they look like. My crime is that of outsmarting you, something that you will never forgive me for. I am a hacker, and this is my manifesto. You may stop this individual, but you can\u0026rsquo;t stop us all\u0026hellip; after all, we\u0026rsquo;re all alike. \u0026quot;\nYou want to change the world? There\u0026rsquo;s nothing to it\nThe investors chief problem - and even his worst enemy - is likely to be himself.\nAn intelligent investor is one who is patient, disciplined and eager to learn.\nRemember this: the people who claim that the next big thing is X are no more likely to be right than the hypsters of the dotcom crash.\nThe pendulum swings from irrational embrace to unjustifiable pessisim.\nIf you divide up all the money evenly in the world it will soon be back in their original pockets\nTo get something you\u0026rsquo;ve never had, you have to do something you\u0026rsquo;ve never done\nI‚Äôve never liked the term ‚Äúcomputer science.‚Äù The main reason I don‚Äôt like it is that there‚Äôs no such thing. Computer science is a grab bag of tenuously related areas thrown together by an accident of history, like Yugoslavia. At one end you have people who are really mathematicians, but call what they‚Äôre doing computer science so they can get DARPA grants. In the middle you have people working on something like the natural history of computers ‚Äî studying the behavior of algorithms for routing data through networks, for example. And then at the other extreme you have the hackers, who are trying to write interesting software, and for whom computers are just a medium of expression, as concrete is for architects or paint for painters ‚Ä¶\nThe mathematicians don‚Äôt seem bothered by this. They happily set to work proving theorems like the other mathematicians over in the math department, and probably soon stop noticing that the building they work in says ‚Äúcomputer science‚Äù on the outside. But for the hackers this label is a problem. If what they‚Äôre doing is called science, it makes them feel they ought to be acting scientific. So instead of doing what they really want to do, which is to design beautiful software, hackers in universities and research labs feel they ought to be writing research papers.\nFor example, I was taught in college that one ought to figure out a program completely on paper before even going near a computer. I found that I did not program this way. I found that I liked to program sitting in front of a computer, not a piece of paper. Worse still, instead of patiently writing out a complete program and assuring myself it was correct, I tended to just spew out code that was hopelessly broken, and gradually beat it into shape. Debugging, I was taught, was a kind of final pass where you caught typos and oversights. The way I worked, it seemed like programming consisted of debugging.\nThere is something much deeper happening.\nAs you become successful in your field (or wherever), and further internalize the habits that are necessary to be successful, it\u0026rsquo;s clear that many of these things are easy to do, it\u0026rsquo;s just that people don\u0026rsquo;t want to do them.\nIn other words \u0026hellip; it\u0026rsquo;s obvious that many people don\u0026rsquo;t want to be successful, and if they were to introspect deeply, they would see this clearly. In fact what they want is to be somewhere comfortable in the middle of the herd, not having to do too much work.\nMost people want to be comfortable, not \u0026lsquo;successful\u0026rsquo; in a way that requires ambition. But many people are brainwashed enough by the rhetoric of success that they don\u0026rsquo;t realize it\u0026rsquo;s not what they want.\nThere\u0026rsquo;s also something I haven\u0026rsquo;t figured out yet. Every time I give advice, I get a number of responses from people with self-defeating attitudes, explaining how this advice can\u0026rsquo;t possibly apply to them because blah blah blah. These people build up belief structures that are obviously intended to keep them mired in their current situation, smelling of low self-esteem and defeatism. \u0026ldquo;Obviously\u0026rdquo; it\u0026rsquo;s better not to be stuck in these belief structures, yet people will defend them vigorously, and in some cases fiercely. I don\u0026rsquo;t yet fully understand why, except maybe that if someone believes there is a solution to their problem, then it must be their fault that they haven\u0026rsquo;t solved it, and/or that there will be a clear failure that is their fault if they attempt to solve it. Memento Mori. Remember that you have to die.\nOversimplifcation can lead not to just less information but to mis-information.\nIn the midst of chaos there is opportunity.\nSaftey third\nMake things people want\nOur main business is not to see what lies dimly at a distance, but to do what lies clearly at hand.\nWhat is the coolest thing I can do in the next 5 years with my life. Not how much money you want, but what is the coolest thing that can happen. What do you want to build into the future?\nYou won\u0026rsquo;t. It\u0026rsquo;s a leap of faith. That\u0026rsquo;s all it is, Miles. A leap of faith.\n\u0026ldquo;That person who helps others simply because it should or must be done, and because it is the right thing to do, is indeed without a doubt, a real superhero.\u0026rdquo;\nI banish about 90% of my worries by taking these four steps:\n Writing down precisely what I am worrying about Writing down what I can do about it Deiding what I can do about it Starting immeditally how to carry out that decision  Poor: (adj.) requiring others; not having the necessities of life in one‚Äôs own possession. (Location 1208)\nLeaders are readers\nRead every single day. Strengthen the your mind.\nWork out every day. Fear and courage are physical things. You need to strengthen your body to strength your mind.\nFind your part of yourself that‚Äôs stronger than the pain, stronger than your fear. Mine is helping people.\nAct first. Get confident later. Courage is you‚Äôre scared shitless but you do it anyway. Courage is something physical.\nDon‚Äôt negotiate. Just fucking do it.\nSharing knowledge is 1.4 billion a year business\nAvoid the how. What you want. You want it so bad. Then find out why you want it.fuck how. Just why.\nNo achiever has work life balance, achievers have work life integration\n\u0026ldquo;If you want to make more money, don\u0026rsquo;t focus on the product you\u0026rsquo;re selling. Focus on the people you\u0026rsquo;re selling to.\u0026rdquo;\n\u0026ldquo;Dream so big you get uncomftorable telling small minded people\u0026rdquo;\n\u0026ldquo;The man who does more than he is paid for will soon be paid for more than he does\u0026rdquo;\nI teach my kids to have two bicycles. One to ride and one to rent. How hard does it get with a little ingenuity? You will only fail if you give up. It\u0026rsquo;ll hurt a lot. and You\u0026rsquo;ll feel like you\u0026rsquo;ve failed. But it\u0026rsquo;s not failure until you give up. If you work hard and creativly, you can have just about anything you want. But you can\u0026rsquo;t have everything you want.\nMaking a handful of good uncorrelated bets that are balanced and leveraged well is the surest way of having a lot of upside without being exposed to unaccecptable downside.\nIf you have a baseline investment - say in the S\u0026amp;P 500. Then take 5% and put that into more riskier stuff. You\u0026rsquo;ll always get the 7% return of S\u0026amp;P, but you could also get more than 7% from speculative investing.\nIf anyone can refute me‚Äîshow me I‚Äôm making a mistake or looking at things from the wrong perspective‚ÄîI‚Äôll gladly change. It‚Äôs the truth I‚Äôm after, and the truth never harmed anyone. What harms us is to persist in self-deceit and ignorance.\nAlways remember that where you are is a result of who you were, but where you go depends entirely on who you choose to be, from this moment on.\nWhen given the option to please or save others, or achieve your goal - always choose your goal. ‚ÄúIt‚Äôs 5x cheaper to keep a customer than to gain a brand new one.‚Äù Dreams + reality + determination = a successful life\nEach of us needs to decide what we value more and choose paths that get us thered.\nMost people fight seeing what\u0026rsquo;s true when it\u0026rsquo;s not what they want it to be.\nNone of us is born knowing what\u0026rsquo;s true. Either either have to discover it for ourselves or follow others. Be radically open-minded and radically transparent.\nKnowing when not to make your own decisions is one of the most important things you can learn. Only believe people who are believable. Believable people are people that have repeatedly and successfully achieved something - and have great explanations for how they did it.\nLook to nature to learn how reality really works.\nDon\u0026rsquo;t get hung up on how things \u0026lsquo;should\u0026rsquo; be because you will miss out on learning how they really are.\n\u0026ldquo;Whenever I observe something in nature that I (or mankind) think is wrong, I assume that I\u0026rsquo;m wrong and try to figure out why what nature is doing makes sense,\n \u0026ldquo;Archimedes famously said: ‚ÄúGive me a lever long enough and a fulcrum on which to place it, and I shall move the world.‚Äù But what we are talking about here is not physical leverage. It is the leverage of ideas. When you create content, people can access your knowledge without taking your time. You no longer need to sell knowledge by the hour. Your ideas are the most valuable currency in a knowledge-driven economy. Just as an investment account allows your money to grow day and night without your involvement, content does the same with your ideas. Until recently, the average person wasn‚Äôt able to publish and distribute their ideas at a reasonable cost. But on the Internet, anybody, in any corner of the world, in any time zone, can access your best thinking. 24 hours a day. 7 days a week. 365 days a year. When you publish ideas, you create your own ‚ÄúSerendipity Vehicle‚Äù ‚Äì a magnet for ideas and people and opportunities from potentially every corner of the globe. If your ideas resonate with people, people will discover you and bring you unexpected opportunities. They‚Äôll open doors you never knew existed.\u0026rdquo;\n To be \u0026ldquo;good\u0026rdquo; something must operate consistently with the laws of reality and contribute to the evoloution of the whole. If you come up with something the world values, you almost can\u0026rsquo;t help but be rewarded. Reality penalises those people, species, things that don\u0026rsquo;t work well and detract from evolution.\n\u0026ldquo;You aren\u0026rsquo;t running a charity. You\u0026rsquo;re running a business. If people won\u0026rsquo;t give you money for your product, you have an existential crisis on your hands.\u0026rdquo;\nThe individuals incentives must be aligned with the group\u0026rsquo;s goals\nReality is optimising for the whole, not you\nYou want to be at the forcrux of open mindidness and having strong mental maps.\nTo be effective you must not let your need to be right be more important than your need to find out what\u0026rsquo;s true.\nRemind yourself you are looking for the best answers, not simply the best ansswer you came up with yourself.\nWhen you ask someone whether something is true and they tell you it\u0026rsquo;s not totally true, it is probably by and large true\nPeople don‚Äôt buy products because of what those products do, they buy products because of what they imagine they can do‚Ääwith them.‚Äù\n \u0026ldquo;Whenever there is a market fad/phenomena with low or no barriers and a flood of entrants‚Äîthe best strategy is often: Be the arms dealer.\n  The lowest profile players in high-profile, low-barrier industries are almost always the most profitable.\n  Don\u0026rsquo;t sell wine, sell barrels.\n  Don\u0026rsquo;t make movies, create animation software. Don\u0026rsquo;t own restaurants, build the restaurant supply company\u0026rdquo;\n \u0026ldquo;When you understand that nobody wants to read your shit, your mind becomes powerfully concentrated.\nYou begin to understand that writing/reading is, above all, a transaction.\nThe reader donates his time and attention, which are supremely valuable commodities. In return, you the writer must give him something worthy of his gift to you.‚Äù\n‚Äî Steven Pressfield\n \u0026ldquo;Get 3 yes\u0026rsquo;s in 30 seconds.\u0026rdquo; Readers should nod their head yes to the headline, subheading, and first sentence. If they\u0026rsquo;ve made it to the third sentence, they\u0026rsquo;re ready for an interesting and compelling story  \u0026ldquo;You need to get used to winnowing your thoughts, so if someone says \u0026ldquo;what are you thinking about?\u0026rdquo; you can instantly respond\u0026rdquo; The motto is \u0026ldquo;no days unalert\u0026rdquo;. Nothing should catch you by surprise because you are constantly imagining problems before they arise. Instead of spending your time daydreaming your happy ending, you must work on calculating every possible permutation and pit-fall that might emerge in it. The further you see, the more steps ahead you plan, the more powerful you will becom.\nAlways make those above you feel comfortably superior. In your desire to please and impress them, do not go too far in displaying your talents or you might accomplish the opposite - inspire fear and insecurity. Make your masters appear more brilliant than they are and you will attain the heights of power.\nBe wary of friends. They will betray you more quickly, for they are easily aroused to envy. They also become spoiled and tyrannical. But hire a former enemy, and he will be more loyal than a friend. As he has more to prove. In fact, you have more to fear from friends than from enemies. If you have no enemies, find a way to make them.\nKeep people off-balance and in the dark by never revealing the purpose behind your actions. If they have no clue what you are up to, they cannot prepare a defence. Guide them far enough down the wrong path, envolop them in smoke, an dby the time they realise your intentions, it will be too late.\nUse this tatic in the following manner: hide your intentions not by closing up but by talking endlessly about your desires and goals - just not your real ones. You will kill three birds with one stone. You appear friendly, open, and trusting. You conceal your intentions; and you send your rivals on a time-consuming goose chaes.\nReputation is the cornerstone of power. Through reputation alone you can intimidate and win; and once it slips, however, you are vulnerable, and will be attacked on all sides. Make your reputation unsalable. Always be alert to potential attacks and thwart them before they happen. Meanwhile, learn to destroy your enemies by opening holes in their reputations. Then stand aside and let public opinion hang them.\nEverything is judged by its appearance; what is unseen counts for nothing. Never let yourself get lost in the crowd, then, or buried in oblivion. Stand out. Be conspicious, at all cost. Make yourself a magnet of attention by appearing larger, more colourful, more mysterious than the bland and timid.\nUse the wisdom, knowledge, and legwork of other people to further your own cause. Not only will such assistance save you valuable time and energy, it will give you a godlike aura of efficiency and speed. In the end your helpers will be forgotten and you will be remembered. Never do yourself what others can do for you.\nHalf the game is keeping it quiet\nWhen you force the other person to act, you are the one in control. It is always better to make your opponent come to you, abandoning his own plans in the process.lure I\u0026rsquo;m with fabulous gains - then attack. You hold the cards.\nYou can die from someone else\u0026rsquo;s misery - emotional states are as infectious as diseases. You may feel you are helping the drowning man but you are only precipitating your own disaster. The unfortunate sometimes draw misfortune on themselves; they will also draw it onto you. Associate with the happy and fortunate instead.\nTo maintain your independence you must always be needed and wanted. The more you are relied on, the more freedom you have. Make people depend on you for their happiness and prosperit and you have nothing to fear. Never teach them enough so they can do without you.\nNo one\u0026rsquo;s life was ever changed by going to a talk. But if they go to my talk and then buy my book I could change their lives.\nWhenever people ask me what I write with, I reply with: \u0026ldquo;once a guy went to a conference that Stephen king was speaking at. In the q\u0026amp;a session the guy asked \u0026lsquo;stephen, you\u0026rsquo;re one of the world\u0026rsquo;s most magnificent writers. What pencil do you write with?'\u0026quot;. It doesn\u0026rsquo;t matter. This is just a way to procrastinate or distract yourself. There is absolutely no correlation between how people write and how good of a writer they are. Just write.\nIf you need to turn to an ally for help, do not bother to remind him of your past assistance and good deeds. He will find a way to ignore you. Instead, uncover something in your request, or your alliance with him, that will benefit him and emphasise it out of proportion. He will respond enthusiastically when he sees something to be gained for himself.\nopportunity is often present, but almost always hidden. It must be seized, and in many cases created\n\u0026ldquo;You have a nice writing style. It\u0026rsquo;s hard to listen to your nice speech and read your nice writing at the same time\u0026rdquo; - Meg\n\u0026ldquo;It is amazing to see how you have progressed from the kid with the oversized skateboard the first day I saw you to the man in his final year still representing his peers and improving! Well do8ne, keep going Brandon!\u0026rdquo; - Graham from EKC\n\u0026ldquo;I ran slave labour camps on 2B2T and even I wasn\u0026rsquo;t this fucked up\u0026rdquo; MichaelMcChill, talking to Technoblade about Techno\u0026rsquo;s rejected villager outpost.\n\u0026ldquo;If you are not making someones life better you are wasting your life\u0026rdquo;. This includes my life. Me. Mine. I will make my life better.\n\u0026ldquo;When we hit our lowest point, we are open to the greatest change\u0026rdquo; - Avatar Aang\n\u0026ldquo;I never did anything worth doing by accident, nor did any of my inventions come by accident; they came by work\u0026rdquo; - Plato\n\u0026ldquo;We can easily forgive a child who is afraid of the dark; the real tragedy of life is when men are afraid of the light\u0026rdquo; - Plato\n\u0026ldquo;The only true wisdom is in knowing that you know nothing\u0026rdquo;\n","permalink":"https://polymath.cloud/quotes/","summary":"Quotes\n\u0026ldquo;An arists job is to make master pieces. Period\u0026rdquo; https://medium.com/s/story/your-work-is-the-only-thing-that-matters-26a47ccf778c\n‚Äúpeople who are thinking about things other than making the best product, never make the best product.‚Äù\n\u0026ldquo;The two greatest days of your life are the day you were born and the day you found out why\u0026rdquo;\n\u0026ldquo;Someone once told me the definition of hell; on your last day on earth, the person you could have become will meet the person you became.","title":"Quotes"},{"content":"Brazil has developed what is being called an ‚Äúe-democracy‚Äù tool which allows anyone in the public to edit legislative texts and add suggestions.\nThe tool, called WikiLegis is an initiative by the House of Representatives and the creator is LabHacker which states\n‚Äúto articulate a network among parliamentarians, hackers and civil society that contributes to the culture of transparency and social participation through the management of public data.‚Äù Currently it‚Äôs use is limited to two laws: the Access to Information Law (which is Brazil‚Äôs version of the Freedom of Information Act) and the Rules of Instruments for Public Efficiency.\nThis tool is an initiative to use new and emerging technologies in order to create a better democracy. Previously if citizens wanted to change a law they would have to contact their representative of Parliament who will then pass this onto Parliament. But this method wasn‚Äôt always the best. Sometimes the representatives held opinions that did not represent their constituency. This tool aims to completely bypass representatives and allow anyone in Brazil to communicate and edit laws.\nHowever, laws have to still be debated. Citizens couldn‚Äôt simply all want the name of Brazil to change to ‚Äúmeme machine‚Äù (4Chan, I‚Äôm looking at you) and have it be done. Suggestions are voted on in Parliament.\nSuggestions can also be upvoted and downvoted, much like Reddit posts. People can comment on each suggestion to crowdsource and improve the suggestions to legislations, this has proven to work well with the National Union of Students (UK).\nAlthough giving users the power to upvote and downvote might seem like a good idea at first, this sound‚Äôs like a 4Chan raid waiting to happen. To counter this, each person voting and suggesting new ideas to legislation have to have an account and presumably have to have Brazilian citizenship.\nThere‚Äôs a seperate platform for the public to suggest legislation as well as this platform to edit legislation.\nWikilegis also has a Trello board where they keep a list of all their suggestions / features they are working on, found here.\nTo date one of the most popular citizen participation documents on the website is on Personal Data Protection (452 suggestions)\n","permalink":"https://polymath.cloud/brazil-oss/","summary":"Brazil has developed what is being called an ‚Äúe-democracy‚Äù tool which allows anyone in the public to edit legislative texts and add suggestions.\nThe tool, called WikiLegis is an initiative by the House of Representatives and the creator is LabHacker which states\n‚Äúto articulate a network among parliamentarians, hackers and civil society that contributes to the culture of transparency and social participation through the management of public data.‚Äù Currently it‚Äôs use is limited to two laws: the Access to Information Law (which is Brazil‚Äôs version of the Freedom of Information Act) and the Rules of Instruments for Public Efficiency.","title":"Brazil Open Sources Legislative Texts"},{"content":"Hello üëã Brandon here.\nWelcome to edition 1 of my weekly newsletter üîÆ Technologically Clairvoyant. Every week, we\u0026rsquo;ll explore what the future can hold for us. This is a beta-test before I send it out to my whole list. Let me know (via email, or however else you can contact me) about:\n What do you think of the name? Is this too technical? Fewer links, more talking?  PS: I wrote some code to automate part of this newsletter. Check out the GitHub repo here.\nThe Near Future üåâSan Francisco is first US city to ban facial recognition\nI believe this ban to be caused by Airports. In the last few weeks, airports have been rapidly adopting facial recognition to replace passports. You do not have to opt into this. By default, you are opted in and you cannot opt out. The government has a photo of your face and they\u0026rsquo;ll use it instead of your passport / boarding pass.\nPolice forces across the world are running rampant on using facial recognition.\nüëÆ‚Äç‚ôÄÔ∏èPolice Are Feeding Celebrity Photos into Facial Recognition Software to Solve Crimes\nü§≥How safe do you think it is to \u0026ldquo;pay by face\u0026rdquo; on mobile phones? We measured an accuracy rate of less than 70%\nWeChat and Alipay, which let\u0026rsquo;s you pay using a face, has a face accuracy of less than 70%. That means that there is a frightening possibility someone could fake your face. Either through pictures or a molding.\nüë©‚ÄçüåæRobots take over farms faster than expected through autonomous equipment start-up\nThe first fully autonomous farming equipment is arriving. Lyft executive said then when the autonomous driving industry really kicks into gear, drivers will have to become mechanics.\nüöïLyft executive suggests drivers become mechanics after they\u0026rsquo;re replaced by self-driving robo-taxis\nIt\u0026rsquo;s no stretch of the imagination to imagine farmers going from farmers to becoming mechanics. Farmers already have a life long history of becoming hardware hackers. I\u0026rsquo;ll explore farmers and agriculture in a later special.\nThe BBC is working on a \u0026lsquo;public service algorithm\u0026rsquo;. An algorithm designed to improve the lives of the public.\nüéßBBC building \u0026lsquo;public service algorithm\u0026rsquo;\nThe BBC claims that current mediums are too much of an echo chamber. You watch Joe Rogan and you\u0026rsquo;ll only hear right wing news. You listen to a left wing podcast and you\u0026rsquo;ll only hear about the left wing. The BBC is designing an algorithm to broaden the horizons of the listeners. In the words of the BBC:\n \u0026ldquo;An algorithm designed to promote skepticism rather than reinforce prejudice\u0026rdquo;\n The future of media is moving towards algorithms. In the near future, adverts will be customised to each person listening / watching. At the moment, all the adverts you see online are customised to you - personally.\nüì∫Plan for personalised adverts to be screened on home\nEventually, the adverts on your TV or radio will be customised to you.\nüöÅDHL documents delivered by drone\nLogistics company DHL has teamed up with drone maker Ehang, to offer the first fully automated express delivery system in China. The system can travel about 8km from its\u0026rsquo; base station, and can carry up to 5kg per flight.\nThis is all in an effort to bring the delivery time down. The less time between you buying the package and it being delivered, the higher the chance is of you not returning it. This is because when you get a product, you get a feeling of joy and happiness. You want to explore the product - you don\u0026rsquo;t want to return it.\nAmazon has warehouses hyper-local to serve communities. They have much larger warehouses over the country. The most popular products are shipped to a much more local warehouse, to reduce delivery time to one hour or two hour delivery.\nüè•University of Maryland Unmanned Aircraft Used to Complete Kidney Transplant\nThe University of Maryland demonstrated another use for delivery drones a few weeks back too, by successfully transporting a kidney used in an organ transplant. This kind of application makes sense, especially in built up areas, where time is crucial.\nWith Amazon fighting for drone space and drones being used for medical operations, something has to change. Drones may be designated \u0026lsquo;important\u0026rsquo;. Maybe with flashing lights and sirens - like emergency services. These drones will have priority over other drones in the airspace. None of this has been confirmed yet, it is pure speculation. But speculation based on education and knowledge.\nüî´NYPD using VR to train for active shootings and real-life scenarios\nThe New York Police Department are using VR to train for active shootings and real life scenarios. As time goes on, the VR environments will improve. NASA already use VR to train their astronauts:\nüõ∞How NASA uses virtual reality to train astronauts\nüåñWe Are Going\nNASA made an announcement that they are going to the moon by 2024. And they\u0026rsquo;re going to stay on the moon.\nü•ëWing to launch early access air delivery program in Finland in June\nWing, a Google company, announced that they will begin delivering food to the citizens of Helsinki.\nIn the not so distant future, with drones becoming ever more popular for deliveries UberEats and Deliveroo would be put out of business. We\u0026rsquo;ll use drones to deliver food. Not only are they faster (they can fly over buildings / not obey traffic laws) but it would be considerably cheaper too (due to economies of scale.\nThe Distant Future üíªLightBee: Holographic Drone Projects Princess Leia in Mid-Air\nHuman Media Lab unveiled the LightBee, which is basically a hovering hologram-like system, used for telepresence applications. The person on the other end of the call uses a special camera array, which creates a realistic parallax effect, so those viewing at different angles, will see a slightly different image.\nüî®An Omnidirectional Aerial Manipulation Platform for Contact-Based Inspection\nAnd as well as all that, the Autonomous Systems Lab have been developing drones capable of aerial tool manipulation, meaning it can take installed tools, and press up against various surfaces, for inspection or use. For example, using a drill or a paintbrush. I could see potential uses for this kind of thing in industrial, and bridge monitoring.\nüêôBeyond the Metal: NASA Investigating Soft Robots for Space Exploration\nNASA are exploring using soft robots for space. Think Octopus tentacles. Instead of arms / legs, tentacles could be used instead. They have more maneuverability, possibly better grip and can survive longer.\nüõ∏The Lilium Jet five seater all-electric air taxi\nIn other news, Lilium successfully completed a test flight of their 5-seat air taxi. The jet-powered VTOL will continue testing. It\u0026rsquo;s a flying 5 seater taxi.\nThis reminds me of Google\u0026rsquo;s Kitty Hawks\u0026rsquo; Flyer. A one person flying car.\nü§ñThis AI-generated Joe Rogan fake has to be heard to be believed\nSomeone has created an AI generated Joe Rogan fake clip. The audio is entirely fake - but sounds scarily realistic. Deep fakes are getting scarily real. One Star Wars fan used Deep fake to generate a fictional Star Wars scene. Obi Wan vs Darth Vader.\n‚öîStar Wars SC 38 Reimagined\nIn the not-too-distant future it wouldn\u0026rsquo;t be hard to see political smear campaigns being carried out by using a deep faked video + audio.\nA perfect deep fake using both video \u0026amp; audio has yet to be produced (at least, to the public). While faking letters has been around for years, it\u0026rsquo;s been possible to prove whether someone has sent a letter or not using Public Key Cryptography. It will be interesting to see the same kind of technology be used to prove whether someone has been in a video or not.\nüçîImpossible Foods‚Äô meatless burgers have made it a $2 billion company\nImpossible Foods\u0026rsquo; recent IPO evaluated them at $2 billion. It\u0026rsquo;s clear that vegan meat replacements are the future. Farming is unsustainable. Eating meat is unsustainable. The future has to disclude meat. Whether that\u0026rsquo;s a fully vegan diet (eating salad every day) or meat alternatives such as Impossible Food. In a special, I\u0026rsquo;ll go into detail on the future of the human diet.\nUntil next time,\n Brandon üêù  ","permalink":"https://polymath.cloud/edition-1/","summary":"Hello üëã Brandon here.\nWelcome to edition 1 of my weekly newsletter üîÆ Technologically Clairvoyant. Every week, we\u0026rsquo;ll explore what the future can hold for us. This is a beta-test before I send it out to my whole list. Let me know (via email, or however else you can contact me) about:\n What do you think of the name? Is this too technical? Fewer links, more talking?  PS: I wrote some code to automate part of this newsletter.","title":"Edition 1"},{"content":"This is an opinion piece on designing effective peer to peer (p2p) networks. I\u0026rsquo;ve written extensively about peer to peer networks, and have even designed my own (albeit, bad) cryptocurrency. Very often, I\u0026rsquo;ll drea\\m up and design peer to peer networks. So this is more of an informed opinion than a random opinion.d\n When should I use a peer to peer network? This is a hard question to answer, because P2P networks can be used for all networking. Just like with programming, we need to use the right tool for the job.\nP2P networks are very good at scaling incredibly fast, automatically. Effective p2p networks improve with more users, not degrade.\nIf you are building a platform with a shared goal (ie share files) and you can imagine the platform growing uncontrollably big, p2p networks are good. Or if you do not want anyone to shut down your network (in a client-server model, turn off your servers) a p2p network is effective.\nLet\u0026rsquo;s walk through what all good peer to peer networks share.\n Rewards All peer to peer networks have a reward system in place. The user does some work, and they are rewarded. Even if the reward isn\u0026rsquo;t clearly defined, there is always a reward for taking part in the peer to peer network.\nIn Bitcoin, this is clearly earning Bitcoin. Bittorrent rewards participants with faster download speeds. Tor rewards other Tor members with more privacy.\nThe idea of a reward is to disper free-riders. Those that partake in the network without giving anything back. There are 2 ways to defer free-riders:\n Forcing every user to give back. Rewarding users who give back.  Tor is the former, all users who join Tor are part of the network. The only reward that can be given is to become a guard node, which provides no obvious benefit for the user other than to feel good about themselves.\nMost peer to peer networks choose the latter, rewarding users who give back.\nIn Bittorrent, those who seed are rewarded with higher download rates. The more you seed, the faster you can download. In Bitcoin, users are rewarded for mining the blockchain in the form of Bitcoin.\nThus, this leads us to look at peer to peer networks from 2 interesting perspectives. Human civilisations, or reinforcement learning machines.\nSince reinforcement learning closely resmbles how humans work, I will not discuss it much. But the implications are important. Agents in the network seek to optimise their own personal reward, which in turn, if the network is made correctly, optimises the whole network.\n Optimisation of the network An ideal p2p network will improve the more people that use it. In Tor, the more people that use it the more privacy is given to those who need it.\nA simple distinction, but one that must be made. As the network grows older, ideally it forever reaches its global optimised state.\nUnlike client-server, where the more users there are the harder it becomes to maintain the network, an effective peer to peer network gets better the more people that use it.\nOptimisation of the network as it grows is often done through the rewards system. As Tor grows, the privacy of each user increases. Thus, the more that use Tor, the better. And each user has their own personal reward, but together this creates a positive movement for the whole network.\nIn Bitcoin, the more that mine Bitcoin the larger incentive it is to use better computers. Better computers = faster mines = more money. This creates a competition amongst users. **Who can contribute to the network the most? **Without getting into economics, the miners will spend more on Bitcoin. Meaning that they have to sell Bitcoin at a higher rate to make profit back. Meaning that the price of Bitcoin goes up. Which, can be seen as a positive for the whole network.\nNot to mention that Bitcoin\u0026rsquo;s security from a 51% attack relies on more users on the network. Again, as the network grows the better it becomes.\nWhen choosing a reward, it is important to look at the local rewards (what the user themselves gets) and to look at the greater rewards, what the network will get for participating.\nI also reccomend rewards which increase as the network grows. Scalable rewards.\n\u0026lt;Img of client-server starting to struggle, but peer to peer network having a good time\u0026gt;\nSo, at the start the network sucks? Yup! That\u0026rsquo;s how these things work. With a client-server architecture, it can be amazing from the start. But with a peer to peer network, it kinda sucks a lot for the first users. With Bitcoin, what was the incentive? You get this coin that\u0026rsquo;s worth\u0026hellip;. nothing at all, actually.\nTor. The incentive? Well, if there\u0026rsquo;s only 3 users then there is no incentive.\nBittorrent. The incentive? You can download this one persons files.\nIn peer to peer networks, generally they suck for the first couple users and only increase over time. So how then, do we build an effective peer to peer network that other people will want to use?\nThere are 2 methods to this.\n Forceful use (navy) Incredible technology  You can force users to use the network. This is how Tor got its start. The US Navy built Tor, and effectively they could force others in the Navy to use it.\nThe other option is incredible technology. In a peer to peer network, the first few users are often users who recgonise how incredible the technology is. Think about Bitcoin. The first few users fell in love with the technology behind it, and truly believed it could one day be great.\nWith a great rewards system in place, the first users of Bitcoin realised it could grow up to be something huge. Amazing technology attracts the first few users, and those users are often technologically minded.\n Automatic Optimisation Here is my opinion part! I believe that we can use artifical intelligence to automatically optimise a p2p network. Humans are cool and all, but we\u0026rsquo;re pretty slow when it comes to making changes.\np2p networks already use technology to find shortest routes, or preferred routes. As networks become more and more complicated, simple hand written algorithms might not be enough.\nPicture this.\nIn our network, we have multiple nodes all interconnected. Each node has a rating. This rating signifies how good that node is. Good here, could mean fast, it could mean trust worthy or the likes. We\u0026rsquo;ll generalise it to mean \u0026ldquo;good\u0026rdquo; that encompasses everything.\nEverytime another node uses this node, its \u0026ldquo;good\u0026rdquo; rating increases. Much like a neural network.\nNodes can have a \u0026ldquo;good\u0026rdquo; rating of 0, as in they do not contribute to the network.\nHow would a node with a rating of 0 ever increase its good rating if we were using simple pathfinding algorithms? If a node has a good rating of 1, does that mean every bit of data would go through this node?\nWhat if we introduce more numbers. The speed of the node. The amount of time the node has spent contributing to the network. The contributions made. User ratings. And more.\nAnd our goal was to create the \u0026ldquo;best\u0026rdquo; path across the network, taking into account all of these numbers and to maximise our own personal reward, whatever that may be.\nThis seems like a perfect scenario for reinforcement learning. Multiple inputs in an effort to maximise our own personal reward. Exploratory choices, meaning that a node with a \u0026ldquo;good\u0026rdquo; rating of 0 may be chosen.\nUs humans would eventually work it out like this anyway, where we choose certain nodes to have more privlege than others (in Tor, this is called a guard node. Generally speaking these are not true p2p networks, but instead hybrid).\nNow we have a rough picture of how to use reinforcement learning to optimise the network, optimise our personal reward and to give everyone in the network a fair shot. Let\u0026rsquo;s see why assigning nodes with a higher \u0026ldquo;good\u0026rdquo; value than others is a great idea.\n Jobs for the people In almost all peer to peer networks, jobs are assigned to nodes. Dependent mostly on whether they want it or not, sometimes jobs are given to nodes at random.\nIn Bitcoin, we have miners whose job it is to mine the blockchain. In Tor, we have guard nodes. In some other cryptocurrencies, nodes have higher privlegedes than others.\nAt the moment, peer to peer networking is seen as more of a communistic vision. Which is cool, but humans assign other humans jobs based on their skills. And in some networks, we do the same.\nIf a node has proven to be trustworthy, than we shall make it a guard node. If a node wants to mine the blockchain, it becomes a miner.\nI\u0026rsquo;d like to make a distinction here. These nodes do not have more rights than the other nodes, they simply have a job to do.\nIf we give everyone the same job, the network will tend towards global optimisation much slower. Let\u0026rsquo;s say we have a new file sharing system. Our system will let you download files from others.\nWe have a file, Ubuntu.iso, which is being seeded by 10 people. We choose at randomly a seed. This seed has an upload speed of 1 mbps while all the other seeders have an upload speed of 200mbps. It makes logical sense to use the uploaders with faster speed, as the one users upload speed will be poorly affected by us requesting a file. Resulting in an unhappy human who cannot upload a Facebook image!\nIt makes sense logically to choose from a subsection of people with high upload speeds. Effectively, we have given these people \u0026lsquo;jobs\u0026rsquo;.\nThere are 2 types of jobs in peer to peer networks:\n Rewarded Jobs Unpaid Internships (jobs)  With rewarded jobs, the uploaders get a higher reward for working as an effective uploader. This reward might be priority access to downloads from other high uploaders. This is how Bittorrent works.\nWith unpaid jobs, there is no reward. There is no incentive for one to choose a job, it is simply gifted to those. This is how guard nodes work in Tor.\nDeciding on what jobs to give, and whether it is rewarded or not is problem specific. Say, for example, we have a job called \u0026ldquo;maintainer of the Blockchain\u0026rdquo;. This job means that these people each have a copy of the blockchain. And only they do, no one else can. Any cryptocurrency nerd reading this may already see the problem.\nIn order to view the blockchain, you need to have this job. But not every citizen of the world has a spare 300gb to view the chain. They cannot get the job, because they do not meet the required specification.\nThis is another issue. Do people choose their own jobs? Are they automatically assigned? Can we reject people if they do not meet the job specification?\nWith only a small percent controling the blockchain, it leaves it open to a 51% attack. A small few will hold all the power. It will not work well in this instance.\nI propose that jobs are automatically assigned based on the specification of the user, but any user can request a job. The only jobs they should be rejected for is high trust jobs, such as guard nodes. But, the specification of their computer should not be taken into account for trust jobs.\nHumans that pick their own jobs is just too slow, the network needs to react fast and scale fast. Humans are not fast. But we do not want to prevent humans from accessing resources because of their circumstances.\nWhen assigning jobs, it is important that the jobs work in harmony.\nI suggest taking inspiration from bee hives or ant colonies for this. Human jobs are simply too hard to model, to focus on a much smaller example is wise. Afterall, you don\u0026rsquo;t see ants that are SEO experts üòâ\nAnother thing to consider if you follow my advice of automatically assigned jobs + opt in is punishment. Should there be a punishment if someone takes a job for which they are unfit? Should a 30gb computer take a punishment for trying to maintain a 300gb file?\nOn the one hand, only a very small percent of the population will choose their own jobs, and will ignore the assigned job and choose something for which they are unfit. But, to achieve global optimisation we must make sure every single thing is accounted for. Unforunately, in this world, those that do jobs that they are not capable of should be punished. I would not say to reduce the resources available to them through the job, but perhaps reduce the reward of using the network in some way.\n Data Structures Every single effective peer to peer network uses data structures. The blockchain is just a fancy linked list with some extra properties. Bittorrent\u0026rsquo;s magnet links work based on distributed hash tables.\nData structures are absolutely vital to peer to peer networks. I do not want to get into every data structure available, but knowledge of them is important.\nWe can design a network using a distributed data structure that already exists, or we can build a new data structure / algorithm based on pre-existing ones.\n Policy changes Throughout this article, I have talked about designing the network to be perfect from the get go. Any human knows this isn\u0026rsquo;t possible. So how then, do we change the network when it\u0026rsquo;s in effect? How do we implement policy changes?\n Dictatorship Let the people decide The people can form a democracy  In our first instance, we have dictatorship. You, the creator decides on changes. You create these changes, and they go out to the network. We don\u0026rsquo;t care what the participants think, only that the change has taken place.\nThis is the most effective for easily implementing policy changes, but it ruins the trust. In my opinion, a good peer to peer network reduces trust. We should not need to trust anyone. However, trust is important in some networks. It depends on the network itself.\nIf the network was for a digital currency, why would you trust this entire currency in the hands of a single person? But for a privacy centered network, having this trust in one person or body of people can increase the trust throughout the network. It reduces the chance of a 51% attack backdoor in the early days, building trust from day 0.\nAs the network progresses, it strays further and further away from a 51% attack. Which means we lose trust, we do not need to trust that it is safe from a 51% attack if the network is large enough.\nIn my opinion, an effective p2p network should move from a dictatorship and move towards a democracy. As time progresses, the will of one indivudal can change. They may sell out the network.\nBut again, this brings problems. What if there is a critical failure in the code and there needs to be a change made? This is for the designer to decide.\nWe can alternatively let the people decide. From the get go, no single person has full control. Every time a change is made, a % of the network (likely 51) will need to agree to the change. Complete control for the network. No trusting the developer involved.\nAt the start, this may be problematic. Although if no one cares about your network at the start, it\u0026rsquo;s better that way. Humans are incredibly slow too. Imagine a critical bug in the code that had to be fixed right there and then. Humans may take weeks to decide. Many will not even respond to the decision.\nThe alternative, is a democracy. Give certain people more power than others. Have the community vote in leaders, or have the leaders be pre-selected. These leaders than decide on changes to the codebase. This reduces the trust, especially if they are voted in. But nothing is stopping them from teaming together to get the maximum personal reward while not doing anything for the many.\nAll in all, deciding on policy changes is a tricky subject. And one that should be decided before the network is made.\nAlthough something to remember is trust. Will the users need to trust you, personally? If so, try and work towards a goal where that trust is reduced. Diversify that trust over to others. Remove trust completely, make them only trust themselves. Effective peer to peer networks are unlike client-server models where one person controls all the power. Effective P2P networks are for the people.\n Conclusion Because p2p networks are problem specific, this article serves mainly as a list of questions to answer in designing an effective p2p network.\n","permalink":"https://polymath.cloud/designing-p2p-networks/","summary":"This is an opinion piece on designing effective peer to peer (p2p) networks. I\u0026rsquo;ve written extensively about peer to peer networks, and have even designed my own (albeit, bad) cryptocurrency. Very often, I\u0026rsquo;ll drea\\m up and design peer to peer networks. So this is more of an informed opinion than a random opinion.d\n When should I use a peer to peer network? This is a hard question to answer, because P2P networks can be used for all networking.","title":"Designing effective p2p networks"},{"content":"This is a book I wrote on job applications. It‚Äôs now available for free right here, with no catches. Seriously. You do not have to buy anything or sign up for anything. This is the entire book, for free, with 0 content taken away and 0 added. It\u0026rsquo;s really long. If you want the convenience of flipping through pages or having a nice table of contents, buy the book below üòÅ\nHere\u0026rsquo;s the link to the book on Amazon (UK).\nAmazon US link here.\nIf you like this blog post, but don‚Äôt want to buy it, sign up to my email list below to get this book in a PDF.\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  At least this isn\u0026rsquo;t a full screen pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\nAlso, this was automatically converted using Pandoc. There may be some visual errors in this blog post. Please ignore them, they\u0026rsquo;re not in the book itself.\nFound an error or want to contribute to this resource? The GitHub repo is here. If you make an edit, you\u0026rsquo;ll get your name in the acknowledgements of the book (when I next update it). Many thanks to Elizabeth Castro for her feedback on this book.\nMany thanks to all who contributed on GitHub. Janogarcia for the chaptering issue. code{white-space: pre;}\nPreface Professional skills, Just the mere murmur of the word makes me want to fall asleep. It‚Äôs such a boring topic, there‚Äôs no getting around that. So many people fall asleep in professional skills classes or never take the time to learn these vital skills.\nThis makes a large difference between the people who took the boring class and the people who didn‚Äôt. So many people apply for graduate jobs every single year, I‚Äôm willing to bet around 95% of them have no experience with professional skills. Because of this, there is a gap in the market. If you have even basic professional skills, you‚Äôre going to look better than the 95% of the candidates that have applied.\nProfessional skills are vital. Even if you do not wish to learn much about it. To the nerds out there, like me, who have studied professional skills we know this to be true. It is a boring subject, but if you study this boring subject, you‚Äôre going to look like the best thing since sliced bread to employers.\nDegrees don‚Äôt matter. Unless you don‚Äôt have one. If you have one, it doesn‚Äôt matter. 99% of the people applying for graduate junior positions have degrees. A degree will not make you stand out, no matter how hard you work towards that degree. You need to differentiate yourself, by showing that you are more than just a degree title. One of the ways you could do this is by learning professional skills.\nThis book is written for everyone who understands that this is a vital skill but does not have the knowledge or means to study it. This book is written for everyone who desperately wants to learn these skills but falls asleep in the lectures on them.\nIf you have no interest in getting an increase in salary before you start, or no interest in being the best intern a company has ever had, then put this book down. Do not read it. This is not for you.\nOne of the people who read the original draft on this got a promotion before they started. Their CV was ‚Äúthe best thing we had ever seen‚Äù and because of this, the person was deemed a god amongst everyone who didn‚Äôt have basic knowledge of constructing a CV.\nLet me tell you a secret. For a select few who are obsessed with professional skills, getting internships is a game. I am not joking. One of my friends got 36 internships in his first year at the likes of Bank of America, Barclays, Royal Bank of Scotland, Amazon, Apple, and many more. I have more friends who have achieved similar feats.\nFor a select few, professional skills are a game. I‚Äôve interviewed as many of them as I could to learn the secrets to the game, how to get any job you want. This book is a compilation of wisdom from that exclusive group and much more.\nCareer vs Job Let‚Äôs get right into the business of the day. A job is something you do for money. Your part time Tesco work is a job. A career is what your life is, what you‚Äôre doing with your life. This is anything that can take over your life. A professor at University, for example.\nWith a job, you work a shift and that‚Äôs it. You don‚Äôt do anything else.\nWith a career, you work a shift, you go home, and you work some more. You may go to conferences, you may network, you may learn some things in order to improve yourself at your job. Here are the biggest differences: Career****JobLong termShort TermLots of growth and opportunitiesLow or no growthEarning experienceEarning moneyGo above and beyondDoing the bare minimumHappy that you get to workAngry or frustrated that you‚Äôre forced to workAligned with the core values of the companyUninterested or doesn‚Äôt care about the core valuesLooking to move up the corporate ladderLooking for a new job that pays moreA career is a journeyA job is a grind\nThe job cycle When you‚Äôre in university, there‚Äôs a certain cycle you normally have to follow in order to get a good graduate job. The cycle is:\nInsight days \u0026gt; Spring internships \u0026gt; Summer internships \u0026gt; Placement year \u0026gt; Graduate job.\nYou don‚Äôt need to do all of these things. The typical way most people go around it is:\nSummer internships (or a placement year) \u0026gt; Graduate job.\nThe lower you start on this cycle, the more likely you are to get a job. This cycle doesn\u0026rsquo;t matter that much, unless you‚Äôre applying somewhere exclusive. If you want to work somewhere like Bank of America, you‚Äôll need to follow this cycle.\nBank of America would rather hire someone who went through the whole cycle with them than someone who didn‚Äôt. It matters here, since they are such a big company even their insight days fill out quickly. They don‚Äôt need to bother with people who have only done an internship, if they have hundreds who have done insight days or are even campus ambassadors for them.\nThe lower levels (insight days, spring internships, sometimes summer internships) carry over from other companies in the same industry.\nIf you did insight days and a spring internship at BlackRock, Bank of America will think that‚Äôs really good as you‚Äôre in the industry. Of course, they‚Äôll always pick someone who has worked for their company over someone who‚Äôs just worked at a competitor, but you can‚Äôt expect to do 20 insight days / 20 spring internships just to get a chance at a company.\nMost insight days / spring internships are just advertisements for a company.\nLanding that job It‚Äôs better to focus on 5 companies than it is to apply to 100. I‚Äôm willing to bet that the person who applies to 5 companies, who has researched every company and knows them all will get more graduate job offers, than the person who has applied for 100 but doesn‚Äôt know a thing about the companies they have applied for.\nIf you have an internship, here‚Äôs some good advice from a recruiter on how to turn that internship into a graduate job.\nThis advice comes from Andrew Osayemi.\n‚ÄúSo, you are fortunate to have a spring or summer internship \u0026amp; are looking for 1 piece of unconventional advice, to help increase your chances of being offered a full-time graduate job?\nWell the advice is very simple‚Ää‚Äî‚ÄäAsk everyone on your team if they would like a tea or coffee every 2‚Äì3 hours each day\nDo it with a warm smile.\nIf they say no‚Ää‚Äî‚Äästill smile \u0026amp; politely say ‚Äúno problem, please let me know if you need anything!‚Äù\nAnd if they say yes, write down their order carefully so you don‚Äôt mess it up including any special requests (soya milk, 10 sugars etc)\nWhen you return with their beverage of choice, again make sure you give it to them with a warm smile!\nNow the next 10 seconds is crucial\nYou have an opening to ask how their day is going, if they have any work for you to do, if you can book a convenient time to work shadow them, did they watch the latest reality show etc.\nVery soon your likeability factor will be increased which greatly impacts your chances of being offered a full-time graduate offer!\nI‚Äôve given this advice to countless students whom I have coached via Rare Recruitment \u0026amp; the feedback is ‚ÄúIt works‚Äù!\nYour university‚Äôs careers team Your university\u0026rsquo;s careers team is an elite squad of experts whose entire jobs are to get you great jobs. This book isn‚Äôt meant to be a replacement for them, it goes hand in hand with them. They can interview you, look at your CV \u0026amp; more to help you get prepared.\nYou can find out how to access your university‚Äôs careers team by Googling ‚Äú[University name] careers team‚Äù.\nMy university‚Äôs careers team is bad It happens. The good news is that you‚Äôre already on your way to becoming an expert in employability skills. By reaching out and reading this book, you‚Äôre already doing 90% more than anyone else applying for that job - learning more about employability skills.\nFor practice with interviews - go to as many as possible. Apply to companies you‚Äôll likely never work at just to get interview experience. The more you do, the better. When you‚Äôre at an interview, make friends with the other candidates and work together to achieve greatness. To get great jobs. They‚Äôll likely be able to help you with your CV \u0026amp; other things.\nOne last thing before Chapter 1 This book isn‚Äôt a one size fits all book. The recruitment industry is large. So large in fact, that it‚Äôs impossible to cover every single titbit. In some industries, a nicely designed CV is essential. In others, anything other than black and white is seen as a monstrosity. While I try my best in this book to guide you along this path, know that you need to research yourself. I can‚Äôt possibly cover every single industry here.\nHow to Write a CV A Curriculum Vitae (CV) or a resume is one of the most vital parts of job hunting. Put simply, it is a piece of paper you give to a recruiter. This recruiter decides if you are worth the time to interview based on this bit of paper.\nEvery job requires a CV. Sometimes, the job will force you to rewrite your entire CV on their website. Even if it does, you‚Äôll still need a CV.\nAs such, writing a good CV is the key to getting a good job.\nThe CV is a summary of your professional life so far. It features your education, your work experience, skills and more.\nMost times a person reads the CV, but sometimes machines can also read it. Recently artificial intelligence is being used to read CVs. When a human reads your CV, they don\u0026rsquo;t exactly read it. Estimations say that they spend 7 seconds on your CV, but this isn\u0026rsquo;t true. If you were in the position of looking at CVs and you saw something that looked spiritless, would you bother reading it? I know you wouldn\u0026rsquo;t. That\u0026rsquo;s why your CV needs to catch their eyes. It needs to make them curious and interested in you within the first second or two. First impressions matter here, A lot.\n Personalising your CV\nYour CV will impress the person reading it if it‚Äôs customised to them. Everyone likes a customised birthday cake more than a regular Tesco own brand birthday cake.\nMake it look like you\u0026rsquo;re perfect for the job because the employer only wants the perfect candidate. The thing with applying for a very large organisations is that they have no shortage of candidates. Why settle on someone mediocre when 2 weeks later you‚Äôll have someone perfect for the role? You need to act perfect and believe you are perfect for the role.\nKeywords is the keyword of this section An AI looks for keywords. They do not have an average time of looking at your CV.\nA recruiter will insert a bunch of keywords into a computer program. The program will scan each CV and give the CV a score on how many keywords the CV has. This is why it is important to know what keywords to put into your CV. But, having an A4 piece of paper with font size 2 to fill it to the brim of keywords might not work. You don\u0026rsquo;t know whether they will use a human or a machine - or even both. Machines can rank your CV depending on how ‚Äòclean‚Äô it is too.\nTo insert keywords, you need to know what job you are applying for and what company.\nLet\u0026rsquo;s say you apply to Barclays for a summer analyst position.\nFirst you would Google around. Search for terms like \u0026ldquo;Barclays CV keywords\u0026rdquo; and \u0026ldquo;Summer analyst keywords CV\u0026rdquo;. If these do not return anything then read the description.\nA part of the description in 2018 states this:\n ‚ÄúWe are looking for bright, personable individuals who have the ambition to succeed and an impetus to learn and make the most of this fantastic opportunity within a competitive environment.‚Äù\nFrom https://joinus.barclays/eme/internships/banking-summer-analyst\n Barclays are looking for people who love learning. Who want to make a difference to themselves and to the world and are above all, kind.\nYou should customise your CV to show that you love learning. You are kind hearted (volunteering work can prove this, for example) and understand that it is a competitive position. Try to use the keywords themselves. Barclays say you need ‚Äúan impetus to learn‚Äù, you can write in your CV profile that you have an impetus to learn. You should show that you need this position.\nTo customise your CV, analyse the job description. Obsessively read it and highlight keywords that come up. They say that they want someone with strong self-motivation? Find something you‚Äôve done that proves this and put it on to your CV. Just like with the Barclays example earlier, it‚Äôs all about matching your CV up to the job description as much as possible.\nBy inserting keywords into the CV you\u0026rsquo;ll be able to pass the keyword test performed by machines, as discussed earlier. But please do not puke keywords onto your CV, it has to look natural.\nRead the job description, the responsibilities, the specific requirements, the location. If you see a word you don\u0026rsquo;t know, Google it. That word you don‚Äôt know is likely a keyword. Remember the Barclays example from earlier? It‚Äôs like they‚Äôve grabbed a thesaurus and randomly inserted words into the job description. These words are keywords.\nSome keywords come up and up again in many jobs such as:\n‚Ä¢ Teamwork\n‚Ä¢ Time management\n‚Ä¢ Microsoft Office\n‚Ä¢ Leadership skills\n‚Ä¢ Computer literacy\nLet‚Äôs say a job description has this sentence in it:\n ‚ÄúRequired‚Ää‚Äî‚ÄäAdvance knowledge of Microsoft Applications (Word, Excel, PowerPoint).‚Äù\n Then instead of writing ‚ÄúMicrosoft Office‚Äù on your CV you write:\n ‚ÄúAdvance knowledge of Microsoft Software (Word, Excel, PowerPoint).‚Äù\n If the machine reads your CV, you\u0026rsquo;ll pass the keyword test. If a human reads your CV, they may not remember the job description exactly, which is good. When they read \u0026ldquo;Advance knowledge of Microsoft Software‚Ä¶\u0026rdquo; something will click in their head which makes you stand out. That something is that their subconscious memory recalls the keywords used in the job description.\nMaking the CV fit around you, not you trying to fit into a CV template If you‚Äôre applying for a job that requires programming, have a ‚Äúlanguages‚Äù section on your CV that talks about all the languages you know. Or if you know other languages, include them. There isn‚Äôt a one size fits all CV that‚Äôs perfect for you. You need to make the perfect CV for you.\nIt‚Äôs also best to rate your skills. If you‚Äôre fluent in German, say you‚Äôre fluent. If you‚Äôre not fluent but still quite good, write intermediate. Be honest, don‚Äôt lie that you‚Äôre fluent in Mandarin as the job might need that you are.\nMost people fire off blankets of CV‚Äôs to every single recruiter on their LinkedIn or job recruiters like it‚Äôs the last thing you‚Äôll ever do. Do not do this. Customisation per job is vital.\n Lie about your Location\nWant to get a job in London? Then write ‚ÄúLondon‚Äù on your CV.\nThis won\u0026rsquo;t work well if you write \u0026ldquo;London\u0026rdquo; and you live in Scotland unless you plan to move.\nIf you get called up on it say you\u0026rsquo;re going to relocate, or you enjoy commuting.\nYou need the employer to think that if they hire you, they won‚Äôt come into any problems like you living an hour away.\nHow to research an organisation You need to know about an organisation before you apply for a job there. You can‚Äôt apply to an organisation you know nothing about and expect to get the job. In order to be the perfect candidate, you need to be an expert on this organisation.\nSome of the things you want to find out are:\n   The mission statement of the company\n   Who founded it and why\n   A brief history of the company\n   Current CEO of company\n   Where they are based\n   Products and services\n   Competitors\n   Current issues\n   Current news\n   Ethics \u0026amp; morals\n   Culture\n   The people you will be working with / the person interviewing you\n   Career development\n   Travel opportunities\nOnce you‚Äôve researched about them, add the things you‚Äôve found to a word document and print it out. Go over this document on the way to the interview. You do not need to memorise every company you apply for. Use this information in your cover letter and learn the information the day before your interview.\nYou could Google most of these. Just Google ‚Äú[Companies name] [thing you want to find out]‚Äù. ` When you research a company, the best website you should concentrate on is the company\u0026rsquo;s own website. For history, you should look at the company\u0026rsquo;s Wikipedia page. For current news, you can Google search the company and click the ‚Äúnews‚Äù tab.\nFor most companies, Bloomberg contains a ‚Äúsnapshot‚Äù of the company. This includes the key executives for the company, their age, their annual compensation, a company overview, how many employees they have and more. The key thing about these snapshots are the ‚Äúkey developments‚Äù section whereby Bloomberg lists the most important news and developments for a company.\nTo find a Bloomberg snapshot of a company, Google ‚Äú[company name] Bloomberg snapshot‚Äù.\nIf the company is especially big, chances are that the Economist has written an article about them at some point. Find sources you like \u0026amp; trust, and search to see if that company has come up in these sources.\n Writing a CV\nHow Long Should an CV Be? Now we know about customising a CV, let‚Äôs get into how to write a CV. The first most important rule is that your CV should be 1 page. Not double sided but one page. If you have 15+ years of experience then 2 pages is okay, but 1 page is always preferable.\nChoosing the right CV Template Choosing the right CV template is always important. You could try to create your own template, but I don‚Äôt suggest you do this unless you‚Äôre good at design. The simplest and easiest way to find a good template is to Google ‚ÄúCV Template‚Äù and pick one you like.\nMake sure the template is well designed and it has to be visually appealing. The template should be slightly sparse of information. A CV with little information on it looks more appealing than a CV full of information. The recruiter is used to CVs with paragraphs upon paragraphs of information. If you have little information, it will catch their eye. Try not to disclude stuff that‚Äôs directly relevant to the position, you want to be the best person for the job.\nIf you know a little tiny bit about computers, you can Google ‚ÄúLaTeX CV templates‚Äù to get some nice templates for free. If it‚Äôs on Overleaf or ShareLaTeX then it‚Äôs easier to use. LaTeX is like a programming language but for writing.\nA well-designed CV is more important than most people think. Well designed does not have to equal ‚Äúpretty colours and nice shapes‚Äù.\nIn some industries, a well designed CV is a burden. Employers can hate them with a burning rage. The recruitment industry is less ‚Äúthis one tip works for everyone‚Äù and more ‚Äúthis one tip is really cool for a specific part of the industry‚Äù. Well designed CVs may be appreciated at tech start-ups or design companies, but at other places like law firms they can be hated. While in this book I advocate for colour CVs, know that you need to perform your own research and find out if its appropriate for your industry.\nAnother downside to using well designed CVs is that Applicant Tracking Software can‚Äôt read them. This is the software / AI used to determine whether or not you are the right candidate.\nInstead of reading these chapters and thinking ‚Äúthis is perfect for my industry‚Äù I implore you to think ‚Äúthis is a good idea, but I wonder if my industry likes this?‚Äù\nIf you believe the answer to be ‚Äúyes, my industry likes this‚Äù then go ahead.\nBut, the benefits for well designed CVs still exist. No one else will have a CV like yours, so you‚Äôll stand out. Also, you can have a well designed CV and have a plain black / white layout. Whitespace is your friend here. Lots of space, sparse information.\nYou have to decide for yourself what is good and what is bad. All industries are different.\nMy friend Chris has so many internships he‚Äôs lost count. These include places like Bank of America, Google, Facebook and many, many more. His CV is black \u0026amp; white and it worked pretty well for him. Try to find people in the industry you‚Äôre applying for like Chris who have a lot of experience applying to jobs. Ask them what the industry is like. You can use LinkedIn for this.\nYour CV needs to be eye-catching, it needs to be designed well. It needs to look good and have the correct information in it.\nPersonally speaking, I use NovoResume.com for all of my CV needs. I have been using them for years, and they‚Äôve never once let me down.\nYour university careers team might also have templates for you to use, but I would recommend at least modifying this template. Thousands of people will use your universities careers template every year, try to make it unique and make it your CV. If you‚Äôve found 2 or more templates you really like, and you don‚Äôt know which one to use, just ask your university careers team.\nIf your CV is visually stunning, the employer will love it. They read so many of the same black \u0026amp; white PDF documents filled with information every day they‚Äôre desperate to find something that has a hint of graphic design.\nGoing hand in hand with a well-designed CV, don‚Äôt crinkle your CV or put folds in it if you print it out. It has to look like it just came out of a printer. Never, ever hand over a CV with a crinkle or fold in it.\nAchievements \u0026amp; Jobs on a CV When writing out your CV, list your achievements at a job. Don‚Äôt list the duties you had to do. Everyone has to do stuff at a job, achievements are more impressive. Make sure the CV is visually appealing and sparse of information. You want to tell a story in as few words as possible. Put your jobs in reverse-chronological order so your most recent work appears at the top of the CV.\nIf I was to say that I was the best Student Union officer that would make me sound big headed. If I was to change that to ‚Äúchanged Student Union approval rating from 30% to 90%‚Äù it would sound even more impressive and not so egotistical.\nAchievements are important too. Try to make your achievements in this format:\n ‚ÄúI did X by doing Y as proved by Q‚Äù\n As a general rule you need to have some sort of statistic related to the achievement. It makes the achievement sound so much more impressive. Mixing this achievement rule with statistics will go a long way for you.\nDon‚Äôt include jobs if it‚Äôs not relevant. If you‚Äôre applying to be an investment banker and you worked at an ice cream shop for a week, it‚Äôs not really helpful for you to put that on. It‚Äôll just make your CV look messy. If you have no experience, it will be more helpful to put your education on it. You want to balance your education and work experience. If you‚Äôve never worked anywhere relevant before, you‚Äôll want to include your A-levels and university modules with grades. If you‚Äôve worked in industry, as an internship or whatnot then you might not want to include A-levels in order to write more about this experience.\nReal world experience is always worth more than education, so try to disclude as much information of your education as possible. But make sure to put university on there. Don‚Äôt include primary / secondary school. The earliest you can go back to is A levels.\nIf you‚Äôre applying for a job in academia, your education matters a lot more than normal. If you have a perfect mix of work experience and education, try to list your education shortly. Only include the modules that are relevant to the job. If you‚Äôre applying for a job in game design and you‚Äôve done modules on game design, include them.\nThe single most important thing you can do to make your CV stand out is to customise your CV per job.\nHow to spell-check your CV You need to avoid spelling and grammar mistakes at all costs. It is the difference between you getting a job and you not getting the job. The simplest form of spell checking you can do is to run the Microsoft Word spell checker. But, this isn‚Äôt good enough. You actually need to read your CV, and then get someone else to read it for you.\nYour university\u0026rsquo;s careers team is perfect for this. Almost every careers team will have some form of session or drop in clinic for them to read your CV and pick up on anything that‚Äôs wrong. When in doubt, visit your careers team.\nInstead of Microsoft Word‚Äôs spell checker, I use Grammarly.\n To PDF or not to PDF\nAlways send your CV as a PDF unless they absolutely specify it has to be sent in a format they require.\nThe PDF is designed to be readable on any machine. The way the PDF looks on your machine is the exact same way it\u0026rsquo;ll look on any other machine. Anyone can open a PDF. PDFs are supported in Internet Explorer or Chrome. With Microsoft Word, if they have a different Word version to you it may look different. It may actually look worse to them than it does to you. Also, not everyone has Microsoft Word; but everyone has a web browser like Firefox or Chrome.\nIf they need the CV in plaintext (copy and paste) you have to change the formatting. You can make sections using ‚Äú‚Ää‚Äî‚Ää‚Äî ‚Äú. Like so:\n Achievements\n  Changed Student Union approval rating from 30% to 90%   You can use an asterisk as a bullet point, as seen above.\nReferences No references available on request. No one I know that gets jobs does this. Make it as easy as possible for the recruiter. Contacting you to ask for references is another step to them, which makes it harder. Cut out the middleman and put the contact details for your reference on the CV itself.\nI know that some references will write you letters, and that‚Äôs good. You should hand these in when they ask for qualifications (if they do) or letters of recommendation. Please do not copy and paste your references‚Äô letters onto your CV or attach them to the other blank side. It‚Äôs just not good.\nYou‚Äôll usually want 2 references, 1 academic and 1 work related. If you have never worked somewhere before, use another academic reference if you can or someone you have volunteered with. Or the head of a society you‚Äôre active in.\nWhen you put the reference on your CV, it should look like this:\nName\nHow they know you (ex-boss, ex-co-worker)\nContact details (email, phone)\nThat‚Äôs it. No ‚ÄúI went drinking with him every Friday‚Äù. No stories or anything, short and sweet.\nMake sure you ask the person if you can use them as a reference. Make sure they will only say good things about you. If they want to \u0026ldquo;be honest\u0026rdquo; about you, find someone else. Your references should gleam at the opportunity to talk about how amazing you are.\nIn a warm Starbucks once I was talking to a recruiter. They talked about how many people put references down without making sure the referencer is okay with it. Or they\u0026rsquo;ll put a reference down that isn\u0026rsquo;t too keen on the person. The recruiter would often call these references and get:\n \u0026ldquo;They were alright, they did the job\u0026rdquo;\n or even worse:\n \u0026ldquo;Who are they again?\u0026quot;\n It\u0026rsquo;s important to make sure your references know you and love you. Be very careful with what information you put down too.\nIf you put down the references personal phone number and your CV gets shared around, you‚Äôve shared personal information with people the reference doesn‚Äôt even know about. This is violating many Data Protection Act Regulations.\nIn some countries, you don‚Äôt even need to put references down on your CV. References are sometimes the very last thing a recruiter asks for. You could instead use that reference space for something more important.\nLike with choosing a well designed CV or a plain CV, you need to decide for yourself. While in the UK it is traditional to put references down, you need to consider the benefits and downsides of it.\nBenefits\n   Easy for the recruiter to find out more about you. Easier for the recruiter is always better\nDownsides\n   Takes up precious space on a CV. CVs are supposed to only be 1 page long, you could use that space for something else.\n   Not needed in most countries.\n   You could accidentally violate Data Protection Regulations.\n Make it as Easy for your Employer as Possible\nReferencing what I said earlier, make it as easy for your employer as possible. Think about who you are applying to. If you‚Äôre applying in the tech industry, chances are that they are reading your CV on a computer, so hyperlinks in CVs are cool. If not, don‚Äôt include them as they don‚Äôt look good when printed out.\nAre you applying to be a graphic designer? The design of your CV matters the most. Are you applying to be a game developer? You could make your CV as a game, like Robbie Leonardi did here: www.rleonardi.com/interactive-resume/\nReally think about who you are applying for and how you can make your CV better for them.\n How to Write a Personal Statement for a CV\nThe personal statement on a CV, also known as a profile, is a small section of your CV that includes a brief summary of your skills, experiences and goals. It is your elevator pitch. Imagine you are in an elevator with the recruiter of a large company. You have 30 seconds to convince them to care about you enough to want to interview you. This is the elevator pitch. A good profile makes people interested in you. It gives them a reason to read on and pay attention to your CV.\nThis is truly customised to you. I really cannot tell you what to write. Your elevator pitch should talk about who you are, what you do, your education, and your goals in life. A good profile will break these rules. It‚Äôs one thing to follow the rules, but in order to stand out you need to break these rules. My profile is:\n ‚ÄúObsessive learner and problem solver, always looking for the next big problem to solve‚Äù\n Your elevator pitch talks about your education \u0026amp; experience, your CV profile talks about you as a person. If they want to know about your education \u0026amp; experience, they‚Äôll simply read on. Your principles and goals in life are discovered, not invented.\nMy friend‚Äôs profile says:\n ‚ÄúI love what I do ‚Äì turning ideas into reality by coding. ‚Äú\n It‚Äôs incredibly hard for me to describe this, since it has to be personalised to you. No one can tell you what to write here, but keep in mind that you‚Äôll discover what you love if you keep it in the back of your head for long enough.\n Bullet points, paragraphs \u0026amp; action verbs\nBullet Points. Always try to have bullet points. You‚Äôre allowed to include paragraphs, but if everything in your CV is a paragraph it‚Äôll look extremely dull. Bullet points are more readable.\nPersonally speaking, the only time I use paragraphs is for my achievements, when I want to tell a story. Everything else is bullet points. You should use action verbs in your bullet points to make it sound powerful. Instead of saying:\n ‚ÄúI led a project‚Äù\n You can say:\n ‚ÄúI orchestrated a project‚Äù\n Here is a list of 185+ action verbs you can use, from the website The Muse1\nYou increased efficiency, sales, revenue, or customer satisfaction    Accelerated\n   Achieved\n   Advanced\n   Amplified\n   Boosted\n   Capitalized\n   Delivered\n   Enhanced\n   Expanded\n   Expedited\n   Furthered\n   Gained\n   Generated\n   Improved\n   Lifted\n   Maximized\n   Outpaced\n   Stimulated\n   Sustained\nYou thought of and brought a project to life    Administered\n   Built\n   Charted\n   Created\n   Designed\n   Developed\n   Devised\n   Founded\n   Engineered\n   Established\n   Formalized\n   Formed\n   Formulated\n   Implemented\n   Incorporated\n   Initiated\n   Instituted\n   Introduced\n   Launched\n   Pioneered\n   Spearheaded\nYou saved the company time and money    Conserved\n   Consolidated\n   Decreased\n   Deducted\n   Diagnosed\n   Lessened\n   Reconciled\n   Reduced\n   Yielded\nYou were in charge of a project    Chaired\n   Controlled\n   Coordinated\n   Executed\n   Headed\n   Operated\n   Orchestrated\n   Organized\n   Oversaw\n   Planned\n   Produced\n   Programmed\nYou manage a team    Aligned\n   Cultivated\n   Directed\n   Enabled\n   Facilitated\n   Fostered\n   Guided\n   Hired\n   Inspired\n   Mentored\n   Mobilized\n   Motivated\n   Recruited\n   Regulated\n   Shaped\n   Supervised\n   Taught\n   Trained\n   Unified\n   United\nYou changed or improved something    Centralized\n   Clarified\n   Converted\n   Customized\n   Influenced\n   Integrated\n   Merged\n   Modified\n   Overhauled\n   Redesigned\n   Refined\n   Refocused\n   Rehabilitated\n   Remodelled\n   Reorganized\n   Replaced\n   Restructured\n   Revamped\n   Revitalized\n   Simplified\n   Standardized\n   Streamlined\n   Strengthened\n   Updated\n   Upgraded\n   Transformed\nYou changed or improved something    Centralized\n   Clarified\n   Converted\n   Customized\n   Influenced\n   Integrated\n   Merged\n   Modified\n   Overhauled\n   Redesigned\n   Refined\n   Refocused\n   Rehabilitated\n   Remodelled\n   Reorganized\n   Replaced\n   Restructured\n   Revamped\n   Revitalized\n   Simplified\n   Standardized\n   Streamlined\n   Strengthened\n   Updated\n   Upgraded\n   Transformed\nYou wrote or communicated    Authored\n   Briefed\n   Campaigned\n   Co-authored\n   Composed\n   Conveyed\n   Convinced\n   Corresponded\n   Counselled\n   Critiqued\n   Defined\n   Documented\n   Edited\n   Illustrated\n   Lobbied\n   Persuaded\n   Promoted\n   Publicized\n   Reviewed\nYou supported customers    Advised\n   Advocated\n   Arbitrated\n   Coached\n   Consulted\n   Educated\n   Fielded\n   Informed\n   Resolved\nYou overview or regulated    Authorized\n   Blocked\n   Delegated\n   Dispatched\n   Enforced\n   Ensured\n   Inspected\n   Itemized\n   Monitored\n   Screened\n   Scrutinized\n   Verified\nYou achieved something    Attained\n   Awarded\n   Completed\n   Demonstrated\n   Earned\n   Exceeded\n   Outperformed\n   Reached\n   Showcased\n   Succeeded\n   Surpassed\n   Targeted\nYou were a research machine    Analysed\n   Assembled\n   Assessed\n   Audited\n   Calculated\n   Discovered\n   Evaluated\n   Examined\n   Explored\n   Forecasted\n   Identified\n   Interpreted\n   Investigated\n   Mapped\n   Measured\n   Qualified\n   Quantified\n   Surveyed\n   Tested\n   Tracked\nYou brought in partners, funding, or resources    Acquired\n   Forged\n   Navigated\n   Negotiated\n   Partnered\n   Secured\n Things to Include in a CV\nYou have a template and you want to change a few things, here are some things you might want to include:\n   Personal details‚Ää‚Äî‚ÄäTelephone, professional email, location, name\n   Work experience\n   Achievements\n   Education\n   Hobbies and interests that relate to the job\n   Key skills relating to the job\n   Know any languages that relate to the job? Put them down!\nYou can also put a language down that doesn‚Äôt relate to the job. If you know an Asian language like Chinese and you put that into your CV, the recruiter will instantly think you are some sort of super genius.\n What not to include in a CV\n   A head-shot / image of you. Unless the company specifies that they need this, do not do this. They do not want to see you.\n   Age and date of birth‚Ää‚Äî‚ÄäIt‚Äôs illegal for employers to ask about your age under the Equality Act of 2010.\n   Martial / Relationship status‚Ää‚Äî‚ÄäAgain under the Equality Act of 2010 they cannot ask this.\n   Every single thing you have ever done‚Ää‚Äî‚ÄäMake it short and customise it per job.\nLet‚Äôs just list all the things that the Equality Act of 2010 makes illegal for employers to ask you:\n   Marital status\n   Date of birth / age2\n   Gender\n   Dependants\n   General health3\n   Religion\n   Disabilities4\n   Spent criminal convictions\n   Trade Union membership\n   Ethnicity or other underrepresented characteristic5\n   Pregnancies\n   Sexual Orientation\nSummary of this chapter Personalising a CV ‚òê Have you used a CV template?\n‚òê Have you customised the CV template to fit around you?\n‚òê Does your CV have keywords in it?\n‚òê Is your CV clean \u0026amp; minimalistic?\n‚òê Do you have special sections related to the job? IE languages, skills, achievements?\n‚òê Does your CV have contact details on it, and is the location where you want to be / where you are?\n‚òê Do you have achievements at a job on your CV?\n‚òê Have you spell checked you CV?\n‚òê Is your CV a PDF?\n‚òê Do you have references, without \u0026ldquo;references available on request\u0026rdquo; on your CV?\n‚òê Do you have a profile section?\n‚òê Do you have action verbs in your CV?\n‚òê Have you gotten rid of everything under the Equality Act of 2010, unless it benefits you in some way?\nResearching an organisation Do you know these things about the company:\n‚òê Mission statement of the company\n‚òê Who founded it \u0026amp; why\n‚òê A brief history of the company\n‚òê Current CEO of the company\n‚òê products \u0026amp; services\n‚òê Competitors\n‚òê Current issues\n‚òê News\n‚òê Culture\n‚òê Career development\nHow to Write a Cover Letter What is a cover letter? The cover letter is a letter that goes with a CV that explains why you want a job. It can be the first chance you get to stand out to your potential employer.\nWhat makes a cover letter so difficult is that there is no clear-cut formula to writing a cover letter.\nUltimately the goal of the cover letter is to draw attention to yourself. It should be clear, concise and display competent language skills.\nIt is important to note that not all jobs require a cover letter. It should state it in the job description if it does require a cover letter.\nDesign of a cover letter Google ‚ÄúCover letter templates‚Äù and find one you like. The exact same advice from the CV applies here too. Make sure it‚Äôs designed nicely. If you use Novoresume, they also have cover letter templates.\nHow Long Should a Cover Letter Be? Some people write entire novels as cover letters, well, almost. Your cover letter should be short. A full page at most.\nThe shorter a cover letter is, the better it will look. Don‚Äôt try to skimp on information to make it shorter. 4 paragraphs are around the perfect length since it will follow a typical story arc.\nGeneral structure of a cover letter Start with an introduction. Make the reader aware of why you‚Äôre writing this. Include the job you‚Äôre applying for. We‚Äôll go into each section soon.\nThe 2nd paragraph is your skills, what you can provide to the company.\nThe 3rd paragraph should be why you want to work for the company.\nThe 4th paragraph is the conclusion. Mention that you look forward to hearing back from them.\nThis follows a typical story arc. Start off with who you are, why they should care, why you care about them, summarise and end.\nWhat to Include in a Cover Letter and General Tips Don‚Äôt talk about how great the position would be to you. Talk about what you can bring the company, always have the company in mind. Show what you‚Äôre capable of within a cover letter. Try to tell a story. Stories illuminate the human mind and intrigues them. Try to push them to read more.\nDo not make a one-size-fits-all cover letter. It\u0026rsquo;s the same as the CV, customise it per job. Job hunting is in itself a job.\nAs with a CV your cover letter may be keyword tested so try to include some keywords that the employer wants to see.\nAlways send your cover letter as a PDF for the same reason you would send a CV as a PDF.\nDo not use weak or passive language. http://www.hemingwayapp.com is an online editor which will show you what is considered weak or passive. Instead of writing \u0026ldquo;I feel\u0026rdquo;, \u0026ldquo;I believe\u0026rdquo; write \u0026ldquo;I am confident that, \u0026ldquo;I am positive that\u0026rdquo;.\nTry to limit the use of \u0026ldquo;I\u0026rdquo;. This is a letter about how you meet the employer‚Äôs needs, not why it would be good to you.\nThe formality depends on the company. If you are applying for a tech start-up formality likely isn\u0026rsquo;t something they do. An old-fashioned bank? Be as formal you can\nHow to Start a Cover Letter, and How to Address a Cover Letter A cover letter should have your information at the start:\n‚Ä¢ First \u0026amp; Last Name\n‚Ä¢ Street Address\n‚Ä¢ City\n‚Ä¢ Postcode\n‚Ä¢ Phone Number\n‚Ä¢ Email Address\nThen comes your salutation. Dear Sir / Madam / Mrs / Mr / Ms / Dr. If you know the person\u0026rsquo;s name and their honorific, then you need to use this. The letter should feel addressed to that individual person, it should never feel like a blanket cover letter you\u0026rsquo;ve sent to everyone\n‚ÄúJohn Gribbin\n171 Fake street ct9 9lr\n+0174857389\ngoogle@google.com‚Äù\nFirst paragraph The first paragraph is where you introduce yourself. What you‚Äôre applying for.\n‚ÄúDear Sir or Madam,\nMy name is Brandon Skerritt and I am applying for the position of Bookseller at Waterstones, please find enclosed my CV.‚Äù\nIn most cases they already know what your name is and what you‚Äôre applying for, so if you can don‚Äôt include this part. Always include the salutation. If you know the name of the person who will be reading this, use their name.\nAs stated in How to Win Friends and Influence People:\n‚ÄúNames are the sweetest and most important sound in any language.‚Äù\nUse keywords. Keywords and statistics are the secret key to unlocking that first interview.\nIf you were referred to the job, mention that contact. Express excitement that you‚Äôve applied. The reader should feel like you would die if you didn\u0026rsquo;t get the job. That you want this job more than anything.\n‚ÄúI have the pleasure of being acquainted with one of the Counsellors on your staff, Eleanor Seville. She let me know about the open position and recommended that I contact you.‚Äù\nRecommendations are important. Some professionals state that they would never have gotten the job if not for a recommendation.\nThe first paragraph should flow into who you are and why you want this job. You can always say \u0026ldquo;I hope you are well\u0026rdquo; if you do not know what to write.\n Second Paragraph\nThe second paragraph is where you talk about your skills and experience. Unlike a CV you do not use blunt bullet pointed language here but instead talk about your experience, like a story. You can also explain any gaps that might appear in a CV here.\nTry not to regurgitate your CV in letter form. Think about what you‚Äôre writing and why you‚Äôre writing it. Make it into a story. You need to customise your cover letter per job, much like you‚Äôll customise your CV per job.\nThis section should display that you have researched this position and know what it is about and how your skills match with the position.\n‚ÄúFor as long as I can remember I‚Äôve been an obsessive reader. I review books on GoodReads, I‚Äôve written some fiction novellas in my spare time. I‚Äôve been a bookseller for the last 2 years at [Bookshop name here] and have loved every second of it. As well as being a bookseller I‚Äôve trained new employees and managed the general every day running of the store.‚Äù\nSometimes people will use bullet points, it\u0026rsquo;s entirely up to you. If this was bullet pointed it would look like:\n‚ÄúFor as long as I can remember I\u0026rsquo;ve been an obsessive reader, having even written some fiction novellas in my spare time. I\u0026rsquo;ve been a bookseller for the last 2 years and in my role, I have achieved:\n   Trained new employees although it wasn\u0026rsquo;t my job\n   Broke the record for most amount of money earnt in made in a day. Previous record was ¬£400, my team and I made ¬£1200\n   Located a class photo book from the 1980s by calling up every store in the area to check for it. Just to make the customer happy.‚Äù\nBullet points make it shorter and easier to read but it also takes away the humanity of a normal paragraph.\nThird paragraph The third paragraph is why you‚Äôre applying. What do you like about the job or company you‚Äôre applying to? Any nice anecdotes about the company? After reading the last paragraph the recruiter should be curious. Why do you want to change jobs if you love it? What\u0026rsquo;s so special about this company? What can you do for the company?\nThis is where you swing the bat and hit that ball out of the park. This is where you show your determination and undying love for the company. This is where the recruiter decides if you\u0026rsquo;re different from the others.\n‚ÄúWaterstones has always been my favourite bookstore. I‚Äôve collected over 11 stamp cards and try to go to Waterstones weekly to see what new books have been released. Sometimes I cannot help myself as a fellow book seller to rearrange books that have been misplaced or recommended books for your store based on the shelves. One such instance is a book titled ‚Äúhow to read water‚Äù; this book would have looked good next to The Cloud Collectors guide‚Ää‚Äî‚Ääa book on reading clouds‚Äù\nFourth Paragraph - How to End a Cover Letter Fourth paragraph is the conclusion, where you wrap this all up. Reiterate why you want to work there and display that you are happy that you might have the opportunity to work there.\n‚ÄúYour store is my favourite among the many Waterstones I have been to, and I‚Äôve been to nearly all of them. I hope I have the opportunity to work at this fantastic store.\nI look forward to hearing back from you,\nBrandon Skerritt‚Äù\nAnother way to end this is:\n‚ÄúThank you for your time and consideration. I look forward to meeting with you to discuss my application further.\nYours sincerely,\nBrandon Skerritt‚Äù\nConclusion ‚òê Have you researched the company and you know what keywords to use?\n‚òê Have you discussed what you can bring the company, not what the company can bring you?\n‚òê Have you customised it per job?\n‚òê Is your cover letter a PDF?\n‚òê Are you using active language (and not passive)?\n‚òê Does the formality of the cover letter match the formality of the job?\nChapter 3 - Personal Branding \u0026ldquo;What are you doing?\u0026rdquo;\n\u0026ldquo;I\u0026rsquo;m googling them\u0026rdquo; responded my friend with CVs strewn across her table.\n\u0026ldquo;This one‚Äôs bad\u0026rdquo; she stated with authority. The CV itself looked good enough for an interview but her research online showed she wasn\u0026rsquo;t right for the job.\nOne by one, she Googled them all. Education didn\u0026rsquo;t matter, their experience - for the most part, didn\u0026rsquo;t matter.\nAlthough this was a part-time waitressing job at a small local caf√©, their online portrayal mattered. It mattered so much that people with amazing academical backgrounds and lots of experience were being tossed to the side.\nThis is why personal branding is important. It is not only for the entrepreneurs out there but for every single person. Most people believe that personal branding doesn\u0026rsquo;t affect them since they are not a celebrity. The truth is, everyone has a personal brand. It\u0026rsquo;s up to you to decide when and how you\u0026rsquo;ll take control of it. Your personal brand exists, whether you like it or not.\nA personal brand isn\u0026rsquo;t makeup you\u0026rsquo;re selling or being featured in magazines. It is everything about your public life. Your Twitter, Facebook, Instagram.\nYou do not have to be an entrepreneur to care about your personal brand. When you apply for a job the recruiter will Google you. They\u0026rsquo;ll want to know:\n   Does this person have a blog or website?\n   What does this person do in their spare time?\n   Any side projects?\n   Is there anything bad about them online?\nIf you tick some of these boxes, you\u0026rsquo;ll stand out from the rest.\nThere is often a quote given out in running circles:\n‚ÄúIt\u0026rsquo;s okay to run slowly. You\u0026rsquo;re still running laps around the people sitting on the sofa.\nThe same can be said for a personal brand. It\u0026rsquo;s okay if your personal brand doesn\u0026rsquo;t have years of posts or tweets. It\u0026rsquo;s okay if you only started today. You\u0026rsquo;re still doing better than those who have not started.‚Äù\nYour personal brand will bring you more riches in life than any job you could have. When we work somewhere, we say that thing is us. \u0026ldquo;I am a lawyer\u0026rdquo; instead of \u0026ldquo;I practice law\u0026rdquo;. \u0026ldquo;I am a programmer\u0026rdquo; instead of \u0026ldquo;I program at work\u0026rdquo;.\nThis way of thinking consumes your life. Your entire life rotates around this one job, this one title.\nThis should not be the case. If you quit or you lose your job, then your title goes away. If your title goes away, your entire life crumbles.\nIf you developed a personal brand and have friends and fans, then they will continue to be with you. It is a lot easier to switch jobs or find a new job when you have so many contacts on social media.\nAs an example, you have have two people:\nCharlotte is a software engineer at Google. She regularly writes blog posts about software, goes to conferences, has a podcast. She does stuff outside of her job.\nEmily is another software engineer at Google. Emily\u0026rsquo;s entire life is Google. She does not go to conferences, have a blog, or even cares about anything else. She is only a Googler.\nBoth of these people are fired. Emily struggles to find a job having to apply to every company that has a position. Charlotte writes a quick tweet about it, it gets reshared a couple hundred of times and she has a new job before the weeks over.\nYour personal brand is like insurance for yourself and your job. Your personal brand, if you take it seriously, will transcend your career and will become your career.\nMaking friends, not connections Do not act like you only added someone on LinkedIn to increase your professional network. Try to become friends with them instead.\nA connection is just someone that acknowledges you exist at the best of times. Normally it‚Äôs when someone randomly connects with someone on LinkedIn to ‚Äúincrease their network‚Äù.\nConnections are meaningless. If you wanted a job at a company and you have a connection there, asking them to help you likely won‚Äôt work as they won‚Äôt know you.\nIf you are friends with this person however, you are kind, generous and have helped them they are more likely to help you get the job.\nFriendships formed over social media are worth 100 times more than a simple connection to someone. This brings us into the second point, you need to care about them in order for them to care about you.\nOne of the first rules of Dale Carnegie\u0026rsquo;s book ‚ÄúHow to win friends and influence people‚Äù states:\n‚ÄúBecome genuinely interested in other people‚Äù\nIf you don‚Äôt care about or celebrate someone\u0026rsquo;s achievements, then when it is time for you to celebrate your achievements they likely won‚Äôt care.\nNot too long ago when I got into university, I posted about it on social media. No one cared because I didn‚Äôt care about their achievements. Now I regularly celebrate my friends‚Äô achievements, small or big because I care about them and they celebrate mine.\nPeople will only care about you if you care about them. You need to make friends. Connecting with someone just isn‚Äôt enough anymore.\nWe‚Äôre now in the thank you economy. You used to fake being big until you got big, now you have to be small; even if you are as big as Google. Do not pretend like your schedule is too big, treat the other person as a friend.\nBack in the day, you used to be able to fake being big. If you owned a company, you could play some background noise when on the phone to make it sound like you‚Äôre busy. Now we have public follower counts, you cannot fake being big. You need to be human.\nCreating content Content creation is the only way to build a personal brand. Whether that content is via tweets, Instagram points or blog posts.\nYou are not going to make friends if you only ever like or retweet stuff. You need to produce content. Content is like seeds you plant in the ground. The more seeds you plant, the more likely they\u0026rsquo;ll grow into a beautiful garden.\nThe content does not have to be blog posts. It can be reviews, answers on Quora, open source software. As long as it is preferably free, online, and provides value to people it\u0026rsquo;s good content.\nYou may be able to get by without content creation if you are a big-name celebrity. Elon Musk rarely creates online content but is still famous. The likely chance of you not needing to create content online is slim.\nContent creation is what draws crowds, it‚Äôs what you can show your employer. People who look at your profile and see you are passionate about your cause will like you.\nThe majority of your posts on social media should be about what you love. They should also show a side to you, have emotion in it. Nobody likes a re-posting Twitter bot.\nYour content has to be great content. Bad content is not good enough. If you have to take time to create good content instead of posting every day than do so. But great content always trumps mediocre content, even if the mediocre content is posted every day or even every hour.\nCreating content from other content - the pillars of content creation This is a method that allows you to create a lot of content from one piece of content. You need to decide on your main content pillars. Let‚Äôs use YouTube or Medium (a blog) as an example.\nOnce you‚Äôve created this large piece of content, a large 5000-word article or a YouTube video you pick out things to repost to your relevant social media channels. Often your readers / watchers will point out the exact moments they loved about your content.\nOn Medium, readers highlight what they loved about your article. On YouTube, watchers post video timestamps in your comments.\nOnce you know what they loved, you can post this specific line or clip of a video to your relevant social media. With content creation, you don‚Äôt need to make content for every single platform. Focus on your main pillar of content creation, make that as best as you can. Using this strategy, you can create amazing content from amazing content without straining yourself.\nBlogging Blogging is the easiest way to create a personal brand. You can write about anything on a blog. Most bloggers who care for their personal brand will write about their industry. It\u0026rsquo;s a way to show employers that you are enthusiastic about the industry.\nStarting a blog is easy, the hardest part is knowing what to write. Read lots, look at the news and wait. Ideas will come to you. Even if you think the ideas are stupid or insignificant, they\u0026rsquo;re still better than the people who don\u0026rsquo;t have a blog.\nThe platform doesn\u0026rsquo;t matter as much - as long as you write. Medium.com is an amazing platform for getting your voice out there. Although it isn\u0026rsquo;t the best to write on and you\u0026rsquo;re restricted no other blogging platform provides as much value as Medium does.\nMany bloggers start out on Medium and move their way to another platform overtime.\nIf you build an entire business or brand on someone else‚Äôs platform you don\u0026rsquo;t get much control over what happens to your business. The platform could fail, it could die like Vine did.\nThere isn‚Äôt much on blogging here, as you can find so much content on starting a blog online.\nGitHub If you write code and you‚Äôre not on GitHub, what are you doing? GitHub is a social network with its core functionality being that it is a version control system. You upload code, and friends or fans can see your code.\nGreen boxes GitHub has a section on everyone‚Äôs profile called ‚Äúcontributions‚Äù. It has a number on top of the green boxes, that number is how many contributions you have made in the last year. Every single day on GitHub, you get a new box. If you contribute on that day, you get a green box. The more contributions on a day, the darker the shade of green.\nA contribution is defined as doing something. You upload some code, you edit some code, you write some documentation. You leave comments on bugs software has. You create ‚Äúissues‚Äù which are reports of bugs you have encountered on other people‚Äôs code.\nThe more you interact and support the open source community, the more green boxes you get. The more green boxes, the more it looks like you‚Äôre passionate about coding.\nBio Nothing special here. Just copy and paste the bio you use on Twitter / Instagram here.\nStars Think of stars as likes. You can star a project you find interesting and others can see them.\nRepositories Repositories are projects of code. If you‚Äôve created a cool coding project, create a repository for it.\nFacebook There‚Äôs no point in me trying to explain what Facebook is, you already know.\nFacebook Groups Facebook groups are just like LinkedIn groups (discussed later). Find groups that interest you. There are groups for Women in Tech, LGBT+ groups, People of Colour and more. Find professional groups that appeal to you and join them.\nI‚Äôve seen hackathons advertised where winners get a guaranteed interview at Apple in Facebook tech groups before, so it‚Äôs worth joining Facebook groups just in case.\nFacebook Targeted adverts I have friends that love their Facebook adverts. If you go to a lot of tech events, read a lot on tech and regularly interact with the tech world - you‚Äôll get adverts targeted at you. Some of these adverts are useful. Some of them could be hackathons, or events you can go to. Whenever you see an advert that is useful to you, click ‚Äúsee more of this‚Äù to let Facebook know that this is relevant to you.\nThe idea is to get adverts that can directly improve your life.\nFollowing Influencers Just like you can follow Richard Branson on Twitter, you can also follow him on Facebook. Follow as many influencers in your field as possible and interact with them or with people in the comments.\nFacebook stories Facebook stories is another way you can build your personal brand. Not many people use Facebook stories, so when you do use it, you‚Äôll stand out amongst your peers. Facebook groups also have a story function, so you can post stories to Facebook groups.\nCommunity Facebook pages Make sure to follow \u0026amp; like Facebook pages that interest you. Be aware that others can see what pages you have liked, so don‚Äôt go liking anything too silly that may jeopardise your future career.\nFacebook events Facebook events are ways to find out about events happening near you. From society\u0026rsquo;s or companies posting events, you could find an event for anything.\nFacebook will also display ‚Äúrelated‚Äù events in the sidebar. If you find an event you like make sure to check out related events.\nLastly, there is a wealth of information out there about upcoming tech events. Companies are trying to get their events known and get more personal with their potential customers and attendees. Hackathons and workshops are very frequently posted on Facebook too, so keep an eye out for events by looking at posts in Facebook groups, and using the Facebook search bar.\nOn top of that, to see even more you might be interested in, look at the Related Events in the sidebar.\nURL This is the first thing you will want to do to brand yourself, a vanity URL is your customised domain on Facebook. Instead of facebook.com/e2434h394oij you can get facebook.com/joeshmoe. Go to the Customized URL page on Facebook and set yours now. If you can‚Äôt find out how to do it, just Google ‚ÄúFacebook customised URL‚Äù. I‚Äôm not including instructions here, in case they change it after I‚Äôve published this.\nPhoto Upload the same one you use on LinkedIn. Some people will disagree with me on this and say that you should give visitors a unique Facebook experience ‚Äì this is fine, just as long as it‚Äôs not harmful to your brand.\nAs a rule, I would say the picture should be related to what type of person you are, being an authentic representation of your personal brand. If you are on the summit of Kilimanjaro in your profile picture, you had better be into your mountaineering in other words.\nTwitter Twitter is a microblogging platform allowing users to upload \u0026ldquo;tweets\u0026rdquo; which are 280 characters long. The user can comment on, like, or retweet a tweet.\nHandle You need to have a professional Twitter handle. This is often your name such as: \u0026ldquo;@brandonskerritt\u0026rdquo; or @brandon_skerritt\u0026rdquo;.\nIf someone else is using a Twitter handle you want and they\u0026rsquo;re not using it (no tweets or activity), then you can submit a request to get that handle.\nTo do this, you need to have your own domain and email address. Let\u0026rsquo;s say you want the handle \u0026ldquo;@skerritt\u0026rdquo;. To claim this handle, you need to own an email address, such as: brandon@skerritt.tech and own a website or domain similar to skerritt.com.\nOnce you own those, you can file for impersonation on the Twitter handle you want. To get a customised email, just Google it.\nTwitter Engagement Your Twitter engagement score is a key performance indicator (KPI) of how a tweet has performed.\nTwitter engagement is calculated using:\n   Likes\n   Retweets\n   Replies\n   Mentions\n   Follows\n   Profile clicks\n   Permalink clicks\n   Tweet expansion clicks\n   Link clicks\nIn short: It\u0026rsquo;s a popularity score for each of your tweets.\nHere are some statistics directly from Twitter 6on how to improve your engagement:\n   Photos average a 35% boost in Retweets\n   Videos get a 28% boost\n   Quotes get a 19% boost in Retweets\n   Including a number receives a 17% bump in Retweets\n   Hashtags receive a 16% boost\nTwitter polls are a good way to gain engagement. Most people want to find out the result of a poll, so they\u0026rsquo;ll vote on it just to see the result.\nGetting people to care about you Know what industry you‚Äôre in. Find a hashtag that relates to this industry. If you‚Äôre a programmer, #100daysofcode is a good hashtag.\nIf you don‚Äôt know of any hashtags, just search your industry and see what hashtags others are using.\nOnce you‚Äôve found a hashtag, interact with people. Congratulate people, answer questions they may have, just talk to them. Do this, day in and day out and you‚Äôll eventually get more followers who care about your content.\nAnother way to do this is to post content that helps others. If you help someone through your content, they will want to follow you as you could help them even more.\nReply to every mention you get, and any tweets that you can relate to.\nTwitter\u0026rsquo;s new feed is non-chronological. An algorithm selects what tweets a user may want to see, even if they don\u0026rsquo;t want to see that tweet. The more you interact with a user, the more likely your tweets will appear in their feed.\nTo tweet or not to tweet Like any social network, Twitter rewards users who engage with other users. You need to reply to, like, and retweet other user.\nIf you don\u0026rsquo;t, Twitter won\u0026rsquo;t show your tweets to people.\nTwitter Spam Rules Twitter is incredibly strict with spammers. If you spam follow, like or retweet Twitter won‚Äôt show your tweets to many people.\nIn fact, Twitter‚Äôs rules are so strict that you could get flagged for spamming even if you don‚Äôt mean to spam. If you like, follow, or retweet too much in a certain time period - you‚Äôre classed as a spammer. The exact rules and timing of the spam rules aren‚Äôt available to the public as spammers could use them to their advantage. Just be extremely careful when interacting with many people on Twitter.\nInstagram Instagram is a social network for sharing photos. I‚Äôm not going over how to take good photos, since there are millions of photography guides available on the web.\nKnowing if your Instagram will grow or not Sometimes, it can feel like a lottery. Will your Instagram grow ridiculously large after 3 months? Or will it not grow at all for many months. There are a few tell-tale signs to watch out for.\nThe number of instagrammers in your niche How many other Instagram accounts are creating \u0026amp; talking about the content like you are? The more there is, the harder it is for you to penetrate this community. Think about your niche, what are you targeting? Search Instagram for other accounts in this niche and see whether or not it‚Äôll be harder for you to grow here.\nYou can measure how many people are in a niche from hashtags. This method isn‚Äôt perfect, but it‚Äôs the best we have. Search your niche like ‚Äú#Yoga‚Äù and see how many posts are under that hashtag. #Yoga has 60 million posts, so it‚Äôs a very hard community to penetrate into and grow.\nIf you search ‚Äò#BuildUpDevs‚Äô you‚Äôll find out this hashtag has a small amount of posts in it, but it‚Äôs still an active hashtag. This is an easy hashtag to penetrate into.\nHow unique your Instagram account is The uniqueness of your account within its content category has a direct correlation with the likelihood of growing an engaged audience fast. How are you going to make your account different from all of the other accounts in your niche?\nYour unique selling point could be that you post the most visually appealing photos, or you include dogs in your photos. You have to be unique, so you can grow in your chosen niche.\nNo one wants to follow another account that just posts the same images as everyone else does. You need to be unique, stand out and attract attention.\nPicking your niche The simplest way to pick your niche is to just pick something that makes you happy to look at. That‚Äôs it. Just being happy is all that matters.\nYou may choose to pick a niche that relates to the area you want to work in the future. As a computer scientist, I post about coding on Instagram.\nAs a general rule, the more specific your niche is the more potential you have to grow. Remember there has to be a want for your niche. Dogs in cute jumpers is an example of a specific niche that has a large demand.\nWhen to post Knowing when to post is unique per Instagram account. If you‚Äôre running a business and want extremely high growth, you may be posting up to 5 or 7 times a day. You should experiment to see how many posts you should post per day.\nStart out posting once on 3 separate days in a week. Then go up to 5, then up to 7. Try posting X per week, record how many followers you gain. Do this for a couple of weeks until you find out how many posts your niche wants. I try to post daily in my coding Instagram.\nHashtags Hashtags are what gets you noticed in the community. Hashtagging is important and vital for your instagram posts. On Instagram, you have communities. These communities communicate and are built around hashtags. In order to join a community, you need to post regularly to hashtags and follow those who also post to those hashtags.\nUsers can now follow hashtags, so they can see your posts in that hashtag even if they don‚Äôt follow you. Hashtags can also be featured in Instagram stories, to get your story seen by people who follow that hashtag.\nYou can add hashtags to your profile‚Äôs bio. You‚Äôll appear in searches for the hashtags you select. It‚Äôs a good idea to use hashtags in your bio to attract a larger audience.\nThe easiest way to get the best hashtags for your niche is to find top posters in that niche and copy their hashtags. They‚Äôve done all the hard work for you - by finding the hashtags that work.\nOne of the problems with this approach is that the larger accounts already have a large following - whereas you‚Äôre just starting out. Let‚Äôs assume the poster with the large account is posting in #Yoga, with 16 million posts in it. This poster has 20,000 followers - so when their fans see the photo, they like it. This boosts it through the other posts in #yoga and makes it appear at the top - where it gets more likes.\nIf someone with little to no followers tried to post under #Yoga, their photo would be lost in the hundreds of photos posted to that hashtag every day.\nWhen starting out, you want a mix of popular hashtags and not so popular hashtags. You want those popular, big hashtags so just in case your photo blows up it can blow up more. You want those smaller hashtags, so others can find you. You‚Äôre allowed a maximum of 30 hashtags, so 25 of those should be smaller and 5 should be larger.\nThe smaller hashtags have to actually exist. You can‚Äôt just make your own hashtags, as no one will discover them. Once you become a bigger account you may choose to make your own hashtags.\nThe easiest way to find smaller hashtags is to look for smaller creators in your niche and check through the hashtags they use. Knowing what hashtags are ‚Äúsmall‚Äù and which are ‚Äúbig‚Äù depends entirely on the niche, only you can decide that.\nWhen you search a hashtag, Instagram will show you related hashtags to the hashtag you have searched. Click through these and see if you can find any good hashtags you can include in your posts.\nWhen I started my own coding Instagram, I copied someone else‚Äôs hashtags and pasted them into my notes app. Now I just copy and paste every time I post something.\nWhen posting hashtags, it‚Äôs better to include them in a comment on your post rather than having them in the description of the post. This makes it look cleaner. When posting in a comment, write 5 full stops:\n‚Äú\n.\n.\n.\n.\n.\n#hashtags #go #here\n‚Äú\nThis will make your hashtags hidden in a comment, so the post looks cleaner overall.\nInteractions You should see by now that the most important aspect of social media is to be social. Reply to every comment you get, talk to people. Be sociable. These apps reward people for using them. They want you to be social. Make the algorithm work for you by being sociable and interacting with others.\nTagging reposters Reposters are some of the biggest players in the Instagram game. You tag them in a photo related to the niche, and they repost it. They give you credit, and you get hundreds of thousands of follows / likes / comments.\nUsually the biggest posters in a hashtag are reposters. Click on a post. Are they giving credit, like ‚ÄúPhoto by @brandon.codes‚Äù? If the profile is not of a person, they might be a reposter.\nWhen you tag a reposting account in your posts, you have the chance of being reposted. These reposting accounts are usually the biggest in the niche, so your post will be seen by thousands of followers. This increases your own visibility and will enable you to get a larger follower.\nLocation As well as tagging your photos with hashtags \u0026amp; people, you can also tag your photos with a location. Just like with hashtags, each location has its own Instagram feed. It‚Äôs worth tagging your photos with a location, simply because it puts you in one more feed.\nGrid Visuals How your grid looks is important to your brand. Your grid has to be consistent, neat, and aesthetically pleasing. People will follow you if you keep a consistent theme in your grids. Here are some simple grid systems you can use.\nNormal Just post the same type of content - without worrying how it looks in the bigger picture. Stick to the same colour combination and the same theme, you‚Äôll do well.\nDiagonals With diagonals, you‚Äôre aiming to match the same type of photo diagonally. Think Connect Four, but with photos. With diagonal photos you should stick to the same overall niche, such as ‚ÄúYellow‚Äù or ‚ÄúCoffee‚Äù but each diagonal should be different from the other diagonals. One diagonal could be yellow cars, another could be yellow coats.\nTiles Much like a black \u0026amp; white tiled floor, you‚Äôll want to tile your photos here. Your tiles need to look different in order for the effect to take place.\nRow by row Every row has its own unique style. Much like diagonal, each row has to differentiate itself from the others.\nLines You can place a column of photos down the middle that all follow a theme, or down one of the sides.\nRainbow feeds The colour of your feed gradually changes over time - giving the impression of a rainbow. This is quite hard to pull off, but it makes your feed look amazing.\nBorders Having white borders around your photos can give more space in the feed to each item, making it look that much cooler.\nFollowing hashtags to get more followers From December 2017, you can now follow hashtags. This is monumental, since you can see the posts of people you don‚Äôt follow in your Instagram feed. Follow as many hashtags as you can and engage with everyone on Instagram. The more you engage, the more you‚Äôll grow.\nCreating unique content \u0026amp; series In order to stand out, you may wish to create a unique series of content. My friend, Sasha, has a weekly Instagram stories series called ‚ÄúColour Tuesday‚Äù. Every Tuesday, people send her their favourite colours and she posts them into her story.\nThis interaction with her fan base strengthens their liking for her. When Instagram sees all these hundreds of people interacting with her, they reward her by putting her posts higher up in the Instagram feed.\nYou can interact with your followers via polls, question \u0026amp; answer sessions, live sessions and much, much more. Instagram is adding more features to enable users to interact more. If you interact more, the more Instagram will like you.\nOne of the series I have started recently is mini-blogs on topics that my followers suggest to me. They tell me to cover something, like the Turing Completeness of PowerPoint. Ok, I admit, this sounds boring. I can hear your eyes closing as I write this. But I‚Äôm a computer scientist, this is what people find fun in my field.\nLinkedIn LinkedIn is a social network for professionals. It\u0026rsquo;s built for anybody and everybody that wants to become more professional. You can think of LinkedIn as the virtual version of going to a careers fair. You\u0026rsquo;ll be able to meet lots of people, make connections \u0026amp; friends and more on LinkedIn.\nYour LinkedIn profile is like a general CV. Your CV is customised per job \u0026amp; position, your LinkedIn is generalised.\nKeep your profile updated This is a general rule for all social media. It\u0026rsquo;s important to keep your profile updated. Whenever you get a new job or anything else professionally related, update your profile. If you do something cool, update your network.\nThe headline The headline is the first thing someone sees when they see you on LinkedIn. At minimum, the headline should be your current job and company.\nThe headline has a 120-character maximum. Your headline helps people find you. When someone searches you in LinkedIn search, they get your profile picture, your name and your headline.\nMost people on LinkedIn just have their job title(s) as the headline, but you should add much more to it. You can include your expertise, any awards you\u0026rsquo;ve won. Even include keywords in your header that you want to come up for in LinkedIn search.\nYou can include things such as:\n   Who you help\n   What you do\n   What you‚Äôre passionate about\n   Proof that you are credible (PhD, awards etc)\nIf someone searches \u0026ldquo;freelance graphic designer\u0026rdquo; on LinkedIn and that\u0026rsquo;s your headline, you\u0026rsquo;ll appear in the search.\nInstead of having:\n‚ÄúStudent‚Äù\nAs your headline, you can instead have:\n‚ÄúStudent specialising in mental health applications of VR‚Äù\nYou need to be creative. Don‚Äôt be clich√©. Don‚Äôt have a headline like this:\n‚ÄúStudent of life, school of hard knocks‚Äù\nThe photo LinkedIn profiles which have a picture are 11 times more likely to be viewed, according to LinkedIn.\nYour LinkedIn picture should be recent, and it should look professional. It shouldn\u0026rsquo;t be you in a nightclub or your Tinder profile picture. If you can, pay someone to take it for you. Do you know any photography students? Kindly ask them if they could take a photo of you.\nIt should be an ordinary, professional headshot of yourself. Another good tip is to have a photo of you doing something as your LinkedIn profile. If you\u0026rsquo;re a VR specialist, you in a VR headshet would work. You still need to look professional. Look ahead and smile.\nIf your industry doesn‚Äôt wear suits (technology), then don‚Äôt wear a suit in your profile picture.\nThe background of your photo matters a lot. It should be minimalistic, nothing going on in the background. Preferably a white background would be perfect.\nMake sure to use the same profile picture across all of your professional social media. Your brand recognition matters. You don‚Äôt want people searching for you on Twitter and getting confused as to whether it‚Äôs really you or not.\nTry to name the photo file ‚ÄúFirstname.Lastname.png‚Äù. Search engine optimisation means that you want to optimise your online presence to appear higher in search engines (Google) results. By naming your profile picture to this, you‚Äôll appear higher in search engine results for your name.\nYou‚Äôll also only want to use the .png file extension. The .jpeg or .jpg is a compressed version of .png, meaning it won‚Äôt look as good. Try to only take pictures on .png. If you have taken pictures on your phone or a camera, it‚Äôs likely that this file is a .png file. If your photo name ends in .png, it‚Äôs a png.\nThe profile cover photo The background picture also needs to be professional. It can be you speaking to an audience or some code you\u0026rsquo;ve written. It should be clean and professional. If you\u0026rsquo;ve never done this than any photos of you at an event you\u0026rsquo;ve been to related to the industry will do.\nIf you‚Äôre still stuck, pick a nice landscape photo or something.\nSummary This is vital to your LinkedIn. The summary is a paragraph section about you. It includes your professional summary, any hopes or aspirations you have in your career.\nBefore you write your summary, it\u0026rsquo;s important to understand these things:\n   Who your audience is\n   What do you want them to know?\nYour summary should be general enough to cover any job you may apply to but specific enough to let you appear in search results. If you want to include bullet points in your summary, Google ‚ÄúAscii bullet point‚Äù then copy and paste it, it‚Äôll look like this ‚Äú‚Ä¢‚Äù.\nTo appear in search results, you must utilise keywords. Understand what industry you want to go into and Google the keywords relevant to that industry.\nYou can also find keywords from job postings.\nOn mobile, the first 92 characters of your LinkedIn summary are visible. For the user to see the rest they must click \u0026ldquo;show more\u0026rdquo;. This means that the first 92 characters matter the most, make sure every character counts.\nAlso, write in first person. It‚Äôs creepy and weird to read something that says:\n‚ÄúBrandon is a creative genius who loves ice cream‚Äù\nOn someone\u0026rsquo;s profile, when you know for a fact, they‚Äôve written it themselves.\nYour summary is going to let you expand on your headline, what problems you solve and why you love doing it. It should be a story and if possible, it should prove your credentials. If you claim to be knowledgeable in macroeconomics, why are you knowledgeable?\nIf you can, include a call to action. A call to action is you calling the user to take action on something. In your LinkedIn profile, this action is typically to connect with you. Give them a reason to connect and tell them to connect with you.\nSpellcheck This shouldn‚Äôt be said, but just in case, everything needs to be spell checked.\nOwn a business or brand? Check out this cool trick Under your Contact Info, LinkedIn gives you the option to link to a website or blog. But by default, the text that shows in your profile is the extremely dull \u0026ldquo;Blog\u0026rdquo; or \u0026ldquo;Website.\u0026rdquo; Anyone visiting your profile has no clue where they\u0026rsquo;ll end up if they click on that.\nWant to use your actual brand or business name? You can! Here\u0026rsquo;s a simple little trick.\nWhen editing the Websites area of your profile, select the \u0026ldquo;Other\u0026rdquo; option. Now you can add your own website title and URL.\nPersonalise your URL Not many people know this, but you can personalise your URL on LinkedIn to a vanity URL. Instead of pointing to LinkedIn/In/3857239 you can make it point to LinkedIn/In/FirstnameLastname instead. Here‚Äôs instructions directly from LinkedIn on how to do this:\n   Click the Me icon at the top of your LinkedIn homepage.\n  Click View profile.\n  On your profile page, click Edit public profile \u0026amp; URL on the right rail.\n  Under Edit URL in the right rail, click the Edit icon next to your public profile URL.\n   It\u0026rsquo;ll be an address that looks like www.linkedin.com/in/yourname-numbers\n  Type the last part of your new custom URL in the text box.\n  Click Save.\nNote: these instructions might have changed since the publication of this book.\nSections You can create sections in LinkedIn. We‚Äôre going to go over all of the sections available to you.\nExperience The experience section is a reverse-chronological listing of all of your professional experience. Typically, this will include jobs or work experience you have undertaken.\nYou‚Äôll want to have descriptive job titles here in order to let any recruiters know exactly what you were doing. Keywords are always the key. If you include keywords in your job descriptions, you‚Äôll appear higher in search results (SEO).\nIf you have done an internship at Barclays learning about investing, instead of having:\n‚ÄúInternship at Barclays‚Äù\nYou should put:\n‚ÄúInvestment analyst internship at Barclays‚Äù\nLike with a CV, we‚Äôll want to include achievements in your descriptions of the job. Include any testimonials here, if you have them, and any promotions you have received in the description of your experience.\nEducation LinkedIn has a 2000-word count on your education here, so go wild if you want. Include your achievements, modules, activities \u0026amp; societies and anything else you can think of. You can also include ‚Äúmedia‚Äù which lets people see a media attachment related to this education. With permission of my lecturers, I‚Äôve included PowerPoints I‚Äôve given.\nThe media attachments will let anyone look at your work, if they care. In reality it‚Äôs incredibly unlikely that someone will look at your work, but it makes your education stand out since LinkedIn gives you a pretty ‚ÄúMedia‚Äù section on your education.\nHere‚Äôs my own example of my education section:\n‚ÄúActivities and Societies: Duke of Edinburgh Gold, Free Code Camp Kent, Body Combat\nModules:\nUnit 1 - Business Skills for e-Commerce (core module) - Level 4 (15 credits)\nUnit 2 - Computer Systems (core module) - Level 4 (15 credits)\nUnit 3 - Employability and Professional Development (core module) - Level 4 (15 credits)\nUnit 7 - Research Skills - Level 4 (15 credits)\nUnit 14 - Website Design - Level 4 (15 credits)\nUnit 19 - Object Oriented Programming - Level 4 (15 credits)\nUnit 23 - Mathematics for Software Developers - Level 4 (15 credits)\nUnit 24 - Networking Technologies - Level 4 (15 credits)\nAs well as studying for the MTA certification scheme.\nAlongside this, I am also undertaking Gold DofE\nAchievements while here:\n100% in mock interview for University with University of Kent\nAmazon Web Services award at the University of Nottingham\u0026rsquo;s hackathon, HackNotts 2016, representing my college. http://bit.ly/2lo7NGO\nPassport to Employment, twice.\n60% increase in student voice representation‚Äù\nVolunteer experience This section is designed the exact same way that experience is, except your volunteer experience goes here. There isn‚Äôt much to say here, since most of it was covered in the previous section.\nSkills \u0026amp; Endorsements In this section, you list skills you have, and your connections can endorse you for those skills. As an example, you could list ‚Äúwriting‚Äù as a skill and have 13 connections confirm that you‚Äôre a good writer.\nYou can physically move these skills up and down the list. I recommend having the most in-demand skills or most impressive skills at the top, to catch the eye of your employer.\nDon‚Äôt try to have the same skill but worded differently. For example, you could have these skills:\n   Microsoft Office\n   PowerPoint\n   Word\n   Excel\nBut Microsoft Office covers them all. You‚Äôre only allowed 30 skills, use them wisely.\nTo get your connections to endorse you for skills, simply endorse them. Going back to what we said earlier, if you want people to care you need to care about them. If you want endorsements, you need to endorse them.\nAnother way to get endorsements is to ask for them. Create a message, copy and paste it to people you know on LinkedIn. Very few people actively use LinkedIn, so this is a good way to get endorsements.\nWhile a little spammy, it works.\nRecommendations People will write you recommendations, and you can write other recommendations. These are testimonials that someone knows you and they think you‚Äôre good. It‚Äôs usually a short paragraph or two of why you are amazing.\nSome recruiters don‚Äôt like recommendations so much, since it‚Äôs very much a case of you writing one for your friends and they write one for you.\nThe key to getting recommendations is the same as getting endorsements, you write one for them and they‚Äôll write one for you. You can also request a recommendation from people by following these steps:\n   Click the Me icon at the top of your LinkedIn homepage.\n  Select View profile.\n  Scroll down to the Recommendations section and click Ask to be recommended.\n  Type the name of the connection you\u0026rsquo;d like to ask for a recommendation in the Who do you want to ask? field.\n  Select the name from the dropdown that appears.\n  Fill out the Relationship and Position at the time fields of the recommendations pop-up window and click Next.\n  You can include a personalized message with your request by changing the text in the message field.\n  Click Send.\nAccomplishments This is a whole section dedicated to your accomplishments. We‚Äôre going to go over each sub-section here.\nLanguages This is simple, what languages do you know? If you‚Äôre a computer programmer, you can include programming languages here too. Nothing so special here.\nQualifications This is where all of your qualifications go. All of your GCSE‚Äôs, A levels and university degrees as well as more. If you have taken any online courses, include them here. If you have a first aid certificate from work or you have a DBS check, include them here. Unlike with a CV, there‚Äôs no set rule to having ‚Äútoo much‚Äù on LinkedIn.\nRecruiters can filter searches by qualifications, so make sure to include as many of these as you can. Your National Citizen Service or Duke of Edinburgh award goes here too.\nThere are many new sections you can add to your LinkedIn profile. From awards to volunteer work, there\u0026rsquo;s a section for you.\nProjects Your projects section details any projects you‚Äôve worked on. It‚Äôs designed like the experience section where you can have dates on the project, descriptions and titles.\nThe same advice from experience works here. You can also add the other people who have worked on the project with you.\nOrganisations What organisations are you a part of? If your degree is accredited, include that here. For example, my computer science degree is accredited by the British Computing Society, so I have them listed here.\nI‚Äôve also listed the organisations I‚Äôve volunteered with here.\nCourses What courses have you done? Any online courses? First Aid course? Your modules? Anything course related can go here.\nConnections On LinkedIn, you can connect with anyone you want. Kind of. If too many people report as not knowing you, you‚Äôll no longer be able to connect with people. You need to connect with people you‚Äôve met. But, even when you‚Äôve met people, they still may not remember you.\nThis is why it‚Äôs important to include a personalised message to everyone you connect with. A simple ‚ÄúI met you at [place here]‚Äù or \u0026ldquo;I\u0026rsquo;m interested in your work on X, can we connect so I can stay up to date?‚Äù\nWhen you get past 500 connections on LinkedIn, it‚Äôll only show on your LinkedIn profile as ‚Äú500+ connections‚Äù. It‚Äôs way more impressive if you have 500+ connections than 499. Even if you only have 501 connections. People on LinkedIn can‚Äôt tell the difference between 501 connections and 171,326 connections. It always shows as ‚Äú500+ connections‚Äù.\nBlog Posts You can write blog posts and articles directly in LinkedIn. This feature isn\u0026rsquo;t used so well but can be used to increase your reach.\nIf you want to write one, click ‚Äúwrite an article‚Äù under the ‚Äúupdate your status‚Äù section of the LinkedIn homepage.\nGroups There are many groups on LinkedIn you can join. You should find groups that interest you. You can find a group for web development, investing, and much more.\nOnce you‚Äôve joined a group, comment on things and post things in that group. Interact with people in the group, it‚Äôll help you make friends in that industry.\nGroups can be an easy way to make friends and increase the number of connections you have.\nConclusion I\u0026rsquo;m not going to create a checklist for every single social media that was brought up here, it\u0026rsquo;ll be too long. Just go through each section that applies to you.\n‚òê Have you gone through each of your social media accounts and applied the recommendations laid out in this chapter?\n‚òê Have you decided what type of content you\u0026rsquo;re going to produce and how?\n‚òê Have you started to make friends, not connections?\nHow to Prepare for an Interview Interviews are essential to job positions. Almost every single job will involve an interview of some kind. Most people believe that an interview is where the employer sees if you are the right candidate for the job. While that is true, an interview is also where you see whether the employer is right for you.\nWhen it comes to interviews, practice makes perfect. Get as much practice as possible. Ask your university careers service if they do practice interviews. The more interviews you do, the better you\u0026rsquo;ll get at them.\nLater on in this book, we\u0026rsquo;ll go over a lot of possible interview questions.\nInterview Formats These interview formats can be mix and matched or on their own. It depends on how the employer wants to do things.\nFace to Face The normal physical interview format. There will be 1 or 2 people at most interviewing you. They‚Äôll ask you questions relating to the job. They might also make you solve puzzles in front of them, in order to understand your problem-solving process.\nOnline Video Interview The interviewer will give you a set of questions and you\u0026rsquo;ll have to record yourself for 15 to 30 minutes answering the questions.\nThe interviewer loves this format because if you bore them after the first 15 seconds they can stop watching.\nSome companies (such as Barclays) use Artificial Intelligence to read your face and use that to determine whether you go onto the next stage. If you know an AI is going to face read you then you need to have a good internet connection and camera quality, as the AI can‚Äôt read your face otherwise.\nLike any interview, you\u0026rsquo;ll need to dress for the occasion. Even if it\u0026rsquo;s not a human interviewing you, they may still be able to detect what you\u0026rsquo;re wearing.\nSkype Interview The employer will Skype you and will ask you questions as if it is face to face. Whatever you do, make sure you‚Äôre in a quiet environment with good internet.\nIf you don\u0026rsquo;t want to approach your careers service and would rather ask friends for this, this is the easiest interview type to ask for help with.\nYour friend could be in bed reading out a list of questions whilst on Skype. However, you must act professional. You cannot be in bed or not dressed for the occasion. This is interview practice, not question time practice. If you do not take practice interviews seriously, you\u0026rsquo;ll falter at the real interview.\nWhen completing video interviews or Skype interviews, look behind you. What‚Äôs behind you? That‚Äôs what the interviewer will see. Try to interview with a boring, plain white background if you can. Your universities careers team may let you take video / Skype interviews in a nice, monotone office.\nDon‚Äôt look sad, smile. Smiling is the key to interviews, even if they can‚Äôt physically see you. Don‚Äôt wear a headset or headphones, it makes you look unprofessional\nYou can have notes in front of you while doing this interview. Take this to your advantage. Place your CV, company information, questions you want to ask and any more right in front of you, so your interviewer can‚Äôt see them. Don‚Äôt Google things mid-interview.\nHow to Prepare for a Telephone Interview This is used to determine whether you are worth the time and effort to interview in person. This type of interview is almost always one employee interviewing you.\nJust like with the Skype and video interviews, you can have things in front of you. Have your CV, questions and whatever else you think you may need. Just make sure not to play around with the paper too loudly.\nYou need to make sure it‚Äôs a high-quality phone call too. If you don‚Äôt get signal in your home, find somewhere that does have signal and is quiet. Your universities careers team would probably let you make a call in one of their offices, if you asked.\nYou‚Äôre allowed to quietly Google things this time, as long as it‚Äôs quiet and you don‚Äôt leave too much of a gap in your speech. Do not type directly onto your phone while calling someone, they‚Äôll hear it.\nIt‚Äôs a good idea to disable phone notifications as well. You don‚Äôt want the recruiter to hear your phone buzzing from your Snapchat notifications.\nWhen answering the phone, answer with:\n‚ÄúHello, [YOUR NAME] here‚Äù.\nI would answer as:\n‚ÄúHello, Brandon here‚Äù\nSmile. Even if they don‚Äôt see you. Smiling comes through on the phone, so smile a lot and be happy.\nAssessment Centres\nAn assessment centre is a building or office designed to assess your criteria for the job. Assessment centres typically follow this schedule:\n   Meet the group\n   Lunch with your group\n   Group problem\n   Individual interview\nMost of the time you will be asked to give a presentation during the assessment centre. Your team will be assigned a problem and some reading material, to produce a presentation. More on presentations can be found on page 149\nVery commonly you‚Äôll be asked to retake the tests you‚Äôve done online such as verbal reasoning and numerical reasoning. Sometimes people get their friends to do these online, so this is a test to make sure you know what you‚Äôre doing. More on these tests can be found on page 145.\nYou may do all of these things, you may do some of these things. If you have an assessment centre coming up and you know what will happen there, feel free to only read the parts that apply to you.\nSocial events Social events are any part of the assessment centre that is said to be ‚Äúinformal‚Äù. This will typically be lunch. This can and will still affect your outcome. Use the time to ask lots of questions, make notes that may be useful in any future interviews with the company.\nIn-Tray / e-Tray Exercises This is similar to a role-playing scenario. You will pretend to be a newly appointed manager with a bunch of tasks in a tray / inbox. You have to choose which tasks are the most important. You may also be asked to complete the tasks in the tray. The tray exercises will feature an abundance of sources. It could be emails, voicemails, letters or charts.\nGroup Activities When undertaking group exercises one or two instructors will watch you. Don‚Äôt dominate the discussion, let everyone speak and if someone\u0026rsquo;s quiet ask them for their input. Try to present your idea as it‚Äôll make you stand out from the group. Don‚Äôt worry if one person is seen as too dominating as it likely won‚Äôt impress the recruiter.\nIn group exercises you must be inclusive, you must include everyone in solving a problem. What they\u0026rsquo;re looking for here is someone who works well in a team. You do not have to be the \u0026ldquo;best\u0026rdquo; in the team. You\u0026rsquo;re not going to be knocked out of the process during the group problem for not being the \u0026ldquo;best\u0026rdquo;. You must display excellent communication skills and teamwork skills.\nNormally you‚Äôll encounter one of these problems:\nBusiness scenarios‚Ää Often linked to the business. This can include coming up with new ideas for the company, setting a budget, planning a holiday, making a new product, case studies of charities.\nRanking exercises‚Ää As the name implies, you have to rank things. Whether this is your top 10 favourite songs or favourite prime ministers. The interviewer could give you a list of people and tell you only 5 or 10 can survive - who do you kill?\nPhysical tasks‚Ää This is anything that involves physical activity. It can be building a radio or building a tower of blocks in a weird fashion. It could also be things like Football or table tennis. It depends on how wacky the company is. If it\u0026rsquo;s a tech company, it\u0026rsquo;s a good indication that they might have something wacky such as table tennis.\nRole plays‚Ää Your team will have to roleplay a scenario. This can involve selling an item to someone, management roles or pretending to fire an employee.\nPanel Interview You will be interviewed by a panel of people, as opposed to just 1 or 2 people. This is very similar to a face to face interview.\nGroup Interview You will be interviewed as a group. As in multiple candidates will be interviewed by one interviewer (or panel). This is also normally a face to face style interview. It is unusual to have a group interview over Skype or the phone.\nEmployers do this type of interview because it is efficient, they can interview multiple candidates at once.\nIn this style you want to stand out. You can do this by:\n   Being confident and respectful. Understand that group interviews are efficient and no, the employers do not hate you.\n   Be a leader. If you are working on a team project, find an opportunity to lead. This does not mean you get to be a dictator and control the group.\n   Be yourself and be authentic.\n   Follow up‚Ää‚Äî‚ÄäSend a thank you email after the interview.\nStyles of Interview There can be many different styles of interviews that match the formats of interviews. This section is designed to give a broad overview of the different styles of interview possible. Further on in this book we will discuss interview questions\nWWhat is a Competency Interview? Competency interviews require candidates to talk about specific times they have solved problems. They want to see you are competent. This is where the project(s) comes into play as well, talked about on page 161. What better way to prove you‚Äôre good at something if you‚Äôve actually done it?\nCompetency based interviews will usually have the interviewer read questions off of a bit of paper or their laptop. They will likely take notes throughout the interview.\nThe type of questions that come up here will be strictly formatted. None of those ‚Äúwhat‚Äôs your favourite colour?‚Äù questions.\nThe best way to prepare for a competency interview is to read through the questions listed later in this book and try to answer them yourself.\nCompetency based interview questions can be found in the next chapter.\nStrength Based Interviews A strength-based interview focuses on what you enjoy doing, rather than what you can do like in a competency-based interview. Strength based interviews come from ‚Äúpositive‚Äù psychology. The theory states that by matching you with what you enjoy doing you‚Äôll be happier in your role, will perform better and stay with the company for longer.\nThe interviewer will likely not have any questions written down for this, or not many. They may ask something like ‚Äútell me about your favourite day out‚Äù and they will ask questions based on your answers to really gage you as a person. These types of interviews will normally feel like a formal chat with a friend rather than a one on one interview.\nMore and more companies are switching to strength-based interviews. These companies publicly state they use them:\n   Aviva\n   BAE Systems\n   Barclays\n   Cisco\n   EY\n   Nestle\n   Royal Mail\nStrength based questions don‚Äôt have a binary ‚Äúright or wrong‚Äù answer. But, do be a decent human being. Don‚Äôt talk badly about other people, don‚Äôt lie, just be nice.\nJust like every other type of interview you‚Äôll need to include examples to back up your responses.\nHere are some examples of strength-based interview questions:\n   What do you like to do in your spare time?\n   What energises you?\n   How would your close friends describe you?\n   Do you most like starting tasks or finishing them?\n   Do you prefer the big picture or the small details?\n   Describe a successful day. What made it successful?\n   What are you good at?\n   What are your weaknesses?\n   What did you enjoy studying at school or university?\n   When did you achieve something, you‚Äôre really proud of?\n   What do you enjoy doing the least?\n   Do you find there are enough hours in the day to complete your to-do list?\n   What tasks are always left on your to-do list?\n   How do you stay motivated?\n   How do you feel about deadlines?\n   Have you ever done something differently the second time around?\n   Do you think this role will play to your strengths?\nWe‚Äôll go over how to answer these in chapter 6.\nStress Based Interviews A stress-based interview is designed to make you stressed, to put you under pressure to see how well you do.\nThe logic is that the way you respond under stress during the interview is indicative of the way you‚Äôll handle similar situations on the job.\nThey can be problematic because it may make the applicant develop a negative attitude towards the company. Sometimes, even the most successful applicants will turn down an offer on account of the nature of the interview alone.\nHere‚Äôs some stress-based interview questions:\n   How do you feel this interview is going?\n   How would you handle undeserved criticism from a superior?\n   How many other jobs are you applying for?\n   What would you do if you saw a colleague stealing supplies or equipment?\n   What did you do when you had a boss you didn‚Äôt get along with?\n   What would you do if a colleague took credit for your idea, and got a promotion?\n   Was the stress of your previous job too much for you?\n   What would you do if a colleague admitted to lying on their resume to get the job?\n   What would you do if a customer verbally insulted you in front of co-workers?\n   What would you change about the design of a baseball hat?\n   Why were you fired from your previous job?\n   How successful do you think you‚Äôve been so far?\nAgain, we‚Äôll go over these questions in the next chapter.\nTechnical Interviews A technical interview is used heavily in the technology industry. It usually involves coding.\nThere are so much out there about technical interviews ranging from 800-page books to entire video guides on how to pass technical interviews so I‚Äôm not going to cover this in detail here. Because of this, I‚Äôm not going to write about them here. I recommend the book ‚ÄúCracking the Coding Interview‚Äù, a link to this book can be found at the end of this book.\nStructured Interview A structured interview is another describing word for a certain type of interview. A structured interview will usually follow a structure. The interviewer asks the questions in a standard pace and the questions are normally read off of a sheet of paper.\nUnstructured Interview Like above, an unstructured interview is another describing word.\nThere isn\u0026rsquo;t a strict structure to these types of interviews. Usually the interviewer will ask you 1 or 2 questions to start you off. The rest of the questions and the way the interview goes will depend on your answers to the first 1 or 2 questions.\nThe Lunch Interview One of the more informal types of interviews. The interviewer will buy you lunch and will interview you over lunch.\nDo some research on the restaurant you are going to. Try to decide what you will order in advance, before reaching the restaurant. Although a restaurant might feel more informal than an interview, make sure to dress the part.\nIf you‚Äôre applying for Google or something similar,, where everyone wears jeans and hoodies then wear jeans and a hoodie. Make sure you know what the company expects. Most businesses will require suits and formal wear.\nIf you‚Äôre not sure on the dress code, just take a step back and think for a second. Is the company some super serious fortune 100 bank or investment firm? It‚Äôs formal all the way. Are they a tech start-up? Likely informal. If you Google ‚Äú[companies name] dress code‚Äù you might find them. When in doubt, dress smart.\nTry to arrive 15 minutes before the time of the reservation and meet the employer outside the restaurant.\nThe best thing you can do here is to take the lead from your interviewers. When you sit down, casually ask if they‚Äôve been to the restaurant before and what they think are good options. Hopefully their recommendations will give you a sense of an appropriate price range. If not, when the wait staff arrives, try to have your interviewer order first and choose something at that price point (or less).\nAlso, be sure to pick an option that will be easy to eat while you‚Äôre talking. (Hint: Forkfuls of Caesar salad are easier to manoeuvre than a massive, messy sandwich.)\nFinally, no matter how casual your employer may be, you want to put forward your very, very best self. This means: Stay away from ordering alcohol, even if the interviewers do. If you get the job, you will have plenty of opportunities to share a drink with them‚Ää‚Äî‚Ääthe interview is not the time or place to start.\nThere‚Äôs a couple stories going around about interviewers asking the waitressing staff to purposely get the interviewees order wrong. This is so the interviewer can see how the applicant behaves in this situation. This is an important example to talk about because while lunch interviews are informal ‚Äì they are still interviews.\nConclusion ‚òê Find out what interview you\u0026rsquo;re having\n‚òê Try to match the interview to the types listed in this chapter\n‚òê Read up on those types of interviews and practice them\n‚òê Practice those specific styles again (practice makes perfect)\n‚òê Find out the formality of the company\n How to Answer Interview Questions This chapter is all about interview questions. Before we get into them, let‚Äôs first go through some basics of answering interview questions.\nAnswering Interview Questions The STAR method (see below) is appropriate to use for talking about examples and situations you have been in that are beneficial to talk about during the interview. As you‚Äôll come to see, most interview questions require you to answer with an example. SituationWhat situation were you in? Give some background details. Were you at university? An internship?TaskWhat was you tasked with? What were you asked to do, was there a team? Why did you have to do it?ActionWhat actions did you take? What did you actually do to solve the task? This is the largest part of the STAR method, you should talk more here than any other part.ResultWhat was the result? What happened because you took action?\nKnow Yourself They will ask questions about your CV. People regularly forget what they have put on their CV. Make sure you understand the projects and work you‚Äôve put on there.\nIf you‚Äôve done any projects, I use this table to help me remember any projects I‚Äôve worked on (shown on next page). I recommend you fill this out before an interview, as it will help you.\n‚ÄúIf you know the enemy and know yourself, you need not fear the result of a hundred battles. If you know yourself but not the enemy, for every victory gained you will also suffer a defeat. If you know neither the enemy nor yourself, you will succumb in every battle.‚Äù - Sun Tzu, Art of War\nIf you‚Äôve researched the company and you know yourself, you‚Äôll come out on top most of the time. **Project NameProject DateWhat was the project?Who was it for?3 achievements from this project3 failures from this project, and what you learnt I also use this table below to find out examples / projects that may be beneficial when answering interview questions. Replace project with example if you haven‚Äôt worked on projects. Pick 3 projects you want to really focus on, that you think will benefit you in the interview. Once you‚Äôve picked 3, complete this table. **Common questionsProject 1Project 2Project 3**What challenges did you face?****What mistakes / failures did you make?****What did you enjoy?****What conflicts with other team members came up?****What would you do differently?**Tell me about a time you showed leadership in this project Once you‚Äôve filled out these tables, you should have a really good idea of who you are and what you‚Äôve done. Congratulations! You‚Äôre already better than 60% of the other applicants. Let‚Äôs make you better than 80% of the other applicants in our next section.\n15 Interview Questions Interview questions, loved by some, hated by many. These are often seen as the hardest part of the interview. What do you say? What do you do? What\u0026rsquo;s the \u0026ldquo;right\u0026rdquo; answer here?\nInterview questions make up 95% of an interview. The whole purpose of an interview is to ask questions and be asked questions. Luckily for you and I, according to Reed, one of the largest recruitment agencies in the world, there are only 15 interview questions. All other interview questions stem from these magic 15.\nThe Pareto Principle states that 80% of the rewards comes from 20% of the work. We only need to know how to answer 20% of the interview questions to answer 80% of all the questions asked of you. The other 20%, well, that should come from your research on the company. Later on, in this book, we will discuss how to research a company.\nLet\u0026rsquo;s get right into these interview questions.\nTell me about yourself Don\u0026rsquo;t make the mistake of thinking this is about your personal life. They do not care about your personal life. It doesn\u0026rsquo;t matter whether you have a dog or a cat. They want to hear your professional life story.\nMake sure to tell a story. Like previously discussed, humans are naturally prone to enjoying stories. Stories make the other person interested. Don\u0026rsquo;t give out a bullet pointed list, talk with them.\nThis question is a combination of these things: How well the candidate has prepared, their confidence, and what they\u0026rsquo;ve done in their professional life.\nEven if you haven\u0026rsquo;t done something interesting in your professional life, you can spin any story to make it sound amazing. In the world of news, bad stories are often spun into a good light. You can spin something non-interesting into interesting.\nLet\u0026rsquo;s say you work part-time at McDonalds. I chose this because this is the most mediocre thing I could think of. While working at McDonalds, you discovered that it\u0026rsquo;s faster to type in the order as the person says it rather than to type it at the end. This isn\u0026rsquo;t ground-breaking stuff, just a simple observation. We\u0026rsquo;re going to spin this story to make you sound mind-blowingly amazing.\n‚ÄúIn my teenage years I worked at a rapid quickfire fast food chain. On average, we served around 400 customers an hour and during our peaks the store would get so busy the line would go out the door. In this environment, I learnt that I thrive under extreme amounts of pressure. Not only did I have to make sure that every single customer was over-joyous with their meals, but I had to do it fast.\nWhilst working here, I created a new system that increased the speed and accuracy of processing information into an End Point of Sales system. This new system allowed us to serve twice as many customers per minute all whilst keeping the customer satisfaction levels high.\nOne time, my store ran out of milk. My manager chose me to partake on this critical mission. To refill our stock supplies and refill them fast. Not only did I achieve this mission within 5 minutes, but I managed to achieve it before any customers requested items containing milk. Considering this restaurant serves 10 people a minute, I\u0026rsquo;ll say that\u0026rsquo;s some achievement.‚Äù\nThe point I\u0026rsquo;m trying to make here is that no matter how mediocre of a job you think you had, you can always spin it to make you sound amazing.\nBack to the question at hand. Businesses have elevator pitches. These are 30 second speeches that describe the business. The idea is if you are in an elevator with an investor, you have around 30 seconds to convince them to invest in the company. People can have elevator pitches too, and this is used to answer this question.\nYour elevator pitch should be customised per job position. Hopefully you\u0026rsquo;ll understand that nearly everything should be customised per job position. I can\u0026rsquo;t tell you what to say, as I don\u0026rsquo;t know you.\nDon\u0026rsquo;t make it sound like someone has never asked this question to you before. Act confident. Practice on your friends or in your mirror. Don\u0026rsquo;t \u0026ldquo;uhm\u0026rdquo; or \u0026ldquo;ehh\u0026rdquo; before answering. This makes you look like you haven\u0026rsquo;t prepared, that you\u0026rsquo;re not confident. Look them in the eye, smile, and say it out loud like you\u0026rsquo;ve rehearsed it every day of your life.\nAlways start your pitch with what you currently do (professionally). End that paragraph with something that leads the interviewer back in time. You want to tell a story. You also want to talk about your most recent things first.\n‚ÄúI\u0026rsquo;m a computer science student at the University of Liverpool. I\u0026rsquo;m aiming to get a first-class degree. Previously I was studying a level 4 diploma at a local college‚Äù\nThe next part leads back into your past. Notice how I ended the first part with \u0026ldquo;Previously I was\u0026rdquo;. This gently pushes you and the reader back into the past. I\u0026rsquo;m a student, and the likely chance is that you are a student. Education is the thing that defines us, but if you have any part time jobs working in industry you can put them here.\nIf you are a software engineer, you can say something like this:\n‚ÄúI\u0026rsquo;m a computer science student at the University of Liverpool. I\u0026rsquo;m aiming to get a first-class degree. I\u0026rsquo;m also a software engineer part-time.‚Äù\nMake sure each section smoothly leads into the other.\nThe second section should talk about your achievements. Don\u0026rsquo;t talk about your responsibilities, what you had to do. Talk about what you have achieved.\nIn my case, it\u0026rsquo;ll look like this:\n‚ÄúWhile at college I became the student union\u0026rsquo;s higher education vice president. During this role I ran the collective college partnership‚Äôs Student Union consisting of 5 colleges. Towards the end of my role, every student was filling out the annual student survey. Every section for the student union in the survey had improved ten-fold. Most noticeably, the student union satisfaction rating went up from 30% to ~85%.\nThis role required me to be an effective leader and team player. I needed to communicate complex ideas to the board members within meetings. I had to learn to deal with fast paced deadlines and even how to interview and select an appropriate replacement candidate. I believe all of these skills I have obtained will come in very useful within this job.‚Äù\nRemember earlier when I said it\u0026rsquo;s all about spinning a story? Make sure to include statistics if you can. This section is ripe for you to spin, to make yourself sound amazing. At the time, my job required me to go to a meeting once a month and pop into classrooms to discuss student issues. That doesn\u0026rsquo;t seem like much, but I can spin it to make it sound amazing. Also, the statistics help a lot.\nWhen you end this, you have to make the interview aware that you have finished. With this question, sometimes there is a few awkward seconds of the interviewer wondering \u0026ldquo;did they finish?\u0026rdquo;\nIn my case, I like to end it with:\n‚ÄúIf there is anything else you would like to know, feel free to ask me.‚Äù\nMost candidates fail this question because they have not practiced. They do not know how to answer or what to talk about. This results in the candidate vomiting out positions and words until they are satisfied that they\u0026rsquo;ve covered the question.\nThroughout all of these questions in this book, I urge you to practice them. It simply is not enough to read it and forget it, you need to write your own answer to these questions. This question especially. This question is asked in pretty much every interview, and normally right at the start of an interview. Because it\u0026rsquo;s asked at the start, it counts towards your first impression. If you do not answer this question confidently then the interviewer will likely not hire you, even if you answer every other question well.\nThe interviewer asks this question because it allows them to get a rough idea of your background and experience. Sure, they could read your CV. But the interviewer sees this as an \u0026ldquo;easy\u0026rdquo; question and it helps to calm your nerves.\n2. Why are you applying? This question helps the employer understand what you can do for them. You could rephrase this question as \u0026ldquo;What can you do that we need you to do?\u0026rdquo; They want to know what problems you can solve. They want to know if you have the determination and motivation to work for the.\nIn the Reed book \u0026ldquo;Why You?\u0026rdquo; they say that an answer to this question can be expressed in one single sentence:\n\u0026ldquo;I\u0026rsquo;m applying because my skills, experience, and motivation are the best fit for the job.\u0026rdquo;\nLike all interview questions, you have to customise it per job interview. Don\u0026rsquo;t give out a blanket answer here. Don\u0026rsquo;t mention these in your answer:\n   You need money\n   You want to get out of the house\n   A shorter commute is better than a longer one\nYou want to work at this job because you love it. Even if you don\u0026rsquo;t love it, don\u0026rsquo;t let the interviewer know. The interviewer wants to hire someone who is in love with the company and the job, don\u0026rsquo;t give them any reason to doubt you.\nYou want to research the job role here to see how you can fit into the job role. Interviewing is all about making yourself look like the perfect candidate for the job. Here\u0026rsquo;s an example of an answer to this question:\n‚ÄúI want this job because it emphasises helping others and integrity, two things that make up the core of who I am. In my previous job, I helped fundraise over ¬£5000 for charity in one month and always put the customer first. I know I could bring my 3 years of experience to this company, and continue your years of growth‚Äù\n3. What are your greatest strengths? To answer this question, you have to customise it to the job description. Reflect what the job description says here. It\u0026rsquo;s no use talking about how great you are at welding if you\u0026rsquo;re applying for an office job.\nThis question is giving you the opportunity to boast about yourself, but don\u0026rsquo;t come across as arrogant. This is not the time to be humble, you need to sell yourself like you\u0026rsquo;re absolutely perfect for the job.\nThere isn\u0026rsquo;t much I can say here to help you, since this question is customised per job. You need to think about how you\u0026rsquo;ll answer this question and write down your answer.\nInstead, let\u0026rsquo;s go over what makes a great answer. Look at this answer:\n‚ÄúI‚Äôm an extremely hard worker. I often don‚Äôt pick up many projects but when I do, I go all in. Recently I‚Äôve picked up blogging, managing to amass more than 80,000 monthly readers in less than 8 months.‚Äù\nThe statistics in this answer make it hit hard. 80,000 people read my blog every month, and I\u0026rsquo;ve achieved that in 6 months? Notice how I\u0026rsquo;ve managed to boast here without sounding too big-headed. You could rephrase this as:\n\u0026ldquo;I\u0026rsquo;ve grown my blog to tens of thousands of readers every single month, and it has taken me less than a year!\u0026rdquo;\nThis one sounds like I\u0026rsquo;m obsessed with myself. If you add statistics, you\u0026rsquo;re allowed to boast about yourself without sounding obsessive or insane.\nAnother way to rephrase this is:\n\u0026ldquo;My blog posts get twice as many people reading them as there are people in Lichtenstein\u0026rdquo;\nThis is using statistics. There are around 30,000 people in Lichtenstein and 80,000 people read my blog, but this sounds big headed. You have to say the numbers directly. Notice how if we change this to include numbers it doesn\u0026rsquo;t make sense:\n\u0026ldquo;My blog posts get 80,000 readers per month. There are 30,000 people in Lichtenstein. My blog gets more than twice as many readers per month then there are people in Lichtenstein\u0026rdquo;.\nStatistics and hard numbers are incredibly important.\nMake sure the statistic is relevant to the job. If I\u0026rsquo;m applying for a job that has nothing to do with writing, I probably wouldn\u0026rsquo;t bring this up.\nWith statistics, you don\u0026rsquo;t have to be given one to use it. You can work out the statistic yourself. Let\u0026rsquo;s say you work in a bookshop and you regularly talk to customers. You could say:\n\u0026ldquo;I regularly engage with customers and sell them more books then what they came in for. On average, every customer I serve buys more than ¬£50 worth of books\u0026rdquo;.\nSometimes, it\u0026rsquo;s better to present something you\u0026rsquo;re only slightly good at then it is to present something you are amazing at. If the thing you are amazing at doesn\u0026rsquo;t match the job description, don\u0026rsquo;t mention it. If the thing you are slightly good at does, do mention it.\n4. What are your greatest weaknesses? Many people fail this question because they believe that the right answer is \u0026ldquo;I don\u0026rsquo;t have any weaknesses\u0026rdquo;. What? Are you human? Everyone has a weakness. Please do not answer with a weakness similar to these:\n   I‚Äôm a hard worker.\n   I work so much.\n   I‚Äôm the best at teamwork, no one is better than me at working in a team.\nYeah, sure it may have worked for your granddad but employers could see the lies from miles away. Use an actual weakness here, something that you suck at. But don\u0026rsquo;t admit to something insane such as:\n‚ÄúSometimes I get really vivid thoughts of murdering people that interview me‚Ä¶ :)‚Äù\nThe secret to answering this question is to use a real problem you\u0026rsquo;ve faced. But make sure you talk about how you\u0026rsquo;ve overcome this. If you\u0026rsquo;re still overcoming the problem, that\u0026rsquo;s okay. You can still talk about this. An example taken from myself would be:\n‚ÄúI used to be terrified of phone call I‚Äôm still overcoming this but I‚Äôm not as bad as I was a year or two ago.‚Äù\nBut don‚Äôt make the weakness a part of the job description. If the job description says\n‚Äúyou need to be really good at talking to people‚Äù\nNever say\n‚ÄúI‚Äôm really bad at talking to someone‚Äù.\nYou have to say how you overcame your weakness and turn it into something positive. Mould it into a story.\nShow that this won‚Äôt be a problem at your current company. Say something along the lines of:\n‚ÄúI believe this won‚Äôt be a problem in this company‚Äù\nand then say why. Mine would be:\n‚ÄúI used to be terrified of phone calls. The idea of phoning someone was a no go for me. Having worked in a student‚Äôs union and at multiple events it was inevitable for me to phone people so I‚Äôve gotten used to it. I‚Äôm still overcoming this but I‚Äôm not as bad as I was a year or two ago. I believe this won‚Äôt be a problem at this company because I‚Äôm passionate for the cause of this company which would allow me to talk more on the phone to people revolving around this company. That‚Äôs one of the reasons I want to join this company, because I get to do what I love, and I get to push my boundaries and get out of my comfort zone, to grow both personally and professionally.‚Äù\nIt has to be very clear that this question is as normal as giving your name and address, do not act like they are forcing information out of you. Whatever you do, under all circumstances, never ever reply with any of these:\n   I‚Äôm a perfectionist!\n   I work too hard\n   I don‚Äôt have any!\n   Chocolate / food\n5. What will your skills and ideas bring to this company? To put it bluntly, this question is:\n‚ÄúWhy should we care about you? What can you do that others can‚Äôt?‚Äù\nThis is one of the best questions that could possibly come up in an interview. This question is:\n\u0026ldquo;What can you do that others can\u0026rsquo;t?\u0026rdquo;\nThe recruiter is asking you to mow down your competition. Do not show mercy to your competition, make it very clear that you are the best. If you\u0026rsquo;ve worked on a project (discussed later), now is the time to talk about it. If you\u0026rsquo;re a software developer, you might say something like:\n\u0026ldquo;I saw your company used this Python package on GitHub, but that Python package is deprecated. I‚Äôve actually made a Python package that works the same but uses all the conventions that Python requires now. It‚Äôs also a little bit faster.\u0026rdquo;\nYou have to customise this per job. There aren\u0026rsquo;t many interview questions that you can\u0026rsquo;t customise per job. Also, you want to beat your components but don\u0026rsquo;t talk badly about them. Focus on your strengths, not your components\u0026rsquo; weaknesses.\nIf you haven\u0026rsquo;t completed a project, talk about what you\u0026rsquo;ve done in the past for other, but similar, companies. Make it sound like these past achievements are something that you can do for this company. An example might be:\n‚ÄúI turned a failing product from 30 sales a month to 10,000 a week, I want to sell as many of Product X as possible‚Äù.\nOr here‚Äôs another example:\n‚ÄúI will bring my unique vision to your company. I can see your company achieving X in the future, and I want to help you achieve this. I am experienced in A, B, C related to [company‚Äôs goals]. For example, I helped improve student retention rates at my previous college by over 45%. My marketing background, along with my ability to see potential future problems, will help you grow.‚Äù\n6. What‚Äôs your preferred management style? This question is just the interviewer wanting to know if you are going to get along together.\nThere‚Äôs 3 main steps to this question.\nDefine what good management is They obviously care about good management, so it‚Äôs important that you and the interviewer get on the same page about what good management is. Here‚Äôs an answer example answer:\n‚ÄúManagement style is hard to describe, but I think a good manager gives clear directions and stays hands-off but is ready and available to jump in and offer expertise or help when needed.‚Äù\n2. Add your own take Now say something that makes you unique. You want to stand out, not appear to be another sheep in the candidate pool. Here‚Äôs a good response for the second part from Forbes\n‚ÄúIn terms of what makes me unique, I go out of my way to fully understand a problem and try to solve it as best as I can before seeking help. When I do, it‚Äôs quite a short chat since I know exactly what the problem is, and I know what questions I need to ask in order to solve it.‚Äù\n3. Add an example Examples always work in interview answers. Back up what you‚Äôve said. Here‚Äôs an answer to this part:\n ‚ÄúI remember one project at [previous company name here] where I had to work on achieving X in 2 weeks. I worked tirelessly to make it the best it can be, but I came across a problem. I researched for hours on the problem itself before seeking help from my manager. Because of my research, I knew exactly what the problem was. A quick 2- or 3-minute chat with my manager fixed everything for me. I realised this problem may be experienced by more new employees, so I created a text document containing common problems and fixes which allowed our manager to work less on helping others and more on making sure goals are met on time.‚Äù\n 7. Where do you see yourself in five years‚Äô time? The recruiter is asking this question because they want to know if you plan to work there for a long time. Every employer expects you to work there for a very long time, even if it\u0026rsquo;s a small part time job.\nBrand loyalty is important here. Even if you don\u0026rsquo;t plan to work there forever, make it seem like it. You can say something along the lines of:\n‚ÄúI don‚Äôt know your company well enough, but I would like to think I would still be working here. In 5 years‚Äô time I would have liked to learnt enough to be able to train people in future roles.‚Äù\nWhat you want to do here is mix \u0026ldquo;I love your company and I want to work here forever\u0026rdquo; with \u0026ldquo;I\u0026rsquo;m quite ambitious and I would love to take on some bigger roles in my career\u0026rdquo;.\n8. How would you approach this job? This question is strange. It\u0026rsquo;s kind of a trick question. You will never completely know how a company works without working at that company. Don‚Äôt answer like you‚Äôre an expert on this but you do need to answer like you have a relatively good idea of what you‚Äôre doing.\nAn answer like this will work:\n‚ÄúWell, the best way to do this job won‚Äôt come clear to me until I start this job. But I‚Äôll start by getting to know my colleagues and team, listening, taking notes, building relationships, and helping people out where I can. After all that, I‚Äôll have a good idea of how to do this job in the best way possible. At my last job I did‚Ä¶‚Äù\nNotice the example again. Talk about how you best undertook your last job but don‚Äôt go on forever about it. You don\u0026rsquo;t need to answer every question with a long-winded story. Most interviews have time constraints, so don‚Äôt answer every question like you did with the first.\n9. What have you achieved in other roles? This is quite similar to question 3. This questions is giving you permission to toot your own horn, to show off. This is not the time to be humble. Talk about your proudest achievement at another role. This is highly personal, but an example of mine would be:\n‚ÄúMy role as Higher Education Vice President started off on a bad turn. There were supposed to be 5 student union officers, but only I wanted to do the job. Effectively leaving me in charge of the work of 5 people, all whilst the student union staff who work with us had left to go to another job.\nLuckily this was perfect for me, as I stepped up when no one else would. I travelled to every campus as much as possible to make sure all students were listened to. When a group of students came to me telling me that their course isn‚Äôt being properly funded, I demanded a meeting with the principle of East Kent College to fix this.\nAs well as this I repeatedly represented the students in a democratic way at both a local (Kent) way and in a national way. I was chosen to attend the National Union of Student‚Äôs National Conference, where I elected the next NUS officer team and chose to represent my college on a national scale.\nBy the end of the year the students were asked to fill out a survey about their time at college. Student union approval ratings were previously laying around 30%, with about 5 questions about the student‚Äôs union. By the time I finished, it laid around 90% with comments from students saying about how amazing it was for their problems to be fixed so easily.\nOn top of this, I received a letter from the Chief Executive President of Student Welfare saying that I was the best Student Union‚Äôs Officer ever and rewarding me with a ¬£50 Amazon voucher.\n\u0026quot;\nTalk about your achievements, talk about the statistics that back these achievements up. But make sure it‚Äôs in a story, humans really like stories. Make sure it‚Äôs about past achievements in previous roles and not current achievements, things that you are achieving right now.\n10. What did you like and dislike about your last job? When answering this question, you want to balance two things. On one hand, you don\u0026rsquo;t want to sound like a moaner who hated your last job. But you also want to be authentic. Since it\u0026rsquo;s easy to talk about what you liked about your last job, we\u0026rsquo;ll discuss how to talk about the negatives here.\nThe interviewer is asking you to say something negative about your last job. Don\u0026rsquo;t pretend there wasn\u0026rsquo;t anything negative, everyone doesn\u0026rsquo;t like something about their job. Even if it\u0026rsquo;s really small, be authentic and you\u0026rsquo;ll do fine.\nDon\u0026rsquo;t discuss people. This will make you come off as cruel or bad of heart. Discuss the circumstances or tasks you had.\nHere\u0026rsquo;s a good answer you can model your own answer on:\n‚ÄúI loved many things about my previous job. An environment where I was regularly challenged, amazing people and cool projects. But there was one thing I didn‚Äôt like. Expectations were sometimes unclear. I would complete a project with little to no guidelines and then told that parts of it were wrong. I‚Äôve since learned that communication is key here. If I don‚Äôt understand something, I need to ask my manager for help on what they want me to do. Two people can look at the same guidelines and draw vastly different conclusions as to what to do. I‚Äôll always be thankful for the learning opportunity at this company, as it helps me improve myself.‚Äù\nThis answer is good. It talks about a negative in your job and how you overcame it. The employer is trying to trick you up, by seeing if there is something negative about you. Give them what they want but talk about how you turned this negative into a positive.\n11. Tell me about a time you worked in a team You‚Äôre very likely going to work in a team, so the interviewer wants to know how good you are at team work.\nYou need to talk about an experience and weave it into a story. You need to talk about what you did and the problems your team overcame. Don\u0026rsquo;t badmouth your team, only talk well about them. And remember, the interview cares about your team. There\u0026rsquo;s no \u0026ldquo;I\u0026rdquo; in team, so don\u0026rsquo;t only talk about how you did everything in the team.\nThis is really personal and customised to you, so no examples from me here. You should form your own answers. Just make it a happy story, talk about a problem your team faced and how you overcame it.\n12. What do your co-workers say about you? If you have testimonials or reference letters, now is a good time to ask if you can show them. Never just pull out your phone or paper documents without asking if it\u0026rsquo;s okay.\nIf you don\u0026rsquo;t have testimonials, you need to talk about yourself from an outside perspective. An answer like this would work:\n\u0026ldquo;My colleagues have told me that I am extremely organized and excellent at time management. During one project, my team members praised me for developing and sticking to a timeline for all the phases of the project. (Give a brief summary of what the project was.) We ended up successfully completing it ahead of time, and it was a hit\u0026rdquo;\nNotice how we talked about a time in a team, and how we used a story to tell it. This is effective. Talking about what team members think about you is more authentic than talking about what you think people you only hang out with at lunch think about you.\n13. How do you deal with stress and failure? Don‚Äôt pretend like you‚Äôve never experienced stress. Talk about how you deal with stress and failure. This is highly personal so again customise this to you. My answer would be:\n‚ÄúI once was rejected by 5 universities. I had no idea what I would be doing come September.\nThis was a highly stressful time for me because I expected to get into at least one university. I went running, I took a few days off work and I decided on my options. I could either of been sad, moany and upset for the rest of that month or I could have manned up, accepted what had happened and decided on my next step. I chose the latter.‚Äù\n14. How much money do you want? As well as how to answer this question, I‚Äôm also going to show you how to increase your salary year on year.\nWhat If I told you that you can get ¬£25,000 by reciting a Shakespeare poem? You would say ‚ÄúSign me up!‚Äù. You‚Äôll memorise the entirety of that poem, knowing every single thing about it. Now, what If I told you that anyone can get this money by reciting a poem? You‚Äôll want to tell everyone you know. What if you told your friends and they said:\n‚ÄúWell‚Ä¶. I don‚Äôt like poetry. I don‚Äôt read books much either. That‚Äôs a ridiculous proposition. I‚Äôm an architect, not a poet. I don‚Äôt know the first thing about poetry.‚Äù\nSounds ridiculous. They‚Äôre giving up ¬£25,000 because they don‚Äôt want to recite poetry for a couple of minutes. This example is exactly like salary negotiation. You can make thousands, sometimes even hundreds of thousands by just spending a few minutes negotiating. You don‚Äôt need to be an expert or have studied it to negotiate. I‚Äôm going to walk you through everything to make sure you get a well-paying graduate job.\nQuestions on salary are difficult. Once you give a number, you lose. They know that‚Äôs your maximum, so don‚Äôt try and be the first one to give a number. The interviewer might ask:\n‚ÄúWhat‚Äôs your current salary?‚Äù\nWhich is just a trick to find out how much money you‚Äôre okay with. Here‚Äôs what a typical normal salary negotiation looks like:\n   Find job on recruitment site (e.g. Monster)\n   Send in a CV\n   Complete prior tests\n   Get an interview\n   Get asked how much you want to be paid\n   You answer\nAnd that‚Äôs it. You‚Äôre stuck there. You could be worth ¬£60k a year and if you answer with ‚Äú¬£20k‚Äù that‚Äôs it. That‚Äôs your salary now.\nHere‚Äôs what it looks like if you‚Äôve followed this book:\n   Once you have established yourself in your field, post an ‚ÄúI‚Äôm looking for a job‚Äù Tweet / LinkedIn post / any other site you use.\n   Loads of people message you, asking you to work at their companies or they can recommend you for company X.\n   While these people are working to get you hired at their company, you explore your options on recruitment sites. You find a few jobs you like the look of.\n   You reach out to friends that work at these companies and ask for recommendations (if you‚Äôre really interested in applying).\n   Your recruiter asks you how much money you want. You tell them ‚ÄúIt‚Äôll be good if we can come to a mutually fulfilling offer, what were you thinking?‚Äù\n   They reply back with X\nBoom. You got them. Once they say a number, they lose. The second you say a number you lose. Whoever says the number first is the loser. Let‚Äôs explore this some more, including what to do if they refuse to give the number first.\nYou should avoid questions such as ‚Äúhow much money do you want‚Äù. Don‚Äôt give them any numbers. If they ask one of these questions simply say:\n‚ÄúI‚Äôm not comfortable sharing that information at this point‚Äù\nAt some point in the process you achieve something which I describe as ‚ÄúYes, if‚Ä¶‚Äù rather than ‚ÄúNo, but‚Ä¶‚Äù. ‚ÄúYes, we want to work with you, if we can come to a mutually satisfactory offer,‚Äù which is distinguished from, ‚ÄúNo, we don‚Äôt want to work with you, but we might work with you if it turns out that you‚Äôre disgustingly cheap.‚Äù After you have agreement in principle that, ‚ÄúWe want you to work here. What‚Äôll it take to make that happen?‚Äù‚Ää‚Äî‚Ääthen and only then do you start negotiating.\nThis is really important. Only when everything else is said and done do you negotiate salary. You do not have a foot to stand on until this part. If you try to negotiate off the bat, you‚Äôll be thrown out. The more interviews, forms and tests you‚Äôve taken for the company the better. It costs thousands for a company to get you this far. Some people think that companies just put out adverts and that‚Äôs it, people apply and they get jobs filled quickly. This isn‚Äôt the truth.\nThe truth is that the company has already paid hundreds of thousands just to find applicants. They have to put out adverts, advertise on job boards (which costs money), hire people to write tests and interview questions, hire people to conduct interviews with you, hire people to double check that you can legally work at the company. Sometimes employers will pay you to travel there for an interview. Some employers can conduct as many as 16 interviews over a period of 12 months (Palantir does this for each applicant, not 16 total. 16 interviews for one applicant).\nIf you‚Äôre applying for a weapons company (BAE Systems) they have to pay to get you security clearance before you‚Äôre even allowed to show up on site for an interview.\nThe point I‚Äôm trying to make is that replacing candidates late in the process isn‚Äôt cheap. In fact, it‚Äôs incredibly expensive. If you ask for ¬£25,000 more when they‚Äôve spent ¬£100,000 just to get you to that final stage, they‚Äôre likely to say yes, as getting someone to that same stage costs too much.\nThe sunk cost fallacy is an important economic principle to think about here. If you‚Äôve spent ¬£5,000 on trying to fix a car and you haven‚Äôt fixed it yet, you‚Äôre more likely to carry on trying to fix that car rather than buy a new one due to the sunk cost fallacy. The same is for jobs. Once you get to the late stages, the company would rather close the deal than find someone new to replace you.\nDo not feel like you owe the company a favour because they have selected you. If the deal makes economic sense, everything will be fine. If not, they‚Äôll replace you. They hold no feelings for you, why should you hold feelings for them?\nWhen negotiating salary, try to get them to negotiate over email. It gives you time to think about what‚Äôs being said and time to reply. You also have concrete proof of a salary in case they try to trick you.\nIt never hurts to negotiate, statistics show that 87% of companies won‚Äôt pull a job offer if a candidate negotiate their salary (Why You?‚Ää‚Äî‚ÄäJames Reed).\nYou need to prepare for this question. You need to research what other employees are earning at this company. And what people with the same job title but at different companies are earning. You can use Google, Glassdoor, PayScale to find this information. The location of the job matters too and will affect salary.\nHave 3 numbers in your head. The perfect amount which is the highest amount possible for this job. The lowest amount, at which point you may as well walk away from the job offer and the medium amount, which is the middle of the 2.\nIf the company offers you stock options, don‚Äôt play around with that. Nothing beats cold hard salary. It‚Äôs very unlikely the company you work at is going to be the next Facebook. Try to convert the stock options into cash as soon as you can.\nWhen you get to the point of emailing the employer, ask ‚Äúwhat do you think I‚Äôm worth?‚Äù or ‚ÄúHow much were you thinking?‚Äù. The first person to give a solid number loses. You know how in Pawn Stars they always haggle down? That‚Äôs because the seller always gives the price first. They know that‚Äôs their maximum, so they try to save themselves money.\nOnce you give a number the employer will do exactly the same. They‚Äôll haggle down. If the employer gives a salary number first, you can haggle up. You‚Äôre in control.\nHowever, in the real world this probably isn‚Äôt going to happen. They‚Äôll likely offer you half of your highest maximum salary number. This is where you can haggle up. They‚Äôre allowed to haggle you down, so why don‚Äôt you haggle up?\nIf you have to fill out a form with the salary you want on it, make it as low as the form will allow you. Try ¬£1, that ought to give them a laugh.\nWhat if they object to your ‚Äúnever give a number‚Äù strategy with something like ‚ÄúI really need a number to move the process forward‚Äù?\nFirstly, they‚Äôre lying to you. They want you to compromise your negotiating position. You should answer with:\n‚ÄúI‚Äôm more concerned at the moment with talking to you about discovering whether we‚Äôre a mutual fit. If we‚Äôre a great fit, then I can be flexible on the numbers with you and you can be flexible on the numbers with me. If we‚Äôre not a great fit, then the numbers are ultimately irrelevant, because your company only hires the best and I only work at roles I would be the best at.‚Äù\nIf they object again, say:\n‚ÄúNo seriously, I‚Äôm more interested in if we‚Äôre a good mutual fit or not. Money is irrelevant if we‚Äôre not a mutual fit.‚Äù\nIf they call you out and say ‚ÄúGreat try at dodging, but seriously I need a number‚Äù there‚Äôs a myriad of ways to responded to this. If you‚Äôre in STEM you can just say:\n‚ÄúWell, I would hate to walk away from this company over this. Working at the company would have been great for both of us. But you know, I hear the hiring market is tight right now, would you like me to introduce you to other candidates? To save you a few months of you trying to find someone else for this position.‚Äù\nSTEM has a tight hiring market. It‚Äôs tough for companies to find the right employees. There‚Äôs more STEM positions to fill than there are employees to take them. You have the advantage here, not them.\nIf you‚Äôre not in STEM, you can say:\n‚ÄúWell, I‚Äôm looking for ¬£[The maximum salary you found out from earlier]‚Äù\nRemember what things have been said in the process. If they said ‚ÄúIt‚Äôs taken 6 months just to find someone to interview‚Äù during the interview, use this to your advantage. Say:\n‚ÄúI understand that this is a little more money than you might be thinking, but this is an opportunity to get this job position filled without delaying your company for 6 more months‚Äù.\nAlways put the company‚Äôs best interests first. Dale Carnegie‚Äôs How to Win Friends and Influence People talks about why people often don‚Äôt care about your problems. If you say ‚Äúwe‚Äù, and ‚Äúus‚Äù a lot, it opens their mind a lot more to a mutual problem.\nThere‚Äôs a story floating around about a man who had offers from Google, Apple, Airbnb and more. Over the course of a week, he pitted each company against each other. ‚ÄúHey Apple, Airbnb is offering me ¬£88,000 and your offer is ¬£80,000. I would like to work at Apple, but the offer from Airbnb is persuasive, what can you do about it?‚Äù. Eventually, he got a starting salary of $250,0007. Up from $120,000. Also, if you‚Äôre not in STEM, yes Silicon Valley salaries are crazy high. Bear in mind that the average rent is around $2500 a week though.\nWhat you have to keep in mind is that if you‚Äôre applying to Fortune 100 companies, they have so much money that an extra ¬£130,000 is peanuts. Apple is literally worth $1 trillion. ¬£130,000 is absolutely nothing to them. Don‚Äôt be afraid of negotiating.\n15. Show me your creativity This question can come out in many forms, but they all reference creativity.\nAlmost all employers look for creativity.\nCreativity does not have to be you painting a picture or creating a sculpture.\nYou might decide to create a Google Sheets document so everyone on your course knows all the deadline dates for course work.\nAs with all interview questions it‚Äôs important to provide examples here and I can‚Äôt tell you what examples to include as I don‚Äôt know you.\nHere‚Äôs a good answer from here:\n‚ÄúWhile working at SalesCompany, I developed a lead generalization email that generated an unheard of 37% response rate‚Ää‚Äî‚Ääwell above the previous record of 12%, using a friendly tone that made the email prepare casual and personally written, despite being a template.‚Äù\nHow to Ace an Interview - General Tips Change ‚Äúuhhhh‚Äù to ‚Äú ‚Äú Instead of saying ‚Äúuhhhh‚Äù and ‚Äúehhhhhh‚Äù just pause. Smile.\nAsk for a pause In Karate we have something called a Kata, which is like a dance of all the moves you‚Äôre supposed to know at your level. It‚Äôs perfectly okay that between moves you take a short pause, a little break to think about what your next move is but when you perform the next move you do it strongly and fast.\nThe same can be said for interviews. It‚Äôs perfectly okay to say\n‚ÄúSorry, I‚Äôm feeling a little nervous. Do you mind if I have a few seconds to myself, so I can calm down?‚Äù\nThe interviewer knows your nervous. The difference here is that you‚Äôve recognised this, and you‚Äôve done something to try to mitigate it. Most people who are interviewed are nervous and they never stop being nervous. They just talk and talk and talk and rush through everything.\nIn Karate if you rushed through your Kata it would be extremely ugly and convoluted. The same holds for interviews. Do not rush through questions. Don‚Äôt even worry about a time limit. If you‚Äôre calm and careful the interviewer will keep track of time.\nWhat to bring into the interview room Whatever they asked for, but preferably some qualfications, physical portfolios, a copy of your CV. Anything that may help you in the interview.\nQuestions to ask your interviewer After an interview you want to make sure to ask questions to seem intrigued. Normally you‚Äôll generate questions when talking to the interviewer but if you can‚Äôt think of any here are some useful questions to ask:\n‚ÄúWhat skills and experiences would make an ideal candidate?‚Äù This question makes the interviewer say out loud what they are looking for\n‚ÄúHow would you describe a typical day and week in this position?‚Äù This question is just making sure that you are a good match for the position.\n‚ÄúWhen can I expect to hear from you?‚Äù This question is handy to prevent your nerves from getting the better of you.\n‚ÄúDescribe the culture of the company.‚Äù This makes sure you are comfortable with the culture of the company.\n‚ÄúWhat do you like most about working for this company?‚Äù This lets you connect with the interviewer on a personal level.\n‚ÄúDo you have an email address so If I have any questions, I can follow up with you?‚Äù This question lets you send a thank you email after every interview.\nSmall Hints for Asking Questions Avoid questions that are about you like the salary, vacation time, work hours etc.\nAvoid questions that can be answered ‚Äúyes‚Äù or ‚Äúno‚Äù.\nLike most things in job hunting you‚Äôll want to customise these questions per company. The ones above are general but a good specific question about something the interviewer said will show you are listening.\nFollowing up after an interview After the interview, email the interviewer to say thank you. Try to mention something specific so the interview will remember you. It doesn‚Äôt even have to be an email. It can even be on a social network as long as it‚Äôs professional.\nHere‚Äôs a direct message I sent to someone after going to one of their talks:\n‚ÄúDear Cain, I was at your NatWest talk at the University of Liverpool. I really enjoyed it and I noticed you talked about API‚Äôs and Cryptocurrencies. Being a computer scientist, this really intrigued me! Do you happen to have any upcoming talks about fintech, cryptocurrencies, apps or maybe even personal brand development at NatWest?‚Äù\nHere‚Äôs a message my friend Kunal sent to someone as a follow up:\n‚ÄúHello, I was at the technology showcase event in Manchester today and found your input in the panel very interesting. I have already secured a place on the spring week in Radbroke and look forward to potentially working with you.\nMany thanks, Kunal Agarwala‚Äù\nThe key here is to let the person reading the follow up know where they know you from. If you had just interviewed with them, and you talked about your love for cats you can follow up with:\n‚ÄúHello! I‚Äôm Emma, you interviewed me today and we talked about cats. I just wanted to say thank you for this wonderful opportunity to have an interview at [companies name] and I look forward to potentially working with you.\nMany thanks,\nEmma Smith‚Äù\nInterview Red Flags Here are some red flags of interviews, because an interview is a two-way process. The employer is looking for the perfect employee, you‚Äôre looking for the perfect job:\n   Your interviewer is very late. A little late is okay, but very late? They obviously do not care about you.\n   Your interviewer disrespects members of staff in front of you If they disrespect other members of staff, they are likely going to disrespect you.\n   They haven‚Äôt read your CV, at all.\n   They speak negatively about past employees. Again, if they disrespect past employees, they‚Äôll likely disrespect you.\n   They swear and cuss. Not professional. At all.\n   The company has high turnover, they repeatedly lose employees. There‚Äôs a reason they lose a lot of employees.\n   The company‚Äôs online reviews are bad.\nIf any of these appear in the interview, you should think twice about working there.\nConclusion ‚òê Have you read your own CV?\n‚òê Have you filled out the tables in this chapter?\n‚òê Create your own answers to each interview question\n‚òê Remember to take it slowly\n‚òê Prepare questions to ask your interviewer\n‚òê Re-read the answers to the possible interview questions, really get to know them.\n‚òê Keep in mind the interview redflags\n‚òê Follow up after the interview\n Chapter 7 - Psychometric Tests All of these tests are strictly timed, usually giving you 30 minutes for 30 questions. Some companies do not care if you don‚Äôt complete the entire test in time. One recruiter even told me that they make them harder to put people under stress, and it‚Äôs not expected for applicants to complete the whole test on time.\nYour employability team may have access to online psychometric tests for you to take. The only way to get good at these tests, is to practice them. I‚Äôm not going to walk you through the top 15 most popular questions, as there are many tutorials found online that will allow you to do this.\nIf your employability team doesn‚Äôt offer psychometric tests, Google ‚Äúnumeracy test free‚Äù or ‚Äúverbal reasoning test free‚Äù to find some free ones online.\nIf you complete a psychometric test, it is common for them to make you complete another one during an assessment centre or interview. Sometimes, people get their friends to take the tests for them, so this is a way for them to be sure.\nThe way I practiced interviewing and psychometric tests is to apply for jobs that I had no interest in. For example, I applied for a technology internship at Tesco - even though I had no intention of actually taking it up. It was good practice. When I applied to companies I did want to work at, the interviews and psychometric tests were a lot easier since I had been through the process before.\nNumeracy Tests A numeracy test is a test designed to gauge how well your daily maths skills are and how well they can be applied to a company\u0026rsquo;s situation. The test will feature a variety of questions. Some questions will involve reading graphs and charts. Other questions will involve calculating percentages or anything you may be expected to do in the job.\nYou should use your own calculator. Make sure to know how your calculator works. Most calculators can do amazing things these days, such as calculating percentages easily. There are loads of calculator videos on YouTube to teach you how to use your calculator. I use a Casio FX-991ESPLUS, it\u0026rsquo;s one step down from a graphing calculator but without the cost.\nMake sure to use rough paper for calculations. These psychometric tests are usually done online, even if you\u0026rsquo;re in person. Bring a notebook along to any interviews to perform rough calculations.\nBefore you submit an answer, make sure to double check it. Sometimes the online test does not let you go back to a previous answer.\nAlso, check your units. These online tests can sometimes trick you, presenting you with data in one unit but asking for data in a different unit. Make sure you know exactly what you\u0026rsquo;re calculating.\nVerbal Reasoning In the verbal reasoning test, you have to read a paragraph and answer questions about that paragraph. You will normally be able to re-read the paragraph when answering the questions.\nWhen answering a verbal reasoning test, you should take every word literally. You are being asked a question and the answer is in the paragraph they have given you. Do not try to use outside knowledge to answer a question. The answer should be presented to you somewhere in the text.\nFor this reason, it is important to read the questions carefully. Since the answers are given to you in the text, quite often the questions will attempt to trick you.\nPractice makes perfect. You can find verbal reasoning tests by Googling \u0026ldquo;verbal reasoning test\u0026rdquo;.\nPersonality Test A personality test is used to gauge how you behave in different situations and to see if you will fit in with the company\u0026rsquo;s culture.\nA personality test is usually used to tell:\n   How you relate to other people\n   How you work with other people\n   How you work\n   Your motivation\n   Your preferences and attitudes\nThe good news is that in a personality test there isn\u0026rsquo;t a clear-cut right or wrong answer. Although there is no right or wrong answer, you can still fail a personality test.\nTo do well in this test you need to understand what your employer wants. Once you do, answer accordingly to how you think the perfect employee will answer.\nConclusion Practice the tests as much as you can in your own free time.\nChapter 8 - Presentations Presentations are difficult. People have written entire books about presentations. In this section, I\u0026rsquo;m going to try and distil some of the knowledge I have learnt from reading these books.\nPassion Presentations without passion is just bad noise. Passion is what makes your presentation exciting and enjoyable. Science shows that passion is contagious. You will inspire others if you are passionate. Passion is defined as something profoundly meaningful to you as an individual.\nIf you do not have passion, it will be hard to generate enthusiasm for your presentation. You want people to love your presentation. How can they love your presentation if you don‚Äôt love it?\nPeople who are passionate about their subject make better speakers. They inspire their audience in a way that non-passionate people can never do. Ralph Waldo Emerson once said:\n‚ÄúNothing great has ever been achieved without passion.‚Äù\nYou can have effective slides, amazing body language \u0026amp; a good message, but none of that matters if you aren‚Äôt passionate.\nYou can‚Äôt fake passion. Simon Sinek, a world renowned TED speaker once said:\n‚ÄúWhen it comes to presentations, I cheat. I never do a presentation on something I‚Äôm not passionate about.‚Äù\nStories Throughout this book, you‚Äôll have seen that stories make the world go around. No exception to presentations. Stories are the single, most effective way to reach people\u0026rsquo;s hearts and minds. You need to tell a story that emotionally connects you to your audience.\nYour audience has to trust you. If you tell a story with something too esoteric and disconnected from the lives of normal people, it‚Äôs harder for your audience to engage with you.\nThe audience has to seem like they are on your level. You need to relate to them somehow. Everyone has a family, tell a story about family. If you had to give a presentation on some monthly numbers for SanDisk, you can open up by talking about your love for SanDisk. You can talk about how all of your family photos are on SanDisk. Show them photos of your family on a SanDisk device. Talk about how you‚Äôll only trust SanDisk with your family photos.\nThe most effective way of delivering information is through the emotional; connection of a story.\nWhen you hear:\n‚ÄúThe smell of lavender‚Äù\nThe part of your brain associated with smell activates. When you hear:\n‚ÄúIt felt of velvet‚Äù\nThe part of your brain associated with touch activates. You can make people use their 7 senses by speaking.\nNo story is complete without villains or heroes. Make the story have at least one person the audience can root for.\nStart with the end in mind. It‚Äôs easy to think about what you want to talk about, but think about what you want the audience to get out of your presentation. Start with the end in mind, or start with a story. These are the most authenticate ways to create stories. To start with the end in mind, deconstruct the final argument you want to give at the end.\nSimon Sinek says don‚Äôt start with facts \u0026amp; figures. They don‚Äôt attract people‚Äôs attention, start with a story. Stories suck people in and get them to pay attention.\nAvoid overused buzzwords \u0026amp; clich√©s These are empty, meaningless. Overused metaphors are boring. In a study, overused metaphors like ‚Äúa rough day‚Äù are treated simply as words akin to ‚Äúand‚Äù, ‚Äúhello‚Äù and other boring words.\nConversation, not lecture You don‚Äôt want to sit at the front of a room and lecture to people, you want to have a conversation with the audience as if you were talking to a close friend. Practice relentlessly until you can give your presentation as if you were just having a normal conversation.\nThere are four elements to verbal delivery, these are:\n   Rate - The speed at which you speak.\n  Pitch - The pitch at which you speak.\n  Volume - How loud or quiet you are.\n  Pauses - How many pauses you use.\nWhen you‚Äôre forced to read a university textbook, it‚Äôs natural to highlight import sentences. The verbal equivalent is to alter one of the four elements of verbal delivery.\nPace is how fast or slowly you talk. The perfect pace to use is always slower than your normal conversation rate. You want to be slow. You want everyone to understand each word you say. If you speak at a normal conversational rate, it may bore some people.\nAlongside pace, the average TED talk length is 18 minutes. In fact, almost no TED talks are longer than 18 minutes. TED has found that 18 minutes is perfect, so it‚Äôs best to stick to this rule. If your presentation has to be more than 18 minutes - switch it up and add some breaks in. Get some audience participation going.\nYou should switch up the four elements of verbal delivery in order to make your presentation interesting.\nDon\u0026rsquo;t be monotone. You\u0026rsquo;ll bore the audience. A presentation is a form of entertainment, make sure to entertain the audience by acting excited and speaking well.\nPictures Pictures attract people. Pictures are worth a thousand words. Ever watched an Apple / TED presentation? You‚Äôll notice that they barely have any words. Try to disclude as much text as possible in replacement for pictures. If you‚Äôre talking at the same time as a wall of text on the presentation, the audience won‚Äôt know what to read / listen to and will get confused.\nAlthough don\u0026rsquo;t be afraid to write. If you need some text on there to convey a message, put some text on there.\nBody Language Gestures make a strong argument even stronger. The world‚Äôs most charismatic leaders use great body language.\nStudies have shown that complex thinkers use gestures and that the gestures give the audience confidence in the speaker. Some people go as far to say that talking to someone is 80% body language, 20% talking.\nThe simplest fix for a presentation lacking effective body language is to use hand gestures. Many presenters have their hands by their sides when they present. This bores people to death. You want to use hand gestures to help convey your messages.\nIn a study published in the Journal of Experimental Science, Bob Fennis and Marielle Seel performed ground-breaking studies on hand gestures in supermarkets. 71% of people were more likely to buy a box of sweets when a sales representative displayed an eager-nonverbal style rather than one who had a more reserved style. The sales representative who had better body language and gestures had a higher sales rate.\nDon‚Äôt go overboard with hand gestures. Your gestures should be natural, if you force it it‚Äôll come across as ill-conceived.\nMost speakers keep their hands in their pockets when talking. Don‚Äôt do this. It makes you appear uninteresting and boring.\nIt‚Äôs not enough to rehearse the words when you‚Äôre practicing. The presentation is 80% body language, 20% speaking. Why only practice the speaking part when your body language is 4 times more important? You need to stand up and practice the movements, the motions of speaking.\nNovelty Novelty and interesting are almost synonyms. Novelty is defined as:\n‚ÄúThe quality of being new, original, or unusual‚Äù\nReveal something new or unique. Or offer a new answer to an old problem to your audience. The human brain loves novelty much like how it loves stories.\nMartha Burns, a neuroscience professor at the North-western University says that learning something new activates the same area in your brain as gambling does. When dopamine is present in the brain, we tend to remember more than when it is not. Novelty creates this dopamine effect in your brain. Burns says that the easiest way to create dopamine in your audience is to make information new and exciting. The very definition of novelty.\nBe emotional If you connect with an audience‚Äôs emotional side, they will be more receptive and less distracted.\nStatistics Every single great presentation contains some kind of statistic. Whether that‚Äôs information being portrayed in a new light or just a plain old statistic. The best statistics are jaw-dropping statistics. Take this quote from a TED talk as an example:\n‚ÄúWhy are we ignoring the oceans? If you compare NASA‚Äôs annual budget to explore the heavens, that one-year budget will fund NOAA‚Äôs budget to explore the oceans for 1600 years.‚Äù\nPersuasion occurs when you reach a person‚Äôs head and heart. Make numbers meaningful. Don‚Äôt just give them out as dull numbers, put life into them.\nDon‚Äôt be too serious Humans love humour. Don‚Äôt take your subject too seriously and learn to make a joke now and again. When we meet people with good humour, we are more likely to attribute other desirable traits to them - such as being smart or being beautiful. By being funny, it‚Äôs more likely that your audience will trust you.\nMost laughs in a presentation come from the audience relating to the speaker through a story. If something happened to you and you found it humorous, there‚Äôs a good chance that others will also find it funny.\nFlow Your presentation slides need to flow from one another like the sea flows into rivers ‚Äì natural. You don‚Äôt find many people marking the exact spot where the sea becomes a river, because it‚Äôs natural and flows well. Your presentation slides need to flow just as well.\nStanding Do not stand in front of the screen when presenting. Stand away from the screen. Your presentation shouldn‚Äôt have so much text and images that you need to physically point to them.\nThe rule of 3 states that a list of 3 things is more interesting than a list of 2 things. Leverage this to engage your audience. A presentation is all about engaging and entertaining your audience. By limiting slides to a maximum of 3 items you limit the need to physically point at your slides.\nFeel free to repeat points. You can use the rule of three to repeat a point twice or 3 times or to add humour to your presentation. As an example, a presentation slide could look to answer the question \u0026ldquo;What\u0026rsquo;s the most popular way people prepare to present?\u0026rdquo;\nTemplates templates templates Templates are what makes the world go around. Use a template. Templates can be leveraged to create nice looking presentations in a short period of time.\nPracticing your presentation Your presentation, although it looks amazing on your laptop, may look horrible on a larger screen. If you do not have access to a larger screen to test, use high quality images and graphics. Images ending in the \u0026ldquo;.png\u0026rdquo; file extension are high quality and can scale well.\nYou can become amazing at presentations by practicing. No one starts out naturally good at anything, with some practice you can be in the top 10% of presenters. In many cities around the United Kingdom there are presentation practice groups. I recommend finding one of these groups by Googling it. If you don\u0026rsquo;t want to go to one of these events you can practice at home but try to make sure people are watching, you.\nThe most important key to public speaking is confidence. You can only build confidence by publicly speaking, not by reading a book on it. Your first presentations may not be the best, but with practice and time you\u0026rsquo;ll get so much better.\nAlways record your presentations if you can and look back on them later on, correcting any issues and mistakes you may have had. Keep a log / diary of all the presentations you‚Äôve done and how you can improve. Self-improvement is the only improvement that matters. If you constantly seek to improve yourself, nothing can stop you.\n\u0026ldquo;If you are not willing to learn, no one can help you. If you\u0026rsquo;re willing to learn, no one can stop you.\u0026rdquo;\nKnow your audience before you create a presentation. You have to customise your presentation to your audience. Customisation. The number one key to anything in this book is customisation.\nIf you\u0026rsquo;re talking to a very technical audience than a technical presentation will be good. If you\u0026rsquo;re talking to a non-technical audience then it won\u0026rsquo;t go so well.\nThink about what idea do you want people to leave your presentation with. Your presentation should present one solid idea distilled through many slides. It can answer a question, it can present a question, it can give a new mental model. Once you understand the purpose of the presentation you can begin to tailor it and improve it.\nHumour in the presentation is amazing. Your job is to distil an idea into the audience in an entertaining fashion. Humour helps you do this, and it keeps the audience engaged. No one likes being forced to listen / watch a boring presentation.\nConclusion Next time you have to create a presentation, re-read this chapter and apply some of these rules. Practice it, a lot. You‚Äôll get better the more you do presentations.\n Chapter 9 - Projects Projects are vital to your university life. No one cares about your university degree, unless you get less than a 2:1. If you get a 2:1 or a first, congratulations. You‚Äôre just like every other person that has applied to the job. Because of this, the company doesn‚Äôt care.\nDon‚Äôt get me wrong, if you have less than a 2:1 then most large companies will just push you aside. If you do get a 2:1 or above, the companies don‚Äôt care but will still give you a chance. It‚Äôs mean, right? Because your university degree doesn‚Äôt matter, you need to differentiate yourself. Thousands of other applicants all have the same degree, what do you have that others do not?\nProjects are what will make you stand out. Whether it‚Äôs a project in an internship or projects you‚Äôve taken on outside of university. Internships and projects in this day and age are just as necessary as a university degree to get a good job.\nIf you‚Äôre a coder or designer, congratulations! All you need to do is design / code things in your spare time. That‚Äôs it. Just pick problems and fix them, design things. In fact, if you‚Äôre doing any technical degree, I would argue that you could easily do the technicalities in your spare time. Are you a chemist? You can start a YouTube channel about chemistry. If you‚Äôre an engineer, just engineer things outside of your degree.\nWhen in doubt, create content around your subject. Sure, sometimes you‚Äôre an engineer of oil rigs. You can‚Äôt just build an oil rig in your spare time. But what you can do is teach others, create content about oil rigs.\nIf you‚Äôre doing a Bachelor of Arts, create things. Content creation is one of the easiest projects you can do and will make you stand out. Companies want to hire people who are so passionate about their subject that some of their free time is spent in the subject, rather than someone who only goes to university and that‚Äôs it.\nIf no one else is creating content for your subject, perfect! No competition. You‚Äôll look even more amazing when you graduate. Don‚Äôt be afraid to try new things. Failure is what it‚Äôs called when you give up. If you never give up, you never fail. Learn from your mistakes and make great content.\nPreprojects A preproject is a project you work on prior to working at the company you have applied for. The project benefits the company. Let‚Äôs see an example.\nThere\u0026rsquo;s an engineer called Nina who wanted to work at Airbnb. She created Nina4AirBnB.com to display what Airbnb are doing wrong and how they can improve it. Nina also talked about emerging markets such as introducing Airbnb into Dubai.\nBecause Nina had worked on this pre-project, she got an interview straight away. A pre-project takes time, research and dedication, but what better way to show your interest in a company than providing this for free? Once you\u0026rsquo;ve made a pre-project, you\u0026rsquo;re almost guaranteed an interview.\nThe difference between you and everyone else applying is not much. Some of you may have gotten better grades, others may have interesting hobbies. But you\u0026rsquo;re all graduate university students, you need a way to stand out. If you complete a pre-project, not only will you stand out, but you\u0026rsquo;ll be one of the only people being interviewed who has worked on the company.\nA pre-project will get you noticed, will make you unique and will get your foot in the door. At YCombinator‚Äôs Startup school they talk about how all employees must be passionate and dedicated to the business. It is rumoured that at Airbnb they ask the question ‚ÄúIf you only have 1 year to live, would you still work here?‚Äù to see how passionate someone is about their cause. You can represent how passionate you are about a company‚Äôs cause by working on a pre-project.\nPre-projects don\u0026rsquo;t only work for a technical role, they can work for any business that has projects. And all businesses have projects.\nAs an example, you wanted to work at an amusement park like Thorpe Park. You can research and suggest an event for them based on your research. As an example, you could suggest that around Easter time they create an Easter event, like Fright Nights. Of course, you\u0026rsquo;ll be a lot more creative than I am.\nTo create a pre-project, you need to understand what the company can do better. Can they expand into emerging markets? Is their website accessible? How can this website cater to a younger audience? Once you know what they can do better, you can begin to work on the pre-project.\nThe exact style and method you use for this project depends on what you are aiming to achieve. Make sure the document is divided up into sections and each section contains a goal. For example, to appeal to a younger audience you can have this section:\n‚ÄúOpen a Snapchat account and regularly use it. 80% of millennials have a Snapchat account and thus this is a good platform to communicate with the younger generation.‚Äù\nIf you do write something like this, make sure you write an \u0026ldquo;engagement plan\u0026rdquo;. How you plan on growing the Snapchat account, how you\u0026rsquo;ll engage with people directly through it. I know these sucks, since everyone our age knows Snapchat but older people like having plans for everything to do with social media.\nOnce you\u0026rsquo;ve written a section, clearly define how you are the right person for this job. For example:\n‚ÄúNot only do I regularly use Snapchat, but I\u0026rsquo;ve used Snapchat professionally for a business before.‚Äù\nThe idea is to not only display what you think they can do better, how they can do better, but to show that you are the person to execute these things. If you do not show you are the right person for the job, they\u0026rsquo;ll simply take your plan and give it to someone else.\nIt\u0026rsquo;s all well and good creating a pre-project, but how are you going to get people to see your project? If no one sees it, then it would never have mattered. Nina created her website using Wix, which is a website designed to easily create an online website. You can use Squarespace, Wordpress or plain old HTML \u0026amp; CSS to build a website. There are many, many guides out there on how to build your own website, so that won\u0026rsquo;t be covered here. Just understand that creating a website can be as easy as creating a PowerPoint presentation.\nIf you don\u0026rsquo;t want to create a website, you can create a PDF document or presentation to show off. It won\u0026rsquo;t look as good as a website does, but it\u0026rsquo;ll get the job done.\nOnce you\u0026rsquo;ve created a nice website or document to show, you need to find the right people or person to show it to.\nLog into your LinkedIn profile and search for the company you want to work for. Click on \u0026ldquo;connections\u0026rdquo; in the tab and select \u0026ldquo;first and second connections\u0026rdquo;. This will show you all your connections at the company, as well as connections of connections at the company. Go through the search and look for people in the appropriate department. If you found some cyber security bugs in their website, look for someone on their cyber security / networking team.\nIf you can\u0026rsquo;t find anyone on LinkedIn, not to worry. Find an online forum about that company by searching \u0026ldquo;[company] forum\u0026rdquo;. Try to find a subreddit for the company if this doesn\u0026rsquo;t work.\nIf you can\u0026rsquo;t find any subreddits or forums, find an email address. Every company has some sort of email address you can send email to.\nOnce you\u0026rsquo;ve found the person / place to target, here\u0026rsquo;s how you want to write it out. You\u0026rsquo;ll want to explain who you are, what you\u0026rsquo;ve done, and tell them to pass it on if they aren\u0026rsquo;t the right person.\nHere\u0026rsquo;s an example:\n‚ÄúDear Chris, I‚Äôve seen that Bank of America‚Äôs website isn‚Äôt accessible by everyone. I‚Äôve redesigned it and written about it here [link here]. I would be grateful if you or someone you know could have a read and improve Bank of America‚Äôs website. Kind regards, Brandon‚Äù\nIf you\u0026rsquo;re posting into a forum, you can write:\n‚ÄúHey all! I really want to work for [company]. I\u0026rsquo;ve noticed some things about [company] and written up an improvement proposal here. What do you think?‚Äù\nThe important thing here is that in the first one, don\u0026rsquo;t ask for a job position directly from the person. In How to Win Friends and Influence People, Carnegie talks about never directly asking someone for something but making them think about it first. The idea is to talk to them, to make them friends with you. Once you\u0026rsquo;ve built up this position you may be offered a job, if not, you can ask. But never out-right ask for a job as your first message.\nYou want them to think that they decided to hire you on their own merit, not based off of something that you have said or done.\nConclusion ‚òê Decide on what projects you\u0026rsquo;re going to create\n‚òê Work on those projects\n‚òê Share those projects\n‚òê Repeat\n Chapter 10 - Networking \u0026amp; Career Fairs Career Fairs. If you‚Äôre a university student, it is likely this word has been shoved down your throat since the October you arrived. Truth is, career fairs aren‚Äôt anything like how you imagined them. Some universities like to present career fairs as a way to get a job for graduation. Truth is, a careers fair is just a giant advertisement for hundreds of companies. No company will give you a job at a careers fair, instead they‚Äôll redirect you to their website, so you can apply.\nWhat is the point of a careers fair then? Networking. Sure, you may not get a job directly from a careers fair, but meeting people \u0026amp; networking - that‚Äôs the reason you go. Your net worth is your network. Make friends with the people working at these companies. Ask them for tips on applying.\nThe easiest way to get a job at a large company is by knowing someone on the inside and getting recommended. The easiest way to know someone on the inside is to attend careers fairs.\nShould I bring business cards? Some people bring business cards to career fairs, but truth is outside of Asia they‚Äôre not really much of a thing. You can have them, but it‚Äôs unlikely that people will care about them as much as they might in other parts of the world.\nHow do I research a company? Most career fairs will publish a list of companies that will be attending. Often, this is a form of advertisement to convince people to come as big companies will be there. Use this list to decide what companies are the most important for you to see.\nOnce you‚Äôve made this list, research the companies. Not extensive research like it‚Äôs an interview, just some general knowledge about them - enough to be able to make a conversation about the company. Preferably reading their Wikipedia page \u0026amp; checking the news for any mentions of them.\nShould I print out CVs? Print out copies of your CV and hand these out if companies don‚Äôt have a webpage / spreadsheet where they want you to input you email address. Often, smaller companies will prefer physical CVs to an online application.\nWhat else should I be doing beforehand? Practice your elevator pitch. An elevator pitch is a 30 second pitch designed to let someone roughly know what you‚Äôre about. It should feature your current positions, any important past positions and your general goals and life motto. Mine is:\n‚ÄúHi, I‚Äôm Brandon. Obsessive Learner and Problem Solver. Future world changer. Currently a computer science student at the University of Liverpool and a journalist for Hacker Noon. Previously Higher Education Vice President of the East Kent Group.‚Äù\nYour elevator pitch needs to be persuasive, it should make the listener interested in you. It should detail some skills you know and what your future goals are.\nAvoid rambling when giving an elevator pitch, don‚Äôt frown or speak monotonal and don‚Äôt restrict yourself to just one elevator pitch. You can have more than 1 depending on who you talk to.\nIt‚Äôs best to make your elevator pitch more orientated to the company than to yourself. That‚Äôs right customise it per company. By now, this phrase should be so ingrained in your mind you wake up in cold sweats at 4am screaming ‚ÄúCUSTOMISE IT PER COMPANY‚Äù.\nAs an example, from your research if you know a company is looking to implement artificial intelligence in their product you can approach the company at the careers fair and say ‚ÄúHey, my name‚Äôs Brandon. I study artificial intelligence and I‚Äôve implemented different forms of AI in companies before. I know your company is looking to implement AI too, I would love to help you.‚Äù\nYou need to find these problems that the company has, and you need to show them that you are the one that can solve this. If you can prove you are the right person for the job you will get further than someone who isn‚Äôt proving themselves.\nImagine 2 people: James \u0026amp; Eda.\nJames approaches the company and says:\n‚ÄúHi, my names James. I have a first-class degree in business management, I run a YouTube Channel with 250,000 subscribers and in my spare time I volunteer at Pilgrims hospice‚Äù.\nEda approaches with:\n‚ÄúHey, I‚Äôm Eda. I understand your company is having trouble getting younger people to sign on to your service. My dissertation was in marketing to young people and as a young person myself I know how to advertise to the new generations. Do you have any opportunities for someone like me to fix this problem at your company?‚Äù\nEda would be the one who got hired, as she made it more about the company than about herself.\nWhat to wear Dress smart. Imagine it‚Äôs like a job interview. Most of the other people at the careers fair will be dressed smartly.\nBest Questions to Ask at a Careers Fair The questions to ask can either be generic or tailored to the industry (which usually impresses recruiters but requires prior commercial awareness).\nSome common generic questions to ask are:\n   Where do you see yourself in 5 years‚Äô time? This forces the recruiter to talk about themselves and people love talking about themselves.\n   What are some of the interesting projects you are working on right now?\n   What are the challenges facing the company?\nGeneral Tips At the very end of every conversation always ask, ‚Äúcan I contact you with further questions, do you have a business card?‚Äù and if they don‚Äôt write down their name, add their LinkedIn and add a customised message to the add so they know who you are.\nConclusion ‚òê Know who will be at the careers fair\n‚òê Pick a small handful of companies you want to get into\n‚òê Become friends with the people running the stalls for these companies\n‚òê Ask lots of questions\n‚òê Follow up with the friends you\u0026rsquo;ve made\nResources Note: All links to Amazon in this section are Amazon Associate links. I will get a very small portion of what you pay if you use these links, at no extra cost to you.\nCracking the Coding Interview https://amzn.to/2vJcq5b\nCracking the Coding Interview is a monstrous 900-page books on everything you could ever want to know about coding interviews. It‚Äôs written by a recruiter for Amazon, Google, Microsoft, Apple. It features 200+ coding problems and walks you through the process for applying to the major tech companies.\nWhy you? 101 interview questions you‚Äôll never fear again https://amzn.to/2OP1wDP\nThis book is written by Reed, who are a recruitment company. The 15 interview questions laid out in this book are answered more completely in this book by Reed.\nCrushing it! https://amzn.to/2nmFTyd\nGood book on being a social media influence from social media influencer, Gary Vaynerchuk.\nHow to Win friends and influence people https://amzn.to/2AYnv8e\nIf you interact with other humans, you need this book. If you have ever talked to someone or seen another human, this book is what you need. Everybody should read this book. No exceptions.\n    https://www.themuse.com/advice/185-powerful-verbs-that-will-make-your-resume-awesome accessed at 07/08/2018.‚Ü©\n  Only if you must be a certain age for the job, such as selling alcohol.‚Ü©\n  Unless it is required for the job E.G eye test for commercial driving.‚Ü©\n  Only if there are requirements of the job that cannot be met with reasonable adjustments or the recruiter is asking to find out how to support you during the process. An employer is allowed to treat a disabled person more favourably than a non disabled person, so it may be best to put this down in some cases. Source: https://www.gov.uk/employer-preventing-discrimination/recruitment[‚Ü©](#fnref4)\n  An employer is allowed to choose someone who is under-represented such as Women in Tech over someone who is not under-represented, so it may be best to put this down if it helps your application. Source: https://www.gov.uk/employer-preventing-discrimination/recruitment[‚Ü©](#fnref5)\n  https://blog.twitter.com/official/en_us/a/2014/what-fuels-a-tweets-engagement.html[‚Ü©](#fnref6)\n  https://haseebq.com/farewell-app-academy-hello-airbnb-part-ii/[‚Ü©](#fnref7)\n","permalink":"https://polymath.cloud/employability-skills/","summary":"This is a book I wrote on job applications. It‚Äôs now available for free right here, with no catches. Seriously. You do not have to buy anything or sign up for anything. This is the entire book, for free, with 0 content taken away and 0 added. It\u0026rsquo;s really long. If you want the convenience of flipping through pages or having a nice table of contents, buy the book below üòÅ","title":"How To Get Any Job You Want - The Definitive Guide To Employability Skills (2019)"},{"content":"Abstract Reinforcement learning has traditionally been a dull topic to learn, especially for students who may not understand programming. With this dissertation, it is shown that reinforcement learning can be joyous to learn, and easier than some might have suspected.\nThis dissertation shows a framework for teaching reinforcement learning to key stage 3 school students. Using Python to implement reinforcement learning, and using lessons based around the code.\nThe aim was that by teaching them a \u0026quot;hard\u0026quot; and \u0026quot;cool\u0026quot; computer science topics, the students would become engaged in the world of computer science.\nThis project implements a Q-learning reinforcement agent in a grid-world 2-dimensional maze to teach the students reinforcement learning. It also has lessons and exercises for the students, that tie in with the Q-learning agent to reinforce what the students can learn.\nIntroduction If students or teachers find a subject difficult, the chance that that subject is picked (for GCSE or A Levels) goes down substantially [@Ofqual]. Difficulty can come in many forms, whether it is:\n  Bad teaching.\n  Under specialisation of teachers.\n  However, the question will remain. How do we make reinforcement learning interesting? According to Zahorik [@doi:10.1086/461844] some methods include:\n  Novelty.\n  Emotional Appeal.\n  Group Work.\n  Computers.\n  \u0026quot;Lived experience\u0026quot; (practical knowledge).\n  Aims and Objectives This project created an engaging set of exercises involving (simulated) robots and reinforcement learning for key stage 3 students to learn from.\nThe objectives are:\n  Create an ASCII based grid-world reinforcement learning playground.\n  Implement a reinforcement learning framework in an existing Python based robot simulator.\n  Design an API for reinforcement learning.\n  Devise a set of challenge problems to be used with the simulator.\n  Design the learning exercises.\n  Gather feedback about the learning exercises and improve upon it.\n  Create an autonomously driving robot vehicle agent.\n  Key Literature and Background Reading Reinforcement Learning: An Introduction This book by Sutton \u0026amp; Barto [@sutton] was one of the most popular introductions to reinforcement learning. The book starts simple. Introduction, why reinforcement learning is needed, and early history of it.\nThe book then introduced us to reinforcement learning using the K-armed bandit. This is not a challenge in optimising the algorithm, it\u0026rsquo;s simply a problem to introduce us to the terminology of reinforcement learning and how we can conclude that this problem can be solved with reinforcement learning.\nThe book then took us through some paradigms we may know that can be considered reinforcement learning paradigms. Such as:\n  Dynamic Programming.\n  Finite Markov Decision Processes.\n  Monte Carlo Methods.\n  Before taking us into tabular (Q-Learning) based reinforcement learning.\nThe book ends with the psychology of reinforcement learning. We know the theory, and we know how to implement it, but how does this work with humans? According to Sutton \u0026amp; Barto [@Sutton]\n \u0026quot;Reinforcement learning is the closest to the kind of learning that humans\u0026quot;.\n If reinforcement learning was closet to that of humans, Simon \u0026amp; Barto shows us how humans learn using psychology and neuroscience.\nReinforcement learning is a type of learning that involves repeatedly (and often, failingly) doing things until the agent learns what moves return the highest (or lowest) rewards.\n{#fig:agentReward}\nThe agent takes an action. This action has some effect on the environment. If the agent can only see 30cm in front of it and it moves 5cm forward, the environment doesn\u0026rsquo;t change but the agent\u0026rsquo;s perception of the environment changes.\nThe agent might destroy, create, or move things in the environment.\nThis action returns an observation and a reward. The observation is what has happened to the agent and the environment. For example, if the agent moved 5cm forward, the agent can now see 5cm more than it previously could.\nThe reward is either a positive reward or a negative reward. As an example, the agent\u0026rsquo;s goal might be to search for rocks. If the agent sees a rock within 30cm of it now, the agent is rewarded.\nThe agent would then store this information into a Q-table. The Q-table answers the question: \u0026quot;When the environment is exactly this, and there are these moves available, this is the reward you will get\u0026quot;.\nHowever, there are 2 types of rewards. Seen above is the positive reward. The agent is positively reinforced by something. But a negative reward is also possible.\nAs an example of a negative reward, the agent could be in an environment with one straight line of light. The agent\u0026rsquo;s purpose is to avoid the light. If the agent moves into the light, the agent gets a negative reward.\nIt is unusual for a reward to be both positive and negative. It is either -1 and 0 or 0 and 1.\nThe agent uses this Q-learning table to make further decisions. However, we stumble upon the exploration vs. exploitation problem.\nExploitation here means that the agent exploits the Q-learning table to maximise its reward.\nLet\u0026rsquo;s say our agent learns to avoid the light by staying on the edge between light and darkness. Our agent realises if it goes into the light, it gains a negative reward. But if it stays between the two, it doesn\u0026rsquo;t gain a negative reward - but it also doesn\u0026rsquo;t gain anything positive.\nThe agent, since it exploits the Q-learning table, never learns that it can stay out of the light completely and get a much higher score than where it is.\nExploration, regardless of how much reward an action has, is important in this regard as it informs the learning of the agent - it maximises the agents learning.\nAlthough too much exploration and exploitation will no longer offset the value of exploration.\nThis can be solved by having the reward as a Boolean data type.\nDeep Learning Deep Learning by Goodfellow et all [@Goodfellow] is an introductory book to deep learning. While Reinforcement Learning by Sutton \u0026amp; Barto is an introduction to reinforcement learning, it assumes prerequisite knowledge of deep learning. More specifically, the mathematics involved in deep learning.\nGoodfellow et all start the book off with an introduction to applied mathematics.\n  Linear Algebra.\n  Probability and Information Theory.\n  Numerical Computation.\n  Machine Learning Basics.\n  Once the reader is familiar with the mathematics behind deep learning, Goodfellow et all introduce neural networks. Starting slowly with feed-forward networks and then eventually ends with convolutional networks and recurrent neural networks.\nThe final chapter is on the research, the more academically rigorous side of this book.\nThe book proved to be useful in providing the creator knowledge of the mathematics behind artificial intelligence.\nMIT Deep Learning While this project centred around reinforcement learning, most fundamentally, it was about creating a framework to teach reinforcement learning.\nFor the creator to understand the most effective methods to teach reinforcement learning, they have chosen to study MIT\u0026rsquo;s deep learning course [@MIT].\nThe reason why MIT was chosen was that they publish every lecture online for free. They are also an Ivy Leauge college, which means they pride themselves on their world-changing research.\nSome of the more important things the author learnt whilst watching the lectures were:\nTalk Slowly All of the professors in the lecture videos talked slowly, but not too slowly. They talked clearly, loudly, so everyone can hear.\nDifferent Forms of Media The professors used video, whiteboards, quizzes, live-programming and more. Anything that isn\u0026rsquo;t text on a plain background is appeared to be fair game for them to use.\nOne of the things the author wanted to involve in their teachings is talking over videos. The professor put on a video of a car learning to drive [@lex], and explains how it is learning. We were engaged in the video, and we learnt how it works.\nUsing Colour to Learn All of the mathematical formulae used by MIT were colour coded.\n{#fig:mitformula width=\u0026rdquo;\\textwidth\u0026rdquo; height=\u0026rdquo;\\textheight\u0026rdquo;}\nIn this lecture by Professor Amini [@Amini] the colours have meaning. The purple underline for the second half of the formula corresponds to the purple final grades matrix on the right.\nThe quotation under each part of the formula stating what that part does (\u0026quot;Actual\u0026quot;, \u0026quot;Predicted\u0026quot;). The use of the blue box at the bottom of the screen showing what the code is for that formula.\nCOMP335 The creator took the module COMP335 - \u0026quot;Communicating Computer Science\u0026quot;. [@COMP335]. This module aimed to enable the students to better teach computer science to key stage 3 students.\nThe creator specifically learnt these key points from the module:\nStudents Are Slow The idea of learning rates, which may seem simple to a university student, is not simple for younger students.\nEven the idea of a machine that is capable of learning like a human can be confusing to younger students.\nDr. Thomason has shown that even formulae, as simple as formulae may be, can still be confusing to a younger audience whose only exploration into formulae is Pythagoras\u0026rsquo;s Theorem.\nDo Not Forget Things We Take for Granted As a university student, the creator took for granted the idea that all schools will have Python installed. That they will have the resources to download packages, or install Python if is it not installed.\nThis is wasn\u0026rsquo;t the case. Some schools have restrictive downloading, some teachers may not even know how to install packages.\nDiscrete Mathematics with Applications This book by Epp [@epp] is typically a first-year university students introduction to discrete mathematics. The book served as a good pointer to not only explaining mathematics well but explaining how to teach well.\nLike MIT [@MIT], the book made heavy use of any form that isn\u0026rsquo;t plain text. Images, quotes, history tidbits, miniature tests, tables, and many, many more.\nThe book uses colour and syntax-highlighted code to get across how each formula works.\nDevelopment Process and Method The Agile Programming Metholdogy was used, more specifically SCRUM [@schwaber2002agile]. SCRUM allowed the creator to design the end program with the user in mind, using the user stories feature. Since it is agile, the creator had a working prototype early on in the development process which can acted as an ultimate fall back. See the risks \u0026amp; contingencies chapter for more information on this.\nThe project has to be easy to use for students. It would be unwise to build software using waterfall, because at the end the stduents may not understand how the software works and the project will be a failure. Agile methodology allows us to work towards good code that is easily understandable.\nThis is because if the project had failed entirely, the Waterfall method would not have provided any working prototypes to use to teach.\nThe tools the creator used were:\nGitHub GitHub was used as a version control system, making backups of the code and making it possible to revert to a previous version.\nThe GitHub Project board was used as a Kanban board to monitor the progress of the project. With 4 sections. ToDo, Testing, Implemented, and finally Issues.\nThe creator also made heavy use of GitHub actions, the continuous integration part of GitHub to automatically run tests and verify working code.\nPython The code s written entirely in Python 3.8, making use of small libraries to allow for ease of use for a school.\nNumPy The project required NumPy, which is used to perform calculations that are required in basic reinforcement learning such as the Q learning algorithm and maintaining the Q learning table.\nLocal backups Local backups of the code were regularly made on the creator\u0026rsquo;s machine and network-attached storage device.\nIDLE \u0026amp; Code Editor Some schools were not able to use a code editor and instead used IDLE - Python\u0026rsquo;s integrated development environment. The code was regularly tested against both an editor and IDLE.\nThe creator made a note that the biggest issue was that what worked on the development PC wouldn\u0026rsquo;t always work on the school PCs. They may not have the required packages, or they may not even have Python installed at all.\nThe software was developed on a separate virtual machine made specifically for the development of this project. On this machine, libraries such as NumPy were automatically installed. Each new install was vetted with the creator.\nIf the worst came to the worst during the demonstration of this project, the creator would be able to export the virtual machine and install it on the computers in the classrooms. Dr. Thomason had said that this was done before with Kali Linux but is not the preferred way to do things. However, it was still possible.\nData Sources No data sources were used for this project. However, potential data sources might be used by the students.\nThe maze program set out for the students can be altered, to such a degree that students may search online for mazes that will work with the project. They may download these alternative data sources and attempt to incorporate those into the program.\nHowever, no data sources were used by the creator of the project.\nEthical Considerations Here is a list of the ethical issues discussed between the creator and their supervisor.\nCombining 2 Modules Into 1 The creator combined 2 modules into 1. COMP335 Communicating Computer Science with COMP39x, this project. There were some ethical issues raised due to using the same work for 2 modules.\nAfter the creator discussed this with their supervisor, due to COMP335\u0026rsquo;s deadline of \u0026quot;finish a lesson plan by week 12\u0026quot; this would mean that the project would have to have a working prototype by week 12.\nBecause of this limitation by combining 2 modules the creator did more work than if I was to do each module separately, which made it ethically \u0026amp; morally okay.\nHow to Evaluate the Effectiveness of This Project The simplest way to evaluate the effectiveness of this project was by asking the students (who are children) what they think of it. However, this brings up a plethora of ethical issues with collecting data from children.\nThe easiest way to evaluate this project wasn\u0026rsquo;t through the children or the teachers. During the teaching sessions for COMP335 Dr. Thomason will evaluate the teaching. By using this dissertation project in the teaching, Dr. Thomason will partly mark the project (the activity) as well as the teaching.\nThroughout the year, the widening participation team at the department hosted events. Dr. Dennis, my supervisor, suggested it might be possible for the creator to bring the project to one of these.\nHowever, due to COVID-19 it wasn\u0026rsquo;t possible to teach, or attend any events. The evaluation chapter will go into more details.\nDesign The Grid World The Grid World was the environment in which most of the players experienced the exercises.\nThe grid world was a $\\alpha ;x; \\beta$ world. The grid world had walls, made of the number 0. The idea behind this was that the number 0 is physically wide, much wider than the number 1. Therefore, wideness equated to a wall and the number 1 equated to a corridor.\npython 0000000000000000 0111111111111110 0111111111111110 0000000000000000\nThe environment object created a new grid world (or use a previously generated one) for every run. An example of a simple grid world is:\npython 0000000000000000 X111111111111110 01111111111111Y0 0000000000000000\nWhere X is where the agent starts and Y is where the agent ends.\nThe creator then represented this world in a 2d array.\nIf the objective was to follow a light, the grid world might have looked like this:\npython 0000000000000000 X 0 \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;- 0000000000000000\nWhere the line is the light. The agent will then \u0026quot;explore\u0026quot; the world. The agent might decide to move to the right (forwards).\npython 0000000000000000 X 0 \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;- 0000000000000000\nThis did not return a reward, so the agent tries again. This time, it moves into the light.\npython 0000000000000000 0 X\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;- 0000000000000000\nThis returns a reward, so the agent knows it is doing the right thing.\nOf course, this is a very simple problem with only 2 lanes to choose from. A real-life problem might simulate the disparity of light. The light might not be a perfect line, it might have signs of light all over the place. Such as this:\npython 0000000000000000 \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;0 X============= 0000000000000000\nHere we used a double line (equals symbols) to represent the strength of the light. The light in the second lane is weaker, so it only used 1 line.\nWith a grid world like this, and teaching this to key stage 3 pupils, it is important to wisely choose the symbolic meaning of each item in the grid world so the students can effectively learn and understand what is happening on their screen. Abstract symbols will only make for confused students.\nThe reasoning behind 0 is that it is physically wide, like a wall. Whereas 1 is physically thin, representing a corridor.\nComponents of the System There were 2 separate modules to the system. Agent.py, and Maze.py.\n{#fig:api}\nAgent.py controlled the agent and what the agent does, as well as the Q-table. Maze.py controlled the maze, and decided on what was a legal move for the agent to take.\nEach task focussed on one part of the system, so the students effecitvely learnt how they integrate togeter. If the task called for a change to the rewards system, the student would explore Agent.py. If the task called for a change to the legal moveset or the maze itself, the students entered into Maze.py.\nBy seperating 2 distinct parts of the system this way, students saw how the 2 parts work with eachother.\nData Structures and Algorithms Arrays The most important datastructure used was multi-dimensional arrays, used for the Q-table.\nTo explain this datatructure, look at the below example.\npython 0: [0.5, 421, -1, False)], 1: [(1.0, 228, -1, False)], 2: [(1.0, 348, -1, False)], 3: [(1.0, 328, -1, False)], 4: [(1.0, 328, -10, False)], 5: [(1.0, 328, -10, False)]\nWhere the dictionary has the structure:\npython action: [(probability, nextstate, reward, done)]\nThis is an example of a rewards table in a multi-dimensional array.\nQ-Learning Q-learning is a reinforcement learning algorithm. The goal is to learn something which tells the agent what action to take under what circumstances. It does this using the reward table, as seen in the previous section.\nIt is the simplest of all reinforcement learning algorithms, as understood by [@Sutton] in their book. This is useful because a simpler algorithm will be exponentially simpler to teach to key stage 3 students.\nUser Interface There is no direct user interface for this project. It is a code library. However, the design of the code library will matter.\nAll the important variables were represented near the top of the file, clearly marked for the students to understand. Each function had full documentation, as well as the thought process behind why that function exists.\nHowever. the lessons themselves were designed intentionally well. Therefore this document details the design of the lessons, as they are what the user interfaced with when they used the project.\nExercise 1 The first exercise was designed to be the easiest. Given this code:\npython learningrate = 0.5\nThe user would change the learning rate to observe what will happen to how the agent acts on the maze.\nMore specifically, the learning goal of this lesson was to learn what the learning rate was, and see for themselves how the learning rate affected how the agent behaved in the environment.\nExercises Each exercise does not require knowledge of the previous lessons. This meant that the students could skip ahead without worrying about missing some vital information.\nEach exercise contained a learning goal, to maximise the students learning. The exercises contained succinct knowledge, with clearly marked Python code and line number references to enable the students to easily find the exact variables and functions they needed to change or observe.\nThe agent runs with an epoch of 1, meaning it is easy for a student to observe the changes in the terminal as they come in.\nFor more information on exercises, look at the implementation chapter where every exercise created is detailed.\nUML Python had no public or private classes which contradicted the Unified Modelling Language.\n{#fig:UML}\nThe environment and agent interact with each other and using a simple AI API (which is the files themselves, as they are objects and can be interacted with like an API) the tasks can be completed. The preferred method was to directly edit the classes themselves, so the students could get a direct feel of how the system works. But the API still exists.\nSimplification The code contains simple variables which can be changed before run-time to enable users to learn through real-life reinforcement learning. These variables can be changed:\n  The maze itself. Which is defined as self.maze. By changing self.maze, it will change the maze the agent learns on.\n  The agent\u0026rsquo;s starting location.\n  The allowed legal moves of the agent. In the default example, the agent can move up, down, left or right.\n  The goal of the maze. What does the agent touch to know it has reached the end of the maze?\n  The rewards table itself. It is possible to manually input into the rewards table.\n  Gamma. The value of the future reward. How much the agent values future rewards vs how much the agent values current rewards.\n  Learning rate. The speed at which the agent learns.\n  Maxepochs. How many epochs will the agent perform?\n  Explore. In Reinforcement Learning, it is a balance between exploratory rewards and exploitionary rewards. Setting this to 50, for example, would mean half the time the agent explores and the other half the agent exploits, taking the highest possible reward move.\n  AgentReward - how much reward the agent starts with. Traditionally 0.\n  PenaltyMoving - how much of a penalty does the agent receive for moving? This prevents the agent from going around in circles.\n  In the code, these variables were very clearly explained and were at the top of the code. This makes it easier for younger students to find the variables to play around with. Here is a copy of that code.\npython # Where does the agent start\u0026gt; self.start = (0, 0)\n# Where is the goal of the agent? # self.maze.getSizeOfMaze() sets # the agent goal to the very bottom right hand corner # Can use coordinates such as (15, 15) self.goal = self.maze.getSizeOfMaze()\n# The reward table the agent starts with. # You can manually insert rewards like: # self.rewardsTable = (1, 1): \u0026quot;State\u0026quot;: (1, 1), # \u0026quot;Action\u0026quot;: (0, 1), \u0026quot;Reward\u0026quot;: 0.75, # (0, 0): \u0026quot;State\u0026quot;: (0, 0), \u0026quot;Action\u0026quot;: (0, 1), \u0026quot;Reward\u0026quot;: 0.75 self.rewardsTable =\n# What actions can the agent take? self.possibleActions = \u0026quot;Up\u0026quot;: (1, 0), \u0026quot;Down\u0026quot;: (-1, 0), \u0026quot;Left\u0026quot;: (0, -1), \u0026quot;Right\u0026quot;: (0, 1)\n# How much the agent expects to gain from future value. self.gamma = 0.5\n# How fast can the agent learn? self.learningRate = 0.5\n# How many times will the agent complete # the maze before it stops? self.maxepochs = 1000\n# The probability that the agent will # explore on that round, # instead of exploiting the rewards table self.explore = 0.15\n# The agent\u0026rsquo;s current reward when it starts self.Agentreward = 0.00\n# The agents penalty for moving. Prevents # the agent from running around # in circles self.penaltyMoving = -0.05\nThe code was encapsulated in a class, so students could call the class in Python\u0026rsquo;s IDLE. As an example:\npython import Qagent agent = Qagent.agent()\nFrom here, it was possible to change the variables as simple as calling them in IDLE.\npython \u0026gt;\u0026gt;\u0026gt; agent.learningRate = 0.97\nAnd then calling the agent\u0026rsquo;s run() method.\nSince there are many epochs, and each epoch can have 10,000+ moves, it was unreasonable to assume the students can monitor the maze in real-time. It was also unreasonable for the students\u0026rsquo; computers to be able to display that many frames a second of a maze changing.\nTherefore, it was proposed that students either perform 1 epoch to monitor how the maze changes over time and thus how the agent will go in the wrong direction before the rewards table is fully fleshed out, or to look at the Q table and the successful route of each epoch.\nIf given as a presentation, it was recommended that the teacher uses the former method. The students being able to see that the agent is, in fact, dumb, and repeatedly goes the wrong way, but only finds the correct route after brute-forcing all possible combinations is an invaluable lesson.\nThe latter, watching the successful route of the maze, didn\u0026rsquo;t look nice on a low-resolution monitor. It was understandable that most schools do not have a high-resolution monitor, and especially those with dyslexia may not be have been able to tell the difference between edges of the maze or the route used. Therefore, it was expected that the latter is used more often than the former.\nDesign of the documentation For more advance students, merely playing with the variables may not be enough to learn. The more advance students may have wished to play around with the code itself, to understand how to build their own reinforcement learning agent. For that reason, almost all lines of the codebase were commented. Extensive documentation was given, not only in the form of comments but in the form of docstrings for each function.\nThe thought process behind that function and how it behaves as it does was also included. So not only do the students learn how a function behaves as it does, but also how they can develop the thought process to create their own functions for their own reinforcement learning agents.\nAs an example, take the documentation for the reward() function at figure 8.\nThe end goal of having such extensive documentation was to enable students of all levels the ability to learn from the code. The students starting at a lower level would have been able to read the documentation and understand how the function works and what its rule was in reinforcement learning. The students starting from a higher level will be able to see how the creator\u0026rsquo;s thought process solved the problems solved by the functions, and how they can integrate this own thought process into their own code to better solve problems.\nImplementation The implementation of this project was difficult. Not only did the creator have to wrestle with reinforcement learning, but they had to create lessons for key stage 3 students to learn from.\nAnd the code written by the creator would have to be simple enough for a key stage 3 student to manipulate and understand, for them to learn.\nUltimately, this proved many problems for the creator. This section on the implementation will detail the multiple problems the creator had with the implementation, as well as how this project was implemented.\nPython 2 vs Python 3 When the creator first started out writing the code for this project, they had to decide on what version of Python to use. Python 2 would more likely be universally used in schools, as it was much older. But Python 3 was the newest version of Python, and the creator believed that Python 3 would be better to teach.\nHowever, it is not down to the creator of this project to decide on what Python versions schools use. The creator cannot simply show up and demand Python 3 when the school has been teaching with Python 2 for so long. It was unreasonable to expect the school to install a newer version of Python too. Since on Windows, this can create compatibility problems if the Python versions aren\u0026rsquo;t properly sandboxed from each other.\nHowever, in late 2019 the Python Software Foundation, the overseeing body of Python, announced that they will officially sunset Python 2 on the 1st of December 2020 [@pycon].\nThe creator took this into account and realised that most teachers will likely choose to upgrade to the latest version of Python 3, as that will be the only supported version from 2020 onwards.\nHowever, the creator knows that what a teacher should do and what they are doing are 2 different things. The teacher may not have the resources or the time to manage the switch over and to upgrade all of their own teaching material in time.\nFor this reason, the creator worked hard to ensure Python2 compatibility as well as Python3 compatibility.\nHowever, it also depended on what version of Python 2 the schools were using. The latest version Python 2.7 worked fine, but any earlier versions that are no longer supported may not have worked.\nFor this reason, there were 3 options the teacher could have taken to ensure the lesson could continue.\nFirstly, the teacher could have installed Python 3 on their own work laptop and used a projector to project the program, and give a lecture on each task of the exercises. But this required the teacher to have a work laptop that they can install software on, and even have a projector. Not all schools will have this privilege.\nThe 2nd method was to manually teach the principles of reinforcement learning without the use of code. Simply, a lecture was given on learning rates, gamma, and so on.\nFinally, the 3rd option was to open an online Python 3 sandbox program. These programs allow any user to create, run, and test Python 3 applications on the web. What\u0026rsquo;s more is that these online sandboxes can install third-party software, such as NumPy which was required for this project.\nThe final option was a lot harder than it may seem to implement. To use these online code sandboxes the web browser would have to have been the latest update, allowing use of WebGL and more.\nBlack Black [@Anaya] was a Python formatter. Run Black on Python code and it will automatically format it according to PEP8 [@KennethReitz2016], the Python Style Guide. It was created and owned by the Python Software Foundation, the organisation behind the language.\nBy running the code through Black, it was guaranteed to look similar to other Blackend code, or any code that strictly follows PEP8. Because of this enhancement, the code is easier to be read to someone that has seen Blackened code before or even to someone that hasn\u0026rsquo;t heard of PEP8.\nExternal Packages There were many ways to install the external package NumPy, all of them are easy to do and required little resources. The NumPy installation was 20mb, and there are 4 methods mentioned in the documentation.\n  pip install NumPy\n  python setup.py install\n  pip install -r NumPy\n  run install.py\n  Pip was in the standard library for Python, so every Python installation would have Pip installed. And using Pip does not require administrator rights or a superuser account.\nSetup.py will automatically install NumPy. Setup.py is recommended by the Python Software Foundation to be packaged with all public releases to allow anyone to run the code.\npython from setuptools import setup\nsetup( name='Reinforcement Learning Agents\u0026rsquo;, version=\u0026rdquo;, packages=[\u0026quot;], url='https://github.com/Author/diss\u0026rsquo;, license=\u0026rdquo;, author='Author, authoremail=\u0026rdquo;, description=\u0026rdquo; installrequires=[\u0026lsquo;NumPy\u0026rsquo;] )\nInstall.py is the final option, a Python file that calls the command \u0026quot;pip install NumPy\u0026quot;. Below is the source code for install.py:\npython import sys sys.os(\u0026quot;pip install NumPy\u0026quot;)\nOn every version of Python, Pip was automatically installed. It does not require admin or superuser rights to run Pip. The NumPy module is only 20mb large, which is tiny in comparison to other modules. The hardest part about installing NumPy will be running the pip install script, hence 4 options were given to the user.\nRewards One of the most daunting tasks of this project was the implementation of a rewards system. It was simple to imagine that the Q algorithm would take care of all the learning, and while it did provide a large relief for the programmer, it was not completely up to scratch with how the rewards system should work.\n$$\\underbrace{\\text{New}Q(s,a)}-{\\scriptstyle\\text{New Q-Value}}=Q(s,a)+\\mkern-34mu\\underset{\\text{New Q-Value}}{\\underset{\\Bigl|}{\\alpha}}\\mkern-30mu[\\underbrace{R(s,a)}-{\\scriptstyle\\text{Reward}}+\\mkern-30mu\\underset{\\text{Discount rate}}{\\underset{\\Biggl|}{\\gamma}}\\mkern-75mu\\overbrace{\\max Q\u0026rsquo;(s\u0026rsquo;,a\u0026rsquo;)}^{\\scriptstyle\\substack{\\text{Maximum predicted reward, given} \\ \\text{new state and all possible actions}}}\\mkern-45mu-Q(s,a)]$$\nMore specifically, the largest problem the creator encountered was deciding on what the reward should be.\nPositive or Negative Rewards The agent has 2 options for how their reward progresses. Take the maze example. The agent gains a positive reward for reaching the goal, or the agent incurs a negative reward every action until it reaches the goal.\nIn the former, the agent is encouraged to find the goal, but it does not take into account the amount of time it takes. The agent gets there in the end. In the latter, the agent is encouraged to move faster to reach the end goal.\nHowever, we must take into account how students, especially younger students, understood a rewards system. In the traditional world, students get rewarded for the \u0026quot;good\u0026quot; things they do, and punished for the \u0026quot;bad\u0026quot; things they do.\nThe creator of the program decided that attempting to teach a new rewards system to students may be too confusing. Especially trying to explain how incurring a punishment every second was still a rewards system, as the connotation of reward meant good rewards.\nFor this purpose, the agent\u0026rsquo;s rewards are positive (more than 0), but the agent can incur penalties depending on if the agent has done something the creator does not wish it to do.\nThe agent reaches a positive reward for reaching the end goal, but the agent incurs a penalty every time it moves. This penalty encourages 2 things of the agent:\n  No senseless wandering.\n  To hasten the time it takes to find the goal.\n  It was possible for the agent to become stuck in an infinite loop if it never received a punishment for senseless wandering. And the punishment encourages the agent to move faster to the goal.\nHowever, on some occasions the agent decided to take the punishment as is and do nothing about it. It was possible for the agent to become stuck in an infinite loop, continually receiving negative rewards. It was not enough to merely give the agent a punishment, the agent had to learn to avoid the punishment.\nFor this reason, the \u0026quot;game over\u0026quot; variable was invented. This variable stated that when the agent should declare game over, and stop learning. The variable is there so the agent cannot get stuck in an infinite loop. If it does, we start the games afresh and retry until the agent learns. The game over variable is based on the agents own personal reward, not the reward from each square in the grid world maze.\nThe exact numbers chosen for these variables were randomly selected by the designer as being appropriate. It is expected that students will fiddle with these numbers in the tasks created.\nFinally, the agent incurs a further penalty if the agent re-visits a square it has already been to. This penalty is the largest penalty of all, in the hopes that the agent learns that visiting a place it has already been to is severely bad because it should find the route in one go, rather than having to double back on itself.\nThe Maze The maze class controlled the operation of the maze. It controlled how the agent moved around the maze, and what the maze itself was.\nThe maze itself was defined in a 2-dimensional array. In this array, the number 0 represented a wall (because 0 is physically wide, and looks closet to a wall) and the number 1 represents openness (because 1 looks like a corridor, a thin strip of openness).\nThe analogies were to help the students understand what each bit of the maze represented.\npython [ 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [ 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [ 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [ 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [ 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [ 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [ 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [ 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [ 1, 1, 1, 1, 1, 1, 1, 0, 1, 1]\nThe start location was defined by agent.startLocation, and the goal was defined by agent.goal.\nMovement of the Agent The agent chose exploratory or exploitatory moves. There was a 15% chance it would have picked an exploratory (random) move, but this number was expected to be changed by the students.\nIf the agent chose an exploratory move, it would pick a random legal move.\nIf the agent chose an exploiatory move, it would calculate the legal moves and work out which one has the highest reward to choose from.\nThe function getLegalMoves() calculated the legal moves of the agent. The maze got the current location of the agent, performed a move on those coordinates (for example, to go up is to add (1, 0) to the vector of the agent\u0026rsquo;s current coordinates) and then it would calculate whether that move was legal or not.\nA legal move needs to meet 3 conditions:\n  The new coordinates were not negative, as there is no negative plane on the 2-dimensional grid world.\n  The new coordinates are not physically outside of the 2-dimensional grid world.\n  The move was possible to do.\n  The creator made it impossible for the agent to leave the 2-dimensional grid world, by visiting coordinates that did not exist in the planes. For example, starting at (0, 0) and travelling up by (1, 0) would result in coordinates that do not exist in the grid world.\nThis function is called before the agent tries to move to determine what the legal moves are. This function meant that the agent cannot make an illegal move.\npython legalMoves = for move in self.moves: newCoords = self.vectorAddition(self.agentLocation, moves[move]) # checks to see if there is an illegal move negativeCoords = True if any(y \u0026lt; 0 for y in newCoords) else False\noutsideMap = True if any(y \u0026gt; len(self.maze[0]) - 1 for y in newCoords) else False\nillegalMove = True if negativeCoords + outsideMap == True else False\nif not illegalMove and newCoords != 0: legalMoves[move] = moves[move]\nVector Addition One of the problems the designer had with agent movement was vector addition. The coordinate system is based on vectors (x, y) where x is the latitude and y is the longitude. To move around on this vector-based coordinate system the agent had to add or take away other vectors depending on the appropriate action. For example, to move physically up by 1 the agent had to add (1, 0) to its current vector represented coordinates.\nBut, in Python adding 2 vectors together resulted in a vector representation that was unsatisfactory for this project. $$(0, 0) + (1, 1) = (0, 0, 1, 1)$$ Whereas the creator wanted the vector addition to being element-wise, as seen below: $$(0, 0) + (1, 1) = (1, 1)$$ To accomplish this, the designer created the function in figure 14. This function called operator.app on the 2 tuples (vectors), and then mapped this function over both vectors, eventually turning it back into a tuple (from a list).\npython def vectorAddition(self, tup1, tup2): return tuple(map(operator.add, tup1, tup2))\nPrinting of Data When the program runs, it prints data to the terminal. For example running the program for the first time and letting it run for a loops results in this:\n \u0026quot;The steps taken so far are [(0, 0), (0, 0), (1, 0), (2, 0), (1, 0), (0, 0)]\u0026quot;\n Here we can see the agent is repeatedly looping back on itself. As the agent learns, the steps it takes changes.\nThe agent also prints out the rewards table.\n \u0026quot;(0, 0): \u0026lsquo;Action\u0026rsquo;: 0, \u0026lsquo;Reward\u0026rsquo;: -0.075, \u0026lsquo;State\u0026rsquo;: (0, 0), (1, 0): \u0026lsquo;Action\u0026rsquo;: 0, \u0026lsquo;Reward\u0026rsquo;: -0.075, \u0026lsquo;State\u0026rsquo;: (1, 0), (2, 0): \u0026lsquo;Action\u0026rsquo;: 0, \u0026lsquo;Reward\u0026rsquo;: -0.075, \u0026lsquo;State\u0026rsquo;: (2, 0)\u0026quot;\n As the agent runs, the rewards table and taken steps change. Students have been able to follow the agent as it learns.\nIn the exercises and by default, the epochs of the agent are set very low so the students could observe the agent changing in finer detail. The program also, by default, sleeps for 1 second between every action. This enabled the students to read the print statements and figure out where the agent is going.\nGlobe Maze vs Flat Maze In some other programs replicating a maze solving algorithm [@5967320], the maze was built like a globe. That is, if the agent travelled north they would eventually end up on the southern side of the maze.\nWhereas in others, a flat maze was used [@Amini]. The agent can\u0026rsquo;t end up on the other side of the map by travelling outside of the border.\nIt was chosen to use a flat maze to represent the maze. This is because a 3-dimensional global maze represented in 2-dimensions might be too confusing for a student to worry about. The project was designed to help students understand reinforcement learning, not to help them understand how to transpose a 3-dimensional globe into a 2-dimensional flat space.\nIn some other mazes, the agent receives a harsh negative reward for trying to visit outside of the square. Logically, the author does not believe that a student should have to worry about the agent attempting to travel outside of the maze. To humans, the idea of walking backwards out of a maze and finding the end by walking around the maze, instead of through it would be cheating.\nWhile other creators decided to negatively punish the agent, the author deemed it to too much for the agent to attempt to even travel outside the maze. After all, the students in the classrooms themselves wouldn\u0026rsquo;t travel outside of a maze to try and beat it. Therefore, in getLegalMoves() it is impossible for the agent to even consider travelling outside of the maze.\nThe Legal Move Set Another problem the creator faced was \u0026quot;what moves should the agent be allowed to perform?\u0026quot;.\nOne option would be to allow the agent to move Left, Right, Up, and Down. Another would be to allow diagonals such as North-West, South-East, South-West, North-East.\nAnother option would be to disallow any upward movements, as the goal tended to be downwards. However, at the time the creator decided this didn\u0026rsquo;t make sense. What if the goal was moved? Similarly, what if we banned left movements but the goal was on the left-hand side but there was a wall right below the agent? Therefore, the creator stuck to the traditional up, down, left, and right movements.\nWhen deciding on diagonal movements or not, the creator had to take into account the simplicity of the program. The creator wanted to make the code as simple as possible to allow the students to focus on the reinforcement learning aspect of the project.\nIf the creator added in diagonal movements, the vector addition would have to change. One cannot simply add one vector to another to get a diagonal movement, the program would have to add at least 3 vectors to get to the right spot. Overcomplicating the code meaning it is harder for students to learn from.\nIn the end, the creator chose to use the normal move set of up, down, left, and right.\nCreation of the learning materials The project was not intended to be 100% code-based. More so it was intended to create learning material to teach reinforcement learning to students that use code as a means to teach.\nFor this reason, the majority of the project sits in designing an easy to understand code interface for students, as well as lessons that teach students reinforcement learning.\nThe Learning Materials Here is each part of the lesson that was created. It features a small explanation, along with a task. It was expected that the teacher would give a short presentation on the task, as well as setting everyone up to use the code. It was estimated to take 15 - 25 minutes to get everyone to use the code, and 10 - 20 minutes to explain what\u0026rsquo;s happening and why it\u0026rsquo;s happening. Hence why the tasks are short. Also, the creator of the project was tasked with creating a program with some example tasks to teach reinforcement learning, not lesson plans themselves.\nThe Lesson What is Reinforcement Learning? Reinforcement learning is similar to how we humans learn. When we want to learn how to open a jar, we repeatedly try to open it in many different ways. First clockwise, then anti-clockwise, maybe we\u0026rsquo;ll use a tea towel or our shirts to get a better grip. Eventually, after trial and error, we know how to open a jar.\nReinforcement learning is the same. The machine repeatedly tries one thing after another until it gets it right.\nFor example, if we have a maze where the machine has to go from one side to the other, the machine will bump and get lost millions of times before it eventually learns how to complete the maze and even the fastest way through the maze.\nWhat is an Agent? The agent is the little person that explores the maze! We traditionally call them agents, because we tell them to accomplish something and they do it. And also, universities prefer agents over \u0026quot;tiny computerised humans\u0026quot;.\nWhat is a Rewards Table? The way agents learn is that they store all the information they gather in a table. Specifically, the information gained from an agent is:\n  Where did the agent start?\n  What is the new location of the agent?\n  What is the reward of moving this way?\n  Take, for instance, the agent is at the start at (0, 0). If the agent moves right, that might give a reward of 0.2. If the agent moves down, it might give a reward of 0.5. The agent now knows the best move is to move down.\nThe agent has to write these things down. As humans, we also use memory to remember things. \u0026quot;This door opens inwards\u0026quot;, \u0026quot;to unlock the front door you have to push the lockdown and the door handle at the same time\u0026quot; and so on. The agent has a memory, just like us.\nTask 1 We\u0026rsquo;re going to change how fast the agent learns, and we\u0026rsquo;re going to explore what this will result in.\nThe learning rate is the speed at which the agent learns. Set it to 1.0, and the agent learns extremely fast. Set it to 0, and the agent doesn\u0026rsquo;t learn at all.\nThe learning rate can only be between 0 and 1, think of increments like 0.25, 0.7831 and so on.\nHowever, simply increasing it to 1 does not mean the agent finds the best route through the maze. Because the agent learns so fast, it might be rushing through the maze missing all the import steps to finding the fastest way through it.\nBut setting it too low such as 0.01 means the agent is very slow, and it will take a longer time for the program to complete.\nOpen the file \u0026lsquo;Qagent.py\u0026rsquo;, and find this part in the file (it\u0026rsquo;s on line 13):\n \u0026quot;# How fast can the agent learn? self.learningRate = 0.25\u0026quot;\n 1. Set the learning rate to 0.5.\nNow, run the file \u0026lsquo;maze.py\u0026rsquo; and observe the output. **Note: every time we want to run the agent, we have to run maze.py**\nLook at the path the agent took, and the rewards table. How big is the path? How small is the rewards table?\nPlay around with the learning rate. Set it to any number between 0 and 1, and see for yourself how changing the pace of learning the agent\u0026rsquo;s outputs are different.\nTask 2 We\u0026rsquo;re going to play around with the \u0026lsquo;self.explore\u0026rsquo; variable now.\nThe explore variable is a probability between 0 and 1 (where 0.15 is 15\nIn reinforcement learning, we have a trade-off of exploiting what we know or trying something different.\nTake, for instance, buttering bread.\nIf we butter bread like a circle, going clockwise around the bread it\u0026rsquo;s not very efficient. But if we never explore, we would never find the most efficient way to butter the bread.\nIf the agent only does what it knows, it will never find the most efficient route through the maze.\nThe exploratory variable means that every move the agent takes, it has a 15% chance to randomly select a move, regardless of whether or not it understands how rewarding the move is.\nFind the exploratory variable at line 37 of Qagent.\n \u0026quot;The probability that the agent will explore on that round, instead of exploiting the rewards table self.explore = 0.15\u0026quot;\n 1. Set the exploratory percentage to 100 (\u0026lsquo;self.explore = 1\u0026rsquo;) See how the agent has lost its memory? It has a memory, but it doesn\u0026rsquo;t use its memories! Every move it makes is random.\nWhat if we set explore to 0? Will the agent find the best route through the maze or not?\nTask 3 Now we\u0026rsquo;re going to understand the randomness aspect of exploratory. Because the agent explores, that means every time the agent attempts the maze will be different from the last time. Run your programs and have a look at the person next to you. See how they\u0026rsquo;re different routes? Different rewards? One of your agents is smarter than the other!\nBut, you might see a problem. There is only 1 route which is the fastest way through the maze. But if there are 1 route and every agent is slightly different because of the random explorations, how does it find the best route?\nThe answer is using epochs.\nEpoch is a fancy word for \u0026quot;time\u0026quot;. Specifically, we might tell the agent: \u0026gt; \u0026quot;Do this maze 10 billion times\u0026quot; If we make 2 agents do the maze 2 or 3 times, their answers will be completely different. But if we make the agents do the maze 10 billion times, they will converge on the correct answer - the fastest route through the maze!\nSet the epochs variable to a high number, such as \u0026lsquo;10000\u0026rsquo;. However! Your screen might go crazy, so try not to read every single line that comes out of the program.\nYou can find epochs on line 34 of Qagent.\n \u0026quot;How many times will the agent complete the maze before it stops? self.maxepochs = 1\u0026quot;\n Note: You will need to set maxepochs back to 1 for the rest of this tutorial.\nTask 4 Let\u0026rsquo;s talk about gamma!\nGamma is the value of the future reward. If Gamma is set to 1, the agent sees reaching the goal in 10 moves and reaching the goal in 1 move as the same value.\nIf gamma is set to 0, the agent values direct moves (what it\u0026rsquo;s doing on the next turn) more than it does in the future.\nWhen we humans try to solve a maze, we know where the exit is and we try to tend towards the exit. If the agent\u0026rsquo;s gamma was 0, the agent wouldn\u0026rsquo;t tend towards the exit. The agent would simply try to collect as much reward as possible until it accidentally stumbles upon the exit.\nFind gamma on line 31 of Qagent:\n \u0026quot;How much the agent expects to gain from future value. self.gamma = 0.5\u0026quot;\n 1. Set the gamma rate to 1. 2. Set the gamma rate to 0.\nSee how they differ?\nTask 5 Now, we\u0026rsquo;re going to work on punishing the agent. To prevent the agent from wandering around in circles, the agent takes a punishment everytime it moves.\nIf the punishment is too much, the agent gives up and we get a new agent to try (but with the same rewards table as the last agent).\nIncreasing the punishment means the agent gives up faster, but also means the agent is more encouraged to find the goal faster.\nToo low of a punishment and the agent will think \u0026quot;why bother?\u0026quot; and will reach the goal in a much slower method.\nFind this on line 43 of Qagent:\n \u0026quot;The agents penalty for moving. Prevents the agent from running around in circles self.penaltyMoving = -0.05\u0026quot;\n 1. Set the penalty to -1. 2. Set the penalty to 0.\nObserve the outputs.\nTask 6 This is a more advanced task, so be prepared!\nThe maze the agent uses is located in \u0026lsquo;maze.py\u0026rsquo; (line 12), specifically this is it:\n \u0026quot;self.maze = np.array([ [ 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [ 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [ 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [ 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [ 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [ 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [ 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [ 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [ 1, 1, 1, 1, 1, 1, 1, 0, 1, 1] ])\u0026quot;\n The 1 represents openness, a straight corridor for the agent. The 0\u0026rsquo;s represent a wall, something the agent can not pass.\nWhat if we make the goal impossible to reach? The goal is in the bottom right-hand corner.\n1. Change some of the 1\u0026rsquo;s to 0\u0026rsquo;s (walls) to prevent the agent from reaching the goal. What will happen then?\nPlay around with changing the layout of the maze and see how the agent reacts.\nTask 7 Now we\u0026rsquo;re going to change what moves the agent knows.\nOn line 28 of \u0026lsquo;Qagent.py\u0026rsquo; the agent defines the moveeset as:\n \u0026quot;self.possibleActions = \u0026quot;Up\u0026quot;: (1, 0), \u0026quot;Down\u0026quot;: (-1, 0), \u0026quot;Left\u0026quot;: (0, -1), \u0026quot;Right\u0026quot;: (0, 1)\u0026quot;\n The agent can move up, down, left, or right.\nIt does this using vector addition. On a 2 dimensional map, adding (1, 0) to our current coordinates (15, 15) means we would go up 1 square to (16, 15).\n1. Try to remove some moves. You can do this by deleting the entire dictionary entry. For example, to reduce Up do this:\n \u0026quot;self.possibleActions = \u0026quot;Down\u0026quot;: (-1, 0), \u0026quot;Left\u0026quot;: (0, -1), \u0026quot;Right\u0026quot;: (0, 1)\u0026quot;\n Don\u0026rsquo;t forget to remove the comma!\nTask 8 Now we\u0026rsquo;re going to change the agents start location. Currently, it starts at the top left (0, 0). But it can start anywhere!\nThe way the coordinates system works is (row, column). \u0026quot;Along the corridor, up the stairs\u0026quot;.\nFind the code on line 26 of \u0026lsquo;maze.py\u0026rsquo;:\n \u0026quot;self.agentLocation = (0, 0)\u0026quot;\n 1. Try setting the agent location to (5, 5) and seeing what the agent does! Does it walk to the top left again? Or go straight to the goal.\nTask 9 Change the goal.\nThe goal variable is located at line 21 of \u0026lsquo;Qagent.py\u0026rsquo;.\n \u0026quot;self.goal = self.maze.getSizeOfMaze()\u0026quot;\n 1. Change the goal to a location somewhere on the maze. For example, (15, 15) like so:\n \u0026quot;self.goal = (15, 15)\u0026quot;\n 2. If you set the goal and start location to the same place, what happens?\nTask 10 This is an advanced task. 1. Change how the agent learns\nSome things you may want to do: * Remove the penalty completely (by setting it to 0.0) * Remove the agent giving up when it is punished too much * Play with the learning rate * Play with the gamma rate\nTry to find the most optimal settings which result in the most optimal agent. Often, we would program a computer to automatically find the most optimal settings. But it is possible to deduct and use logic to work out roughly what the most optimal settings are.\nGoogle things you don\u0026rsquo;t understand such as \u0026quot;learning rate\u0026quot; or \u0026quot;gamma q learning\u0026quot; to get the answers you\u0026rsquo;re looking for.\nTesting and Evaluation Throughout the project, the creator used many means of testing to ensure the program was of high quality. Furthermore, the creator regularly asked for feedback to enhance the project.\nContinuous Integration Every time the code is committed to the master branch on GitHub, a GitHub action automatically tests the code. Firstly, for syntax compliance. Secondly, for unit testing. The syntax testing used was Black, and the testing module used was Pytest.\npython name: Python application\non: push: branches: [ master ] pullrequest: branches: [ master ]\njobs: build:\nruns-on: ubuntu-latest\nsteps: - uses: actions/checkout@v2 - name: Set up Python 3.8 uses: actions/setup-python@v1 with: python-version: 3.8 - name: Install dependencies run: | python -m pip install \u0026ndash;upgrade pip pip install black pytest if [ -f requirements.txt ]; then pip install -r requirements.txt; fi - name: Lint with black run: | # stop the build if there are Python # syntax errors or undefined names black . \u0026ndash;count \u0026ndash;select=E9,F63,F7,F82 \u0026ndash;show-source \u0026ndash;statistics # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide black . \u0026ndash;count \u0026ndash;exit-zero \u0026ndash;max-complexity=10 \u0026ndash;max-line-length=127 \u0026ndash;statistics - name: Test with pytest run: | pytest\nMore specifically, the GitHub action in figure 15 was executed.\nUnit Tests Because the project was based on reinforcement learning, the exact maze, outputs, rewards, and other variables will differ for every time the program was run. Thus, there are little unittests involved other than to make such the Q learning algorithm operates correctly and the program doesn\u0026rsquo;t break under pressure.\nThe testing software used was PyTest, rather than the standard library UnitTest. This was because:\n  PyTest required less code to create tests.\n  PyTest provided more information on the errors.\n  Although, the biggest benefit to PyTest was that it was the default testing suite in GitHub Actions.\nThe tests were written in the style of boundary testing. Where a test is written for one extreme, and then the other. For instance, the Q Learning Algorithm tests were written using negative numbers, extremely large numbers, and the number 0. See figure 16 for some of the tests used.\npython def test-q-algorithm-normal(): \u0026quot;\u0026quot;\u0026quot; Testing to see if the q algorithm operates correctly \u0026quot;\u0026quot;\u0026quot; q = Qagent.agent(m) result = q.qAlgorithm(0.54, 1, 0.67) assert result == 0.835\ndef test-q-algorithm-negative(): \u0026quot;\u0026quot;\u0026quot; Testing to see if it breaks on negative \u0026quot;\u0026quot;\u0026quot; q = Qagent.agent(m) result = q.qAlgorithm(-50000, 60, 0.9999999) assert result \u0026gt; 1\ndef test-q-algorithm-big(): \u0026quot;\u0026quot;\u0026quot; Testing to see if it breaks on large numbers \u0026quot;\u0026quot;\u0026quot; q = Qagent.agent(m) result = q.qAlgorithm(5000000000000000000 00000000000000000000000000000000, 5000000000000000 00000000000000000000000000000000000, 50000000000 0000000000000000000000000000000000000000) assert result \u0026gt; 1\ndef test-q-algorithm-zero(): \u0026quot;\u0026quot;\u0026quot; Testing to see if it breaks on 0 input \u0026quot;\u0026quot;\u0026quot; q = Qagent.agent(m) result = q.qAlgorithm(0, 0, 0) assert result == 0.0\nAt the time this test was run, PyTest outputted this:\npython .\u0026hellip; 4 passed in 0.09s\nWhere the four full stops represent each test as seen above passing.\nMore tests were written for the maze program. The maze class was responsible for creating the maze and deciding on what moves are legal. See figure 18 for the maze program\u0026rsquo;s tests.\npython def test-maze-movement(): \u0026quot;\u0026quot;\u0026quot; Testing the movement of the agent in the maze\u0026quot;\u0026quot;\u0026quot; m = maze.maze() # move to the right starting at 0,0 result = m.vectorAddition((0, 1), m.getAgentLocation())\nassert result == (0, 1)\ndef test-maze-movement-up(): \u0026quot;\u0026quot;\u0026quot; Testing the movement of the agent in the maze\u0026quot;\u0026quot;\u0026quot; m = maze.maze() # move to the right starting at 0,0 result = m.vectorAddition((1, 0), m.getAgentLocation())\nassert result == (1, 0)\ndef test-maze-movement-legal-moves(): \u0026quot;\u0026quot;\u0026quot; Does legal moves work?\u0026quot;\u0026quot;\u0026quot; m = maze.maze() # move to the right starting at 0,0 result = m.getLegalMoves()\nassert True if \u0026quot;Right\u0026quot; in result else False\npython test-maze.py ... test-program.py .\u0026hellip; 7 passed in 0.10s\nAll the tests ran successfully.\nContinuous Manual Testing After a new function was written, that function would be copied to Python\u0026rsquo;s IDLE, where it was evaluated. Take the function of element-wise vector addition. After the function was written, it was copied and pasted into a terminal and manually tested.\nThe function did not rely on any external libraries or code, it merely added 2 vectors element-wise and returned it. As such, the chance of this function containing future errors after testing was none, unless Python\u0026rsquo;s default operators changed drastically, which was unlikely in the near future.\nOther functions were also the same, where it was unfeasible to imagine that in the future they would break. Thus, no unit tests were written for these functions.\nAfter each function was added and integrated into the core code, the code was run. The programmer evaluated the code, making sure that the integration of the new function did not break any important parts of the code.\nIf the code did break, no major harm came to the already working code. The programmers utilised branches on GitHub, creating a new branch for each change to the code. This meant that the master branch was always fully tested and worked, whereas the other branches could be broken.\nOnce the programmer committed code to the master GitHub branch, the code was evaluated using the GitHub action. If GitHub failed that testing, it would email the creator to let them know.\nEvaluation Earlier in this projects life cycle, it had been planned that the project would be demonstrated to teachers in classrooms or even used in classes, and the creator would use this feedback to better the product.\nHowever, due to COVID-19, the creator couldn\u0026rsquo;t enter a classroom.\nTherefore, the creator opted to ask other people who work with children (who are around the same age as year 7\u0026rsquo;s to year 11\u0026rsquo;s).\nThe creator sent the program and the learning materials to these people. However, most of them weren\u0026rsquo;t in ICT and didn\u0026rsquo;t understand Python, or artificial intelligence.\nOne clear comment was that if the teacher had decided to google \u0026quot;gamma reinforcement learning\u0026quot;, the explanation given is that which would require a university degree to decipher. Because of this feedback, the creator tried to create a simpler explanation of some of the core concepts. So not only students can understand, but teaching staff may understand as well.\nThroughout this project, the creator spoke regularly with Dr. Dennis and Dr. Thomason, who were in the outreach program at the University of Liverpool for Computer Science.\nDr. Thomason\u0026rsquo;s most critical comment was that the project was too ambitious for a classroom. They stated that in a class, the creator can expect up to 20 minutes of solely installing the program, and without clear guidance, the students were likely not to learn. Thus it was needed for learning material to be created alongside, which specifies exactly what the students should do.\nAnother comment made by Dr. Dennis was that the students are all at different levels. It may be a GCSE Computer Science class, but some of the students will speed through the resources while others might spend the entire lesson on the first task. It proposed an age-old question, \u0026quot;what do we do about the difference in students\u0026rsquo; abilities?\u0026quot;.\nThe answer was to create many tasks, progressively getting harder with each task. The idea is that the first few tasks are easy, and can be used to encourage the slower students to get through them. While the last tasks are very difficult, which given the limited amount of time in a classroom should prove worthwhile to the faster students.\nAnother comment made that impacted the work of the creator was that reinforcement learning was simply too hard. The original idea was to teach students how to design an autonomous driving vehicle. Dr. Thomason told the creator that what may seem easy to a university student isn\u0026rsquo;t easy to a secondary school student. For this reason, the simplest task of them all is changing a variable and seeing how it affects the agent\u0026rsquo;s run.\nOverall, the creator would have liked to get the software in front of a classroom, to ask teachers directly and see how the students learn from it. But due to COVID-19, it simply wasn\u0026rsquo;t possible.\nBCS Project Criteria Practical and Analytical Skills This relates to BCS criteria:\n \u0026quot;An ability to apply practical and analytical skills gained during the degree programme.\u0026quot;\n This project is an AI system designed to be taught in schools. The creators\u0026rsquo; modules over their degree which relate to this project are:\n  Artificial Intelligence.\n  Advanced Artificial Intelligence.\n  Communicating Computer Science.\n  Software Engineering.\n  Software Engineering 2.\n  The skills gained from artificial intelligence were used to create a reinforcement learning agent. Without those modules, the creators understanding of artificial intelligence would have acted as an inhibitor for finishing this project.\nThe skills gained from communicating computer science were used to better design effective exercises for the students, as mentioned in the key literature and background reading.\nThe skills gained from software engineering helped the creator write better code, better in the sense that it runs faster but also better in the sense that users can read it, that it is tested, and it is generally good code.\nInnovation and creativity As Isaacson [@Isaacson] says in his book, The Innovators:\n \u0026quot;innovation comes from being able to stand at the intersection of art and science.\u0026quot;\n The project is scientific in the sense of creating a reinforcement learning agent. However, the intersection with art comes from creating a project to use it to teach key stage 3 students.\nOn the technical side, the innovation came from creating a Python implementation of a reinforcement learning agent using basic code, without relying too heavily on external libraries. In most examples, the code was written to only be understood by other programmers. Whereas the code for this project was written to be understood by anyone.\nSynthesis of Information This relates to BCS criteria:\n \u0026quot;Synthesis of information, ideas and practices to provide a quality solution together with an evaluation of that solution.\u0026quot;\n This project was created by Dr. Dennis to solve a real-world problem. When the creator took up this project, they read books such as [@Sutton] as discussed in Key Literature and Background Reading.\nThe creator took in this information and decided on what were the best parts to take from each resource. The maze problem from Sutton, the teaching skills from MIT and COMP335. The creator took all of this information and combined the best of it into one quality solution.\nThen, the creator critically evaluated this project in the Evaluation section. As well as continually evaluating it throughout the projects life cycle. The creator regularly sought guidance, asked for help, and watched as other people attempted to use the project to learn. Using this information, the creator continually improved the project until the end of its life cycle.\nReal World Need This relates to BCS criteria:\n \u0026quot;That your project meets a real need in a wider context\u0026quot;\n Dr. Dennis, the creator\u0026rsquo;s supervisor, created this project because of a gap in the market. More specifically, computer science taught in classrooms wasn\u0026rsquo;t fun, or approximately close to what computer scientists were working on at the time. Sorting algorithms such as bubble sort were taught for multiple lessons, as an example.\nDr. Dennis decided that reinforcement learning would be fun, as it is a current subject in artificial intelligence still being worked on, and can be explained easily to a younger student using analogies such as how that student learns.\nSelf-Manage a Significant Piece of Work This relates to the BCS criteria:\n \u0026quot;An ability to self-manage a significant piece of work.\u0026quot;\n Throughout this project, the creator regularly stuck to the Gantt chart to monitor how well they were doing and the time schedule of code. As well as the Gantt chart the creator planned for emergencies, any issues that might arise and took care of them accordingly.\nThis dissertation is one example of many that the creator can self-manage a significant piece of work.\nCritical Self-Evaluation of the Process At the start of the project, the creator went to work quickly. Having finished a prototype before the first month finished. The creator asked Dr. Thomason for support in creating the educational texts and even took up online classes to better learn how to teach this subject to the students.\nThe creator followed the Gantt chart originally made, and all was set to be well.\nUnfortunately, the creator suffered an illness in December that went on until late February or early March. During this time, the creator carried on coding but could not communicate effectively with their supervisor or the university.\nShortly after the creator became well again, COVID-19 stormed the world. Causing panic in the creator, and worry about what\u0026rsquo;s going to happen.\nUnfortunately, the creator did not succeed in all the original tasks of the dissertation. One of the original tasks was to implement this reinforcement learning agent into a small robot. This task failed, mainly due to the illness but partly due to COVID-19 not allowing the creator to physically pick up the small robot to try and implement it.\nIn the future, the creator will take extra care and will try to assume the worst - including a potential global pandemic. If the creator had been in a more communicative state during their December - February illness, they might have just avoided COVID-19 and may have been able to implement the agent into the small robot.\nThe creator, unfortunately, felt like they didn\u0026rsquo;t need to tell anyone what was wrong with them, which led to their supervisor and university becoming worried and asking if they were okay. The creator did not want to admit their own defeats, so they refused to communicate with the university from December to February.\nThe dissertation portion of the final year project was also delayed. The creator felt like they could create more tasks, more agents that could help aid the students. The creator felt bad that they couldn\u0026rsquo;t complete the small autonomous robot task, as it was impossible to pick up during COVID-19. Therefore, the creator, instead of spending time working on the dissertation, spent most of their time trying to create more tasks and improving the agents.\nWhat would have been a better choice would be to discuss with their supervisor what the best use of their time could be.\nOverall, the creator has learnt that to self-manage such a large project means that the creator should regularly communicate with those supporting them. Without that support in December - February, the creator was lost and this led to the failure of the mini robot car task.\nThe creator should have put their own health first, and then the university studies second. This would have no doubt caused the illness the creator to suffer from to have been reduced, and it would have let the creator continue to come back to work much sooner. The creator was scared that their supervisor wouldn\u0026rsquo;t allow them to look after themselves and they would have been forced to work full speed on their project. When in actual fact, looking at what has happened it seems more likely that the creator would have done more work and gotten back on track much quicker if they had been honest and open with those actively supporting the creator.\nIt would have been nice for the creator to show the agent moving through the maze on the map, clearly. However, this caused issues at higher epochs and it was hard to see the agent moving through the maze amongst the 0\u0026rsquo;s and 1\u0026rsquo;s, again the creator focused too much on the design and creation of the project rather than spending it on working what matters most to the project.\nConclusion Although this project failed in one of the more major tasks, it was a success in that the creator still managed to fulfil the original goal of creating a reinforcement learning system that can teach key stage 3 students about artificial intelligence and encourage them.\nThere would always have been something extra to have done or something new and exciting to add to the project. Merely finishing the project on time was a blessing for the creator, and it is exciting to know that the project will potentially be used to excite the next generation of computer scientists.\nLooking back at the introduction, these were the tasks assigned to the creator:\n  Create an ASCII based grid-world reinforcement learning playground.\n  Implement a reinforcement learning framework in an existing Python-based robot simulator.\n  Design an API for reinforcement learning.\n  Devise a set of challenge problems to be used with the simulator.\n  Design the learning exercises.\n  Gather feedback about the learning exercises and improve upon it.\n  Create an autonomously driving robot vehicle agent.\n  The creator did make a grid-world reinforcement learning playground, in maze.py. The creator did design an API to be used in IDLE, they did devise a set of problems to be used with the simulator as seen in the exercises section. The creator gathered valuable feedback from the exercises and used that feedback to improve upon the exercises.\nOverall, the creator succeeds in 6 out of the 7 tasks, which is positive as most software projects tend to fail or over-run.\n","permalink":"https://polymath.cloud/dissertation/","summary":"Abstract Reinforcement learning has traditionally been a dull topic to learn, especially for students who may not understand programming. With this dissertation, it is shown that reinforcement learning can be joyous to learn, and easier than some might have suspected.\nThis dissertation shows a framework for teaching reinforcement learning to key stage 3 school students. Using Python to implement reinforcement learning, and using lessons based around the code.\nThe aim was that by teaching them a \u0026quot;hard\u0026quot; and \u0026quot;cool\u0026quot; computer science topics, the students would become engaged in the world of computer science.","title":"Creating a Framework to Teach Key Stage 3 Students Reinforcement Learning with Autonomous (Simulated) Robots"},{"content":"In this short 10 minute article, you‚Äôll learn what the functional paradigm is in Python. You‚Äôll also learn about list comprehensions.\nTable of Contents  Table of Contents  At least this isn\u0026rsquo;t a pop up! üòÖ   üìå Functional Paradigm üåç How Does Python\u0026rsquo;s Map Work? üîë Lambda Expressions in Python üîπ Reduce Function in Python üç≥ Filter ‚òÅ Higher Order Functions in Python üé∂ Partial Application with Functions üêç Functional Programming Isn‚Äôt Pythonic üéì List Comprehensions ü§î Comprehensions of Any Iterable üëã Conclusion   At least this isn\u0026rsquo;t a pop up! üòÖ\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px;\n}  #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }\n    At least this isn\u0026rsquo;t a pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\n üìå Functional Paradigm In an imperative paradigm, we do things by giving the computer a sequence of tasks and then it executes them. While executing them, it can change states. For example, let‚Äôs say we set A = 5, then we change the value of A. We have variables in the sense that the value inside the variable varies.\nIn a functional paradigm, we don‚Äôt tell the computer what to do but we tell it what stuff is. What the greatest common divisor of a number is, and so on.\nVariables cannot vary. Once we set a variable, it stays that way forever. Because of this, functions have no side effects in the functional paradigm. A side effect is where the function changes something outside of it. Let‚Äôs look at an example:\na = 3 def some_func(): global a a = 5 some_func() print(a)  The output is 5. In the functional paradigm, changing variables is a big no-no and having functions affect things outside of their scope is also a big no-no. The only thing a function can do is calculate something and return it.\nNow you might think \u0026ldquo;no variables, no side effects? Why is this good?\u0026quot;. Good question, gnarly stranger reading this.\nIf a function is called twice with the same parameters, it‚Äôs guaranteed to return the same result. If you‚Äôve learnt about mathematical functions, you‚Äôll appreciate this benefit. We call this referential transparency. Because functions have no side effects, if we are building a program which computes things, we can speed up the program. If the program knows that func(2) equates to 3, we can store this in a table. This prevents the program from running the same function when we already know the answer.\nTypically, in functional programming, we do not use loops. We use recursion. Recursion is a mathematical concept, it means ‚Äúfeeding into itself‚Äù. With a recursive function, the function calls itself as a sub-function. Here‚Äôs a nice example of a recursive function in Python:\ndef factorial_recursive(n): # Base case: 1! = 1 if n == 1: return 1 # Recursive case: n! = n * (n-1)! else: return n * factorial_recursive(n-1)  Some programming languages are also lazy. This means they don‚Äôt compute or do anything until the very last second. If we write some code to perform 2 + 2, a functional program will only calculate that when we need to use the resultant. We‚Äôll explore laziness in Python soon.\n üåç How Does Python\u0026rsquo;s Map Work? To understand map, let‚Äôs first look at what iterables are. An iterable is anything we can iterate over. These are lists or arrays, but Python has many different iterables. We can even create our own iterable objects which by implementing magic methods. A magic method is like an API that helps our objects become more Pythonic. We need to implement 2 magic methods to make an object an iterable:\nclass Counter: def __init__(self, low, high): # set class attributes inside the magic method __init__ # for ‚Äúinitialise‚Äù self.current = low self.high = high def __iter__(self): # first magic method to make this object iterable return self def __next__(self): # second magic method if self.current \u0026gt; self.high: raise StopIteration else: self.current += 1 return self.current - 1  The first magic method, __iter__ or dunder iter (double underscore iter) returns the iterative object, we often use this at the start of a loop. Dunder next, __next__, returns what the next object is.\nLet‚Äôs check this out:\nfor c in Counter(3, 8): print(c)  This will print:\n3 4 5 6 7 8  In Python, an iterator is an object which only has an __iter__ magic method. This means that we can access positions in the object, but cannot iterate through the object. Some objects will have the magic method __next__ and not the __iter__ magic method, such as sets (talked about later in this article). For this article, we‚Äôll assume everything we touch is an iterable object.\nNow we know what an iterable object is, let‚Äôs go back to the map function.\nThe map function lets us apply a function to every item in an iterable. We want to apply a function to every item in a list, but know that it‚Äôs possible for most iterables. The syntax for map takes 2 inputs, the function to apply and the iterable object.\nmap(function, iterable)  Say we have a list of numbers like:\n[1, 2, 3, 4, 5]  And we want to square every number, we can write code like this:\nx = [1, 2, 3, 4, 5] def square(num): return num*num print(list(map(square, x)))  Functional Python is lazy. If we didn‚Äôt include the list() the function would store the definition of the iterable, not the list itself. We need to tell Python ‚Äúturn this into a list‚Äù for us to use this.\nIt‚Äôs weird to go from non-lazy evaluation to lazy evaluation suddenly in Python. You‚Äôll get used to it if you think more in the functional mindset than an imperative mindset.\nNow it‚Äôs nice to write a normal function like square(num) but it doesn‚Äôt look right. Do we have to define a whole function just to use it once in a map? Well, we can define a function in map using a lambda (anonymous) function.\n üîë Lambda Expressions in Python Lambda functions are a one-line function, used for a short period of time. We often use them with higher order functions along with filter, map, and reduce. This lambda expression squares a number given to it:\nsquare = lambda x: x * x  Now let‚Äôs run this:\n\u0026gt;\u0026gt;\u0026gt; square(3) 9  I hear you. ‚ÄúBrandon, where are the arguments? what the heck is this? that looks nothing like a function?‚Äù\nWell, it‚Äôs confusing but can be explained. We‚Äôre assigning something to the variable square. this part:\nlambda x:  Tells Python that this is a lambda function, and the input is called x. Anything after the colon is what we do with the input, and it returns whatever the result of that is.\nTo simplfy our square program into one line we can do:\nx = [1, 2, 3, 4, 5] print(list(map(lambda num: num * num, x)))  In a lambda expression, all the arguments go on the left and the stuff we want to do with them go on the right. It gets a little messy, no one can deny that. There‚Äôs a certain pleasure in writing code that only other functional programmers can read. Also, it‚Äôs super cool to take a function and turn it into a one-liner.\n üîπ Reduce Function in Python Reduce is a function that applies a given function on an iterable and returns one thing. Normally we‚Äôll perform a computation on a list to reduce it down to one number. Reduce looks like this:\nreduce(function, list)  We can (and often will) use lambda expressions as the function.\nThe product of a list is every single number multiplied together. To program this:\nproduct = 1 x = [1, 2, 3, 4] for num in x: product = product * num  But with reduce we can write:\nfrom functools import reduce product = reduce((lambda x, y: x * y),[1, 2, 3, 4])  To get the same product. The code is shorter, and with knowledge of functional programming, it is neater.\n üç≥ Filter The filter function takes an iterable and filters out all the things we don‚Äôt want in that iterable.\nFilter takes a function and a list. It applies the function to each item in the list and if that function returns True, it does nothing. If it returns False, it removes that item from the list.\nThe syntax looks like:\nfilter(function, list)  Let‚Äôs see a small example, without filter we‚Äôll write:\nx = range(-5, 5) new_list = [] for num in x: if num \u0026lt; 0: new_list.append(num)  With filter, this becomes:\nx = range(-5, 5) all_less_than_zero = list(filter(lambda num: num \u0026lt; 0, x))   ‚òÅ Higher Order Functions in Python Higher order functions can take functions as parameters and return functions. An example is:\ndef summation(nums): return sum(nums) def action(func, numbers): return func(numbers) print(action(summation, [1, 2, 3])) # Output is 6  Or an simple example of the second definition, return functions, is:\ndef rtnBrandon(): return ‚Äúbrandon‚Äù def rtnJohn(): return ‚Äújohn‚Äù def rtnPerson(): age = int(input(‚ÄúWhat‚Äôs your age?‚Äù)) if age == 21: return rtnBrandon() else: return rtnJohn()  Higher-order functions make non-varying variables easier to work with. We need not store a variable anywhere if all we‚Äôre doing is passing data through a long tunnel of functions.\nAll functions in Python are first-class objects. We define a first-class object as having one or more of these features:\n Created at runtime Assigned to a variable or element in a data structure Passed as an argument to a function Returned as the result of a function  So all functions in Python are first-class and can be used as a higher-order function.\n üé∂ Partial Application with Functions Partial application (also called closures) is weird but is cool. We can call a function without supplying all the arguments it requires. Let‚Äôs see this in an example. We want to create a function which takes 2 arguments, a base and an exponent, and returns base to the power of the exponent, like so:\ndef power(base, exponent): return base ** exponent  Now we want to have a dedicated square function, to work out the square of a number using the power function:\ndef square(base): return power(base, 2)  This works, but what if we want a cube function? or a function to the power of 4? Can we keep on writing them forever? Well, we could. But programmers are lazy. If we repeatedly do the same thing, it‚Äôs a sign that there is a much quicker way to speed things up and that will allow us to not repeat things. We can use partial applications here. Let‚Äôs see an example of the square function using a partial application:\nfrom functools import partial square = partial(power, exponent=2) print(square(2)) # output is 4  Isn‚Äôt that cool! We can call functions which require 2 arguments, using only 1 argument by telling Python what the second argument is.\nWe can also use a loop, to generate a power function that works from cubed up to powers of 1000.\nfrom functools import partial powers = [] for x in range(2, 1001): powers.append(partial(power, exponent = x)) print(powers[0](3)) # output is 9   üêç Functional Programming Isn‚Äôt Pythonic You might have noticed, but a lot of the things we want to do in functional programming revolve around lists. Other than the reduce function \u0026amp; partial application, all the functions we have seen generate lists. Guido (the inventor of Python) dislikes functional stuff in Python because Python already has its own way to generate lists.\nIf we write ‚Äúimport this‚Äù into a Python IDLE session, we‚Äôll get:\n\u0026gt;\u0026gt;\u0026gt; import this The Zen of Python, by Tim Peters Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren‚Äôt special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you‚Äôre Dutch. Now is better than never. Although never is often better than *right* now. If the implementation is hard to explain, it‚Äôs a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let‚Äôs do more of those!  This is the Zen of Python. It‚Äôs a poem about what something being Pythonic means. The part we want to relate to here is:\nThere should be one ‚Äî and preferably only one ‚Äî obvious way to do it.\nIn Python, map \u0026amp; filter can do the same things as a list comprehension (discussed next). This breaks one rule of the Zen of Python, so these parts of functional programming ‚Äòpythonic‚Äô.\nAnother talking point is Lambda. In Python, a lambda function is a normal function. Lambda is syntactic sugar. Both are equivalent:\nfoo = lambda a: 2 def foo(a): return 2  A regular function can do everything a lambda function can, but it doesn‚Äôt work the other way around. A lambda function cannot do everything that a regular function can do.\nThis was a short argument about why functional programming doesn‚Äôt fit into the whole Python ecosystem very well. You may have noticed I mentioned list comprehensions earlier, we‚Äôll discuss them now.\n üéì List Comprehensions Earlier, I mentioned that anything we could do with map or filter, we could do with a list comprehension. This is the part where we‚Äôll learn about them.\nA list comprehension is a way to generate lists in Python. The syntax is:\n[function for item in iterable]  So let‚Äôs square every number in a list, as an example:\nprint([x * x for x in [1, 2, 3, 4]])  Okay, so we can see how we can apply a function to every item in a list. How do we go around applying a filter? Well, look at this code from earlier:\nx = range(-5, 5) all_less_than_zero = list(filter(lambda num: num \u0026lt; 0, x)) print(all_less_than_zero)  We can convert this into a list comprehension like so:\nx = range(-5, 5) all_less_than_zero = [num for num in x if num \u0026lt; 0]  List comprehensions support if statements like this. We no longer need to apply a million functions to something to get what you want. If we‚Äôre trying to make some kind of list chances are that it‚Äôll look cleaner and easier using a list comprehension.\nWhat if we want to square every number below 0 in a list? Well, with lambda, map and filter we‚Äôll write:\nx = range(-5, 5) all_less_than_zero = list(map(lambda num: num * num, list(filter(lambda num: num \u0026lt; 0, x))))  This is long and complicated. With a list comprehension it is:\nx = range(-5, 5) all_less_than_zero = [num * num for num in x if num \u0026lt; 0]  A list comprehension is only good for, well, lists. Map and filter work on any iterable, so what‚Äôs up with that? We can use any comprehension for any iterable object we encounter.\n ü§î Comprehensions of Any Iterable We can generate any iterable using a comprehension. Since Python 2.7, we can even generate a dictionary (hashmap).\n# Taken from page 70 chapter 3 of Fluent Python by Luciano Ramalho DIAL_CODES = [ (86, ‚ÄòChina‚Äô), (91, ‚ÄòIndia‚Äô), (1, ‚ÄòUnited States‚Äô), (62, ‚ÄòIndonesia‚Äô), (55, ‚ÄòBrazil‚Äô), (92, ‚ÄòPakistan‚Äô), (880, ‚ÄòBangladesh‚Äô), (234, ‚ÄòNigeria‚Äô), (7, ‚ÄòRussia‚Äô), (81, ‚ÄòJapan‚Äô), ] \u0026gt;\u0026gt;\u0026gt; country_code = {country: code for code, country in DIAL_CODES} \u0026gt;\u0026gt;\u0026gt; country_code {‚ÄôBrazil‚Äô: 55, ‚ÄòIndonesia‚Äô: 62, ‚ÄòPakistan‚Äô: 92, ‚ÄòRussia‚Äô: 7, ‚ÄòChina‚Äô: 86, ‚ÄòUnited States‚Äô: 1, ‚ÄòJapan‚Äô: 81, ‚ÄòIndia‚Äô: 91, ‚ÄòNigeria‚Äô: 234, ‚ÄòBangladesh‚Äô: 880} \u0026gt;\u0026gt;\u0026gt; {code: country.upper() for country, code in country_code.items() if code \u0026lt; 66} {1: ‚ÄòUNITED STATES‚Äô, 7: ‚ÄòRUSSIA‚Äô, 62: ‚ÄòINDONESIA‚Äô, 55: ‚ÄòBRAZIL‚Äô}  If it‚Äôs an iterable, we can generate it. Let‚Äôs look at one last example of sets. If you don‚Äôt know what a set is, check out this other article I wrote. The TL;DR is:\n  Sets are lists of elements, no element is repeated twice in that list\n  The order in sets do not matter.\ntaken from page 87, chapter 3 of Fluent Python by Luciano Ramalho    from unicodedata import name {chr(i) for i in range(32, 256) if ‚ÄòSIGN‚Äô in name(chr(i), ‚Äò‚Äô)} {‚Äô√ó‚Äô, ‚Äò¬•‚Äô, ‚Äò¬∞‚Äô, ‚Äò¬£‚Äô, ‚Äò¬©‚Äô, ‚Äò#‚Äô, ‚Äò¬¨‚Äô, ‚Äò%‚Äô, ‚Äò¬µ‚Äô, ‚Äò\u0026gt;‚Äò, ‚Äò¬§‚Äô, ‚Äò¬±‚Äô, ‚Äò¬∂‚Äô, ‚Äò¬ß‚Äô, ‚Äò\u0026lt;‚Äô, ‚Äò=‚Äô, ‚Äò¬Æ‚Äô, ‚Äò$‚Äô, ‚Äò√∑‚Äô, ‚Äò¬¢‚Äô, ‚Äò+‚Äô}\n     You may notice that sets have the same curly braces as dictionaries. Python is smart. It‚Äôll know whether we\u0026rsquo;re writing a dictionary comprehension or a set comprehension based on whether we provide the extra value for the dictionary or not. If you want to learn more about comprehensions, check out this visual guide.\n üëã Conclusion Functional programming is beautiful and pure. Functional code can be clean, but it can also be messy. You should use what you want to use.\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  At least this isn\u0026rsquo;t a pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\n","permalink":"https://polymath.cloud/learn-functional-python-in-10-minutes/","summary":"In this short 10 minute article, you‚Äôll learn what the functional paradigm is in Python. You‚Äôll also learn about list comprehensions.\nTable of Contents  Table of Contents  At least this isn\u0026rsquo;t a pop up! üòÖ   üìå Functional Paradigm üåç How Does Python\u0026rsquo;s Map Work? üîë Lambda Expressions in Python üîπ Reduce Function in Python üç≥ Filter ‚òÅ Higher Order Functions in Python üé∂ Partial Application with Functions üêç Functional Programming Isn‚Äôt Pythonic üéì List Comprehensions ü§î Comprehensions of Any Iterable üëã Conclusion   At least this isn\u0026rsquo;t a pop up!","title":"Learn Functional Python in 10 Minutes"},{"content":"Often I\u0026rsquo;ll hear about how you can optimise a for loop to be faster or how switch statements are faster than if statements. Most computers have over 1 core, with the ability to support multiple threads. Before worrying about optimising for loops or if statements try to attack your problem from a different angle.\nDivide and Conquer is one way to attack a problem from a different angle. Don\u0026rsquo;t worry if you have **zero **experience or knowledge on the topic. This article is designed to be read by someone with very little programming knowledge.\nI will explain this using 3 examples. The first will be a simple explanation. The second will be some code. The final will get into the mathematical core of divide and conquer techniques. (Don\u0026rsquo;t worry, I hate maths too).\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  At least this isn\u0026rsquo;t a pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\n What Is Divide and Conquer? üåé Divide and conquer is where you divide a large problem up into many smaller, much easier to solve problems. The rather small example below illustrates this. We take the equation \u0026ldquo;3 + 6 + 2 + 4\u0026rdquo; and cut it down into the smallest set of equations, which is [3 + 6, 2 + 4]. It could also be [2 + 3, 4 + 6]. The order doesn\u0026rsquo;t matter, as long as we turn this one long equation into many smaller equations.\nLet‚Äôs say we have 8 numbers:\n$$4 + 6 + 3 + 2 + 8 + 7 + 5 + 1$$\nWe want to add them all together. We first divide the problem into 8 equal sub-problems. We do this by breaking the addition up into individual numbers.\n$$4 6 3 2 8 7 5 1$$\nWe then add 2 numbers at a time. Then 4 numbers into 8 numbers which is our resultant. Why do we break it down to individual numbers at stage 1? Why don\u0026rsquo;t we just start from stage 2? Because while this list of numbers is even if the list was odd you would need to break it down to individual numbers to better handle it.\nA divide and conquer algorithm tries to break a problem down into as many little chunks as possible since it is easier to solve with little chunks. It does this with recursion. Sorting problem solved using divide \u0026amp; conquer Recursion Before we get into the rest of the article, let\u0026rsquo;s learn about recursion first.\nRecursion is when a function calls itself. It\u0026rsquo;s a hard concept to understand if you\u0026rsquo;ve never heard of it before. This page provides a good explanation.\nMatryoshka dolls are these cute little things: We open up the bigger one, and inside is a slightly smaller one. Inside that one is another slightly small doll. Let\u0026rsquo;s say, inside the last doll is a key. But we do not know how many dolls there are. How do we write a function that opens up the dolls until we find a key?\nWe could use a while loop, but recursion is preferred here. To program this, we can write:\ndef getKey(doll): item = doll.open() if item == key: return key else: return getKey(item) getKey(doll)  The function repeatedly calls itself until it finds a key, at which point it stops. The finding key point is called a break case or exit condition.\nWe always add a break case to a recursive function. If we didn\u0026rsquo;t, it\u0026rsquo;d just be an infinite loop! Never ending.\nComputer scientists love recursion. Because it\u0026rsquo;s so hard for normal people to understand, we have a schadenfreude sensation watching people struggle. Haha just kidding!\nWe love recursion because it\u0026rsquo;s used in maths all the time. Computer scientists are mathematicians first, coders second. Anything that brings code closer to real-life mathematics is good.\nNot just because some people love maths, but because it makes it easier to implement. Need to calculate the Fibonacci numbers? The maths equation for this is:\n$$ F(n) = \\begin{cases} n, \\text{If n = 0 or 1} \\ F(n - 1) + F(n - 2), ; \\text{if n \u0026gt; 1} \\end{cases}$$\nA natural recurrence in our formula! Instead of translating it into loops, we can just calculate it:\ndef F(n): if n == 0 or n == 1: return n else: return F(n-1)+F(n-2)  This is one of the reasons why functional programming is so cool.\nAlso, as you\u0026rsquo;ll see throughout this article, recursion reads so much nicer than loops. And hey, maybe you can feel a little happier when your coworker doesn\u0026rsquo;t understand recursion but you do ;)\n Back to Divide \u0026amp; Conquer The technique is, as defined in the famous Introduction to Algorithms by Cormen, Leiserson, Rivest, and Stein, is:\n Divide  If the problem is small, then solve it directly. Otherwise, divide the problem into smaller subsets of the same problem.\nConquer  Conquer the smaller problems by solving them recursively. If the sub-problems are small enough, recursion is not needed and you can solve them directly.\nCombine  Take the solutions to the sub-problems and merge them into a solution to the original problem.\nLet\u0026rsquo;s look at another example, calculating the factorial of a number.\nn = 6 def recur_factorial(n): if n == 1: return n else: return n * recur_factorial(n-1) print(recur_factorial(n))  With the code from above, some important things to note. The Divide part is also the recursion part. We divide the problem up at return n * recur_factorial(n-1).\nThe recur_factorial(n-1) part is where we divide the problem up.\nThe conquer part is the recursion part too, but also the if statement. If the problem is small enough, we solve it directly (by returning n). Else, we perform return n * recur_factorial(n-1).\nCombine. We do this with the multiplication symbol. Eventually, we return the factorial of the number. If we didn\u0026rsquo;t have the symbol there, and it was return recur_factorial(n-1) it wouldn\u0026rsquo;t combine and it wouldn\u0026rsquo;t output anything similar to the factorial. (It\u0026rsquo;ll output 1, for those interested).\nWe\u0026rsquo;ll explore how divide and conquer works in some famous algorithms, Merge Sort and the solution to the Towers of Hanoi.\nOne last time  Divide / Break. Break the problem into smaller sub-problems. Conquer / Solve. Solves all the sub-problems. Merge / Combine. Merges all the sub-solutions into one solution.   Merge Sort ü§ñ Merge Sort is a sorting algorithm. The algorithm works as follows:\n Divide the sequence of n numbers into 2 halves Recursively sort the two halves Merge the two sorted halves into a single sorted sequence  In this image, we break down the 8 numbers into separate digits. Just like we did earlier. Once we\u0026rsquo;ve done this, we can begin the sorting process.\nIt compares 51 and 13. Since 13 is smaller, it puts it in the left-hand side. It does this for (10, 64), (34, 5), (32, 21). It then merges (13, 51) with (10, 64). It knows that 13 is the smallest in the first list, and 10 is the smallest in the right list. 10 is smaller than 13, therefore we don\u0026rsquo;t need to compare 13 to 64. We\u0026rsquo;re comparing \u0026amp; merging two **sorted **lists. In recursion we use the term base case to refer to the absolute smallest value we can deal with. With Merge Sort, the base case is 1. That means we split the list up until we get sub-lists of length 1. That\u0026rsquo;s also why we go down all the way to 1 and not 2. If the base case was 2, we would stop at the 2 numbers.\nIf the length of the list (n) is larger than 1, then we divide the list and each sub-list by 2 until we get sub-lists of size 1. If n = 1, the list is already sorted so we do nothing.\nMerge Sort is an example of a divide and conquer algorithm. Let\u0026rsquo;s look at one more algorithm to understand how divide and conquer works.\n Towers of Hanoi üóº The Towers of Hanoi is a mathematical problem which compromises 3 pegs and 3 discs. This problem is mostly used to teach recursion, but it has some real-world uses. The number of pegs \u0026amp; discs can change. Each disc is a different size. We want to move all discs to peg C so that the largest is on the bottom, second largest on top of the largest, third largest (smallest) on top of all of them. There are some rules to this game:\n We can only move 1 disc at a time. A disc cannot be placed on top of other discs that are smaller than it.  We want to use the smallest number of moves possible. If we have 1 disc, we only need to move it once. 2 discs, we need to move it 3 times.\nThe number of moves is a power of 2 minus 1. Say we have 4 discs, we calculate the minimum number of moves as $2^4 = 16 - 1 = 15$.\nTo solve the above example we want to store the smallest disc in a buffer peg (1 move). See below for a gif on solving Tower of Hanoi with 3 pegs and 3 discs. Notice how we need to have a buffer to store the discs.\nWe can generalise this problem. If we have n discs: move n-1 from A to B recursively, move largest from A to C, move n-1 from B to C recursively.\nIf there is an even number of pieces the first move is always into the middle. If it is odd the first move is always to the other end.\nLet\u0026rsquo;s code the algorithm for ToH, in pseudocode.\nfunction MoveTower(disk, source, dest, spare): if disk == 0, then: move disk from source to dest  We start with a base case, disk == 0. source is the peg you\u0026rsquo;re starting at. dest is the final destination peg. spare is the spare peg.\nFUNCTION MoveTower(disk, source, dest, spare): IF disk == 0, THEN: move disk from source to dest ELSE: MoveTower(disk - 1, source, spare, dest) // Step 1 move disk from source to dest // Step 2 MoveTower(disk - 1, spare, dest, source) // Step 3 END IF  Notice that with step 1 we switch dest and source. We do not do this for step 3.\nWith recursion, we know 2 things:\n It always has a base case (if it doesn\u0026rsquo;t, how does the algorithm know to end?) The function calls itself.  The algorithm gets a little confusing with steps 1 and 3. They both call the same function. This is where multi-threading comes in. You can run steps 1 and 3 on different threads - at the same time.\nSince 2 is more than 1, we move it down one more level again. So far you\u0026rsquo;ve seen what the divide and conquer technique is. You should understand how it works and what code looks like. Next, let\u0026rsquo;s learn how to define an algorithm to a problem using divide and conquer. This part is the most important. Once you know this, it\u0026rsquo;ll be easier to create divide and conquer algorithms.\n How to identify Divide and Conquer problems When we have a problem that looks similar to a famous divide \u0026amp; conquer algorithm (such as merge sort), it will be useful.\nMost of the time, the algorithms we design will be most similar to merge sort. If we have an algorithm that takes a list and does something with each element of the list, it might be able to use divide \u0026amp; conquer.\nFor example, working out the largest item of a list. Given a list of words, how many times does the letter \u0026ldquo;e\u0026rdquo; appear?\nIf we have an algorithm that is slow and we would like to speed it up, one of our first options is divide and conquer.\nThere isn\u0026rsquo;t any obvious tell-tale signs other than \u0026ldquo;similar to a famous example\u0026rdquo;. But as we\u0026rsquo;ll see in the next section, we can check if it is solvable using divide \u0026amp; conquer.\n How to solve problems using divide and conquer Now we know how divide and conquer algorithms work, we can build up our own solution. In this example, we\u0026rsquo;ll walk through how to build a solution to the Fibonacci numbers.\nFibonacci Numbers üê∞ We can find Fibonacci numbers in nature. The way rabbits produce is in the style of the Fibonacci numbers. You have 2 rabbits that make 3, 3 rabbits make 5, 5 rabbits make 9 and so on.\nThe numbers start at 0 and the next number is the current number + the previous number. But by mathematicla definition, the first 2 numbers are 0 and 1.\nLet\u0026rsquo;s say we want to find the 5 Fibonacci number. We can do this:\n# [0, 1] 0 + 1 = 1 # 3rd fib number # [0, 1, 1] 1 + 1 = 2 # 4th fib number # [0, 1, 1, 2] 2 + 1 = 3 # 5th fib number # [0, 1, 1, 2, 3]  Now the first thing when designing a divide and conquer algorithm is to design the recurrence. The recurrence always starts with a base case.\nWe can describe this relation using a recursion. A recurrence is an equation which defines a function in terms of its smaller inputs. Recurrence and recursion sound similar and are similar.\nAs we saw, our base case is the 2 numbers at the start.\ndef f(n): if n == 0 or n == 1: return n  To calculate the 4th Fibonacci number, we do (4 - 1) + (4 - 2). This means (last number in the sequence) + (the number before the last). Or in other words:\n The next number is the current number + the previous number.\n If our number is not 0 or 1, we want to add the last 2 Fibonacci numbers together.\nLet\u0026rsquo;s take a look at our table quickly:\n# [0, 1] 0 + 1 = 1 # [0, 1, 1] 1 + 1 = 2 # [0, 1, 1, 2] 2 + 1 = 3 # [0, 1, 1, 2, 3] 2 + 3 = 5 # [0, 1, 1, 2, 3, 5]  But what if we don\u0026rsquo;t have this list stored? How do we calculate the 6th number without creating a list at all? Well we know that the 6th number is the 5th number + the 4th number. Okay, what are those? The 5th number is the 4th number + the 3rd number. The 4th number is the 3rd number + the second number.\nWe know that the second number is always 1, as we\u0026rsquo;ve reached a base case. Eventually we break it down to the basecases. Okay, so we know our code calls itself to calculate the Fibonacci numbers of the previous ones:\ndef f(n): if n == 0 or n == 1: return n else: f(n-1) f(n-2)  Okay, how do we merge the Fibonacci numbers at the end? As we saw, it is the last number **added **to the current number.\ndef f(n): if n == 0 or n == 1: return n else: f(n-1) + f(n-2)  Now we\u0026rsquo;ve seen this, let\u0026rsquo;s turn it into recursion using a recurrence. Luckily for us, it\u0026rsquo;s incredibly easy to go from a recurrence to code or from code to a recurrence, as they are both recurrences!\n$$ F(n) = \\begin{cases} n, \\text{If n = 0 or 1} \\ F(n - 1) + F(n - 2), ; \\text{if n \u0026gt; 1} \\end{cases}$$\nWe often calculate the result of a recurrence using an execution tree. We saw this earlier when exploring how to build it in code. For F(6) this looks like: n is 4, and n is larger than 0 or 1. So we do f(n-1) + f(n-2). We ignore the addition for now. This results in 2 new nodes, 3 and 2. 3 is larger than 0 or 1 so we do the same. Same for 2. We do this until we get a bunch of nodes which are either 0 or 1.\nWe then add all the nodes together. 0 + 1 + 1 + 0 + 1 + 0 + 1 + 0 + 1 + 0 + 0 + 1 = 8.\n When Should I Use Divide \u0026amp; Conquer? üéá When we have a problem that looks similar to a famous divide \u0026amp; conquer algorithm (such as merge sort), it will be useful.\nMost of the time, the algorithms we design will be most similar to merge sort. If we have an algorithm that takes a list and does something with each element of the list, it might be able to use divide \u0026amp; conquer.\nFor example, working out the largest item of a list. Given a list of words, how many times does the letter \u0026ldquo;e\u0026rdquo; appear?\n Big O Notation of Divide \u0026amp; Conquer Algorithms Normally if our algorithm follows a famous divide \u0026amp; conquer (algorithm) we can infer our big o from that.\nThis is no different from calculating the big o notation of our own algorithms. [\nAll You Need to Know About Big O Notation [Python Examples]\nBy the end of this article, you‚Äôll thoroughly understand Big O notation. You‚Äôll also know how to use it in the real world, and even the mathematics behind it! In computer science, time complexity is the computational complexity that describes the amount of time it takes to run an algorithm. Big O ‚Ä¶\nBrandon SkerrittBrandon\u0026rsquo;s Blog\n](/big-o/) Divide \u0026amp; Conquer vs Dynamic Programming vs Greedy Greedy vs Divide \u0026amp; Conquer vs Dynamic ProgrammingGreedyDivide \u0026amp; ConquerDynamic ProgrammingOptimises by making the best choice at the momentOptimises by breaking down a subproblem into simpler versions of itself and using multi-threading \u0026amp; recursion to solveSame as Divide and Conquer, but optimises by caching the answers to each subproblem as not to repeat the calculation twice.Doesn\u0026rsquo;t always find the optimal solution, but is very fastAlways finds the optimal solution, but is slower than GreedyAlways finds the optimal solution, but could be pointless on small datasets.Requires almost no memoryRequires some memory to remember recursive callsRequires a lot of memory for memoisation / tabulation Conclusion üìï Once you\u0026rsquo;ve identified how to break a problem down into many smaller pieces, you can use concurrent programming to execute these pieces at the same time (on different threads) speeding up the whole algorithm.\nDivide and conquer algorithms are one of the fastest and perhaps easiest ways to increase the speed of an algorithm and are useful in everyday programming. Here are the most important topics we covered in this article:\n What is divide and conquer? Recursion Merge sort Towers of Hanoi Coding a divide and conquer algorithm Recurrences Fibonacci numbers  The next step is to explore multi-threading. Choose your programming language of choice and Google, as an example, \u0026ldquo;Python multi-threading\u0026rdquo;. Figure out how it works and see if you can attack any problems in your own code from this new angle.\nYou can also learn about how to solve recurrences (finding out the asymptotic running time of a recurrence), which is the next article I\u0026rsquo;m going to write. If you don\u0026rsquo;t want to miss it, or you liked this article do consider subscribing to my email list üòÅ‚ú®\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  At least this isn\u0026rsquo;t a full screen pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\n","permalink":"https://polymath.cloud/divide-and-conquer-algorithms/","summary":"Often I\u0026rsquo;ll hear about how you can optimise a for loop to be faster or how switch statements are faster than if statements. Most computers have over 1 core, with the ability to support multiple threads. Before worrying about optimising for loops or if statements try to attack your problem from a different angle.\nDivide and Conquer is one way to attack a problem from a different angle. Don\u0026rsquo;t worry if you have **zero **experience or knowledge on the topic.","title":"Divide and Conquer Algorithms with Python Examples"},{"content":"No talk about downloading things on BitTorrent. Or the best clients to do so.\nJust a deep-dive into the technical side of it.\nAnyone can read this article. Requires ZERO knowledge on networking or BitTorrent to read this.\nBitTorrent is one of the most common protocols for transferring large files. In February 2013, BitTorrent was responsible for 3.35% of all worldwide bandwidth, more than half of the 6% of total bandwidth dedicated to file sharing.\nLet\u0026rsquo;s dive right in.\nTable of Contents  üí≠ Who Created BitTorrent? ü•ä BitTorrent vs Cient-Server Downloading üìë High Level Overview üìÅ What\u0026rsquo;s in a Torrent Descriptor File, Anyway? üßÄ The Piece Selection Algorithm of BitTorrent üåÜ What Are Sub-Pieces and the Piece Selection Algorithm?  6.1. 1Ô∏è‚É£ Strict Policy\n6.2. 2Ô∏è‚É£ Rarest First\n6.3. 3Ô∏è‚É£ Random First Piece\n6.4. 4Ô∏è‚É£ Endgame Mode 7. üå± Resource Allocation Using Tit-For-Tat 8. üéê The Choking Algorithm 9. üòé Optimistic Unchoking 10. ü§ï Anti-Snubbing 11. ü§î What If We Upload Only? 12. üêù What Is a Tracker?\n12.1. üóº Public Trackers\n12.2. üîê Private Trackers\n12.3. üî¢ Multi-Tracker Torrents 13. üß≤ Magnet Links - Trackerless Torrents 14. üêç Distributed Hash Tables 15. üìå Routing Table 16. ü§∫ Attacks on BitTorrent\n üí≠ Who Created BitTorrent? Bram Cohen invented the BitTorrent protocol in 2001. Cohen wrote the first client implementation in Python.\nCohen collected free pornography to lure beta testers to use BitTorrent in the summer of 2002.\n ü•ä BitTorrent vs Cient-Server Downloading In traditional downloading, the server uploads the file, and the client downloads the file. For popular files, this isn\u0026rsquo;t very effective.\n500 people downloading the same file will put the server under strain. This strain will cap the upload speed, so clients can not download the file fast.\nSecond, client-server costs a lot of money. The amount we pay increases with how popular a file is.\nThird, it‚Äôs centralised. Say the system dies, the file no longer exists - no one can download it.\nBitTorrent aims to solve these problems. In a peer-to-peer network, every peer is connected to every other peer in the network. Semi-centralised peer-to-peer networks possess one or more peers with higher authority than most peers.  üìë High Level Overview BitTorrent is a way to share files. It‚Äôs often used for large files. BitTorrent is an alternative to a single source sharing a file, such as a server. BitTorrent can productively work on lower bandwidth.\nThe first release of the BitTorrent client had no search engine and no peer exchange, users who wanted to upload a file had to create a small torrent descriptor file that they would upload to a torrent index site.\nWhen a user wants to share a file, they seed their file. This user is called a seeder. They upload a torrent descriptor file to an exchange (we‚Äôll talk about this later). Anyone who wants to download that file will download this torrent descriptor. We call those who download peers. Their torrent client will connect to a tracker (discussed later) and the tracker will send them a list of IP addresses of other seeds and peers in the swarm. The *swarm *is all PC‚Äôs related to a certain torrent.\nThe torrent descriptor file contains a list of trackers and metadata on the file we‚Äôre downloading. A peer will connect to a seed and download parts of the file. Once the peer completes a download, they could function as a seed. Although, it is possible to function as a seed while also downloading (and is very common).\nOnce the seed has shared the file to a peer, that peer will act as a seed. Instead of the client-server model where only 1 server exists to upload the file, in BitTorrent, multiple people can upload the same file.\nBitTorrent splits the file up into chunks called pieces, each of a certain size. Sometimes it‚Äôs 256KB, sometimes it‚Äôs 1MB. As each peer receives a piece, they become a seed of that piece for other peers.\nWith BitTorrent, we do not have a single source to download from. We could download a few pieces from your home country, then download a few that your home country doesn‚Äôt own from a far-away country.\nThe protocol hashes the pieces to make sure no seed has tampered with the original file. Then stores the hash in the torrent descriptor on the tracker.\nThis is how BitTorrent works at a very high level. We will now go into detail. We aim to answer these questions:\n What if a peer only downloads and never uploads? Who do we download from, or upload to? What is a magnet link? What is a torrent descriptor? What hashing algorithm is used? How does BitTorrent selects what pieces to download?  And much more.\n üìÅ What\u0026rsquo;s in a Torrent Descriptor File, Anyway? It\u0026rsquo;s a dictionary (or hashmap) file.\nThe file is described as:\n Announce  The URL of the tracker. Remember earlier when we contacted the tracker server to find other peers using the same file? We found that tracker by using the announce key in the torrent descriptor file.\n Info  This maps to a dictionary whose keys depend on whether one or more files are being shared. The keys are:\nFiles (child of info, is a list)\nFiles only exists when multiple files are being shared. Files is a list of dictionaries. Each dictionary corresponding to a file. Each of these dictionaries has 2 keys.\n**Length - **the size of the file in bytes.\nPath - A list of strings corresponding to subdirectory names, the last of which is the actual file name.\n Length  The size of the file in bytes (only when one file is being shared)\n Name  Suggested filename. Or the suggested directory name.\n Pieces length  The number of bytes per piece.\nThe piece\u0026rsquo;s length must be a power of two and at least 16KiB.\nThis is $$2^8 ; KiB = 256 ; KiB = 262,144 ; B$$\n Pieces  A hash list.\nA list of hashes calculated on various chunks of data. We split the data into pieces. Calculate the hashes for those pieces, store them in a list.\nBitTorrent uses SHA-1, which returns a 160-bit hash. Pieces will be a string whose length is a multiple of 20 bytes.\nIf the torrent contains multiple files, the pieces are formed by concatenating the files in the order they appear in the files directory.\nAll pieces in the torrent are the full piece length except for the last piece which may be shorter.\nNow, I can guess what you‚Äôre thinking.\n \u0026ldquo;SHA-1? What is this? The early 2000s?\u0026rdquo;\n And I agree. BitTorrent is moving from SHA-1 to SHA256.\nStill confused? Not to worry! I designed this JSON file that describes what a torrent file looks like. Note: I‚Äôve concatenated some things. This makes it easier to read and understand the general layout. I made the numbers up, following the rules of BitTorrent‚Äôs torrent descriptor.\n{ \u0026quot;Announce\u0026quot;: \u0026quot;url of tracker\u0026quot;, \u0026quot;Info\u0026quot;: { \u0026quot;Files\u0026quot;: [ { \u0026quot;Length\u0026quot;: 16, \u0026quot;path\u0026quot;: \u0026quot;/folder/to/path\u0026quot; }, { \u0026quot;length\u0026quot;: 193, \u0026quot;path\u0026quot;: \u0026quot;/another/folder\u0026quot; } ] }, \u0026quot;length\u0026quot;: 192, \u0026quot;name\u0026quot;:\u0026quot; Ubuntu.iso\u0026quot;, \u0026quot;Pieces length\u0026quot;: 262144, \u0026quot;Pieces\u0026quot;: [AAF4C61DDCC5E8A2DABEDE0F3B482CD9AEA9434D, CFEA2496442C091FDDD1BA215D62A69EC34E94D0] }   üßÄ The Piece Selection Algorithm of BitTorrent One of the largest questions in BitTorrent is ‚Äúwhat pieces should I select to download?‚Äù\nWith a traditional client-server model, we download the whole file. But now, we get to pick what pieces to download.\nThe idea is to download the pieces that no one else has - the rare pieces. By downloading the rare pieces, we make them less rare by uploading them.\nüåÜ What Are Sub-Pieces and the Piece Selection Algorithm? BitTorrent uses TCP, a transmission protocol for packets. TCP has a mechanism called slow start.\nSlow start is a mechanism which balances the speed of a TCP network connection. It escalates the amount of data transmitted until it finds the network‚Äôs maximum carrying capacity. cwdn stands for the Congestion Window. TCP Slow Start TCP does this because if we send 16 connections at once, the server may not be used to the traffic and congestion will happen on the network.\nIf we‚Äôre not regularly sending data, TCP may cap our network connection at a slower speed than normal.\nBitTorrent makes sure to always send data by breaking pieces down into further sub-pieces.\nEach sub-piece is about 16KB in size. The size for a piece is not fixed, but it is somewhere around 1MB.\nThe protocol always has some number of requests (five) for a sub-piece pipe-lined. When a new sub-piece is download, the client sends a new request. This helps speed things up.\nSub-pieces can be downloaded from other peers.\nTwo core policies govern the Piece Selection Algorithm.\n1Ô∏è‚É£ Strict Policy Once the BitTorrent client requests a sub-piece of a piece, any remaining sub-pieces of that piece are requested before any sub-pieces from other pieces. In this image, it makes sense to download all the sub-pieces of this piece first rather than start downloading another piece.\n2Ô∏è‚É£ Rarest First The main policy in BitTorrent is to pick the rarest first. We want to download the piece which the fewest other peers own.\nThis is so we can make it ‚Äòun-rare‚Äô. If only one peer has a piece and they go offline, no one will get the complete file.\nA plethora of benefits exist for this policy.\nGrowing the seed\nRarest first makes sure that we download only new pieces from the seed.\nThe seed will begin as a bottleneck. The one peer with the file.\nA downloader can see what pieces their peers possess, and the rarest first policy will cause us to fetch the pieces from the seed which have not been uploaded by other peers.\nLet\u0026rsquo;s visualise this. Each peer is connected to every other peer. Not displayed as it\u0026rsquo;s messy. The list of nodes (peers) is inter-connected. I cannot draw this as the diagram is unfavourable.\nEach arrow towards a sub-piece what that peer has downloaded. We downloaded a sub-piece that no one else has other than the seed. This means this sub-piece is rare.\nOur upload rate is higher than that of the seed, so all peers will want to download from us. Also, they would want to download the rarest pieces first, and as we are one of 2 holders of the rarest piece.\nWhen everyone downloads from us, we can download faster from them. This is the tit-for-tat algorithm (discussed later).\nIncreased download speed\nThe more peers that hold the piece, the faster the download can happen. This is because we can download sub-pieces from other peers.\nEnable uploading\nA rare piece is most wanted by other peers and getting a rare piece means peers will be interested in uploading from us. As we will see later, the more we upload, the more we can download.\nMost common last\nIt is sensible to leave the most common pieces to the end of the download. As many peers hold common pieces, the probability of being able to download them is much larger than that of rare pieces.\nPrevent rarest piece missing\nWhen the seed dies, all the different pieces of the file should be distributed somewhere among the remaining peers.\n3Ô∏è‚É£ Random First Piece Once we download, we have nothing to upload. We need the first piece, fast. The rarest first policy is slow. Rare pieces are downloaded slower because we can download its sub-pieces from only a few peers.\n4Ô∏è‚É£ Endgame Mode Sometime‚Äôs a peer with a slow transfer rate will try to give us a sub-piece. Causing a delay of the download. To prevent this, there is ‚Äúendgame mode‚Äù.\nvia GIPHY\nRemember the pipe-lining principle? There are always several requests for sub-pieces pending. Assume we are downloading from 2 peers, and there is 1 other peer we are not downloading from. When all the sub-pieces a peer lacks are requested, they broadcast this request to all peers. This helps us get the last chunk of the file. If a peer has the missing sub-piece, they will send that back to our computer.\nOnce a sub-piece arrives, we send a cancel-message telling the other peers to ignore our request.  üå± Resource Allocation Using Tit-For-Tat No centralised resource allocation in BitTorrent exists. Instead, every peer maximises their download rate.\nA peer will download from whoever they can. To decide who to upload to, they will use a variant of the \u0026ldquo;tit-for-tat\u0026rdquo;algorithm.\nThe tit-for-tat strategy comes from game theory. The essence is:\n \u0026ldquo;Do onto others as they do onto you\u0026rdquo;\n  On the first move, cooperate On each succeeding move do what your opponent did the previous move Be prepared to forgive after carrying out just one act of retaliation   üéê The Choking Algorithm Choking is a temporary refusal to upload to another peer, but we can still download from them.\nTo cooperate peers upload, and to not cooperate they ‚Äúchoke‚Äù the connection to their peers. The principle is to upload to peers who have uploaded to us. We want several bidirectional connections at the same time and to achieve Pareto Efficiency.\n We consider an allocation Pareto Efficient if there is no other allocation in which some individual is better off and no individual is worse off.\n Thus the big question, is how to determine which peers to choke and which to unchoke?\nA peer always unchokes a fixed number of its peers (the default is 4).\nCurrent download rates decide which peers to unchoke. We use a 20-second average to decide this. Because of the use of TCP (slow-start) rapidly choking and unchoking is bad. Thus, this is calculated every 10 seconds.\nIf our upload rate is high more peers will allow us to download from them. This means that we can get a higher download rate if we are a good uploader. This is the most important feature of the BitTorrent protocol.\nThe protocol prohibits many ‚Äúfree riders‚Äù which are peers who only download and don‚Äôt upload.\nFor a peer-to-peer network to be efficient, all peers need to contribute to the network.\n üòé Optimistic Unchoking BitTorrent also allows an additional unchoked peer, where the download rate criteria aren‚Äôt used.\nWe call this optimistic unchoking. Checking unused connections aren‚Äôt better than the ones in use.\nWe shift the optimistic unchoke every 30 seconds. Enough time for the upload reaches full speed. Same for the upload. If this new connection turns out to be better than one of the existing unchoked connections, it will replace it.\nThe optimistic unchoke is randomly selected.\nThis also allows peers who do not upload and only download to download the file, even if they refuse to cooperate. Albeit, they will download at a much slower speed.\n ü§ï Anti-Snubbing What happens if all peers uploading to another peer decide to choke it? We then have to find new peers, but the optimistic unchoking mechanism only checks one unused connection every 30 seconds. To help the download rate recover more, BitTorrent has snubbing.\nIf a client hasn‚Äôt received anything from a particular peer for 60 seconds, it will presume that it has been ‚Äòsnubbed‚Äô.\nFollowing the mentality of tit-for-tat, we retaliate and refuse to upload to that peer (except if they become an optimistic unchoke).\nThe peer will then increase the number of optimistic unchokes to find new connections quicker.\n ü§î What If We Upload Only? We see that using the choking algorithm implemented in BitTorrent we favour peers who are kind to us. If I can download fast from them, we allow them to upload fast from me.\nWhat about no downloads? Then it‚Äôs impossible to know which peers to unchoke using this choking algorithm. When a download is completed, we use a new choking algorithm.\nThis new choking algorithm unchokes peers with the highest upload rate. This ensures that pieces get uploaded faster, and they get replicated faster.\nPeers with good upload rates are also not being served by others.\n üêù What Is a Tracker? Trackers are special types of server that help in communication between peers.\nCommunication in BitTorrent is important. How do we learn what other peers exist?\nThe tracker knows who owns the file, and how much.\nOnce a peer-to-peer download has started, communication can continue without a tracker.\nSince the creation of the distributed hash table method for trackerless torrents, BitTorrent trackers are largely redundant.\nüóº Public Trackers These are trackers that anyone can use.\nThe Pirate Bay operated one of the most popular public trackers until disabling it in 2009, opting only for magnet links (discussed soon).\nüîê Private Trackers Private trackers are private. They restrict use by requiring users to register with the site. The method for controlling registration is often an invitation system. To use this tracker we need an invitation.\nüî¢ Multi-Tracker Torrents Multi-tracker torrents contain multiple trackers in a single torrent file. This provides redundancy if one tracker fails, the other trackers can continue to maintain the swarm for the torrent.\nWith this configuration, it is possible to have multiple unconnected swarms for a single torrent - which is bad. Some users can connect to one specific tracker while being unable to connect to another. This can create a disjoint set which can impede the efficiency of a torrent to transfer the files it describes.\n üß≤ Magnet Links - Trackerless Torrents Earlier, I talked about how the Pirate Bay got rid of trackers and started using trackerless torrents.\nWhen we download a torrent, we get a hash of that torrent. To download the torrent without a tracker, we need to find other peers also downloading the torrent. To do this, we need to use a distributed hash table.\nLet\u0026rsquo;s explore Distributed Hash Tables.\nüêç Distributed Hash Tables Distributed Hash Tables (DHT) give us a dictionary-like interface, but the nodes are distributed across a network. The trick with DHTs is that the node that gets to store a particular key is found by hashing that key.\nIn effect, each peer becomes a mini-tracker.\nEach node (client/server implementing the DHT protocol) has a unique identifier known as the ‚Äúnode ID‚Äù. We choose node IDs at random from the same 160-bit space as BitTorrent infohashes.\nInfohashes are a SHA-1 hash of:\n ITEM: length(size) and path (path with filename) Name: The name to search for Piece length: The length(size) of a single piece Pieces: SHA-1 Hash of EVERY piece of this torrent Private: flag for restricted access  We use a distance metric to compare two node IDs or a node ID and an infohash for ‚Äúcloseness‚Äù.\nNodes must have a routing table containing the contact information for a few other nodes.\nNodes know about each other in the DHT. They know many nodes with IDs that are close to their own but few with far-away IDs.\nThe distance metric is XOR and is interpreted as an integer.\n$$distance(A, B) = |A \\oplus B |$$\nSmaller values are closer.\nWhen a node wants to find peers for a torrent, they use the distance metric to compare the infohash of the torrent with the IDs of the nodes in its routing table or the ID of one node with the ID of another node.\nThen they contact the nodes in the routing table closet to the infohash and asks them for contact information of peers downloading the torrent.\nIf a contacted node knows about peers for the torrent, they return the peer contact information with the response. Otherwise, the contacted node must respond with the contact information of the nodes in its routing table closet to the infohash of the torrent. The original node queries nodes that are closer to the target infohash until it cannot find any closer nodes. After the node exhausts the search, the client then inserts the peer contact information for itself onto the responding nodes with IDs closest to the infohash of the torrent. In the future, other nodes can easily find us.\nThe return value for a query for peers includes an opaque value known as the ‚Äútoken.‚Äù For a node to announce that its controlling peer is downloading a torrent, it must present the token received from the same queried node in a recent query for peers.\nWhen a node attempts to ‚Äúannounce‚Äù a torrent, the queried node checks the token against the querying node‚Äôs IP address. This is to prevent malicious hosts from signing up other hosts for torrents.\nThe querying node returns the token to the same node that they receive the token from. We must accept tokens for a reasonable amount of time after they have been distributed. The BitTorrent implementation uses the SHA-1 hash of the IP address concatenated onto a secret that changes every five minutes and tokens up to ten minutes old are accepted.\n üìå Routing Table Every node maintains a routing table of known good nodes. We use the routing table starting points for queries in the DHT. We return nodes from the routing table in response to queries from other nodes.\nNot all nodes we learn about are equal. Some are ‚Äúgood‚Äù and some are not. Many nodes using the DHT can send queries and receive responses, but cannot respond to queries from other nodes. Each node‚Äôs routing table must contain only known good nodes.\nA good node is a node has responded to one of our queries within the last 15 minutes. A node is also good if it has ever responded to our queries and has sent us a query within the last 15 minutes. After 15 minutes of inactivity, a node becomes questionable. Nodes become bad when they fail to respond to multiple queries in a row. Nodes that we see are good are given priority over nodes with an unknown status. The routing table covers the entire node ID space from 0 to 2160. We subdivide the routing table into ‚Äúbuckets‚Äù that each cover a portion of the space.\nAn empty table has one bucket with an ID space range of min=0, max=2160.\nAn empty table has only one bucket so any node must fit within it. Each bucket can only hold K nodes, currently eight, before becoming ‚Äúfull.‚Äù\nWhen a bucket is full of known good nodes, we may add no more nodes unless our node ID falls within the range of the bucket. The bucket is replaced by two buckets each with half of the old bucket. Nodes from the old bucket are distributed among the new buckets.\nFor a new table with only one bucket, we always split the full bucket into two new buckets covering the ranges 0..2159 and 2159..2160.\nWhen the bucket is full of good nodes, we simply discard the new node. When nodes in the bucket become bad (if they do) we replace them with a new node.\nWhen nodes are considered questionable and haven‚Äôt been since, in the last 15 minutes, the least recently seen node is pinged. The node either responds or doesn‚Äôt respond. A response means we move to the next node. We do this until we find a node that fails to respond. If we don‚Äôt find any, then the bucket is considered good.\nWhen we do find one, we try one more time before discarding the node and replacing them with a new good node.\nEach bucket should maintain a ‚Äúlast changed‚Äù property to show how ‚Äúfresh‚Äù the contents are.\nWhen a node in a bucket is pinged and responds, or a node is added to a bucket, or a node is replaced with another node, the bucket‚Äôs last changed property is updated.\nBuckets are refreshed if the last changed property has not been updated in the last 15 minutes.\n ü§∫ Attacks on BitTorrent Few attacks on the BitTorrent network exist. Everything is public. Our IP address, what we‚Äôre downloading - everything. Why attack an open network?\nWhy attack a completely open network?\nOnly 7 entries are listed on Exploit-DB - a database of known exploits against a service. And most of them relate to specific clients.\nThe principal attack on the BitTorrent network is to stop piracy. We‚Äôve gone this far without talking about piracy, but it is often synonymous with BitTorrent.\nThe main attack on BitTorrent is Torrent Poisoning.\nTorrent Poisoning This attack aims to get the IP addresses of peers pirating content or to poison the content in some way.\nMadonna‚Äôs American Life album release is an example of content poisoning. Before the release, tracks were released of similar length and file size. The tracks featured a clip of Madonna saying:\n \u0026ldquo;What the fuck do you think you\u0026rsquo;re doing?\u0026rdquo;\n Followed by a few minutes of silence.\nHere are some methods of poisoning a torrent.\nIndex Poisoning The index allows users to locate the IP addresses of peers with the desired content. This method of attack makes searching for peers difficult.\nThe attacker inserts a large amount of invalid information into the index to prevent users from finding the correct information.\nThe idea is to slow down the download, by having the peer try to download pieces from an invalid peer.\nDecoy Insertion They insert corrupted versions of a file into the network.\nImagine 500 copies of a file and only 2 of them being the real file, this deters pirates from finding the real file.\nMost websites with lists of torrents a voting system. This deters this attack, as the top of searches is filled with non-corrupted files However, most websites with lists of torrents a voting\nThis deters this attack, as the top of searches is filled with non-corrupted files.\nIn GameDevTycoon, the file was released before the initial upload to piracy sites. Unbeknownst to pirates, the file was corrupted. Winning the game is impossible in the pirated version. Everything else was perfect.\nüßôüèº‚Äç‚ôÇÔ∏è Defence Against the Dark Bittorrent Attack Most popular torrents are released by individuals or groups who built up a rapport over many years. On private trackers, individuals can be pointed to. Poisoned torrents are quickly labelled and the poster can be banned.\nOr, on public trackers, downloading torrents made by trusted groups is preferable. After all, would you prefer to download Ubuntu from the Ubuntu team, or the user xxx-HACKER-ELITE-GHOST-PROTOCOL-xxx?\nOn public trackers, if a torrent is poisoned the torrent is reported and removed.\nThe simplest way to defend against a BitTorrent attack is to use an IP address not associated with you. Whether this is through a VPN or some other service.\nüëãüèª Conclusion Here are the things we\u0026rsquo;ve learnt:\n What a Torrent Descriptor file is How BitTorrent chooses peers How BitTorrent chooses pieces Tit-For-Tat algorithms Trackers Attacks on the BitTorrent network  Here are some things you may choose to do:\n Build your own BitTorrent client Explore BitTorrent\u0026rsquo;s proposals (BEPs) to learn more about how it works, and what\u0026rsquo;s next for the algorithm Read the official BitTorrent specification  ","permalink":"https://polymath.cloud/bit-torrent/","summary":"No talk about downloading things on BitTorrent. Or the best clients to do so.\nJust a deep-dive into the technical side of it.\nAnyone can read this article. Requires ZERO knowledge on networking or BitTorrent to read this.\nBitTorrent is one of the most common protocols for transferring large files. In February 2013, BitTorrent was responsible for 3.35% of all worldwide bandwidth, more than half of the 6% of total bandwidth dedicated to file sharing.","title":"How Does BitTorrent Work? a Plain English Guide"},{"content":"A hash function takes a message, m, and returns a pseudo-random string of letters/numbers which should be unique to that message. Let\u0026rsquo;s say the hash function returns \u0026ldquo;aBc67D\u0026rdquo; for the message \u0026ldquo;I love dogs\u0026rdquo;. This function should not return the same \u0026ldquo;aBc67D\u0026rdquo; for \u0026ldquo;Donuts are cool\u0026rdquo;.\nHashing algorithms have 3 requirements:\n A hashing algorithm needs to be reasonably fast to compute and reasonably fast to verify. If you change one single bit anywhere in the message, the outputted string must look completely different. You must avoid collisions.  For the first point, the algorithms have to be fast. Hashing algorithms are often used by much slower algorithms (such as RSA) to speed up the algorithm. As a side note, most hashing algorithms are designed to be one-way functions.\nThe algorithm has to be fast, but it does not have to be efficient. Efficient hashing algorithms make causing collisions easier for attacks. Hashing algorithms need to be resistant towards \u0026ldquo;pre-image attacks\u0026quot;. That is, given a hash, it should be extremely difficult to calculate retrace the deterministic steps taken to reproduce the value that created the hash (i.e. the pre-image).\nFor the second point, if using SHA-5 and we input:\nabc = a9993e364706816aba3e25717850c26c9cd0d89d  An important feature we want is that if we were to change the original string even slightly by say one letter the entire outputted hash has to change. If we input \u0026ldquo;abd\u0026rdquo; we get:\nabd = cb4cc28df0fdbe0ecf9d9662e294b118092a5735  So the idea of randomness here is that the first hash does not look anything like the second hash despite us only changing 1 letter. In fact, with some code:\nWe find out that a and b are 0% similar (using the Hamming Distance). This is called the Avalanche effect. When the input changes slightly, the output changes significantly.\nFor the third point, this is the donut/dogs example above. Sometimes, it\u0026rsquo;s okay to not avoid collisions because there are billions of different messages and a fixed length hash message. But, by not avoiding collisions other people can artificially make a message with the same hash as another file and this is an issue - because it\u0026rsquo;s a fake message.\nLet\u0026rsquo;s walk through how SHA-1, an old hashing algorithm, works in detail. Although all hashing algorithms work differently and SHA-1 isn\u0026rsquo;t used in the real world anymore, seeing how SHA-1 works in detail will enable us to generalise how hashing algorithms work.\n SHA-1 SHA-1 takes a bit string of length less than 264 bits and produces a 160-bit hash value known as the message digest. Note: I will be using hexadecimal numbering for brevity. Hashing algorithms never take a message of size X, and return a message of size X. They always \u0026lsquo;compress\u0026rsquo; and create a digest of the message. Remember rule 1 for hashing algorithms from earlier? We want hashing algorithms to be fast. Producing large messages is not fast.\nSHA-1 was published in 1993 by NIST, but was developed by the NSA (yes, that NSA). Not much is known about the history of SHA-1, so I apologise for not including history here.\nSuppose we want to encode the message \u0026lsquo;abc\u0026rsquo; using SHA-1. We start off by converting it into binary:\n$$ abc = 01100001 01100010 01100011$$\nSHA-1 starts with an internal state. Let\u0026rsquo;s say our internal state of SHA-1 is:\n$$ h_0, h_1, h_2, h_3, h_4$$\nThe internal state size is exactly the same as the length it produces (160). So each internal state H has 160/5 = 32-bit words which is 4 bytes each. We split it into chunks because it\u0026rsquo;s easier to calculate. We start by initializing these internal states with five random strings of hex characters:\n$$H_0 = 67DE2A01$$\n$$H_1 = BB03E28C$$\n$$H_2 = 011EF1DC$$\n$$H_3 = 9293E9E2$$\n$$H_4 = CDEF23A9$$\nThe message is then padded by appending a 1, followed by enough 0s until the message is 448 bits. The length of the message represented by 64 bits is then added to the end, producing a message that is 512 bits long. https://brilliant.org/wiki/secure-hashing-algorithms/ The padded input obtained above, $M$, is then divided into 512-bit chunks and each chunk is further divided into sixteen 32-bit words, $W_0, \u0026hellip;, W_15$. In the case of \u0026lsquo;abc\u0026rsquo; there is only one chunk, as the message is less than 512-bits total.\nFor each chunk, begin the 80 iterations, $i$, necessary for hashing (80 is the determined number for SHA-1), and execute the following steps on each chunk, $M_n$:\nFor iterations 16 through to 79, where $16 \\le i \\le 79$, perform the following operation:\n$$W(i) = S^1(W(i-3) \\oplus W(i-8) \\oplus W(i-14) \\oplus W(i-16))$$\nThe symbol $\\oplus $ is XOR which is exclusive or. The resultant is True (1) if and only if either the left hand side or right hand side is 1, but not both. Truth table for XOR As an example, when $i$ is 16, the words chosen are W(13), W(8), W(2), W(0) and the output is a new word, W(16), so performing the XOR operation on these words gives us: Now, the circular shift operation on the word by bits, being an integer between and, is defined by\n$$S^n(X) = (X \u0026laquo; n) OR (X\u0026raquo; 32 - n)$$\nwhere $X \u0026laquo; n$ is the left-shift operation, obtained by discarding the leftmost $n$ bits of $X$ and padding the result with zeroes on the right. If you don\u0026rsquo;t know what the logic symbols mean, I\u0026rsquo;ve written an article explaining them here.\n$X \u0026raquo; 32 - n$ is the right-shift operation obtained by discarding the $n$ rightmost bits of $x$ and padding the result with $n$ zeroes on the left. Thus $S^n(X)$ is equivalent to a circular shift of by positions, and in this case, the circular left-shift is used. A left shift $S^n(W(i))$, where $W(i)$ is $10010$ would produce $01001$ as the rightmost bit, 0, is shifted to the left side of the string. Therefore $W(16)$ would end up being:\n$$ W(16) = 11000010 11000100 11000111 00000000$$\nNow store the hash values defined in step 1 in the following variables:\n$$A = H_0$$\n$$B = H_1$$\n$$C = H_2$$\n$$D = H_3$$\n$$E = H_4$$\nFor 80 iterations, where $0 \\le i \\geq 79$ compute:\n$$TEMP = S^5 * (A) + f(i; B, C, D) + E + W(i) + K(i)$$\nWe have to use a which takes in our data and a bit of the message and turns it into another set of h values.\nA sequence of functions are used in SHA-1 depending on the value of $i$ and on three 32-bit words, B, C, and D, in order to produce a 32-bit output.\nThe following equations describe these logical functions.\n$f(i; B, C, D) = (B \\land C) \\vee ((\\not B) \\land D)$ for $0 \\geq i \\geq 19$\n$ f(i; B, C, D) = B \\oplus C \\oplus D$ for $20 \\geq i \\geq 39$\n$ f(i; B, C, D) = (B \\land C) \\vee (B \\land D) \\vee (C \\land D)$ for $40 \\geq i \\geq 59$\n$f(i; B, C, D) = B \\oplus C \\oplus D$ for $60 \\geq i \\geq 79$\nA sequence of constant words $K(0), K(1), \u0026hellip; , K(79)$ is used in the SHA-1. In hex, these are given:\n¬†$K(i) = 5A827999$ for $0 \u0026lt;= i \u0026lt;= 19)$\n¬†$K(i) = 6ED9EBA1$ for $20 \u0026lt;= i \u0026lt;= 39$\n¬†$K(i) = 8F1BBCDC$ for $40 \u0026lt;= i \u0026lt;= 59$\n¬†$K(i) = CA62C1D6$ for $60 \u0026lt;= i \u0026lt;= 79$\nReassign the following values:\n$$ E = D$$\n$$D = C$$\n$$ C = S^30 (B)$$\n$$B = A$$\n$$ A = TEMP$$\nStore the result of the chunk\u0026rsquo;s hash to the overall hash value of all chunks as shown below, and proceed to execute the next chunk:\n$$H_0 = H_0 + A$$\n$$H_1 = H_1 + B$$\n$$H_2 = H_2 + C$$\n$$H_3 = H_3 + D$$\n$$H_4 = H_4 + E$$\nAs a final step, when all chunks have been processed, the message digest is represented as the 160-bit string comprised of the OR logical operator and the 5 hashed values:\n$$H = S^128 (H_0) \\vee S^96 (H_2) \\vee S^32(H_3) \\vee H_4$$\n Sha-1 sucks SHA-1 was broken quite a few years ago. By broken, I mean that it\u0026rsquo;s possible to artificially create collisions. That is, given a document with an SHA-1 hash of \u0026ldquo;cb4cc28df0fdbe0ecf9d9662e294b118092a5735\u0026rdquo; it is possible to produce a different document that has the **same **hash.\nThis article used SHA-1 because it\u0026rsquo;s relatively easy to explain when compared to non-broken hash functions such as SHA-5. If you want to learn more about why you shouldn\u0026rsquo;t use SHA-1, read this article.\nAs a side note, do not try to implement SHA-1 yourself. Remember Scheiner\u0026rsquo;s rule:\n \u0026ldquo;Anyone, from the most clueless amateur to the best cryptographer, can create an algorithm that he himself can\u0026rsquo;t break.\u0026rdquo;\n While your implementation SHA-1 may appear to work to you, it may have some underlying issue that you didn\u0026rsquo;t spot. It\u0026rsquo;s always best to use implementations created and monitored by the community (open source).\n Breaking hashes MD5 was a pretty popular hashing algorithm which produced 128-bit outputs. It is suspectible to a birthday attack.\nBirthday attacks are formulated on the birthday problem. If there are 23 people in a room, there is a 50% chance two of them will share the same birthday. If there are 70 people in a room, this is a 99.9% chance 2 people share the same birthday.\nThis comes from what is called the pigeonhole principle. If you have 9 pigeonholes (boxes to put pigeons in) and 10 pigeons, 2 pigeons will have to share the same hole. In fact, MD5 is so weak to collision resistance that a simple, household 2.4GHz Pentium Processor can compute artificial hash collisions within seconds. Moreover, its extensive usage in the earlier days of the current web has created tons of leaked MD5 pre-images online that can be found with a simple Google search of their hash.\n Conclusion The 3 rules to hashing algorithms are:\n A hashing algorithm needs to be reasonably fast to compute and reasonably fast to verify. If you change one single bit anywhere in the message, the outputted string must look completely different. You must avoid collisions.  As we saw with SHA-1, it uses a compressor function to take a message and turn that message into a much smaller, hashed version. SHA-1 isn\u0026rsquo;t used in the real world anymore, and it\u0026rsquo;s not secure in the sense that collisions can be created. Although it\u0026rsquo;s a nice historical example of how hashing algorithms work.\nFor more on SHA-1, check out the official document describing it here. If you\u0026rsquo;re interested in what hash functions are used now (especially in cryptocurrencies, as well as the attacks on them and the differences this article is very good.\nHey üëã Want to subscribe to my blog and stay up to date with posts similar to this one? Subscribe to my email list below. I won\u0026rsquo;t spam you. I will only send you posts similar to this one üòä‚ú®\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  At least this isn\u0026rsquo;t a full screen pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\nIf you\u0026rsquo;re feeling extra generous, I have a PayPal  and even a Patreon. I\u0026rsquo;m a university student who writes these blogs in their spare time. This blog is my full time job, so any and all donations are appreciated!\n","permalink":"https://polymath.cloud/hash-functions/","summary":"A hash function takes a message, m, and returns a pseudo-random string of letters/numbers which should be unique to that message. Let\u0026rsquo;s say the hash function returns \u0026ldquo;aBc67D\u0026rdquo; for the message \u0026ldquo;I love dogs\u0026rdquo;. This function should not return the same \u0026ldquo;aBc67D\u0026rdquo; for \u0026ldquo;Donuts are cool\u0026rdquo;.\nHashing algorithms have 3 requirements:\n A hashing algorithm needs to be reasonably fast to compute and reasonably fast to verify. If you change one single bit anywhere in the message, the outputted string must look completely different.","title":"Hash functions explained for non cryptographers"},{"content":"Public key cryptography seems magical to everyone, even those who understand it. In this post, I\u0026rsquo;m going to explain public key cryptography. Public Key Cryptography is based on asymmetric cryptography, so first let us talk about symmetric cryptography.\n Symmetric Cryptography Your front door is usually locked by a key. This key unlocks \u0026amp; locks your front door. With symmetric cryptography, you have one key which you use to unlock and lock things.\nOnly people with the key or a copy of the key can unlock the door. Now, imagine you\u0026rsquo;re on holiday in Bali. You want to invite your friend around to look after your cat üò∫ while you\u0026rsquo;re on the beautiful beaches üèñÔ∏è.\nBefore the holiday, you give your friend the key to your door. Your friend is then robbed, so someone else has your front door key now. Or your friend leaves it laying around and someone clones it. The problem with symmetric key cryptography is that this one key is easy to clone, it\u0026rsquo;s easy to attack your house in many different ways.\nLet\u0026rsquo;s take this from an analogy to a real-life example of symmetric cryptography.\nCaeser\u0026rsquo;s Cipher Julius Caeser used a cipher to send messages that no one else could read other than the intended recipient. Mainly because no one could read back in 100 BC, and those that could wouldn\u0026rsquo;t understand a random string of letters. That\u0026rsquo;s the whole point of cryptography. To create ways to communicate without third parties listening in. This cipher is Caeser\u0026rsquo;s Cipher. Given an alphabet and a key (the key is an integer between 1 and 25), shift all of the alphabet letters by key. Image from GeeksForGeeks showing Caeser\u0026rsquo;s Cipher shift of 3 With a shift of 3, as seen in the image above, A becomes D, B becomes E and so on until it wraps around with X = A. The original message is called the *plaintext *and the encrypted message is called the ciphertext.\nThe easiest way to perform Caesar\u0026rsquo;s Cipher is to turn all of the letters into numbers, a = 1, b = 2, c = 3 and so on.\nTo encrypt, E, you calculate this for every letter (where s is the shift):\n$$ E_{s}(letter) = (letter + shift) mod ; 26$$\nThis is called a *function. *You put an input into it, and an output comes out. A lot of functions are known as two-way functions. You can encrypt by using the function above, and it makes sense that to decrypt you just do the opposite. Given a function that doubles a number, if you have a doubled number and you want to reverse the function do the opposite of multiplying by 2, divide the number by 2.\n*mod *is the modulus operator. It\u0026rsquo;s the remainder of dividing. We do modulous because there isn\u0026rsquo;t a 27th letter in the alphabet, you just wrap around from \u0026ldquo;z\u0026rdquo; back to \u0026ldquo;a\u0026rdquo;. We\u0026rsquo;ll talk more about modular arithmeticlater on in this article. Look at this small example below:\n$$ 4 ; mod ; 3 = 1 $$\nBecause 4 divided by 3 has a remainder of 1.\nTo decrypt Caesar\u0026rsquo;s cipher, D, you calculate this for every letter:\n$$ D_{s}(letter) = (letter - shift) ; mod ; 26$$ As you can tell, it\u0026rsquo;s not very secure. With 25 total shifts you just have to shift the text 25 times until you find the decrypted code, this is called a brute force attack. You take the encrypted text and shift it all 25 times until you find the decrypted text. But let\u0026rsquo;s imagine for a second that this was a hard cipher - that brute force isn\u0026rsquo;t feasible.\nHow do you tell your friend you\u0026rsquo;re using a shift of 9, for example? You have to communicate it to them somehow. Any and all forms of communication can be listened in on - whether that\u0026rsquo;s writing a letter or going to a hidden forest in Switzerland 30 miles from the nearest town and telling your friend.\nThe latter isn\u0026rsquo;t very feasible, but it is a lot more secure than telling your friend in Times Square, New York üóΩ what the shift is.\nNow, imagine you brought your lunch to work in a special lunchbox - the same you\u0026rsquo;ve had since nursery school. Someone steals your food and your lunchbox. You don\u0026rsquo;t mind losing the food, but you do want the lunchbox back. You want a way for them to securely return your lunchbox without you knowing who took it - because that takes the pressure off of them.\nYou place a box in the staff room with a lock \u0026amp; key. You give copies of keys to everyone in the office and hope for the best - that someone will return the lunchbox by placing it in the box. Image of a lock box from Amazon Unfortunately, the keys everyone has also unlocks the box as well as locks it. This means that someone could unlock the box and re-steal your lunchbox.\nWe need to find a way to get rid of this idea of sharing keys, get rid of the idea of \u0026lsquo;any key can lock and unlock\u0026rsquo;, and this is where asymmetric cryptography comes in.\n Asymmetric cryptography Not my key, not my lock, is my image. You install an extraordinary lock on this box, one that has two separate keys. The first key üîë can only turn clockwise, from A (locked) to B (unlocked) to C (locked).\nThe second key üóùÔ∏è can only turn anti-clockwise, from C to B to A. You pick the first key and keep it to yourself. This is called a private key. The second key is called the public key. This key is given out to everyone in the office. You want everyone to have this key.\nWhen someone returns your prized lunchbox, they can leave it in this box. All the public keys can do is lock the box. Your private key is the only one that can open it.\nThis is public key cryptography. Everyone knows that if they put something in the box and lock it, only you can open it with your private key.\nWith symmetric cryptography, everyone could open your box if they had the key. Now, no one apart from you can open the box.\nPublic key cryptography was first formulated by Whitfield-Diffie or James Ellis (Ellis discovered first, but he didn\u0026rsquo;t publish it. Whitfield-Diffie published first). Both Ellis and Whitfield-Diffie enjoyed that public key cryptography could work in theory, but never managed to figure out how it would work in practice.\nThe production of a working Public Key Encryption system is attributed to Rivest‚ÄìShamir‚ÄìAdleman (RSA) or Clifford Cocks. Like above, Cocks discovered first, but he didn\u0026rsquo;t publish it. Rivest‚ÄìShamir‚ÄìAdleman published first.\nLet\u0026rsquo;s look at how this works mathematically.\n The maths behind public key cryptography While the box analogy was something physical, we\u0026rsquo;re going to go back to encrypting messages much like we did with Caeser Cipher.\n$$ K^-_b(K^+_b(m)) = m$$\nWhen you apply the public key ($K^+$) to the encrypted message, and then the private key ($K^-$) to the encrypted message you get the plaintext message. We are also looking for these attributes:\nIt is computationally easy to:\n Generate a set of keys Encrypt / Decrypt using these keys  But it is also computationally infeasible to:\n Determine the private key from the public key Bruteforce the private key from the public key and bruteforce the ciphertext   Turning messages into numbers We want to turn a message into numbers. Previously we assigned a number to each letter, A = 1 and so on. The American Standard Code for Information Interchange (ASCII) is a table of all English letters and most symbols along with their associated ASCII code \u0026amp; Binary output.\nWhen you press a key on the keyboard, the keyboard converts this to Ascii as numbers are easier to work with than letters for a computer. If you want to learn more about ASCII, check out this video. http://sticksandstones.kstrom.com/appen.html Let\u0026rsquo;s encrypt the word \u0026ldquo;cats\u0026rdquo;. In binary, according to Ascii, this is:\n$$c = 01100011$$\n$$a = 01100001$$\n$$t=01110100$$\n$$s = 01110011$$\nIf you add them all together and convert to base 10, you get 4430123. For our example, we\u0026rsquo;re going to look at how Rivest‚ÄìShamir‚ÄìAdleman (RSA), a public key cipher, calculates public \u0026amp; private keys. We\u0026rsquo;re also going to use much smaller numbers, so the maths isn\u0026rsquo;t as hard to read.\nBelow is a calculator I created for turning ASCII into Binary.\n# https://stackoverflow.com/a/40949538 def string2bits(s=''): return [bin(ord(x))[2:].zfill(8) for x in s] # edit the text below to see how this works text = 'cats' bits = string2bits(text) for x in bits: print(x)   RSA  Choose 2 large prime numbers, p \u0026amp; q.  Prime numbers are numbers that only have 2 factors, 1 and itself. We\u0026rsquo;re going to pick 5 \u0026amp; 7, not large prime numbers but small for brevity.\nCompute n = pq, z = (p-1)(q-1)  $$n = 5 * 7 = 35$$\n$$z = (5 - 1)(7-1) = 4 * 6 = 24$$\nChoose e (with e \u0026lt; z) such that e has no common factors with z.  $$ e = 5$$\n5 has no common factors with 24, and it is smaller than 24.\nChoose d such that $ed - 1$ is exactly divisible by z.  The easiest way to do this would be to loop over all possible values of d in code. This code is written in Functional Python, but the language and paradigm doesn\u0026rsquo;t matter.\nSince we\u0026rsquo;re using such small numbers, we have overlap. Both e and d are 5. Let\u0026rsquo;s set d to 29, just so we don\u0026rsquo;t have this overlap.\n$$ d = 29 $$\nThe public key is (n, e). The private key is (n, d)  $$key_{public} = (35, 5)$$\n$$key_{private} = (35, 29)$$\nBelow is code to generate RSA keys. Note that we have overlap on d with p = 5 and q = 7, as discussed above.\ndef rsa(p, q): n = p * q z = (p - 1) * (q - 1) # calculate e such that e is less than z # and e has no common factors with z for i in range(1, z - 1): if z % i != 0: e = i break d = (filter(lambda x: ((x * 5) - 1) % 24 == 0, range(1, 200)))[0] return{\u0026quot;Public key\u0026quot;: [n, d], \u0026quot;Private Key\u0026quot;: [n, e]} # change p and q here to any prime numbers of your choice p = 5 q = 7 print(rsa(p, q))  To send an encrypted message, Bob computes $C = m^e ; mod ; n$ for message m and key e. To decrypt the message, Alice computes $m = c^d ; mod ; n$.\nEncrypting \u0026ldquo;cats\u0026rdquo; gives us $427^5 ; mod ; 35 = 7$.\nDecrypting \u0026ldquo;cats\u0026rdquo; gives us 4430123.\nThen to send a message m, Bob computes $c=m^e ; (mod ; N)$ and sends it to Alice and Alice decrypts the message using her private key d with $m=c^d ; (mod ; N)$\nWhy does it work? Prime factorisation. It\u0026rsquo;s easy to multiply two prime numbers together, but it\u0026rsquo;s incredibly hard to find out what prime numbers were used to make that number. You can easily multiply these two together:\n$$ 23,719 * 41,843 = 992,474,117$$\nBut if I gave you 992,474,117 and told you to find the prime numbers that were used to make this number, it\u0026rsquo;s not computationally feasible. Even more so when you realise the prime numbers used are very, very large.\nThis is known as a trap-door function or a one-way function. While it is easy to go through one way, it is computionally infeasiable to go the other way. Boiling an egg is a one-way function because it is easy to boil an egg, but it is not possible to un-boil an egg. Let\u0026rsquo;s go deeper into the mathematics and explore modular arithmetic.\nBack to modular arithmetic Imagine a finite range of numbers, for example, 1 to 12. These numbers are arranged in a circle, much like a clock (modular arithmetic is sometimes called clock arithmetic because of this) https://commons.wikimedia.org/wiki/File:Animated_analog_SVG_clock.svg Count 13 around this clock. You get to 12 and then you need to count 1 more - so you go back to 1. Modular arithmetic is still defined as the remainder of division, however it can also be defined (and is more commonly defined) as a clock.\nFunctions using modular arithmetic tend to perform erratically, which in turn sometimes makes them one-way functions. Let\u0026rsquo;s see this with an example by taking a regular function and seeing how it works when it becomes a modular arithmetic function.\n$$3^x$$\nWhen we insert 2 into this function, we get $3^2 = 6$. Insert 3 and we get $3^3 = 9$\nThis function is easy to reverse. If we\u0026rsquo;re given 9, we can tell that the function had an input of 3, because of $3^3 = 9$.\nHowever, with modular arithmetic added, it doesn\u0026rsquo;t behave sensibly.\nImage we had this formula:\n$$ 3^x mod ; 7 = 1$$\nHow would you find out what x is? You can\u0026rsquo;t put the mod on the other side, because there isn\u0026rsquo;t really an inverse of modular arithmetic. What about guessing? Let\u0026rsquo;s input 5:\n$$ 3^5 mod ; 7 = 5$$\nOkay, that was too big. You might want to go lower, maybe 4 or 3 but actually this is the wrong direction. When x is 6, it is equal to 1.\nIn normal arithmetic, we can test numbers and get a feel for whether we are getting warmer or colder, but this isn\u0026rsquo;t the case with modular arithmetic.\nOften the easiest way to reverse modular arithmetic is to compile a table for all values of x until the right answer is found. Although this may work for smaller numbers, it is computationally infeasible to do for much larger numbers. This is often why modular arithmetic is known as a one-way function.\nIf I gave you a number such as 5787 and told you to find the function for it, it would be infeasible. In fact, if I gave you the ability to input any number into the function it would still be hard. It took me a mere few seconds to make this function, but it\u0026rsquo;ll take you hours or maybe even days to work out what x is.\nRSA is a one-way function. While it is relatively easy to carry out this function, it is computationally infeasible to do the reverse of the function and find out what the keys are. Although, it is possible to reverse an RSA encryption if you know some numbers such as N.\nLet\u0026rsquo;s talk about N Recall earlier where I detailed how the RSA algorithm worked. There was one number, $n$. This n is special because under some circumstances n can make this one-way function reversible\nN is a product of 2 prime numbers. As we saw earlier, if we take $5$ and $7$ and multiply them together, we get:\n$$n = 35$$\nIn order for Bob to send Alice a message, he encrypts the message using Alice\u0026rsquo;s public key. Now that the message is encrypted, there has to be some way for Alice to decrypt it. There has to be some way for Alice to reverse this, but only for Alice to reverse it. You can\u0026rsquo;t have Eve or Niamh or Hannah reversing it - because that beats the point of encrypting it.\nRSA is designed so the person who knows P and Q (the two prime numbers that are multiplied together to give N) can decrypt the message.\nAlthough Alice has told the world her public key is $n = 35$, no one apart from Alice knows that $P = 7, Q = 5$. Note that the prime numbers are intentionally small for brevity.\nYou may be thinking \u0026ldquo;it\u0026rsquo;s easy to guess that 35\u0026rsquo;s prime factors are 5 and 7\u0026rdquo; and you would be right. But, with large enough numbers it is virtually impossible to find $p$ and $q$.\nIn fact, with large enough numbers multiplying p and q are essentially one way functions. It is possible that in the future, perhaps the near future (with the invention of quantum computers) that factoring numbers becomes easy. Mathematicians have tried and failed for thousands of years to find an efficient way to factor numbers, so for now it is considered secure.\nLet\u0026rsquo;s look more into the maths Okay, let\u0026rsquo;s look at how modulus works in all of this. You understand why multiplication works, and how modulus works. But what about the other equations? What are they for?\nLet\u0026rsquo;s demonstrate the deciphering algorithm using an identity due to Euler and Fermate:\n For any integer (M), M is relatively prime to n:\n $$M^{\\phi(n)} \\equiv 1 (mod n)$$\nHere, $\\phi (n)$ is the Euler totient function giving the number of positive integers less than n which are relatively prime to n. Relatively prime is where 2 numbers only share the factor $1$ with each other. In modern day we use Carmichael\u0026rsquo;s function over Euler\u0026rsquo;s function, as Euler\u0026rsquo;s function can sometimes produce numbers too large to use. However, we\u0026rsquo;re using Euler\u0026rsquo;s totient function as it is what the original RSA paper used.\nThis sounds confusing, but let\u0026rsquo;s break it down. By elementary properties of the totient function:\n$$\\phi (n) = \\phi (p) * \\phi (q)$$\n$$ = (p - 1) * (q - 1)$$\n$$ = n - (p + q) + 1$$\nSince d is relatively prime to $\\phi i (n)$, it has a multiplicative inverse $e$ in the ring of integers modulo $\\phi (n)$. What this means is that the formula we used for RSA can be reversed (the trap door can be reversed) given some knowledge about the numbers used.\nWithout this special mathematical property it wouldn\u0026rsquo;t be possible to reverse the encryption and find out the ciphertext if you know some of the numbers used.\nThe modular multiplicative inverse of the encryption algorithm $c = m^e ; mod ; n$ is $m = c^d ; mod ; n$. All of this maths has built up to this. Modular arithmetic and one-way functions are heavily involved here. In order to encrypt, you calculate c. In order to decrypt, you calculate m. Both of these require knowledge of $n$, which is the special number we talked about earlier.\nIf you want to learn more about the maths of RSA, I highly reccomend the readable, origianl RSA paper.\n Authentication How do you prove that a message sent by Bob was actually sent by Bob, and not sent by Eve? You need a way to authenticate them. In the real world, we authenticate using signatures. Although these can be forged, you can authenticate using a biometric scanner, but your fingerprints can be lifted and copied.\nYou can use a passcode, but again much like how Caeser cipher and its single key is useless, authentication methods that use single keys aren\u0026rsquo;t as perfect.\nYou can use a passcode, but again much like how Caeser\u0026rsquo;s cipher and its single key is useless, authentication methods that use single keys aren\u0026rsquo;t as perfect.\n$$ K^-_b(K^+_b(m)) = m = K^+_b(K^-_b(m)) $$\nLet\u0026rsquo;s say Bob wants to prove to Alice that Bob wrote the message he sent her. Bob sends his original message with an encrypted version of the message with his private key ($k^-$). Alice uses Bob\u0026rsquo;s public key($k^+$) which, using the formula above, turns the encrypted message back into the normal message. Then Alice checks the message Bob sent with the message she got from the encrypted message. If they match, she can be sure that someone with Bob\u0026rsquo;s private key (probably Bob) sent it.\nThis method sucks for encrypting because if Bob encrypts his message with his private key, anyone can read it with his private key. Also, it\u0026rsquo;s computationally expensive to prove that Bob sent something. This is why we create a digest of the message and encrypt that instead to verify Bob. This digest of a message is done using a hash function.\nTo learn more about hash functions, I wrote a sister article which explains them here.\nBack to cyprotgraphy By encrypting the hash of the message we speed up the process of encrypting it, which makes authentication a lot faster. Now, let\u0026rsquo;s play a prank on Bob.\nWe create an e-mail order to a pizza shop asking for 4 pepperoni pizzas. We sign this email with our private key. We send the pizza store our public key, but we tell them that Bob\u0026rsquo;s phone is dead and that our public key is actually Bob\u0026rsquo;s public key.\nThe pizza store verifies the signature and sends 4 pepperoni pizzas üçï to Bob. The worst part is, Bob doesn\u0026rsquo;t even like pepperoni. This is where a *certification authority *comes into play.\nCertificate Authorities Certificate authorities (CA) bind a public key to a specific entity. This entity provides proof of identity to the CA, the CA then creates a certificate binding the entity to its public key. The idea is to take the trust out of trusting an individual for public keys. You still have to trust an organisation, but many people find trusting an organisation is better than trusting an individual.\nThe certificate containing the entities public key is digitally signed by the CA. This signing is the CA saying \u0026ldquo;this is the entities public key\u0026rdquo;. https://blog.cloudflare.com/how-to-build-your-own-public-key-infrastructure/ When Alice want\u0026rsquo;s Bob\u0026rsquo;s public key, she gets Bob\u0026rsquo;s certificate. She then applies the CA\u0026rsquo;s public key to Bob\u0026rsquo;s certificate to get Bob\u0026rsquo;s public key. https://blog.cloudflare.com/how-to-build-your-own-public-key-infrastructure/ Cloudflare has an amazing article on certificate authorities here.\n Secure Email with Pretty Good Privacy Phil Zimmerman invented Pretty Good Privacy (PGP), the de facto standard for email encryption. Zimmerman used RSA in PGP. RSA is patented and he did not have permission from RSA inc (the company that holds the patent) to publish another cipher using RSA.\nZimmerman was also a target of a 3-year U.S federal investigation because at the time cryptography programs were considered munitions under U.S law. When asked whether all of the trouble was worth it to publish PGP, he said he had \u0026ldquo;no regrets\u0026rdquo;. Let\u0026rsquo;s look at how this used to be illegal algorithm works.\nWhen Alice wants to send a confidental email to Bob, she:\n Generates random symmetric private key, $k_s$. Encrypts her email with $k_s$ (for effiency) Also encrypts $k_s$ with Bob\u0026rsquo;s public key. Alice digitally signs the encrypted message. Alice sends Bob both $k_s(m)$ , $k^+_b(k_s))$ and her digital signature.  In total, Alice uses three keys. Her private key, Bob\u0026rsquo;s public key, and the newly created symmetric key. https://www.wikiwand.com/en/Pretty_Good_Privacy This idea of encrypting a symmetric key with a public key is called a Hybrid Cryptosystem. Some email messages can be incredibly large, encrypting these with a public key system would take a very long time.\nUse a symmetric key system such as AES, which is incredibly hard to break (but not as hard as RSA). Encrypt the AES key (and only the key, not the whole email) with the public key. This way, the receiver can apply their private key and find out the AES symmetric key to decrypt the email.\nNot many people use PGP, because of how difficult it is to set up. At most, you need to download a program you trust to correctly implement PGP. In 2018 it was shown that email clients such as Apple Mail, Thunderbird, and Outlook - who have settings to enable PGP can be forced to show the non-encrypted versions.\nNot to mention how suspicious it looks for one person to send encrypted emails on a network of non-encrypted emails. The only email client (and address provider) which enables PGP by default is ProtonMail, but even then it\u0026rsquo;s only for Proton-to-Proton emails and you have to trust the company to implement it correctly.\n Most of them do a good job, but we understand your point. We built ProtonMail to make PGP encryption accessible to non-technical people. We will make sure this goal is reached 100%. ;) Thanks again! ‚Äî ProtonMail (@ProtonMail) January 21, 2018\n  Conclusion Cryptography has been used for thousands of years, almost as long as mankind has held secrets. In our constant effort to keep our secrets secret to everyone apart from a select few we\u0026rsquo;ve found this magical algorithm that works pretty well. No doubt, in 300 or 400 years it will have been broken much like how Caeser thought his cipher would never be broken.\nIf you\u0026rsquo;re feeling extra generous, I have a PayPal  and even a Patreon. I\u0026rsquo;m a university student who writes these articles in my spare time. This blog is my full time job, so any and all donations are appreciated\n","permalink":"https://polymath.cloud/how-does-public-key-cryptography-work/","summary":"Public key cryptography seems magical to everyone, even those who understand it. In this post, I\u0026rsquo;m going to explain public key cryptography. Public Key Cryptography is based on asymmetric cryptography, so first let us talk about symmetric cryptography.\n Symmetric Cryptography Your front door is usually locked by a key. This key unlocks \u0026amp; locks your front door. With symmetric cryptography, you have one key which you use to unlock and lock things.","title":"Public Key Cryptography Simply Explained"},{"content":"Diffie-Hellman-Merkle is a way to share a secret key with someone (or something) without actually sending them the key. Before we look into how we share keys let\u0026rsquo;s first look into what keys are and why we would want to invent a method to share keys without giving the other person the key.\n Your front door is usually locked by a key. This key unlocks \u0026amp; locks your front door. You have one key which you use to unlock and lock things.\nOnly people with the key or a copy of the key can unlock the door. Now, imagine you\u0026rsquo;re going to be on holiday Friday, Saturday, Sunday in Bali. You want to invite your friend around to look after your cat üò∫ while you\u0026rsquo;re on the beautiful beaches üèñÔ∏è.\nYour only friend is unfortunately on holiday Wednesday, Thursday and Friday. They get back right as you leave for holiday. You can\u0026rsquo;t be there to physically give them the key, but hiding the key under a rock outside your door seems insecure. Anyone could lift up that rock and find the key, but you just want your friend to have the key.\nThis is where Diffie-Hellman comes in. Well, with Diffie-Hellman you\u0026rsquo;re not exchanging physical keys but rather digital keys. Let\u0026rsquo;s explore some basic cryptography to understand why digital key exchange sucks just as much as real life key exchange.\n Julius Caesar used a cipher to send messages that no one else could read other than the intended recipient. Mainly because no one could read back in 100 BC, and those that could wouldn\u0026rsquo;t understand a random string of letters. That\u0026rsquo;s the whole point of cryptography. To create ways to communicate without third parties understanding the message. This cipher is Caesar*\u0026lsquo;s Cipher*. Given an alphabet and a key (the key is an integer between 1 and 25), shift all of the alphabet letters by key. Image from GeeksForGeeks showing Caeser\u0026rsquo;s Cipher shift of 3 With a shift of 3, as seen in the image above, A becomes D, B becomes E and so on until it wraps around with X = A. The original message is called the *plaintext *and the encrypted message is called the *ciphertext*.\nThe easiest way to perform Caesar\u0026rsquo;s Cipher is to turn all of the letters into numbers, a = 1, b = 2, c = 3 and so on.\nTo encrypt, E, you calculate this for every letter (where s is the shift):\n$$ E_{s}(letter) = (letter + shift)$$\nTo decrypt Caesar\u0026rsquo;s cipher, D, you calculate this for every letter:\n$$ D_{s}(letter) = (letter - shift)$$ Something important to note is that this version of the cipher doesn\u0026rsquo;t support wraparound (for brevity).\nAs you can tell, it\u0026rsquo;s not very secure. With 25 total shifts you just have to shift the text 25 times until you find the decrypted code, this is called a brute force attack. You take the encrypted text and shift it all 25 times until you find the decrypted text. But let\u0026rsquo;s imagine for a second that this was a hard cipher - that brute force isn\u0026rsquo;t feasible.\nThe shift is the key of Caesar\u0026rsquo;s cipher. But the problem still persists, how do you tell your friend you\u0026rsquo;re using a shift of 9? Any and all forms of communication can be listened in on. It doesn\u0026rsquo;t matter if you\u0026rsquo;re writing a letter or going to a hidden forest in Switzerland 30 miles from the nearest town. If you communicate the key, it can be listened in on.\nHow do you tell your friend you\u0026rsquo;re using a shift of 9, for example? You have to communicate it to them somehow. Any and all forms of communication can be listened in on - whether that\u0026rsquo;s writing a letter or going to a hidden forest in Switzerland 30 miles from the nearest town and telling your friend. The problem becomes even more apparent when you realise that communicating parties over the internet normally have no prior knowledge about each other and are thousands of miles apart. This is where the magic of Diffie-Hellman-Merkle key exchange comes in.\n Diffie-Hellman-Merkle Diffie-Hellman is a way to securely exchange keys in public. It was conceptualised by Ralph Merkle, and named After Whitfield Diffie and Martin Hellman. I have chosen to include Merkle\u0026rsquo;s name as the title because he put in just as much work as Diffie-Hellman and his name never appears when this algorithm is talked about.\nU.S. Patent 4,200,770, from 1977, is now expired and describes the now-public-domain algorithm. It credits Hellman, Diffie, and Merkle as inventors.\nLet\u0026rsquo;s go through how this algorithm works.\n Pick two numbers, G and N.  For this algorithm, we will also walk through the colour mixing method for explaining how it works.\nAlice and Bob publicly agree to use a modulus p = 23 and g = 5 (which is a primitive root modulo 23, explained later). Modulus is just the remainder of the division. Note: this example comes from Wikipedia.\nIt\u0026rsquo;s hard to describe the paint method in text, so if you want to know about this method I suggest watching this video: We\u0026rsquo;ll colour G yellow. We have 2 copies of G (yellow) as seen above. When Alice and Bob agree on these numbers, Eve knows they are using these numbers.\nAlice needs to calculate a private key.  She does this by picking a secret number (a). She computes $G^a ; mod ; p$ and sends that result to Bob.\nAlice chooses a secret, random integer a = 4.\nAlice computes $A = 5^4 ; mod ; 23 = 4$ and sends the number 4 to Bob.\nShe colours this private key reddish-brown. Eve doesn\u0026rsquo;t know Alice\u0026rsquo;s secret number is 4, only that the result of this equation is 4. It\u0026rsquo;s not feasible for Eve to calculate what Alice\u0026rsquo;s secret number is from the resultant of this equation.\nBob makes his own private key. Its colour is dark green.  He calculates this by picking a secret number (b) and computing $g^b ; mod ; p$. He then sends the result to Alice. Bob creates a random private key, for this example we\u0026rsquo;ll use 3.\nThen Bob calculates $B = 5^3 ; mod ; 23 = 10$ and sends 10 to Alice. 4. Now Bob takes the number Alice sent him and computes $b^a ; mod ; p$.\nIn the colour analogy, this is taking Alice\u0026rsquo;s paint colour and adding it to Bob\u0026rsquo;s paint colour.\nBob computes $s = 4^3 ; mod ; 23 = 18$ Bob doesn\u0026rsquo;t send this to Alice.\nAlice computes $A^b ; mod ; p$.  In the paint analogy, this is Alice adding Bob\u0026rsquo;s paint (that Bob sent her) to her paint.\nAlice calculates $s = 10^4 ; mod ; 23 = 18$\nThe magic is that Alice and Bob now have the same number, or the same paint colour. Let\u0026rsquo;s discuss in detail the mathematics behind this cool algorithm.\n Explanation of maths Diffie-Hellman-Merkle works because of a cool modulus exponent principle. First, let\u0026rsquo;s explain what modulus is before we try to understand this principle.\nModular Arithmetic Imagine a finite range of numbers, for example, 1 to 12. These numbers are arranged in a circle, much like a clock (modular arithmetic is sometimes called clock arithmetic because of this). https://commons.wikimedia.org Count 13 around this clock. You get to 12 and then you need to count 1 more - so you go back to 1. Modular arithmetic is still defined as the remainder of division, however it can also be defined (and is more commonly defined) as a clock.\nFunctions using modular arithmetic tend to perform erratically, which in turn sometimes makes them one-way functions. Let\u0026rsquo;s see this with an example by taking a regular function and seeing how it works when it becomes a modular arithmetic function.\n$$3^x$$\nWhen we insert 2 into this function, we get $3^2 = 6$. Insert 3 and we get $3^3 = 9$.\nThis function is easy to reverse. If we\u0026rsquo;re given 9, we can tell that the function had an input of 3, because of $3^3 = 9$.\nHowever, with modular arithmetic added, it doesn\u0026rsquo;t behave sensibly.\nImage we had this formula:\n$$ 3^x ; mod ; 7 = 1$$\nHow would you find out what x is? You can\u0026rsquo;t put the mod on the other side, because there isn\u0026rsquo;t really an inverse of modular arithmetic. What about guessing? Let\u0026rsquo;s input 5:\n$$ 3^5 ; mod ; 7 = 5$$\nOkay, that was too big. You might want to go lower, maybe 4 or 3 but actually this is the wrong direction. When x is 6, it is equal to 1.\nIn normal arithmetic, we can test numbers and get a feel for whether we are getting warmer or colder, but this isn\u0026rsquo;t the case with modular arithmetic.\nOften the easiest way to reverse modular arithmetic is to compile a table for all values of x until the right answer is found. Although this may work for smaller numbers, it is computationally infeasible to do for much larger numbers. This is often why modular arithmetic is known as a one-way function.\nIf I gave you a number such as 5787 and told you to find the function for it, it would be infeasible. In fact, if I gave you the ability to input any number into the function it would still be hard. It took me a mere few seconds to make this function, but it\u0026rsquo;ll take you hours or maybe even days to work out what x is.\nDiffie-Hellman-Merkle is a one-way function. While it is relatively easy to carry out this function, it is computationally infeasible to do the reverse of the function and find out what the keys are. Although, it is possible to reverse an RSA encryption if you know some numbers such as N.\nPrimitive root The primitive root of a prime number, p, is a number, a, such that all numbers:\n$$a ; mod ; p, a^2 mod p, a^3 ; mod ; p, a^4 ; mod ; p, \u0026hellip;$$\nare different. There is a formula for counting what the indices are, but I think it\u0026rsquo;s far more intuitive to think \u0026ldquo;the second one is to the power of 2, the third one is to the power of 3\u0026rdquo; and so on.\nLet\u0026rsquo;s see an example where $p = 7$. Let\u0026rsquo;s set $a_1 = 2$ and $a_2 = 3$.\n$$2^0 = 1 ( mod ; 7) = 1$$\n$$2^1 = 2 ( mod ; 7) = 2$$\n$$2^2 = 4 ( mod ; 7) = 4$$\n$$2^3 = 8 ( mod ; 7) = 1$$\nUh oh! 20 is the same as 23. This means that 2 is not a primitive root of 7. Let\u0026rsquo;s try again with 3.\n$$3^0 = 1 ( mod ; 7) = 1$$\n$$3^1 = 3 (mod ; 7) = 3$$\n$$3^2 = 9 (mod ; 7) = 2$$\n$$3^3 = 27 (mod ; 7) = 6$$\n$$3^4 = 81 ( mod ; 7) = 4$$\n$$3^5 = 243 ( mod ; 7) = 5$$\n$$3^6 = 1 (mod ; 7) = 1$$\nNow let\u0026rsquo;s try a = 3.\n$$3^0 = 1$$\n$$3^1 = 3$$\n$$3^2 = 2$$\n$$3^3 = 6$$\n$$3^4 = 4$$\n$$3^5 = 5$$\n$$3^6 = 1$$\nNow we\u0026rsquo;ve gotten a cycle in these powers.\n36 = 1, and 30 = 1. This is because we are using modulus it repeats into this cycle, so we can stop now. Unlike before where we reached 23 and it cycled, it\u0026rsquo;s okay if it cycles here because for any prime number, p, and any number, a, such that $a \\ne 0 ; mod ; p$ and $a \\ne 1 ; mod ; p$ the consecutive powers of $a$ may cover no more than p - 1 values modulo p. That is, we go from $1, \u0026hellip;, p - 1$. When p is 7, the consecutive powers cover up to 6.\nDiscrete logarithms $$a^b = c ; mod ; n$$\nSuch an equation means some numbers you can write it differently as:\n$$log_a c = b ; mod ; n$$\nLogarithms are the inverse of exponents, we\u0026rsquo;ve just inversed the sum here.\nNow it\u0026rsquo;s a well defined function, we can say in discrete terms that $log_3 5 = 5 ; (mod ; 7)$ (looking at the table above).\nif you use a non-primitive root number it becomes easier, as we have a smaller number of outcomes (because it repeats earlier), as seen below.\n$$2^0 = 1 (mod ; 7) = 1$$\n$$2^1 = 2 ( mod ; 7) = 2$$\n$$2^2 = 4 ( mod ; 7) = 4$$\n$$2^3 = 8 ( mod ; 7) = 1$$\nBy using a primitive root, we get a much larger outcome which makes it harder.\n$$3^0 = 1 ( mod ; 7) = 1$$\n$$3^1 = 3 (mod ; 7) = 3$$\n$$3^2 = 9 ( mod ; 7) = 2$$\n$$3^3 = 27 ( mod ; 7) = 6$$\n$$3^4 = 81 ( mod ; 7) = 4$$\n$$3^5 = 243 ( mod ; 7) = 5$$\n$$3^7 = 1 ( mod ; 7) = 1$$\nIt is relatively easy to calculate exponentials modulo a prime, that is a, I, p calculate $a^i mod p$.\nExponentiation is a cheap operation. you can do it even for very large numbers while logarithm is a much more difficult function to calculate for large numbers.\nTo calculate exponentiation, you give number 2 and you respond to me what the answer is. that\u0026rsquo;s exponentiation, going from left to right.\n$$3^0 = 1$$\n$$3^1 = 3$$\n$$3^2 = 2$$\n$$3^3 = 6$$\n$$3^4 = 4$$\n$$3^5 = 5$$\nLogarithm is how to go back, from right to left. Logarithms are much harder than exponentiation.\n Maths implemented Let\u0026rsquo;s go back to seeing how Diffie-Hellman worked, but this time with a lot more knowledge of how the mathematics works.\nWe have 2 people, Alice and Bob. Each of them has to agree in advance some prime number q (publicly known number) and its primitive root $\\alpha$(publicly known).\nWe randomly select the prime number 7 with the primitive root 3.\nLet Alice and Bob wish to exchange a key, then they do the following:\n Alice selects a random integer $x_a \u0026lt; q$ and keeps it in secret B selects a random integer $x_b \u0026lt; q$ and keeps it in secret Alice calculates the function left to right (exponentiation)  $$3^0 = 2$$\n$$3^1 = 3$$\n$$3^2 = 2$$\n$$3^3 = 6$$\n$$3^4 = 4$$\n$$3^5 = 5$$\nand they choose one of the exponents, chosen randomly and kept in a secret. Now Alice does $y_a = a^{x a} mod q$ and sends it to Bob.\nThis example isn\u0026rsquo;t very impressive, and sometimes $3^5 = 5$ but for much larger numbers most things change everything, this is almost RSA encryption (the idea is the same, but it\u0026rsquo;s not quite the same as this is key exchange, not encryption)\nBob then does the same as Alice. Both Alice and Bob are now capable of calculating the shared key.\nAlice calculates $k = (y_b)^{x_a} ; mod ; q$\nBob calculates $k = (y_a)^{x_b} ; mod ; q$\nNow they have the same numbers, k is the common secret key.\n$$(\\alpha ^ {x_b})^{x_a} = (\\alpha ^ {x_a})^{x_b}$$\nThis equation above is what makes it all work. The formulae are the same, but different. You get Alice to do one side of the formula, Bob does another side and they end up with the same number.\nThis really is the equation that puts it all together. Most of this blog post led up to this equation.\na and b are secret, and without these numbers, there is no easy way to repeat these computations because in to do it you need to know the secrets.\nThe above formula shows that the two methods are exactly equal. If you do the left equation, you get the same result as the right equation.\n Conclusion Diffie-Hellman-Merkle is a fascinating way of sharing a secret over an unsecured communications medium, by not sharing it at all over that medium.\nIf you want to learn about the different attacks that have been attempted on Diffie-Hellman and one attack which might be a very big problem, sign up to my email list below and I\u0026rsquo;ll send you the PDF üòÅ‚ú®\n If you\u0026rsquo;re feeling extra generous, I have a PayPal  and even a Patreon. I\u0026rsquo;m a university student who writes these articles in my spare time. This blog is my full time job, so any and all donations are appreciated\n","permalink":"https://polymath.cloud/diffie-hellman-merkle/","summary":"Diffie-Hellman-Merkle is a way to share a secret key with someone (or something) without actually sending them the key. Before we look into how we share keys let\u0026rsquo;s first look into what keys are and why we would want to invent a method to share keys without giving the other person the key.\n Your front door is usually locked by a key. This key unlocks \u0026amp; locks your front door.","title":"How to Share a Secret (Diffie-Hellman-Merkle)"},{"content":"Dynamic programming is breaking down a problem into smaller sub-problems, solving each sub-problem and storing the solutions to each of these sub-problems in an array (or similar data structure) so each sub-problem is only calculated once.\nIt is both a mathematical optimisation method and a computer programming method.\nOptimisation problems seek the maximum or minimum solution. The general rule is that if you encounter a problem where the initial algorithm is solved in O(2n) time, it is better solved using Dynamic Programming.\n Why Is Dynamic Programming Called Dynamic Programming? Richard Bellman invented DP in the 1950s. Bellman named it Dynamic Programming because at the time, RAND (his employer), disliked mathematical research and didn\u0026rsquo;t want to fund it. He named it Dynamic Programming to hide the fact he was really doing mathematical research.\nBellman explains the reasoning behind the term Dynamic Programming in his autobiography, Eye of the Hurricane: An Autobiography (1984, page 159). He explains:\n \u0026ldquo;I spent the Fall quarter (of 1950) at RAND.\nMy first task was to find a name for multistage decision processes. An interesting question is, Where did the name, dynamic programming, come from?\nThe 1950s were not good years for mathematical research. We had a very interesting gentleman in Washington named Wilson. He was Secretary of Defense, and he actually had a pathological fear and hatred of the word research. I‚Äôm not using the term lightly; I‚Äôm using it precisely.\nHis face would suffuse, he would turn red, and he would get violent if people used the term research in his presence. You can imagine how he felt, then, about the term mathematical. The RAND Corporation was employed by the Air Force, and the Air Force had Wilson as its boss, essentially. Hence, I felt I had to do something to shield Wilson and the Air Force from the fact that I was really doing mathematics inside the RAND Corporation. What title, what name, could I choose? In the first place I was interested in planning, in decision making, in thinking. But planning, is not a good word for various reasons. I decided therefore to use the word ‚Äúprogramming‚Äù. I wanted to get across the idea that this was dynamic, this was multistage, this was time-varying. I thought, let\u0026rsquo;s kill two birds with one stone. Let\u0026rsquo;s take a word that has an absolutely precise meaning, namely dynamic, in the classical physical sense. It also has a very interesting property as an adjective, and that is it\u0026rsquo;s impossible to use the word dynamic in a pejorative sense. Try thinking of some combination that will possibly give it a pejorative meaning. It\u0026rsquo;s impossible. Thus, I thought dynamic programming was a good name. It was something not even a Congressman could object to. So I used it as an umbrella for my activities.\u0026rdquo;\n  What are Sub-Problems? Sub-problems are smaller versions of the original problem. Let\u0026rsquo;s see an example. With the equation below:\n$$1 + 2 + 3 + 4$$\nWe can break this down to:\n$$1 + 2$$\n$$3 + 4$$\nOnce we solve these two smaller problems, we can add the solutions to these sub-problems to find the solution to the overall problem.\nNotice how these sub-problems breaks down the original problem into components that build up the solution. This is a small example but it illustrates the beauty of Dynamic Programming well. If we expand the problem to adding 100\u0026rsquo;s of numbers it becomes clearer why we need Dynamic Programming. Take this example:\n$$6 + 5 + 3 + 3 + 2 + 4 + 6 + 5$$\nWe have $6 + 5$ twice. The first time we see it, we work out $6 + 5$. When we see it the second time we think to ourselves:\n \u0026ldquo;Ah, 6 + 5. I\u0026rsquo;ve seen this before. It\u0026rsquo;s 11!\u0026rdquo;\n In Dynamic Programming we store the solution to the problem so we do not need to recalculate it. By finding the solutions for every single sub-problem, we can tackle the original problem itself.\n*Memoisation *is the act of storing a solution.\n What is Memoisation in Dynamic Programming? Let\u0026rsquo;s see why storing answers to solutions make sense. We\u0026rsquo;re going to look at a famous problem, Fibonacci sequence. This problem is normally solved in Divide and Conquer.\nThere are 3 main parts to divide and conquer:\n **Divide **the problem into smaller sub-problems of the same type. **Conquer **- solve the sub-problems recursively. **Combine **- Combine all the sub-problems to create a solution to the original problem.  Dynamic programming has one extra step added to step 2. This is memoisation.\nThe Fibonacci sequence is a sequence of numbers. It\u0026rsquo;s the last number + the current number. We start at 1.\n$$1 + 0 = 1$$\n$$1 + 1 = 2$$\n$$2 + 1 = 3$$\n$$3 + 2 = 5$$\n$$5 + 3 = 8$$\nIn Python, this is:\ndef F(n): if n == 0 or n == 1: return n else: return F(n-1)+F(n-2) If you\u0026rsquo;re not familiar with recursion I have a blog post written for you that you should read first.\nLet\u0026rsquo;s calculate F(4). In an execution tree, this looks like:\n   We calculate F(2) twice. On bigger inputs (such as F(10)) the repetition builds up. The purpose of dynamic programming is to not calculate the same thing twice.\nInstead of calculating F(2) twice, we store the solution somewhere and only calculate it once.\nWe\u0026rsquo;ll store the solution in an array. F[2] = 1. Below is some Python code to calculate the Fibonacci sequence using Dynamic Programming.\ndef fibonacciVal(n): memo[0], memo[1] = 0, 1 for i in range(2, n+1): memo[i] = memo[i-1] + memo[i-2] return memo[n]  How to Identify Dynamic Programming Problems In theory, Dynamic Programming can solve every problem. The question is then:\n \u0026ldquo;When should I solve this problem with dynamic programming?\u0026rdquo;\n We should use dynamic programming for problems that are between *tractable *and *intractable *problems.\nTractable problems are those that can be solved in polynomial time. That\u0026rsquo;s a fancy way of saying we can solve it in a fast manner. Binary search and sorting are all fast. Intractable problems are those that run in exponential time. They\u0026rsquo;re slow. Intractable problems are those that can only be solved by bruteforcing through every single combination (NP hard).\nWhen we see terms like:\n \u0026ldquo;shortest/longest, minimized/maximized, least/most, fewest/greatest, \u0026ldquo;biggest/smallest\u0026rdquo;\n We know it\u0026rsquo;s an optimisation problem.\nDynamic Programming algorithms proof of correctness is usually self-evident. Other algorithmic strategies are often much harder to prove correct. Thus, more error-prone.\nWhen we see these kinds of terms, the problem may ask for a specific number ( \u0026ldquo;find the minimum number of edit operations\u0026rdquo;) or it may ask for a result ( \u0026ldquo;find the longest common subsequence\u0026rdquo;). The latter type of problem is harder to recognize as a dynamic programming problem. If something sounds like optimisation, Dynamic Programming can solve it.\nImagine we\u0026rsquo;ve found a problem that\u0026rsquo;s an optimisation problem, but we\u0026rsquo;re not sure if it can be solved with Dynamic Programming. First, identify what we\u0026rsquo;re optimising for. Once we realize what we\u0026rsquo;re optimising for, we have to decide how easy it is to perform that optimisation. Sometimes, the greedy approach is enough for an optimal solution.\nDynamic programming takes the brute force approach. It Identifies repeated work, and eliminates repetition.\nBefore we even start to plan the problem as a dynamic programming problem, think about what the brute force solution might look like. Are sub steps repeated in the brute-force solution? If so, we try to imagine the problem as a dynamic programming problem.\nMastering dynamic programming is all about understanding the problem. List all the inputs that can affect the answers. Once we\u0026rsquo;ve identified all the inputs and outputs, try to identify whether the problem can be broken into subproblems. If we can identify subproblems, we can probably use Dynamic Programming.\nThen, figure out what the recurrence is and solve it. When we\u0026rsquo;re trying to figure out the recurrence, remember that whatever recurrence we write has to help us find the answer. Sometimes the answer will be the result of the recurrence, and sometimes we will have to get the result by looking at a few results from the recurrence.\nDynamic Programming can solve many problems, but that does not mean there isn\u0026rsquo;t a more efficient solution out there. Solving a problem with Dynamic Programming feels like magic, but remember that dynamic programming is merely a clever brute force. Sometimes it pays off well, and sometimes it helps only a little.\n   --- How to Solve Problems using Dynamic Programming Now we have an understanding of what Dynamic programming is and how it generally works. Let\u0026rsquo;s look at to create a Dynamic Programming solution to a problem. We\u0026rsquo;re going to explore the process of Dynamic Programming using the Weighted Interval Scheduling Problem.\nPretend you\u0026rsquo;re the owner of a dry cleaner. You have n customers come in and give you clothes to clean. You can only clean one customer\u0026rsquo;s pile of clothes (PoC) at a time. Each pile of clothes, i, must be cleaned at some pre-determined start time $s_i$ and some predetermined finish time $f_i$.\nEach pile of clothes has an associated value, $v_i$, based on how important it is to your business. For example, some customers may pay more to have their clothes cleaned faster. Or some may be repeating customers and you want them to be happy.\nAs the owner of this dry cleaners you must determine the optimal schedule of clothes that maximises the total value of this day. This problem is a re-wording of the Weighted Interval scheduling problem.\nYou will now see 4 steps to solving a Dynamic Programming problem. Sometimes, you can skip a step. Sometimes, your problem is already well defined and you don\u0026rsquo;t need to worry about the first few steps.\nStep 1. Write the Problem out Grab a piece of paper. Write out:\n What is the problem? What are the sub-problems? What would the solution roughly look like?  In the dry cleaner problem, let\u0026rsquo;s put down into words the subproblems. What we want to determine is the maximum value schedule for each pile of clothes such that the clothes are sorted by start time.\nWhy sort by start time? Good question! We want to keep track of processes which are currently running. If we sort by finish time, it doesn\u0026rsquo;t make much sense in our heads. We could have 2 with similar finish times, but different start times. Time moves in a linear fashion, from start to finish. If we have piles of clothes that start at 1 pm, we know to put them on when it reaches 1pm. If we have a pile of clothes that finishes at 3 pm, we might need to have put them on at 12 pm, but it\u0026rsquo;s 1pm now.\nWe can find the maximum value schedule for piles $n - 1$ through to n. And then for $n - 2$ through to n. And so on. By finding the solution to every single sub-problem, we can tackle the original problem itself. The maximum value schedule for piles 1 through n. Sub-problems can be used to solve the original problem, since they are smaller versions of the original problem.\nWith the interval scheduling problem, the only way we can solve it is by brute-forcing all subsets of the problem until we find an optimal one. What we\u0026rsquo;re saying is that instead of brute-forcing one by one, we divide it up. We brute force from $n-1$ through to n. Then we do the same for $n - 2$ through to n. Finally, we have loads of smaller problems, which we can solve dynamically. We want to build the solutions to our sub-problems such that each sub-problem builds on the previous problems.\n2. Mathematical Recurrences I know, mathematics sucks. If you\u0026rsquo;ll bare with me here you\u0026rsquo;ll find that this isn\u0026rsquo;t that hard. Mathematical recurrences are used to:\n Define the running time of a divide and conquer (dynamic programming) technique\n Recurrences are also used to define problems. If it\u0026rsquo;s difficult to turn your subproblems into maths, then it may be the wrong subproblem.\nThere are 2 steps to creating a mathematical recurrence:\n1: Define the Base Case Base cases are the smallest possible denomination of a problem.\nWhen creating a recurrence, ask yourself these questions:\n \u0026ldquo;What decision do I make at step 0?\u0026rdquo;\n It doesn\u0026rsquo;t have to be 0. The base case is the smallest possible denomination of a problem. We saw this with the Fibonacci sequence. The base was:\n If n == 0 or n == 1, return 1  It\u0026rsquo;s important to know where the base case lies, so we can create the recurrence. In our problem, we have one decision to make:\n Put that pile of clothes on to be washed  or\n Don‚Äôt wash that pile of clothes today  If n is 0, that is, if we have 0 PoC then we do nothing. Our base case is:\n if n == 0, return 0\n 2: What Decision Do I Make at Step n? Now we know what the base case is, if we\u0026rsquo;re at step n what do we do? For each pile of clothes that is compatible with the schedule so far. Compatible means that the start time is after the finish time of the pile of clothes currently being washed. The algorithm has 2 options:\n Wash that pile of clothes Don\u0026rsquo;t wash that pile of clothes  We know what happens at the base case, and what happens else. We now need to find out what information the algorithm needs to go backwards (or forwards).\n \u0026ldquo;If my algorithm is at step i, what information would it need to decide what to do in step i+1?\u0026rdquo;\n To decide between the two options, the algorithm needs to know the next compatible PoC (pile of clothes). The next compatible PoC for a given pile, p, is the PoC, n, such that $s_n$ (the start time for PoC n) happens after $f_p$ (the finish time for PoC p). The difference between $s_n$ and $f_p$ should be minimised.\nIn English, imagine we have one washing machine. We put in a pile of clothes at 13:00. Our next pile of clothes starts at 13:01. We can\u0026rsquo;t open the washing machine and put in the one that starts at 13:00. Our next compatible pile of clothes is the one that starts after the finish time of the one currently being washed.\n \u0026ldquo;If my algorithm is at step i, what information did it need to decide what to do in step i-1?\u0026rdquo;\n The algorithm needs to know about future decisions. The ones made for PoC i through n to decide whether to run or not run PoC i-1.\nNow that we‚Äôve answered these questions, we‚Äôve started to form a recurring mathematical decision in our mind. If not, that‚Äôs also okay, it becomes easier to write recurrences as we get exposed to more problems.\nHere‚Äôs our recurrence:\n $$ OPT(i) = \\begin{cases} 0, \\quad \\text{If i = 0} \\\\ max{v_i + OPT(next[i]), OPT(i+1)}, \\quad \\text{if n  1} \\end{cases}\\end{cases} $$ Let\u0026rsquo;s explore in detail what makes this mathematical recurrence. OPT(i) represents the maximum value schedule for PoC i through to n such that PoC is sorted by start times. OPT(i) is our subproblem from earlier.\nWe start with the base case. All recurrences need somewhere to stop. If we call OPT(0) we\u0026rsquo;ll be returned with 0.\nTo determine the value of OPT(i), there are two options. We want to take the maximum of these options to meet our goal. Our goal is the maximum value schedule for all piles of clothes. Once we choose the option that gives the maximum result at step i, we memoize its value as OPT(i).\nMathematically, the two options - run or not run PoC i, are represented as:\n$$v_i + OPT(next[n])$$\nThis represents the decision to run PoC i. It adds the value gained from PoC i to OPT(next[n]), where next[n] represents the next compatible pile of clothing following PoC i. When we add these two values together, we get the maximum value schedule from i through to n such that they are sorted by start time if i runs.\nSorted by start time here because next[n] is the one immediately after v_i, so by default, they are sorted by start time.\n$$OPT(i + 1)$$\nIf we decide not to run i, our value is then OPT(i + 1). The value is not gained. OPT(i + 1) gives the maximum value schedule for i+1 through to n, such that they are sorted by start times.\n3. Determine the Dimensions of the Memoisation Array and the Direction in Which It Should Be Filled The solution to our Dynamic Programming problem is OPT(1). We can write out the solution as the maximum value schedule for PoC 1 through n such that PoC is sorted by start time. This goes hand in hand with \u0026ldquo;maximum value schedule for PoC i through to n\u0026rdquo;.\nFrom step 2:\n$$OPT(1) = max(v_1 + OPT(next[1]), OPT(2))$$\nGoing back to our Fibonacci numbers earlier, our Dynamic Programming solution relied on the fact that the Fibonacci numbers for 0 through to n - 1 were already memoised. That is, to find F(5) we already memoised F(0), F(1), F(2), F(3), F(4). We want to do the same thing here.\nThe problem we have is figuring out how to fill out a memoisation table. In the scheduling problem, we know that OPT(1) relies on the solutions to OPT(2) and OPT(next[1]). PoC 2 and next[1] have start times after PoC 1 due to sorting. We need to fill our memoisation table from OPT(n) to OPT(1).\nWe can see our array is one dimensional, from 1 to n. But, if we couldn\u0026rsquo;t see that we can work it out another way. The dimensions of the array are equal to the number and size of the variables on which OPT(x) relies. In our algorithm, we have OPT(i) - one variable, i. This means our array will be 1-dimensional and its size will be n, as there are n piles of clothes.\nIf we know that n = 5, then our memoisation array might look like this:\nmemo = [0, OPT(1), OPT(2), OPT(3), OPT(4), OPT(5)] 0 is also the base case. memo[0] = 0, per our recurrence from earlier.\n4. Coding Our Solution When I am coding a Dynamic Programming solution, I like to read the recurrence and try to recreate it. Our first step is to initialise the array to size (n + 1). In Python, we don\u0026rsquo;t need to do this. But you may need to do it if you\u0026rsquo;re using a different language.\nOur second step is to set the base case.\nTo find the profit with the inclusion of job[i]. we need to find the latest job that doesn‚Äôt conflict with job[i]. The idea is to use Binary Search to find the latest non-conflicting job. I\u0026rsquo;ve copied the code from here but edited.\nFirst, let\u0026rsquo;s define what a \u0026ldquo;job\u0026rdquo; is. As we saw, a job consists of 3 things:\n# Class to represent a job  class Job: def __init__(self, start, finish, profit): self.start = start self.finish = finish self.profit = profit Start time, finish time, and the total profit (benefit) of running that job.\nThe next step we want to program is the schedule.\n# The main function that returns the maximum possible  # profit from given array of jobs def schedule(job): # Sort jobs according to start time  job = sorted(job, key = lambda j: j.start) # Create an array to store solutions of subproblems. table[i]  # stores the profit for jobs till arr[i] (including arr[i])  n = len(job) table = [0 for _ in range(n)] table[0] = job[0].profit Earlier, we learnt that the table is 1 dimensional. We sort the jobs by start time, create this empty table and set table[0] to be the profit of job[0]. Since we\u0026rsquo;ve sorted by start times, the first compatible job is always job[0].\nOur next step is to fill in the entries using the recurrence we learnt earlier. To find the next compatible job, we\u0026rsquo;re using Binary Search. In the full code posted later, it\u0026rsquo;ll include this. For now, let\u0026rsquo;s worry about understanding the algorithm.\nIf the next compatible job returns -1, that means that all jobs before the index, i, conflict with it (so cannot be used). Inclprof means we\u0026rsquo;re including that item in the maximum value set. We then store it in table[i], so we can use this calculation again later.\n# Fill entries in table[] using recursive property  for i in range(1, n): # Find profit including the current job  inclProf = job[i].profit l = binarySearch(job, i) if (l != -1): inclProf += table[l]; # Store maximum of including and excluding  table[i] = max(inclProf, table[i - 1]) Our final step is then to return the profit of all items up to n-1.\nreturn table[n-1] The full code can be seen below:\n# Python program for weighted job scheduling using Dynamic  # Programming and Binary Search  # Class to represent a job  class Job: def __init__(self, start, finish, profit): self.start = start self.finish = finish self.profit = profit # A Binary Search based function to find the latest job  # (before current job) that doesn\u0026#39;t conflict with current  # job. \u0026#34;index\u0026#34; is index of the current job. This function  # returns -1 if all jobs before index conflict with it.  def binarySearch(job, start_index): # https://en.wikipedia.org/wiki/Binary_search_algorithm # Initialize \u0026#39;lo\u0026#39; and \u0026#39;hi\u0026#39; for Binary Search  lo = 0 hi = start_index - 1 # Perform binary Search iteratively  while lo \u0026lt;= hi: mid = (lo + hi) // 2 if job[mid].finish \u0026lt;= job[start_index].start: if job[mid + 1].finish \u0026lt;= job[start_index].start: lo = mid + 1 else: return mid else: hi = mid - 1 return -1 # The main function that returns the maximum possible  # profit from given array of jobs  def schedule(job): # Sort jobs according to start time  job = sorted(job, key = lambda j: j.start) # Create an array to store solutions of subproblems. table[i]  # stores the profit for jobs till arr[i] (including arr[i])  n = len(job) table = [0 for _ in range(n)] table[0] = job[0].profit; # Fill entries in table[] using recursive property  for i in range(1, n): # Find profit including the current job  inclProf = job[i].profit l = binarySearch(job, i) if (l != -1): inclProf += table[l]; # Store maximum of including and excluding  table[i] = max(inclProf, table[i - 1]) return table[n-1] # Driver code to test above function  job = [Job(1, 2, 50), Job(3, 5, 20), Job(6, 19, 100), Job(2, 100, 200)] print(\u0026#34;Optimal profit is\u0026#34;), print(schedule(job)) Congrats! ü•≥ We\u0026rsquo;ve just written our first dynamic program! Now that we‚Äôve wet our feet, let\u0026rsquo;s walk through a different type of dynamic programming problem.\n Knapsack Problem Imagine you are a criminal. Dastardly smart. You break into Bill Gates‚Äôs mansion. Wow, okay!?!? How many rooms is this? His washing machine room is larger than my entire house??? Ok, time to stop getting distracted. You brought a small bag with you. A knapsack - if you will.\nYou can only fit so much into it. Let‚Äôs give this an arbitrary number. The bag will support weight 15, but no more. What we want to do is maximise how much money we\u0026rsquo;ll make, $b$.\nThe greedy approach is to pick the item with the highest value which can fit into the bag. Let\u0026rsquo;s try that. We\u0026rsquo;re going to steal Bill Gates\u0026rsquo;s TV. ¬£4000? Nice. But his TV weighs 15. So\u0026hellip; We leave with ¬£4000.\nTV = (¬£4000, 15) # (value, weight) Bill Gates has a lot of watches. Let\u0026rsquo;s say he has 2 watches. Each watch weighs 5 and each one is worth ¬£2250. When we steal both, we get ¬£4500 with a weight of 10.\nwatch1 = (¬£2250, 5) watch2 = (¬£2250, 5) watch1 + watch2 \u0026gt;\u0026gt;\u0026gt; (¬£4500, 10) In the greedy approach, we wouldn\u0026rsquo;t choose these watches first. But to us as humans, it makes sense to go for smaller items which have higher values. The Greedy approach cannot optimally solve the {0,1} Knapsack problem. The {0, 1} means we either take the item whole item {1} or we don\u0026rsquo;t {0}. However, Dynamic programming can optimally solve the {0, 1} knapsack problem.\nThe simple solution to this problem is to consider all the subsets of all items. For every single combination of Bill Gates\u0026rsquo;s stuff, we calculate the total weight and value of this combination.\nOnly those with weight less than $W_{max}$ are considered. We then pick the combination which has the highest value. This is a disaster! How long would this take? Bill Gates\u0026rsquo;s would come back home far before you\u0026rsquo;re even 1/3rd of the way there! In Big O, this algorithm takes $O(n^2)$ time.\nYou can see we already have a rough idea of the solution and what the problem is, without having to write it down in maths!\n Maths Behind {0, 1} Knapsack Problem Imagine we had a listing of every single thing in Bill Gates\u0026rsquo;s house. We stole it from some insurance papers. Now, think about the future. What is the optimal solution to this problem?\nWe have a subset, L, which is the optimal solution. L is a subset of S, the set containing all of Bill Gates\u0026rsquo;s stuff.\nLet\u0026rsquo;s pick a random item, N. L either contains N or it doesn\u0026rsquo;t. If it doesn\u0026rsquo;t use N, the optimal solution for the problem is the same as ${1, 2, \u0026hellip;, N-1}$. This is assuming that Bill Gates\u0026rsquo;s stuff is sorted by $value / weight$.\nSuppose that the optimum of the original problem is not optimum of the sub-problem. if we have sub-optimum of the smaller problem then we have a contradiction - we should have an optimum of the whole problem.\nIf L contains N, then the optimal solution for the problem is the same as ${1, 2, 3, \u0026hellip;, N-1}$. We know the item is in, so L already contains N. To complete the computation we focus on the remaining items. We find the optimal solution to the remaining items.\nBut, we now have a new maximum allowed weight of $W_{max} - W_n$. If item N is contained in the solution, the total weight is now the max weight take away item N (which is already in the knapsack).\nThese are the 2 cases. Either item N is in the optimal solution or it isn\u0026rsquo;t.\nIf the weight of item N is greater than $W_{max}$, then it cannot be included so case 1 is the only possibility.\nTo better define this recursive solution, let $S_k = {1, 2, \u0026hellip;, k}$ and $S_0 = \\emptyset$\nLet B[k, w] be the maximum total benefit obtained using a subset of $S_k$. Having total weight at most w.\nThen we define B[0, w] = 0 for each $w \\le W_{max}$.\nOur desired solution is then B[n, $W_{max}$].\n $$ OPT(i) = \\begin{cases} B[k - 1, w], \\quad \\text{If w Tabulation of Knapsack Problem Okay, pull out some pen and paper. No, really. Things are about to get confusing real fast. This memoisation table is 2-dimensional. We have these items:\n(1, 1), (3, 4), (4, 5), (5, 7) Where the tuples are (weight, value).\nWe have 2 variables, so our array is 2-dimensional. The first dimension is from 0 to 7. Our second dimension is the values.\nAnd we want a weight of 7 with maximum benefit.\n     0 1 2 3 4 5 6 7   (1, 1)                 (4, 3)                    (5, 4)                   (7, 5)                    The weight is 7. We start counting at 0. We put each tuple on the left-hand side. Ok. Now to fill out the table!\n    0 1 2 3 4 5 6 7   (1, 1) 0                (4, 3)  0                  (5, 4)  0                 (7, 5)  0                  The columns are weight. At weight 0, we have a total weight of 0. At weight 1, we have a total weight of 1. Obvious, I know. But this is an important distinction to make which will be useful later on.\nWhen our weight is 0, we can\u0026rsquo;t carry anything no matter what. The total weight of everything at 0 is 0.\n    0 1 2 3 4 5 6 7   (1, 1) 0 1               (4, 3)  0                  (5, 4)  0                 (7, 5)  0                  If our total weight is 1, the best item we can take is (1, 1). As we go down through this array, we can take more items. At the row for (4, 3) we can either take (1, 1) or (4, 3). But for now, we can only take (1, 1). Our maximum benefit for this row then is 1.\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0                  (5, 4)  0                 (7, 5)  0                  If our total weight is 2, the best we can do is 1. We only have 1 of each item. We cannot duplicate items. So no matter where we are in row 1, the absolute best we can do is (1, 1).\nLet\u0026rsquo;s start using (4, 3) now. If the total weight is 1, but the weight of (4, 3) is 3 we cannot take the item yet until we have a weight of at least 3.\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1             (5, 4)  0                 (7, 5)  0                  Now we have a weight of 3. Let\u0026rsquo;s compare some things. We want to take the max of:\n$$MAX(4 + T[0][0], 1)$$\nIf we\u0026rsquo;re at 2, 3 we can either take the value from the last row or use the item on that row. We go up one row and count back 3 (since the weight of this item is 3).\nActually, the formula is whatever weight is remaining when we minus the weight of the item on that row. The weight of (4, 3) is 3 and we\u0026rsquo;re at weight 3. $3 - 3 = 0$. Therefore, we\u0026rsquo;re at T[0][0]. T[previous row's number][current total weight - item weight].\n$$MAX(4 + T[0][0], 1)$$\nThe 1 is because of the previous item. The max here is 4.\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4            (5, 4)  0                 (7, 5)  0                  $$max(4 + t[0][1], 1)$$\nTotal weight is 4, item weight is 3. 4 - 3 = 1. Previous row is 0. t[0][1].\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5          (5, 4)  0                 (7, 5)  0                  I won\u0026rsquo;t bore you with the rest of this row, as nothing exciting happens. We have 2 items. And we\u0026rsquo;ve used both of them to make 5. Since there are no new items, the maximum value is 5.\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0                 (7, 5)  0                  Onto our next row:\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4            (7, 5)  0                  Here\u0026rsquo;s a little secret. Our tuples are ordered by weight! That means that we can fill in the previous rows of data up to the next weight point. We know that 4 is already the maximum, so we can fill in the rest.. This is where memoisation comes into play! We already have the data, why bother re-calculating it?\nWe go up one row and head 4 steps back. That gives us:\n$$max(4 + T[2][0], 5)$$.\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5      (7, 5)  0                  Now we calculate it for total weight 5.\n$$max(5 + T[2][1], 5) = 6$$\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5 6     (7, 5)  0                  We do the same thing again:\n$$max(5 + T[2][2], 5) = 6$$\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5 6 6    (7, 5)  0                  Now we have total weight 7. We choose the max of: $$max(5 + T[2][3], 5) = max(5 + 4, 5) = 9$$\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5 6 6 9   (7, 5)  0                  If we had total weight 7 and we had the 3 items (1, 1), (4, 3), (5, 4) the best we can do is 9. Since our new item starts at weight 5, we can copy from the previous row until we get to weight 5.\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5 6 6 9   (7, 5)  0  1  1  4 5          We then do another max. Total weight - new item\u0026rsquo;s weight. This is $5 - 5 = 0$. We want the previous row at position 0.\n$$max(7 + T[3][0], 6)$$\nThe 6 comes from the best on the previous row for that total weight.\n$$max(7 + 0, 6) = 7$$\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5 6 6 9   (7, 5)  0  1  1  4 5 7        $$max(7 + T[3][1], 6) = 8$$     0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5 6 6 9   (7, 5)  0  1  1  4 5 7 8      $$max(7+T[3][2], 9) = 9$$     0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5 6 6 9   (7, 5)  0  1  1  4 5 7 8 9    9 is the maximum value we can get by picking items from the set of items such that the total weight is $\\le 7$. Finding the Optimal Set for {0, 1} Knapsack Problem Using Dynamic Programming Now, what items do we actually pick for the optimal set? We start with this item:\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5 6 6 9   (7, 5)  0  1  1  4 5 7 8 9    We want to know where the 9 comes from. It's coming from the top because the number directly above 9 on the 4th row is 9. Since it's coming from the top, the item (7, 5) is not used in the optimal set. Where does this 9 come from?\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5 6 6 9   (7, 5)  0  1  1  4 5 7 8 9    This 9 is not coming from the row above it. **Item (5, 4) must be in the optimal set.** We now go up one row, and go back 4 steps. 4 steps because the item, (5, 4), has weight 4.\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5 6 6 9   (7, 5)  0  1  1  4 5 7 8 9    4 does not come from the row above. The item (4, 3) must be in the optimal set. The weight of item (4, 3) is 3. We go up and we go back 3 steps and reach:\n    0 1 2 3 4 5 6 7   (1, 1) 0 1 1 1 1  1  1   1    (4, 3)  0  1  1 4 5 5 5 5    (5, 4)  0 1 1  4  5 6 6 9   (7, 5)  0  1  1  4 5 7 8 9    As soon as we reach a point where the weight is 0, we're done. Our two selected items are (5, 4) and (4, 3). The total weight is 7 and our total benefit is 9. We add the two tuples together to find this out. Let\u0026rsquo;s begin coding this.\n Coding {0, 1} Knapsack Problem in Dynamic Programming With Python Now we know how it works, and we\u0026rsquo;ve derived the recurrence for it - it shouldn\u0026rsquo;t be too hard to code it. If our two-dimensional array is i (row) and j (column) then we have:\nif j \u0026lt; wt[i]: If our weight j is less than the weight of item i (i does not contribute to j) then:\nif j \u0026lt; wt[i]: T[i][j] = T[i - 1][j] else: # weight of i \u0026gt;= j T[i][j] = max(val[i] + t[i - 1][j-wt(i), t[i-1][j]) # previous row, subtracting the weight of the item from the total weight or without including ths item This is what the core heart of the program does. I\u0026rsquo;ve copied some code from here to help explain this. I\u0026rsquo;m not going to explain this code much, as there isn\u0026rsquo;t much more to it than what I\u0026rsquo;ve already explained. If you\u0026rsquo;re confused by it, leave a comment below or email me üòÅ\n# Returns the maximum value that can be put in a knapsack of  # capacity W  def knapSack(W , wt , val , n): # Base Case  if n == 0 or W == 0: return 0 # If weight of the nth item is more than Knapsack of capacity  # W, then this item cannot be included in the optimal solution  if (wt[n-1] \u0026gt; W): return knapSack(W , wt , val , n-1) # return the maximum of two cases:  # (1) nth item included  # (2) not included  else: return max(val[n-1] + knapSack(W-wt[n-1] , wt , val , n-1), knapSack(W , wt , val , n-1)) # To test above function  val = [60, 100, 120] wt = [10, 20, 30] W = 50 n = len(val) print(knapSack(W , wt , val , n)) # output 220  Time Complexity of a Dynamic Programming Problem Time complexity is calculated in Dynamic Programming as:\n$$Number ; of ; unique ; states * time ; taken ; per ; state$$\nFor our original problem, the Weighted Interval Scheduling Problem, we had n piles of clothes. Each pile of clothes is solved in constant time. The time complexity is:\n$$O(n) + O(1) = O(n)$$\nI\u0026rsquo;ve written a post about Big O notation if you want to learn more about time complexities.\nWith our Knapsack problem, we had n number of items. The table grows depending on the total capacity of the knapsack, our time complexity is:\n$$O(nw)$$\nWhere n is the number of items, and w is the capacity of the knapsack.\nI\u0026rsquo;m going to let you in on a little secret. It\u0026rsquo;s possible to work out the time complexity of an algorithm from its recurrence. You can use something called the Master Theorem to work it out. This is the theorem in a nutshell:\n Taken from here   Now, I\u0026rsquo;ll be honest. The master theorem deserves a blog post of its own. For now, I\u0026rsquo;ve found this video to be excellent:\n   Dynamic Programming vs Divide \u0026amp; Conquer vs Greedy Dynamic Programming \u0026amp; Divide and Conquer are similar. Dynamic Programming is based on Divide and Conquer, except we memoise the results.\nBut, Greedy is different. It aims to optimise by making the best choice at that moment. Sometimes, this doesn\u0026rsquo;t optimise for the whole problem. Take this question as an example. We have 3 coins:\n1p, 15p, 25p\nAnd someone wants us to give a change of 30p. With Greedy, it would select 25, then 5 * 1 for a total of 6 coins. The optimal solution is 2 * 15. Greedy works from largest to smallest. At the point where it was at 25, the best choice would be to pick 25.\n   Greedy vs Divide \u0026 Conquer vs Dynamic Programming     Greedy Divide \u0026 Conquer Dynamic Programming   Optimises by making the best choice at the moment Optimises by breaking down a subproblem into simpler versions of itself and using multi-threading \u0026 recursion to solve Same as Divide and Conquer, but optimises by caching the answers to each subproblem as not to repeat the calculation twice.   Doesn't always find the optimal solution, but is very fast Always finds the optimal solution, but is slower than Greedy Always finds the optimal solution, but could be pointless on small datasets.   Requires almost no memory Requires some memory to remember recursive calls Requires a lot of memory for memoisation / tabulation    Tabulation (Bottom-Up) vs Memoisation (Top-Down) There are 2 types of dynamic programming. Tabulation and Memoisation.\nMemoisation (Top-Down) We\u0026rsquo;ve computed all the subproblems but have no idea what the optimal evaluation order is. We would then perform a recursive call from the root, and hope we get close to the optimal solution or obtain a proof that we will arrive at the optimal solution. Memoisation ensures you never recompute a subproblem because we cache the results, thus duplicate sub-trees are not recomputed.\nFrom our Fibonacci sequence earlier, we start at the root node. The subtree F(2) isn\u0026rsquo;t calculated twice.\nThis starts at the top of the tree and evaluates the subproblems from the leaves/subtrees back up towards the root. Memoisation is a top-down approach.\nTabulation (Bottom-Up) We\u0026rsquo;ve also seen Dynamic Programming being used as a \u0026lsquo;table-filling\u0026rsquo; algorithm. Usually, this table is multidimensional. This is like memoisation, but with one major difference. We have to pick the exact order in which we will do our computations. The knapsack problem we saw, we filled in the table from left to right - top to bottom. We knew the exact order of which to fill the table.\nSometimes the \u0026lsquo;table\u0026rsquo; is not like the tables we\u0026rsquo;ve seen. It can be a more complicated structure such as trees. Or specific to the problem domain, such as cities within flying distance on a map.\nTabulation \u0026amp; Memosation - Advantages and Disadvantages Generally speaking, memoisation is easier to code than tabulation. We can write a \u0026lsquo;memoriser\u0026rsquo; wrapper function that automatically does it for us. With tabulation, we have to come up with an ordering.\nMemoisation has memory concerns. If we\u0026rsquo;re computing something large such as F(10^8), each computation will be delayed as we have to place them into the array. And the array will grow in size very quickly.\nEither approach may not be time-optimal if the order we happen (or try to) visit subproblems is not optimal. If there is more than one way to calculate a subproblem (normally caching would resolve this, but it\u0026rsquo;s theoretically possible that caching might not in some exotic cases). Memoisation will usually add on our time-complexity to our space-complexity. For example with tabulation we have more liberty to throw away calculations, like using tabulation with Fib lets us use O(1) space, but memoisation with Fib uses O(N) stack space).\n   Memoisation vs Tabulation      Tabulation Memoisation   Code Harder to code as you have to know the order Easier to code as functions may already exist to memoise   Speed Fast as you already know the order and dimensions of the table Slower as you're creating them on the fly    Table completeness The table is fully computed Table does not have to be fully computed    Conclusion Most of the problems you\u0026rsquo;ll encounter within Dynamic Programming already exist in one shape or another. Often, your problem will build on from the answers for previous problems. Here\u0026rsquo;s a list of common problems that use Dynamic Programming.\nI hope that whenever you encounter a problem, you think to yourself \u0026ldquo;can this problem be solved with ?\u0026rdquo; and try it.\n","permalink":"https://polymath.cloud/dynamic-programming/","summary":"Dynamic programming is breaking down a problem into smaller sub-problems, solving each sub-problem and storing the solutions to each of these sub-problems in an array (or similar data structure) so each sub-problem is only calculated once.\nIt is both a mathematical optimisation method and a computer programming method.\nOptimisation problems seek the maximum or minimum solution. The general rule is that if you encounter a problem where the initial algorithm is solved in O(2n) time, it is better solved using Dynamic Programming.","title":"What Is Dynamic Programming With Python Examples"},{"content":"Greedy algorithms aim to make the optimal choice at that given moment. Each step it chooses the optimal choice, without knowing the future. It attempts to find the globally optimal way to solve the entire problem using this method.\nTable of Contents  Table of Contents  At least this isn\u0026rsquo;t a full screen pop up! üòÖ Why Are Greedy Algorithms Called Greedy? What Are Greedy Algorithms Used For? How Do I Create a Greedy Algorithm?   Counting Change Using Greedy  Is Greedy Optimal? Does Greedy Always Work?   Dijkstra\u0026rsquo;s Algorithm  !   Minimum Spanning Trees Using Prim\u0026rsquo;s Algorithm   Fractional Knapsack Problem Using Greedy Algorithm\n  Greedy vs Divide \u0026amp; Conquer vs Dynamic Programming\n  Conclusion\n  At least this isn\u0026rsquo;t a full screen pop up! üòÖ\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px;\n}  #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }\n    At least this isn\u0026rsquo;t a full screen pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\n Why Are Greedy Algorithms Called Greedy? We call algorithms greedy when they utilise the greedy property. The greedy property is:\n At that exact moment in time, what is the optimal choice to make?\n Greedy algorithms are greedy. They do not look into the future to decide the global optimal solution. They are only concerned with the optimal solution locally. This means that the overall optimal solution may differ from the solution the algorithm chooses.\nThey never look backwards at what they\u0026rsquo;ve done to see if they could optimise globally. This is the main difference between Greedy and Dynamic Programming.\nTo be extra clear, one of the most Googled questions about greedy algorithms is:\n \u0026ldquo;What problem-solving strategies don\u0026rsquo;t guarantee solutions but make efficient use of time?\u0026rdquo;\n The answer is \u0026ldquo;Greedy algorithms\u0026rdquo;. They don\u0026rsquo;t guarantee solutions, but are very time efficient. However, in the next section we\u0026rsquo;ll learn that sometimes Greedy solutions give us the optimal solutions.\n What Are Greedy Algorithms Used For? Greedy algorithms are quick. A lot faster than the two other alternatives (Divide \u0026amp; Conquer, and Dynamic Programming). They\u0026rsquo;re used because they\u0026rsquo;re fast.\nSometimes, Greedy algorithms give the global optimal solution everytime. Some of these algorithms are:\n Dijkstra\u0026rsquo;s Algorithm Kruskal\u0026rsquo;s algorithm Prim\u0026rsquo;s algorithm Huffman trees  These algorithms are Greedy, and their Greedy solution gives the optimal solution.\nWe\u0026rsquo;re going to explore greedy algorithms using examples, and learning how it all works.\n How Do I Create a Greedy Algorithm? Your algorithm needs to follow this property:\n At that exact moment in time, what is the optimal choice to make?\n And that\u0026rsquo;s it. There isn\u0026rsquo;t much to it. Greedy algorithms are easier to code than Divide \u0026amp; Conquer or Dynamic Programming.\n Counting Change Using Greedy Imagine you\u0026rsquo;re a vending machine. Someone gives you ¬£1 and buys a drink for ¬£0.70p. There\u0026rsquo;s no 30p coin in pound sterling, how do you calculate how much change to return?\nFor reference, this is the denomination of each coin in the UK:\n1p, 2p, 5p, 10p, 20p, 50p, ¬£1  The greedy algorithm starts from the highest denomination and works backwards. Our algorithm starts at ¬£1. ¬£1 is more than 30p, so it can\u0026rsquo;t use it. It does this for 50p. It reaches 20p. 20p \u0026lt; 30p, so it takes 1 20p.\nThe algorithm needs to return change of 10p. It tries 20p again, but 20p \u0026gt; 10p. It next goes to 10p. It chooses 1 10p, and now our return is 0 we stop the algorithm.\nWe return 1x20p and 1x10p.\nThis algorithm works well in real life. Let\u0026rsquo;s use another example, this time we have the denomination next to how many of that coin is in the machine, (denomination, how many).\n(1p, 10), (2p, 3), (5p, 1), (10p, 0), (20p, 1p), (50p, 19p), (100p, 16)  The algorithm is asked to return change of 30p again. 100p (¬£1) is no. Same for 50. 20p, we can do that. We pick 1x 20p. We now need to return 10p. 20p has run out, so we move down 1.\n10p has run out, so we move down 1.\nWe have 5p, so we choose 1x5p. We now need to return 5p. 5p has run out, so we move down one.\nWe choose 1 2p coin. We now need to return 3p. We choose another 2p coin. We now need to return 1p. We move down one.\nWe choose 1x 1p coin.\nOur algorithm selected these coins to return as change:\n# (value, how many we return as change) (10, 1) (5, 1) (2, 2) (1, 1)  Let\u0026rsquo;s code something. First, we need to define the problem. We\u0026rsquo;ll start with the denominations.\ndenominations = [1, 2, 5, 10, 20, 50, 100] # 100p is ¬£1  Now onto the core function. Given denominations and an amount to give change, we want to return a list of how many times that coin was returned.\nIf our denominations list is as above, [6, 3, 0, 0, 0, 0, 0] represents taking 6 1p coins and 3 2p coins, but 0 of all other coins.\ndenominations = [1, 2, 5, 10, 20, 50, 100] # 100p is ¬£1 def returnChange(change, denominations): toGiveBack = [0] * len(denominations) for pos, coin in reversed(list(enumerate(denominations))):  We create a list, the size of denominations long and fill it with 0\u0026rsquo;s.\nWe want to loop backwards, from largest to smallest. Reversed(x) reverses x and lets us loop backwards. Enumerate means \u0026ldquo;for loop through this list, but keep the position in another variable\u0026rdquo;. In our example when we start the loop. coin = 100 and pos = 6.\nOur next step is choosing a coin for as long as we can use that coin. If we need to give change = 40 we want our algorithm to choose 20, then 20 again until it can no longer use 20. We do this using a for loop.\ndenominations = [1, 2, 5, 10, 20, 50, 100] # 100p is ¬£1 def returnChange(change, denominations): # makes a list size of length denominations filled with 0 toGiveBack = [0] * len(denominations) # goes backwards through denominations list # and also keeps track of the counter, pos. for pos, coin in enumerate(reversed(denominations)): # while we can still use coin, use it until we can't while coin \u0026lt;= change:  While the coin can still fit into change, add that coin to our return list, toGiveBack and remove it from change.\ndenominations = [1, 2, 5, 10, 20, 50, 100] # 100p is ¬£1 def returnChange(change, denominations): # makes a list size of length denominations filled with 0 toGiveBack = [0] * len(denominations) # goes backwards through denominations list # and also keeps track of the counter, pos. for pos, coin in enumerate(reversed(denominations)): # while we can still use coin, use it until we can't while coin \u0026lt;= change: change = change - coin toGiveBack[pos] += 1 return(toGiveBack) print(returnChange(30, denominations)) # returns [0, 0, 0, 1, 1, 0, 0] # 1x 10p, 1x 20p  The runtime of this algorithm is dominated by the 2 loops, thus it is $O(n^2)$.\n Is Greedy Optimal? Does Greedy Always Work? It is optimal locally, but sometimes it isn\u0026rsquo;t optimal globally. In the change giving algorithm, we can force a point at which it isn\u0026rsquo;t optimal globally.\nThe algorithm for doing this is:\n Pick 3 denominations of coins. 1p, x, and less than 2x but more than x.  We\u0026rsquo;ll pick 1, 15, 25.\n Ask for change of 2 * second denomination (15)  We\u0026rsquo;ll ask for change of 30. Now, let\u0026rsquo;s see what our Greedy algorithm does.\n[5, 0, 1]  It choses 1x 25p, and 5x 1p. The optimal solution is 2x 15p.\nOur Greedy algorithm failed because it didn\u0026rsquo;t look at 15p. It looked at 25p and thought \u0026ldquo;yup, that fits. Let\u0026rsquo;s take it.\u0026rdquo;\nIt then looked at 15p and thought \u0026ldquo;that doesn\u0026rsquo;t fit, let\u0026rsquo;s move on\u0026rdquo;.\nThis is an example of where Greedy Algorithms fail.\nTo get around this, you would either have to create currency where this doesn\u0026rsquo;t work or to brute-force the solution. Or use Dynamic Programming.\n Dijkstra\u0026rsquo;s Algorithm Dijkstra\u0026rsquo;s algorithm finds the shortest path from a node to every other node in the graph. In our example, we\u0026rsquo;ll be using a weighted directed graph. Each edge has a direction, and each edge has a weight.\nDijkstra\u0026rsquo;s algorithm has many uses. It can be very useful within road networks where you need to find the fastest route to a place. We also use the algorithm for:\n IP Routing A* Algorithm Telephone networks  The algorithm follows these rules:\n Every time we want to visit a new node, we will choose the node with the smallest known distance. Once we\u0026rsquo;ve moved to the node, we check each of its neighbouring nodes. We calculate the distance from the neighbouring nodes to the root nodes by summing the cost of the edges that lead to that new node. If the distance to a node is less than a known distance, we\u0026rsquo;ll update the shortest distance.  Our first step is to pick the starting node. Let\u0026rsquo;s choose A. All the distances start at infinity, as we don\u0026rsquo;t know their distance until we reach a node that knows the distance. We mark off A on our unvisited nodes list. The distance from A to A is 0. The distance from A to B is 4. The distance from A to C is 2. We updated our distance listing on the right-hand side.\nWe pick the smallest edge where the vertex hasn\u0026rsquo;t been chosen. The smallest edge is A -\u0026gt; C, and we haven\u0026rsquo;t chosen C yet. We visit C.\nNotice how we\u0026rsquo;re picking the smallest distance from our current node to a node we haven\u0026rsquo;t visited yet. We\u0026rsquo;re being greedy. Here, the greedy method is the global optimal solution. We can get to B from C. We now need to pick a minimum. $min(4, 2 + 1) = 3$. Since A -\u0026gt; C -\u0026gt; B is smaller than A -\u0026gt; B, we update B with this information. We then add in the distances from the other nodes we can now reach. Our next smallest vertex with a node we haven\u0026rsquo;t visited yet is B, with 3. We visit B. We do the same for B. Then we pick the smallest vertex we haven\u0026rsquo;t visited yet, D. We don\u0026rsquo;t update any of the distances this time. Our last node is then E. There are no updates again. To find the shortest path from A to the other nodes, we walk back through our graph.\nWe pick A first, C second, B third. If you need to create the shortest path from A to every other node as a graph, you can run this algorithm using a table on the right-hand side. Dijkstra\u0026rsquo;s TableNodeDistance from APrevious nodeA0N/AB3CC2AD5BE6B Using this table it is easy to draw out the shortest distance from A to every other node in the graph:  Minimum Spanning Trees Using Prim\u0026rsquo;s Algorithm Prim\u0026rsquo;s algorithm is a greedy algorithm that finds a minimum spanning tree for a weighted undirected graph. It finds the optimal route from every node to every other node in the tree.\nWith a small change to Dijkstra\u0026rsquo;s algorithm, we can build a new algorithm - Prim\u0026rsquo;s algorithm!\nWe informally describe the algorithm as:\n Create a new tree with a single vertex (chosen randomly) Of all the edges not yet in the new tree, find the minimum weighted edge and transfer it to the new tree Repeat step 2 until all vertices are in the tree  This example is taken from here. We have this graph.\nOur next step is to pick an arbitrary node. We pick the node A. We then examine all the edges connecting A to other vertices. Prim\u0026rsquo;s algorithm is greedy. That means it picks the shortest edge that connects to an unvisited vertex.\nIn our example, it picks B. We now look at all nodes reachable from A **and **B. This is the distinction between Dijkstra\u0026rsquo;s and Prim\u0026rsquo;s. With Dijkstra\u0026rsquo;s, we\u0026rsquo;re looking for a path from 1 node to a certain other node (nodes that have not been visited). With Prim\u0026rsquo;s, we want the minimum spanning tree.\nWe have 3 edges with equal weights of 3. We pick 1 randomly. It is helpful to highlight our graph as we go along, because it makes it easier to create the minimum spanning tree. Now we look at all edges of A, B, and C. The shortest edge is C \u0026gt; E with a weight of 1. And we repeat: The edge B \u0026gt; E with a weight of 3 is the smallest edge. However, both vertices are always in our VISITED list. Meaning we do not pick this edge. We instead choose C \u0026gt; F, as we have not visited The only node left is G, so let\u0026rsquo;s visit it. Note that if the edge weights are distinct, the minimum spanning tree is unique. We can add the edge weights to get the minimum spanning tree\u0026rsquo;s total edge weight:\n$$2 + 3 + 3 + 1 + 6 + 9 = 24$$\n Fractional Knapsack Problem Using Greedy Algorithm Imagine you are a thief. You break into the house of Judy Holliday - 1951 Oscar winner for Best Actress. Judy is a hoarder of gems. Judy\u0026rsquo;s house is lined to the brim with gems.\nYou brought with you a bag - a knapsack if you will. This bag has a weight of 7. You happened to have a listing of Judy\u0026rsquo;s items, from some insurance paper. The items read as: Judy\u0026rsquo;s ItemsNameValueWeightDiamonds165Francium31Sapphire62Emerald21 The first step to solving the fractional knapsack problem is to calculate $\\frac{value}{weight}$ for each item. Judy\u0026rsquo;s ItemsNameValueWeightValue / weightDiamonds1653.2Francium313Sapphire623Emerald212 And now we greedily select the largest ones. To do this, we can sort them according to $\\frac{value}{weight}$ in descending order. Luckily for us, they are already sorted. The largest one is 3.2.\nknapsack value = 16 knapsack total weight = 5 (out of 7)  Then we select Francium (I know it\u0026rsquo;s not a gem, but Judy is a bit strange üòâ)\nknapsack value = 19 knapsack weight = 6  Now, we add Sapphire. But if we add Sapphire, our total weight will come to 8.\nIn the fractional knapsack problem, we can cut items up to take fractions of them. We have a weight of 1 left in the bag. Our sapphire is weight 2. We calculate the ratio of:\n$$\\frac{weight;of;knapsack;left}{weight;of;item}$$\nAnd then multiply this ratio by the value of the item to get how much value of that item we can take.\n$$\\frac{1}{2} * 6 = 3$$\nknapsack value = 21 knapsack weight = 7  The greedy algorithm can optimally solve the fractional knapsack problem, but it cannot optimally solve the {0, 1} knapsack problem. In this problem instead of taking a fraction of an item, you either take it {1} or you don\u0026rsquo;t {0}. To solve this, you need to use Dynamic Programming.\nThe runtime for this algorithm is O(n log n). Calculating $\\frac{value}{weight}$ is O(1). Our main step is sorting from largest $\\frac{value}{weight}$, which takes O(n log n) time.\n Greedy vs Divide \u0026amp; Conquer vs Dynamic Programming Greedy vs Divide \u0026amp; Conquer vs Dynamic ProgrammingGreedyDivide \u0026amp; ConquerDynamic ProgrammingOptimises by making the best choice at the momentOptimises by breaking down a subproblem into simpler versions of itself and using multi-threading \u0026amp; recursion to solveSame as Divide and Conquer, but optimises by caching the answers to each subproblem as not to repeat the calculation twice.Doesn\u0026rsquo;t always find the optimal solution, but is very fastAlways finds the optimal solution, but is slower than GreedyAlways finds the optimal solution, but could be pointless on small datasets.Requires almost no memoryRequires some memory to remember recursive callsRequires a lot of memory for memoisation / tabulationTo learn more about Divide \u0026amp; Conquer and Dynamic Programming, check out these 2 posts I wrote:\n Divide \u0026amp; Conquer Dynamic Programming   Conclusion Greedy algorithms are very fast, but may not provide the optimal solution. They are also easier to code than their counterparts.\n#myemail { background-color: #f0f0f0; color: black; padding: 15px; border-radius: 25px; width: 80%; margin: 0 auto; } #little { color: grey; font-size: 10px; } #email { width: 100%; padding: 10px; } #submit { width: 100%; background: rgb(36,255,204); } #gdpr { width: 15px; height: 15px; }  At least this isn\u0026rsquo;t a full screen pop up! üòÖ  Sign up now and get:   A free 202 page book on algorithmic design paradigms A free 107 page book on employability skills And much more to help you become an awesome developer!  Email\nGDPR: I consent to receive promotional emails about your products and services. HP\nOne click unsubscribe anytime.\n","permalink":"https://polymath.cloud/greedy-algorithms/","summary":"Greedy algorithms aim to make the optimal choice at that given moment. Each step it chooses the optimal choice, without knowing the future. It attempts to find the globally optimal way to solve the entire problem using this method.\nTable of Contents  Table of Contents  At least this isn\u0026rsquo;t a full screen pop up! üòÖ Why Are Greedy Algorithms Called Greedy? What Are Greedy Algorithms Used For? How Do I Create a Greedy Algorithm?","title":"Greedy Algorithms In Python"},{"content":"5/5 ‚≠ê\nBuy the book here (this is an affiliate link. I\u0026rsquo;ll get some of the money you pay for the book at no extra cost to you.)\nAtomic habits builds on the sensational work of Charles Duhigg\u0026rsquo;s The Power of Habit by applying more new \u0026amp; groundbreaking research as well as the work of many others into this short textbook on habits. Note: all words past this paragraph are taken directly from the book. This is more of a summary than a review.\nFundamentally, a habit is something that you repeatedly do. Habits are not bad or good. All habits are created to make you happy, to get that dopamine hit. Because of this, habits can only provide good rewards.\nYou run every day because this habit provides you with good health \u0026amp; dopamine. You binge eat every night because this habit provides you with dopamine. Habits aren\u0026rsquo;t evil, or good. They\u0026rsquo;re neutral.\nAtomic. Small or minute. Atomic habits. Small habits. These small habits snowball into something much, much larger.\nImagine you are an aeroplane. You\u0026rsquo;re flying from Los Angeles to New York. You shift your heading just 3.5 degrees south when you take off from LAX. You land in Washington D.C instead. A small change is barely noticeable at takeoff, but when marginalised across the entire United States you end up hundreds of miles off.\nIt doesn\u0026rsquo;t matter how successful you are right now. What matters is whether your habits are putting you on the right trajectory. You should be far more concerned with the trajectory than your current results.\nSuccessful people and non-successful people set the same goals. So, why do successful people achieve them? Their systems. Their habits.\n You don\u0026rsquo;t rise to the level of your goals. You fall to the levels of your habits.\n Goals restrict your happiness. Once you achieve them, that\u0026rsquo;s it. What next?\nYou are what you identify as. Imagine 2 people resisting a cigarette. When offered one, the first person says \u0026ldquo;No thanks, I\u0026rsquo;m trying to quit\u0026rdquo;. This person still believes they are a smoker who is trying to be someone else. They are hoping their behaviour will change while carrying around the same beliefs. The second person declines, saying \u0026ldquo;No thanks, I\u0026rsquo;m not a smoker.\u0026rdquo; Small change, but this signifies a shift in identity.\nThe ultimate form of intrinsic motivation is when a habit becomes part of your identity. It\u0026rsquo;s one thing to say I\u0026rsquo;m the type of person who wants this, it\u0026rsquo;s another to say I\u0026rsquo;m the type of person who is this.\nThe goal isn\u0026rsquo;t to run. It\u0026rsquo;s to become a runner. The goal isn\u0026rsquo;t to read books. It\u0026rsquo;s to become a reader.\nWhen you\u0026rsquo;ve believed a story for so long, it is easy to slide into these mental grooves and accept them as fact. In time, you begin to resist certain actions because \u0026ldquo;that\u0026rsquo;s not who I am\u0026rdquo;.\nYour habits embody your personality. You are your habits. Every action you take is a vote for the person you wish to become. Every fruit or veg you eat is a vote for a healthier you.\nIf you keep casting the same votes you\u0026rsquo;ve always cast, you\u0026rsquo;ll never change.\n Decide the type of person you want to be. Prove it to yourself with small wins\n The process of building a habit can be divided into four simple steps:\n Cue Crave Response Reward  If the behaviour is insufficient in any of these 4 steps, it will not become a habit.\nWe can create these rules to create habits:\n Make it obvious Make it attractive Make it easy Make it satisfying  In order to break a habit, invert these rules:\n Make it invisible Make it unattractive Make it difficult Make it unsatisfying   Until you make the unconscious conscious, it will direct your life and you will call it fate\n Pointing and calling is a safety system designed to reduce mistakes. You point at something and say it out loud. The MTA subway system in New York City adopted a silent version of this and within 2 years of implementation, incidents of incorrectly berthed subways fell 57 percent.\nPlans are what makes the world go round. In a study, participants were asked to exercise and split up into 3 groups. In the first group with no plans, 35% of people exercised. In the second group 38% of people who made plans but with no definitive date exercised 38% of the time. In the third group 98% of the People who made plans with dates \u0026amp; times exercised.\nOne of the best ways to build a new habit is to identify a behaviour you do each day and build on top of that. You brush your teeth every day? Immediately after brushing your teeth meditate for 1 minute.\nThis allows you to take advantage of natural momentum that comes from one behaviour leading into the next.\nEffectively, you can stack habits on top of each other in this way. Habit stacking is powerful.\nThe easiest way to stop a habit is to cut it off at the source.\nCan\u0026rsquo;t seem to get any work done? Leave your phone in another room. If you\u0026rsquo;re continually feeling like you\u0026rsquo;re not enough, stop following social media. If you\u0026rsquo;re wasting too much time watching Netflix, log out on your work computer. Make it as hard as possible to log back in.\nThe anticipation of a habit releases just as much dopamine as performing the habit does. Your brain has far more neural circuitry allocated for wanting rewards than for liking the reward.\nWe can use this fact to our advantage by using something called temptation building. You link an action you want to do with an action you need to do. As an example, you can watch Netflix (the thing you want to do) while riding a stationary bike (the thing you need to do).\nWe often pick up habits from the people around us. We copy the way our parents put on socks (left foot first or right foot first), the way our friends flirt, the way our coworkers get results. When your friends smoke, you\u0026rsquo;re more likely to smoke.\nThe closer we are to someone, the more likely we are to copy their habits.\nThe chances of becoming obese increase 57% when we have a friend who is obese.\nYou need to join a culture where your desired behaviour is the normal behaviour and you already have something in common with the group.\nDo you want a first class degree? Become friends with the people who get firsts effortlessly. Do you want to become fit? Become friends with people who work out all the time.\nYou can make hard habits seem more attractive if you learn to associate them with a positive experience. Sometimes, all you need is a slight mindset shift. For instance, we often talk about everything we have to do on a given day. Now, imagine changing just one word. You don\u0026rsquo;t \u0026ldquo;have\u0026rdquo; to do it. You \u0026ldquo;get\u0026rdquo; to do it.\nWhen starting to build a habit, don\u0026rsquo;t worry about the quality. A university professor of photography decided to test out the idea of quality vs quantity.\nHe split his classroom into two. On the left side is the quantity group. They would be graded on the amount of work they produced.\nOn the right is the quality group, they would be graded on the excellence of their work.\nTo his surprise, those in the quantity group took better quality photos than those in the quality group.\nOne of the most common questions relating to habits is the question \u0026ldquo;how long does it take to build a habit?\u0026rdquo; when really the question ought to be: \u0026ldquo;how many times does it take to form a new habit?\u0026rdquo; That is, how many repetitions of the habit before the habit becomes a habit.\nImagine you\u0026rsquo;re holding a garden hose that is bent in the middle. Some water can flow through, but not very much. If you want to increase the rate at which water passes through the hose, you have 2 options.\n Crank up the valve to force more water out Remove the bend in the hose  Trying to pump up your motivation with a hard habit is like trying to force more water through a bent hose.\nIf you look at the most habit-forming products (Facebook, Uber, Netflix) they all remove friction from your life. When building new habits it is important to make them as frictionless as possible.\nIf you need to do something such as go to the gym, try going to the gym for 5 minutes maximum. Do this until your habit forms where you only go for 5 minutes. After the habit has formed, you\u0026rsquo;ll want to stay there longer than 5 minutes.\nThe key is to change the task so it requires more work to get out of the good habit than to perform the habit.\nIf you reverse this - the best way to break a bad habit is to make it impractical to do. Increase the friction until you don\u0026rsquo;t even have the option to act.\nSay, for instance, you want to lose weight. You can use smaller plates. Do you want to increase focus? Turn off notifications.\nIn modern society, many of the choices you make will not affect you immediately.\nThe brain\u0026rsquo;s tendency to prioritise the present moment means you can\u0026rsquo;t rely on good intentions. When you make a plan to lose weight, write a book or learn a language - you\u0026rsquo;re making a plan for your future self.\nHowever, when the moment of decision arrives, instant gratification usually wins.\nPeople who are better at delaying gratification have higher university grades, lower levels of substance abuse, lower likelihood of obesity, better responses to stress and superior social skills.\nAt some point, success in nearly every field requires you to ignore an immediate reward in favour of a delayed reward.\nThe most effective form of motivation is progress.\nYou don\u0026rsquo;t realise how valuable it is to show up on your bad (or busy) days. Lost days hurt you more than successful days help you. If you start with ¬£100, a 50% increase will take you to ¬£150. However, you only need a 33 percent loss to take you back to ¬£100. In other words, avoiding a 33% loss is just as valuable as achieving a 50% gain. As Charlie Munger says:\n The first rule of compounding: never interrupt it unnecessarily\n ","permalink":"https://polymath.cloud/book-review-atomic-habits/","summary":"5/5 ‚≠ê\nBuy the book here (this is an affiliate link. I\u0026rsquo;ll get some of the money you pay for the book at no extra cost to you.)\nAtomic habits builds on the sensational work of Charles Duhigg\u0026rsquo;s The Power of Habit by applying more new \u0026amp; groundbreaking research as well as the work of many others into this short textbook on habits. Note: all words past this paragraph are taken directly from the book.","title":"Book Review: Atomic habits"},{"content":"The blockchain is an immutable, ordered, back-linked list of blocks of transactions. If you want to truly understand blockchain you need to understand linked lists.\nLinked Lists are a linear collection of data elements. Linearty in a linked list is not defined by each element‚Äôs physical placement. Instead each data node in a linked list points to one or two other nodes in the linked list.\nWith an array such as [1, 2, 3] you know that the element 1 is at position [0] and element 2 is at position [1].\nThe physical placement of each element defines the linearty of the array. This does not happen with linked lists.\nNodes make up elements in linked lists. Every node has a data section to it. As well as data, each node has a ‚Äúforwards‚Äù and ‚Äúbackwards‚Äù section pointing to the previous and next node in the list.\nIn an array if you want to insert an item at [0] you need to shift every element in the array 1 to the right to make space at [0].\nWith a linked list you can insert data items anywhere in the list without having to shift the entire list. To do this you have to tell the next and previous node to point to this new node.\nLet‚Äôs say you have an array that grows every day. One day the array has 5000 elements in it. To insert an item at [0] you‚Äôll have to move 5000 elements.\nWith a linked list you do not have to shift any items, you can insert them. This makes them useful for lists which may grow in size at an expeditious rate.\nLinked lists are scalable and adaptable.\nWe call the ‚Äúforwards‚Äù and ‚Äúbackwards‚Äù elements of a node the pointers of the node. Nodes have 2 / 3 elements in them depending on whether it is a singly linked list or a doubly linked list.\nSingly Linked Lists A Node of a Singly Linked List A Singly Linked List has a data element to it and a pointer pointing to the next node. When the pointer is pointing at nothing we say that it is pointing at Null.\n2 components make up the singly linked list node‚Ää‚Äî‚Ääthe data and the pointer.\nSingly linked lists cannot point backwards as they do not have a ‚Äúbackwards‚Äù pointer.\nA pointer does not store any data other than where the next node is. It is literally a pointer. 2 nodes in a linked list. One of them is correctly pointing to NULL. A new node has been added to show what the singly linked list looks like with more than 1 node in it. 3 nodes in a linked list, with a header and tail pointer. Depending on the implementation a linked list could also have 2 special pointers‚Ää‚Äî‚Äähead and tail.\nThe head pointer points to the very first node in the linked list. The tail pointer points to the last node in the linked list.\nIf you only have one node in the linked list the convention is for head to point to it and for tail to point to null. Although this is entirely up to the programmers and in some cases head and tail can point to the same singular node.\nProgrammers create special functions for linked lists to make them mroe usable. These functions are:\n node.data = get data from current node node.next = go to next node  Doubly Linked List A doubly linked list is a singly linked list that has a ‚Äúbackwards‚Äù component. A node in a doubly linked list with 3 components Each node in a doubly linked list has 3 components. A backwards pointer, a data element and a forwards pointer. 2 nodes in a doubly linked list. Both nodes are correctly pointing at NULL. There are header and tail pointers in this linked list. Like with singly linked lists, doubly linked lists have special functions. These functions are:\n node.data = get data from current node node.next = go to next node node.prev = go to previous node  If you use node.prev on the head node then the function will error or produce a NULL value. If you use node.next on the tail node then the function will error or produce a NULL value.\nTraversing Linked Lists Something we want to do a lot of with linked lists is to traverse them. Go up and down the linked list.\nThe first thing we need to do is to define where we start. Well, the starting point of the linked list (head) is a good place.\nNow we want a loop that goes through the entire list. We want to go through every single node until the currently selected node is ‚ÄúNULL‚Äù or None in Python. Once we hit a ‚ÄúNone‚Äù node we know we are at the end.\nNow we want to do something with our linked list as we traverse it. Let‚Äôs print every data element in every node in our linked list.\nNow to actually move to the next node we use the node.next function:\nThe notation of:\nis called dot notation because we are calling the linked list‚Äôs function ‚Äúnext‚Äù. We will see how to program a linked list shortly.\nThe time complexity to search and traverse through linked lists is O(n). If you do not understand big O notation I highly recommend this article: [\nAll You Need to Know About Big O Notation [Python Examples]\nBy the end of this article, you‚Äôll thoroughly understand Big O notation. You‚Äôll also know how to use it in the real world, and even the mathematics behind it! In computer science, time complexity is the computational complexity that describes the amount of time it takes to run an algorithm. Big O ‚Ä¶\nBrandon SkerrittBrandon\u0026rsquo;s Blog\n](https://skerritt.blog/big-o/)\nProgramming Linked Lists Linked Lists aren‚Äôt available in most languages so we have to program it ourselves.\nBecause a node will have the same functions and look the same across our linked list it is best to create this as a class.\nA class is a template for an object. You can create many objects from one class.\nLet‚Äôs design the linked list in Java.\nYou can apply 3 methods to this node using the dot notation:\nThe class has a ‚Äúconstructor‚Äù method which runs every time we make a new node. This initialises the node for us. The constructor method sets the next and previous pointers to point to ‚Äúnull‚Äù. It then sets the data to ‚Äúi‚Äù which is what the user wants to put into the node.\nIf we wanted to make a single node we just need to write this code:\nThis creates an instance of the Node class and provides the number ‚Äú5‚Äù to it as the data element of that node.\nNow of course having one singular node isn‚Äôt useful at all. We want to add more nodes to the linked list.\nRemember that example from earlier where adding an element to the front of an array requires shifting every element to the right by 1?\nWe‚Äôre going to show how this is easier done using linked lists.\nIn order to add a new node to the front of the list we will need a method (function) that does this\nBefore we can add a node to the front we first must create a node with the value we want: A doubly linked list already exsists with data 15 and 14. We create a new node with data Value that is not currently connected to the linked list; as such both pointers point to NULL. Now from our definition of the node class earlier the node‚Äôs functions node.next and node.prev points to null. Let‚Äôs change that:\nWe have not updated the head pointer, so it still points to the head of the linked list which is what we want to make the second node in the linked list. We make the node.next pointer point at where the head pointer is pointing at. We begin to attach the new node to the rest of the linked list. We tell the forward component to point at where head is pointing at. Because we are inserting a new node at the front of the linked list we will need to update the head pointer soon. First, we‚Äôll define where the new nodes previous pointer points to.\nWe actually didn‚Äôt need to update newNode.prev to be null because it‚Äôs already done in the Node class; however to make things clear the code has been put there. Since we defined both pointers of a doubly linked list node to point to NULL nothing has changed. The code has been put here for extra clarity. This has not changed the linked list. Now we need to update the second node, the node that the head pointer is still pointing at. It needs to know that node.previous points to an actual node now and not just null.\nIf the head pointer is not pointing at anything as the linked list has not been created yet then we do not need to update the node. The second node (head node) has been updated so the previous component points at our new node. If the head pointer is pointing at a node then inform that node that it‚Äôs .prev function points to the new node we have just inserted.\nElse if the head is pointing at nothing make the tail the newNode. Earlier we talked about whether a singular node has a head or tail pointer pointing at it. This is the part where the programmer decides. Here we have elected to make the singular node the tail and the head at the same time.\nWe now just need to update the head pointer to point to the new head of the linked list: The new node has been inserted at the head of the linked list. We have just updated the head pointer to point to the new head. We can also delete a node at the front of the linked list in a similar fashion:\nWe assume here that curr is a pointer that points to any node in the linked list.\nWe then want to set curr to head, since we‚Äôre deleting the head node: The curr pointer is pointing at the same place the head pointer is. We want to make sure that head is pointing at something. curr is not equal to null as there is a node there.\nWe move the head pointer 1 to the right. We have moved the head pointer to the right We also make head.prev into null.\nNow we remove curr.next‚Äôs pointer The Curr node is completely disconnected from the linked list. Now we have this node sitting in a space doing nothing. We return the node in case we want to do something else with it.\nAnd that‚Äôs it! The node is no longer connected to the linked list, thus making it ‚Äòdeleted‚Äô.\nInserting Items into Linked Lists The true power of a linked list is being able to insert items anywhere in them.\nInserting an item anywhere in a linked list is similar to inserting an item at the head. You just change a few variables, the idea is still the same.\nWhenever we want to insert a new node, we just have to tell the node what the next and previous nodes are.\nSearching a Linked List Linked lists are normally sorted. Items can be inserted anywhere in a linked list, so it makes sense to put them in the right place. If you have a linked list with data of 3, 4, 6 the programmer would likely put the new node containing 5 between 4 and 6. But this is entirely down to the programmer.\nWe could use binary search to search the list. But, this is a bad idea. We don‚Äôt know where the middle of a linked list is. Everytime we wanted to find the middle we would have to count every single node in the list and half that by 2.\nWe can use a modified version of sequential search to search a linked list.\nAssume the linked list is sorted in ascending order. we can use this information to make sequential search faster.\nSince the linked list is sorted sequentially we know that the nodes in the linked list go in some order, like 1, 2, 3, 4, 5 for example. If node.data is more than the key (what we‚Äôre looking for) we know it‚Äôs not in the list, because it is sorted.\nSo if we wanted to find 2.5 we would do this:\n1 is selectedis 1 goal? - nois 1 \u0026gt; 2.5? no2 is selectedis 2 goal? nois 2 \u0026gt; 2.5? no3 is selectedis 3 goal? nois 3 \u0026gt; 2.5? yes - we can assume 2.5 is not in list and thus end the search here\nThere are many search algorithms out there. But most of the time if you know a little bit of information about the data you can change a search algorithm to be more efficient. In general, binary search is extremely effective but here it‚Äôs not so good. Don‚Äôt use an algorithm because Stack Overflow says that it is the fastest, best algorithm for the job.\nAlgorithms are like programming languages. We all have our favourites and sometimes we say that one programming language is better than another (Python, I love you). But at the end of the day it would be foolish and naive to say that one programming language is better than all the others. Use the right tool for the job, and change it if you want to!\nBlockchains Back to blockchain technology. Earlier I said:\n The blockchain is an immutable, ordered, back-linked list of blocks of transactions.\n So let‚Äôs work through this.\nThe blockchain is immutable. You cannot in theory change the blockchain. It is possible but it is very very hard to do, especially to a blockchain such as Bitcoin‚Äôs blockchain.\nThe blockchain is ordered in terms of most frequent transaction is ‚Äúon top‚Äù of the chain. Or most frequent transaction is furthest to the right.\nThe blockchain is linked ‚Äúback‚Äù referring to the previous block in the chain. Every block refers to the block behind it.\nEach block is a transaction.\nYou should now have a firm understanding of linked lists and how they work. You should also understand the linked list part of the blockchain.\nIf you liked this article, connect with me! LinkedIn | Twitter | Website | Newsletter\n","permalink":"https://polymath.cloud/you-dont-understand-blockchain-unless-you-understand-this-simple-data-structure/","summary":"The blockchain is an immutable, ordered, back-linked list of blocks of transactions. If you want to truly understand blockchain you need to understand linked lists.\nLinked Lists are a linear collection of data elements. Linearty in a linked list is not defined by each element‚Äôs physical placement. Instead each data node in a linked list points to one or two other nodes in the linked list.\nWith an array such as [1, 2, 3] you know that the element 1 is at position [0] and element 2 is at position [1].","title":"How linked lists work with an application to Blockchain"},{"content":"If you want to learn a lot about Graph Theory, check out this article\nThe seven bridges of Koenigsberg is the foundation and birth of graph theory. There was a puzzle that stated:\n Can you cross all seven bridges exactly once?\n There are 2 rules for this problem:\n Do not cross any bridge twice All bridges must be crossed  In the 18th Century a mathematician called Euler realised this problem was impossible. Every bit of land you enter has to have 2 bridges, or an even number of bridges. One you can leave on, one you can enter on.\nYou‚Äôll notice a part of the land does not have an even number of bridges, it actually has 3 bridges.\nLet‚Äôs move straight into graph theory.\nAn undirected graph G = (V, E) consists of a set of vertices V and a set of edges. It is an undirected graph because the edges do not have any direction. Each edge is an unordered pair of vertices. So {a, b} is the same as {b, a}.\nA directed graph G = (V, E) is where each vertex has a direction. Think of it like Facebook and Twitter. On Facebook when you friend someone, the other person is automatically a friend of you. image from here\nGraphs are used to model computer networks, state spaces of finite games such as Chess.\nHere are some of the different types of graphs:\nSimple Graph\nThe Simple Graph has at most 1 edge between 2 vertices and it has no self-loop. It has no edges that come from a vertex and go back to that same vertex.\nThis is not a simple graph: And this is not a simple graph, because a vertex exists with no edges connecting to it: This is a simple graph: Multi Graph\nA multi graph allows more than one edge between two vertices: More on Undirected Graphs and Terminology In an undirected graph, G, suppose that e = {u, v} is an edge of G u and v are said to be adjacent and are called neighbours of each other\ne is said to be incident with u and v\nu and v are called endpoints of e\ne is said to connect u and v\nThe degree of a vertex is how many edges are connected to it.\nThe degree of the graph is the maximum edges connected to a particular vertex. In this graph the degree is 3, since vertex u has degree 3 and is the largest degree in the graph.\nMatrix Representation of Graphs An undirected graph can be represented by an adjacency matrix.\nA matrix is like a vector or a set, it‚Äôs a storage unit to store numbers in it.\nAn adjacency matrix, M, for a simple undirected graph with n vertices is called an n x n matrix.\nIn this matrix if vertex i and vertex j are adjacent (neighbours) then you can represent this on the matrix with the number 1.\nIf they are not, use the number 0. To represent this in a matrix, we can do the following: Notice how the diagonal is 0‚Äôs and if you take half of the upper triangle it matches the bottom half.\nAn incident matrix is an m x n matrix where m is the number of edges in the graph.\nFor this graph again: We can use this incidence matrix to represent it: More on Directed Graphs An in-degree of a vertex, v, is the number of edges leading to v.\nAn out-degree of a vertex, v, is the number of edges leading away from v.\nThe in-degree is the same as the out-degree. It‚Äôs also the same as the number of edges.\n in degree sum = out degree sum\n Because this is an **undirected **graph, the in degree and out degree have to be the same for each vertex.\nIf the total sum of all in degrees does not match the total sum of all out degrees then it is not a tree.\nIf you have 2 out-degrees and 1 in-degree it is not a tree since there is an edge either travelling nowhere or travelling to the same node twice.\nA directed graph can be represented by an adjacency matrix or an incidence matrix.\nAdjacency Matrix An adjacency matrix, M, for a directed graph with n vertices is called an n x n matrix.\n M(i, j) is equal to 1 if (i, j) has an edge from i to j M(i, j) is otherwise 0.  An adjacency list is where each vertex, u, has a list of vertices pointed to by an edge leading away from u.\nThis is really nothing different from what we saw earlier.\nIncidence Matrix An incidence matrix for a directed graph with n vertices and m edges is an m x n matrix.\nThese are the basic rules:\n M(i, j) = 1 if edge i is leading away from vertex j (leaving) M(i, j) = -1 if edge i is leading to vertex j (into) M(i, j) = 0 otherwise  Incidence list is a list where each vertex, u, has a list of vertices pointed to by an edge leading away from u.\nCircuits A circuit, a path, a cycle are all sequences of vertices and edges.\nThey all have rules and properties which make them special, these are:\n Cycle: Vertices cannot repeat. Edges cannot repeat. Walk: Vertices may repeat. Edges may repeat. Circuit: Vertices may repeat. Edges cannot repeat.  Normally a circuit is defined as a path from vertex a, back to vertex a.\nA simple circuit visits an edge at most once (so never goes back to the same vertex).\nAn Euler circuit is a circuit visiting every edge exactly once (so can go back to the same vertex).\nThis is the exact same circuit Euler wanted to create on the Kronenbeig problem earlier. To cross every bridge (edge) exactly once, but allowing you to go to the vertexes (islands) as many times as you want.\nThe graph contains an Euler Circuit if and only if the degree of every vertex in the graph is even.\nAn Hamiltonian circuit (not named after Alexandria Hamilton) is a circuit containing every vertex of a graph, G, exactly once.\nIt does not matter in a Hamiltonian circuit whether or not you visit all of the edges.\nDetermining whether a graph contains a Hamiltonian circuit is an NP-hard problem. For information on NP-hardness click here.\nSearching on Trees / Graphs Okay, so we‚Äôve met trees and graphs. But how do we search them? We can use some of these nifty search algorithms!\nBreadth First Search Breadth First Search (BFS) is a search algorithm developed by Konrad Zeus for his rejected PhD thesis in 1945. Breadth First Search searches all neighbours before it searches child nodes. In the below picture, once the start state (1) has been searched the states 2, 3, and 4 will then be searched. The Breadth First Search Algorithm has a queue which is vital to how it works. Breadth first will first check whether the current node it is searching is the goal state or not. If it is not the goal state, it places all child nodes of the current node being searched into a queue. As an example assume the queue will look like [5, 6, 3, 4].\nBecause of the first in first out nature, the first ones added to the queue are the first ones out of the queue, so it would search in the order 4, 3, 6, 5.\nBreadth first search searches in ‚Äúlevels‚Äù. It starts at level 1, [1], then goes down to level 2, [1:2, 1:3, 1:4]. When we look at a neighbour we need to see if it‚Äôs neighbours have been visited yet. In order to do this we need to ‚Äúmark‚Äù the vertex to signify we haven‚Äôt looked at it yet.\nAdvantages Breadth-first search is complete, as in it will always find a path and the shortest path to the goal, assuming the goal is at a finite depth.\nSpace and Time Complexity‚Ää‚Äî‚ÄäA Quick Detour Time complexity is how long it takes the algorithm to run given an input, usually denoted in Big O notation. Space complexity is how much the algorithm takes up in memory. Although this depends on the hardware factors, just like with Big O notation we can use a notation to represent how much space it‚Äôll take up.\nConsider a theoretical tree where node state has b successors. The root of the search tree generates b nodes and the second level of the search tree generates b¬≤ nodes. Each level generates b more nodes, yielding b^n (b to the power of n) nodes where n is the level the search tree is on. So the time complexity is $$b^n$$.\nThe space complexity of this is b^d.\nYou may notice this looks different from Big O notation, well, for some reason a lot of AI researchers use this notation. In big O the space and time complexity is:\nO(|v|)\nWhere |v| is the number of nodes.\nI believe this notation is used because it is the notation used in the book ‚ÄúArtificial Intelligence: A Modern Approach‚Äù by Russel and Norvig and because this book is the book on Artificial Intelligence everyone uses their notation.\nb is the branching factor of the tree. d is the shallowest goal node (the lowest level at which a node is a goal for a given search problem) m is the maximum length of any path in the state space.\nDisadvantages Breadth First Search is very, very slow and requires a lot of memory, however, on a smaller graph / tree it is efficient.\nDepth First Search Depth First Search expands the deepest node in the current frontier first. Depth first search goes immediately to the deepest possible point of the search tree until there are no sucessors. In this example, Depth First Search will go straight to 9, then 10 and then to 6.\nWhereas Breadth First search uses a first in first out (FIFO) queue Depth First uses a a Last in Last out queue (LIFO). A LIFO queue means that the most recently generated node is chosen for expansion. The most recently generated node must be the deepest possible unexpanded node because it is deeper than its parent node.\nIf Depth First Search is used on a graph which avoids repeated states and redundant paths then it will find its goal in a finite number of states. If however it is used on a search tree then it will expand forever, in other words depth first search is not complete within search trees.\nDepth first search will not find the optimal path.\nThe time complexity of DFS is 1+ b¬≤ + b¬≥ + ‚Ä¶ +b^m\nThe advantage of DFS over BFS is the space complexity. Once a path has been fully explored it can be removed from memory, so DFS only needs to store the root node, all the children of the root node and where it currently is. DFS requires space complexity of bm where b is the branching factor and m is the longest path in the graph. ","permalink":"https://polymath.cloud/graph-theory/","summary":"If you want to learn a lot about Graph Theory, check out this article\nThe seven bridges of Koenigsberg is the foundation and birth of graph theory. There was a puzzle that stated:\n Can you cross all seven bridges exactly once?\n There are 2 rules for this problem:\n Do not cross any bridge twice All bridges must be crossed  In the 18th Century a mathematician called Euler realised this problem was impossible.","title":"Graph Theory"},{"content":" ‚ÄúIt‚Äôs written, ‚Äòseek and ye shall find‚Äô. But first, ‚Äòimagine what you seek‚Äô. Otherwise, you will end up searching everything everywhere forever.‚Äù Toba Beta, My Ancestor Was an Ancient Astronaut\n This article will be a primer on search algorithms used in Artificial Intelligence. This article was formed from lecture notes from COMP111 at the University of Liverpool taught by Frank Wolter and the famous Russel, Norvig book Artificial Intelligence: A Modern Approach.\nUninformed Search Strategies An uninformed search strategy has no information about states beyond what is the goal state, what is not the goal state and what are the successor states.\nBreadth first search Breadth First Search (BFS) is a search algorithm developed by Konrad Zeus for his rejected PhD thesis in 1945. Breadth First Search searches all neighbors before it searches child nodes. In the below picture, once the start state (1) has been searched the states 2, 3, and 4 will then be searched. The Breadth First Search Algorithm has a queue which is vital to how it works. Breadth first will first check whether the current node it is searching is the goal state or not. If it is not the goal state, it places all child nodes of the current node being searched into a queue. If 2 is being searched then the queue will look like [5, 6, 3, 4].\nBecause of the first in first out nature, the first ones added to the queue are the first ones out of the queue, so it would search in the order 4, 3, 6, 5.\nThere is also a second list, a list of every node that has already been visited in the search tree.\nAdvantages Breadth-first search is complete. It will always find a path and the shortest path to the goal, assuming the goal is at a finite depth.\nDisadvantages Consider a theoretical state where every state has b successors. The root of the search tree generates b nodes and the second level of the search tree generates b¬≤ nodes. Each level generates b more nodes, yielding b^n (b to the power of n) nodes where n is the level the search tree is on.\nNow suppose the goal is at depth d. In the worst possible case (computer scientists prefer to use worst possible cases instead of best or mediocre case) we would expand all but the last, goal node at level d (since the goal itself is not expanded) resulting in b^d+1‚Ää‚Äî‚Ääb nodes at level d + 1. The total number of nodes explored is\nb + b¬≤ + b¬≥ + ‚Ä¶ b^d = O(b^d-1).\nNote the above equation, O(b^d-1) is using Big O notation.\nThe -1 is because you do not explore the goal node, so the goal is at depth level -1.\nThe total number of nodes in the frontier is O(b^d), this is the space complexity.\nEvery node must stay in memory because it is either apart of the frontier or an ancestor of the frontier. The space complexity is therefore the same as the time complexity.\nTime and Space complexity\nTime complexity is how long it takes the algorithm to run given an input, usually denoted in Big O notation. Space complexity is how much the algorithm takes up in memory. Although this depends on the hardware factors, just like with Big O notation we can use a notation to represent how much space it‚Äôll take up.\nIn the above example, Breadth First Search takes an enormous amount of time and space complexity.\nUniform Cost Search A Gif demonstrating Dijkstra‚Äôs algorithm, similar to Uniform Cost Search Uniform Cost search is Dijkstra‚Äôs Algorithm but rather than finding the single shortest path to every point in the search tree it finds the single shortest path to the goal node.\nBreathd first search is only optimal when all steps cost the same, because it always expands the shallowest unexpanded node. With a simple extension to breadth first search we can create an algorithm that is optimal for any cost. Instead of expanding the shallowest node like with BFS it instead expands the node, n, with the lowest path cost.\nIf all steps cost the same then Uniform Cost Search is identical to BFS.\nUniform cost search does not care about the number of steps a path has but instead it cares about their total cost. Therefore it is possible for BFS and Uniform Cost Search to get stuck in an infinite loop if it ever expands a node that has zero-cost leading back to the same state.\nIn other words, if Uniform Cost Search expands into a node with a cost path of zero from a node with a cost path of zero and there are two routes to each other it can get stuck in an infinite loop.\nWe can gurantee completeness using this search method by making sure the cost of every step is greater than or equal to a small positive constant.\nUniform Cost Search is guided by path costs and not lengths so it‚Äôs complexity cannot easily be shown. Instead, let X be the cost of the optimal solution and assume that every action costs at least Y. Then the algorithms worst case scenario is O(b[X/Y]) which can be much greater than B^d, which makes Uniform Cost Search slower and more resource hungry than Breadth First Search.\nDepth First Search Depth First Search expands the deepest node in the current frontier first. Depth first search goes immedtially to the deepest possible point of the search tree until there are no sucessors. In this example, Depth First Search will go straight to 9, then 10 and then to 6.\nWhereas Breadth First search uses a first in first out (FIFO) queue Depth First uses a a Last in Last out queue (LIFO). A LIFI queue means that the most recently generated node is chosen for expansion. The most recently generated node must be the deepest possible unexpanded node because it is deeper than its parent node.\nIf Depth First Sreach is used on a graph which avoids repeated states and redundant paths then it will find its goal in a finite number of states. If however it is used on a search tree then it will expand forever, in other words depth first search is not complete within search trees.\nDepth first search will not find the optimal path.\nThe time complexity of DFS is 1+ b¬≤ + b¬≥ + ‚Ä¶ +b^m\nThe advantage of DFS over BFS is the space complexity. Once a path has been fully explored it can be removed from memory, so DFS only needs to store the root node, all the children of the root node and where it currently is. DFS requires space complexity of O(bm)\nDepth Limited Search Depth Limited Search is a vartion on DFS whereby a limit is set to the depth of DFS so it does not go on forever or too long. It also solves the infinite path problem.\nIf the goal is at level N and we choose a depth of D and D \u0026lt; N then Depth Limited Search is incomplete.\nThe solution found is not guranteed to be the shortest optimal path.\nThe time complexity of Depth Limited Search is B^d where d is the depth limit.\nThe space complexity of depth limited search is B*d where d is the depth limit.\nIterative Deepening Depth First Search Iterative deepning is a varation on Depth Limited Search whereby the depth limit is increased if the goal is not found. Iterative Deepning often starts at level 0 and then increases by a singular level if the goal isn‚Äôt found on that level.\nIterative Deepning Depth First Search combinds the best parts of depth-first search and breadth first search.\nIterative Deepning‚Äôs memory requirements are small, O(bd) where b is the amount of nodes generated and d is the depth level.\nIterative deepening may seem wasteful because nodes are generated multiple times, although this is not very costly. Consider a search tree with the same branching factor at each level; most of the nodes will be on the bottom level so it does not matter much to generate upper level nodes repeatedly.\nIn iterative deepning, nodes on the bottom level are generated once, those on the next to bottom level are generated twice and so on up to the children of the root node, which are generated d times. The total number of nodes generated are:\nN(IDS) = d(b) + (d-1)b¬≤+‚Ä¶+(1)b^d\nWhich gives us a time complexity of O(b^d)\nNote the time complexity of breadth-first search given the same search tree:\nN(BFS) = b + b¬≤ + ‚Ä¶ + b^d + (b^d+1‚Ää‚Äî‚Ääb)\nThe result is that Iterative Deepening is faster than BFS although Frank says that it is slower but it uses alot less memory than BFS.\nBidirectional Search The idea of bidrectional search is to run two searches, one forward from the start state and one backward from the goal state, stopping when the two searches meet. The idea is that b^d/2 + b^d/2 is much smaller than b^d.\nBidirectional search works by having one or both of the searches check the next node to see if it is in the fringe (frontier) of the other search tree, if it is then a solution has been found.\nThe time complexity of Bidirectional search is O(B^d/2)\nBidirectional search must be able to calculate the predecessors of states and must also know where the goal is.\nInformed (Heuristic) Search Strategies An informed search stratergy is one that uses problem-specific knowledge to find solutions more efficiently than an uninformed search strartergy.\nGreedy Best-First Search Greedy attempts to expand the node that is closet to the goal on the idea that it is likely to lead to a solution quickly.\nIt uses heuristics to determine which nodes are ‚Äòcloset‚Äô to the goal node.\nGreedy search is like depth first search in that it prefers to take a singular route to the goal and will back up when it hits a dead end. Greedy search is not optimal and it is incomplete because it can get stuck within an infinite loop.\nThe worst case time complexity of greedy search is O(b^m) where b is the amount of nodes and m is the maximum depth of the search space.\nA* Search The most widely known form of search algorihm is A* (a-star). It chooses its path based on 2 statistics, g(n) and h(n). g(n) is the cost to reach the node and h(n) is the heuristic function that shows the cost from the node to the goal.\nf(n) = g(n) + h(n)\nProvided that the heuristic function satisfies certain conditions then A* is both optimal and complete.\nA* is optimal if h(n) is an **admissable heuristic**. That is provided that h(n) does not over estimate the cost to reach the goal. Admissable heuristics are often optimistic as they think the cost of solving the problem is less than it actually is. Since g(n) is the exact cost to reach n, we have an immedtiate consequence that f(n) never overestimates the true cost of a solution through n.\nA* is normally not suitable for large search problems.\nGames vs Search Problems In traditional search algorithms the user makes all the moves, however in a game we implement search algorithms against an unpredictable enemy.\nThe best possible way is to calcualate every single possible move the enemy can make and counter them, although this will cause a combinatoral explosion in which the computer will take too long to calculate the correct answer.\nIn reality, we need to use heuristics to calculate search problems in games.\nIn some games we have a fully observable environment, we know everything about the environment such as Chess or Go. In other games we have partial information where we don‚Äôt fully know the environment, such as Poker.\nMinimax algorithm In a game, Min and Max are two players. Max wants to win (maximise the utility of each move) whereas Min wants Max to lose (minimise utility for max).\nThe game Minimax is used on has to be a zero sum game, that means that there can only be winners and losers, nothing in between; like Chess.\nThe set of goal states is replaced by a utility function.\nMax wants a strategy for maximising utility assuming min will do the best it can to minimise max‚Äôs utility.\nThe utility of a MAX-state (where Max moves) is the maximum of the utilities of its successor states.\nThe utility of a MIN-state (where Min moves) is the maximum of the utilities of its successor state. Taken from University of Liverpool homework The Minimax starts from the bottom, with Min (player 1) starting first. You know min starts first because it is denoted in the left hand side. Min would choose the lowest possible value, so for level 1 it would be {4, 5, 2} since these are the lowest possible values in the tree.\nWe then move one level up. The Minimax values of A is the maximum value of {4, 5, 2} which is 5. So Max would choose 5.\nIn game playing, minimum would want Max to choose the one with the lowest utility, as a higher utility might attack or hurt player 1 more than a lower utility.\nIn a game such as chess the trees are extremely large. In chess the number of moves grow exponentially, after 4 moves there are 288 billion different possible positions. This is where Alpha-Beta pruning comes in. We cut off large chunks of the tree that we believe we no longer need in order to allow the Minimax algorithm to run in efficient time, that is time that will take less than 10 minutes to run (roughly).\nMinimax tries to reduce the maximum damage the opponent can do whilest reaping the maximum possible reward for us assuming the opponent plays optimally.\n","permalink":"https://polymath.cloud/a-primer-on-search-algorithms/","summary":"‚ÄúIt‚Äôs written, ‚Äòseek and ye shall find‚Äô. But first, ‚Äòimagine what you seek‚Äô. Otherwise, you will end up searching everything everywhere forever.‚Äù Toba Beta, My Ancestor Was an Ancient Astronaut\n This article will be a primer on search algorithms used in Artificial Intelligence. This article was formed from lecture notes from COMP111 at the University of Liverpool taught by Frank Wolter and the famous Russel, Norvig book Artificial Intelligence: A Modern Approach.","title":"A Primer on Search Algorithms"},{"content":"Timsort: A very fast , O(n log n), stable sorting algorithm built for the real world‚Ää‚Äî‚Äänot constructed in academia. Image of Tim Peter from here Timsort is a sorting algorithm that is efficient for real-world data and not created in an academic laboratory. Tim Peters created Timsort for the Python programming language in 2001. Timsort first analyses the list it is trying to sort and then chooses an approach based on the analysis of the list.\nSince the algorithm has been invented it has been used as the default sorting algorithm in Python, Java, the Android Platform, and in GNU Octave.\nTimsort‚Äôs big O notation is O(n log n). To learn about Big O notation, read this. From here Timsort‚Äôs sorting time is the same as Mergesort, which is faster than most of the other sorts you might know. Timsort actually makes use of Insertion sort and Mergesort, as you‚Äôll see soon.\nPeters designed Timsort to use already-ordered elements that exist in most real-world data sets. It calls these already-ordered elements ‚Äúnatural runs‚Äù. It iterates over the data collecting the elements into runs and simultaneously merging those runs together into one.\n The array has fewer than 64 elements in it If the array we are trying to sort has fewer than 64 elements in it, Timsort will execute an insertion sort.\nAn insertion sort is a simple sort which is most effective on small lists. It is quite slow at larger lists, but very fast with small lists. The idea of an insertion sort is as follows:\n Look at elements one by one Build up sorted list by inserting the element at the correct location  Image taken by me, from my website skerritt.tech In this instance we are inserting the newly sorted elements into a new sub-array, which starts at the start of the array.\nHere‚Äôs a gif showing insertion sort: Taken from here More about runs If the list is larger than 64 elements than the algorithm will make a first pass through the list looking for parts that are strictly increasing or decreasing. If the part is decreasing, it will reverse that part.\nSo if the run is decreasing, it‚Äôll look like this (where the run is in bold): Image from my website, skerritt.tech If not decreasing, it‚Äôll look like this: Image from my website, skerritt.tech The minrun is a size which is determined based on the size of the array. The algorithm selects it so that most runs in a random array are, or become minrun, in length. Merging 2 arrays is more efficient when the number of runs is equal to, or slightly less than, a power of two. Timsort chooses minrun to try to ensure this efficiency, by making sure minrun is equal to or less than a power of two.\nThe algorithm chooses minrun from the range 32 to 64 inclusive. It chooses minrun such that the length of the original array, when divided by minrun, is equal to or slightly less than a power of two.\nIf the length of the run is less than minrun, you calculate the length of that run away from minrun. Using this new number, you grab that many items ahead of the run and perform an insertion sort to create a new run.\nSo if minrun is 63 and the length of the run is 33, you do 63‚Äì33 = 30. You then grab 30 elements from in front of the end of the run, so this is 30 items from run[33] and then perform an insertion sort to create a new run.\nAfter this part has completed we should now have a bunch of sorted runs in a list.\n Merging https://giphy.com/gifs/dragon-ball-z-dbz-UfaSEmvHQtrEI\nTimsort now performs mergesort to merge the runs together. However, Timsort makes sure to maintain stability and merge balance whilst merge sorting.\nTo maintain stability we should not exchange 2 numbers of equal value. This not only keeps their original positions in the list but enables the algorithm to be faster. We will shortly discuss the merge balance.\nAs Timsort finds runs, it adds them to a stack. A simple stack would look like this: Image from my website, skerritt.tech Imagine a stack of plates. You cannot take plates from the bottom, so you have to take them from the top. The same is true about a stack.\nTimsort tries to balance two competing needs when mergesort runs. On one hand, we would like to delay merging as long as possible in order to exploit patterns that may come up later. But we would like even more to do the merging as soon as possible to exploit the run that the run just found is still high in the memory hierarchy. We also can‚Äôt delay merging ‚Äútoo long‚Äù because it consumes memory to remember the runs that are still unmerged, and the stack has a fixed size.\nTo make sure we have this compromise, Timsort keeps track of the three most recent items on the stack and creates two laws that must hold true of those items:\n  A \u0026gt; B + C\n  B \u0026gt; C\n  Where A, B and C are the three most recent items on the stack.\nIn the words of Tim Peters himself:\n What turned out to be a good compromise maintains two invariants on the stack entries, where A, B and C are the lengths of the three righmost not-yet merged slices\n Usually, merging adjacent runs of different lengths in place is hard. What makes it even harder is that we have to maintain stability. To get around this, Timsort sets aside temporary memory. It places the smaller (calling both runs A and B) of the two runs into that temporary memory.\n Galloping https://giphy.com/gifs/horse-riding-yNldIEA9XD7TW\nWhile Timsort is merging A and B, it notices that one run has been ‚Äúwinning‚Äù many times in a row. If it turned out that the run A consisted of entirely smaller numbers than the run B then the run A would end up back in its original place. Merging the two runs would involve a lot of work to achieve nothing.\nMore often than not, data will have some preexisting internal structure. Timsort assumes that if a lot of run A‚Äôs values are lower than run B‚Äôs values, then it is likely that A will continue to have smaller values than B. Image of 2 example runs, A and B. Runs have to be strictly increasing or decreasing, hence why these numbers were picked.\nTimsort will then enter galloping mode. Instead of checking A[0] and B[0] against each other, Timsort performs a binary search for the appropriate position of b[0] in a[0]. This way, Timsort can move a whole section of A into place. Then Timsort searches for the appropriate location of A[0] in B. Timsort will then move a whole section of B can at once, and into place.\nLet‚Äôs see this in action. Timsort checks B[0] (which is 5) and using a binary search it looks for the correct location in A.\nWell, B[0] belongs at the back of the list of A. Now Timsort checks for A[0] (which is 1) in the correct location of B. So we‚Äôre looking to see where the number 1 goes. This number goes at the start of B. We now know that B belongs at the end of A and A belongs at the start of B.\nIt turns out, this operation is not worth it if the appropriate location for B[0] is very close to the beginning of A (or vice versa). so gallop mode quickly exits if it isn‚Äôt paying off. Additionally, Timsort takes note and makes it harder to enter gallop mode later by increasing the number of consecutive A-only or B-only wins required to enter. If gallop mode is paying off, Timsort makes it easier to reenter.\nIn short, Timsort does 2 things incredibly well:\n Great performance on arrays with preexisting internal structure Being able to maintain a stable sort  Previously, in order to achieve a stable sort, you‚Äôd have to zip the items in your list up with integers, and sort it as an array of tuples.\n Code If you‚Äôre not interested in the code, feel free to skip this part. There‚Äôs some more information below this section.\nThe source code below is based on mine and Nanda Javarma‚Äôs work. The source code is not complete, nor is it similar to Python‚Äôs offical sorted() source code. This is just a dumbed-down Timsort I implemented to get a general feel of Timsort. If you want to see Timsort‚Äôs original source code in all its glory, check it out here. Timsort is offically implemented in C, not Python.\nTimsort is actually built right into Python, so this code only serves as an explainer. To use Timsort simply write:\nlist.sort()  Or\nsorted(list)  If you want to master how Timsort works and get a feel for it, I highly suggest you try to implement it yourself!\nThis article is based on Tim Peters‚Äô original introduction to Timsort, found here.\n Hey üëã Want to subscribe to my blog and stay up to date with posts similar to this one? Subscribe to my email list below. I won\u0026rsquo;t spam you. I will only send you posts similar to this one üòä‚ú®\nLike this article? üî• Sign up and get more content like this üòÅ‚ú®\nSubscribe\nWe won\u0026rsquo;t send you spam. Unsubscribe at any time. Powered By ConvertKit .formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] *{font-family:\u0026ldquo;Helvetica Neue\u0026rdquo;,Helvetica,Arial,Verdana,sans-serif;box-sizing:border-box;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;]{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] legend{border:none;font-size:inherit;margin-bottom:10px;padding:0;position:relative;display:table;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] fieldset{border:0;padding:0.01em 0 0 0;margin:0;min-width:0;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] body:not(:-moz-handler-blocked) fieldset{display:table-cell;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] h1,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] h2,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] h3,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] h4,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] h5,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] h6{color:inherit;font-size:inherit;font-weight:inherit;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] p{color:inherit;font-size:inherit;font-weight:inherit;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;][data-format=\u0026quot;modal\u0026rdquo;]{display:none;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;][data-format=\u0026quot;slide in\u0026rdquo;]{display:none;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-input,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-select,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-checkboxes{width:100%;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-button,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-submit{border:0;border-radius:5px;color:#ffffff;cursor:pointer;display:inline-block;text-align:center;font-size:15px;font-weight:500;cursor:pointer;margin-bottom:15px;overflow:hidden;padding:0;position:relative;vertical-align:middle;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-button:hover,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-submit:hover,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-button:focus,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-submit:focus{outline:none;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-button:hover \u0026gt; span,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-submit:hover \u0026gt; span,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-button:focus \u0026gt; span,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-submit:focus \u0026gt; span{background-color:rgba(0,0,0,0.1);}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-button \u0026gt; span,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-submit \u0026gt; span{display:block;-webkit-transition:all 300ms ease-in-out;transition:all 300ms ease-in-out;padding:12px 24px;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-input{background:#ffffff;font-size:15px;padding:12px;border:1px solid #e3e3e3;-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;line-height:1.4;margin:0;-webkit-transition:border-color ease-out 300ms;transition:border-color ease-out 300ms;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-input:focus{outline:none;border-color:#1677be;-webkit-transition:border-color ease 300ms;transition:border-color ease 300ms;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-input::-webkit-input-placeholder{color:#848585;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-input::-moz-placeholder{color:#848585;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-input:-ms-input-placeholder{color:#848585;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-input::placeholder{color:#848585;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;dropdown\u0026rdquo;]{position:relative;display:inline-block;width:100%;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;dropdown\u0026rdquo;]::before{content:\u0026quot;\u0026quot;;top:calc(50% - 2.5px);right:10px;position:absolute;pointer-events:none;border-color:#4f4f4f transparent transparent transparent;border-style:solid;border-width:6px 6px 0 6px;height:0;width:0;z-index:999;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;dropdown\u0026rdquo;] select{height:auto;width:100%;cursor:pointer;color:#333333;line-height:1.4;margin-bottom:0;padding:0 6px;-webkit-appearance:none;-moz-appearance:none;appearance:none;font-size:15px;padding:12px;padding-right:25px;border:1px solid #e3e3e3;background:#ffffff;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;dropdown\u0026rdquo;] select:focus{outline:none;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;]{text-align:left;margin:0;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;]{margin-bottom:10px;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;] *{cursor:pointer;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;]:last-of-type{margin-bottom:0;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;] input[type=\u0026quot;checkbox\u0026rdquo;]{display:none;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;] input[type=\u0026quot;checkbox\u0026rdquo;] + label::after{content:none;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;] input[type=\u0026quot;checkbox\u0026rdquo;]:checked + label::after{border-color:#ffffff;content:\u0026quot;\u0026quot;;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;] input[type=\u0026quot;checkbox\u0026rdquo;]:checked + label::before{background:#10bf7a;border-color:#10bf7a;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;] label{position:relative;display:inline-block;padding-left:28px;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;] label::before,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;] label::after{position:absolute;content:\u0026quot;\u0026quot;;display:inline-block;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;] label::before{height:16px;width:16px;border:1px solid #e3e3e3;background:#ffffff;left:0px;top:3px;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-group=\u0026quot;checkboxes\u0026rdquo;] [data-group=\u0026quot;checkbox\u0026rdquo;] label::after{height:4px;width:8px;border-left:2px solid #4d4d4d;border-bottom:2px solid #4d4d4d;-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);left:4px;top:8px;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-alert{background:#f9fafb;border:1px solid #e3e3e3;border-radius:5px;-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;list-style:none;margin:25px auto;padding:12px;text-align:center;width:100%;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-alert:empty{display:none;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-alert-success{background:#d3fbeb;border-color:#10bf7a;color:#0c905c;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-alert-error{background:#fde8e2;border-color:#f2643b;color:#ea4110;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-spinner{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:0px;width:0px;margin:0 auto;position:absolute;top:0;left:0;right:0;width:0px;overflow:hidden;text-align:center;-webkit-transition:all 300ms ease-in-out;transition:all 300ms ease-in-out;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-spinner \u0026gt; div{margin:auto;width:12px;height:12px;background-color:#fff;opacity:0.3;border-radius:100%;display:inline-block;-webkit-animation:formkit-bouncedelay-formkit-form-data-uid-4028200a82- 1.4s infinite ease-in-out both;animation:formkit-bouncedelay-formkit-form-data-uid-4028200a82- 1.4s infinite ease-in-out both;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-spinner \u0026gt; div:nth-child(1){-webkit-animation-delay:-0.32s;animation-delay:-0.32s;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-spinner \u0026gt; div:nth-child(2){-webkit-animation-delay:-0.16s;animation-delay:-0.16s;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-submit[data-active] .formkit-spinner{opacity:1;height:100%;width:50px;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-submit[data-active] .formkit-spinner ~ span{opacity:0;}@-webkit-keyframes formkit-bouncedelay-formkit-form-data-uid-4028200a82-{0%,80%,100%{-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);}40%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);}}@keyframes formkit-bouncedelay-formkit-form-data-uid-4028200a82-{0%,80%,100%{-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);}40%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);}} .formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;]{border:1px solid #e3e3e3;max-width:700px;position:relative;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-background{width:100%;height:100%;position:absolute;top:0;left:0;background-size:cover;background-position:center;opacity:0.3;z-index:1;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] [data-style=\u0026quot;minimal\u0026rdquo;]{padding:20px;width:100%;z-index:2;position:relative;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-header{margin:0 0 27px 0;text-align:center;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-subheader{margin:18px 0;text-align:center;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-guarantee{font-size:13px;margin:10px 0 15px 0;text-align:center;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-guarantee \u0026gt; p{margin:0;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-powered-by{color:#7d7d7d;display:block;font-size:12px;margin:10px 0 0 0;text-align:center;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-powered-by[data-active=\u0026quot;false\u0026rdquo;]{opacity:0.5;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-fields{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:25px auto 0 auto;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-field{min-width:220px;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-field,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;] .formkit-submit{margin:0 0 15px 0;-webkit-flex:1 0 100%;-ms-flex:1 0 100%;flex:1 0 100%;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;][min-width~=\u0026quot;600\u0026rdquo;] [data-style=\u0026quot;minimal\u0026rdquo;]{padding:40px;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;][min-width~=\u0026quot;600\u0026rdquo;] .formkit-fields[data-stacked=\u0026quot;false\u0026rdquo;]{margin-left:-5px;margin-right:-5px;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;][min-width~=\u0026quot;600\u0026rdquo;] .formkit-fields[data-stacked=\u0026quot;false\u0026rdquo;] .formkit-field,.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;][min-width~=\u0026quot;600\u0026rdquo;] .formkit-fields[data-stacked=\u0026quot;false\u0026rdquo;] .formkit-submit{margin:0 5px 15px 5px;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;][min-width~=\u0026quot;600\u0026rdquo;] .formkit-fields[data-stacked=\u0026quot;false\u0026rdquo;] .formkit-field{-webkit-flex:100 1 auto;-ms-flex:100 1 auto;flex:100 1 auto;}.formkit-form[data-uid=\u0026quot;4028200a82\u0026rdquo;][min-width~=\u0026quot;600\u0026rdquo;] .formkit-fields[data-stacked=\u0026quot;false\u0026rdquo;] .formkit-submit{-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;} If you\u0026rsquo;re feeling extra generous, I have a PayPal  and even a Patreon. I\u0026rsquo;m a university student who writes these blogs in their spare time. This blog is my full time job, so any and all donations are appreciated!\n","permalink":"https://polymath.cloud/timsort/","summary":"Timsort: A very fast , O(n log n), stable sorting algorithm built for the real world‚Ää‚Äî‚Äänot constructed in academia. Image of Tim Peter from here Timsort is a sorting algorithm that is efficient for real-world data and not created in an academic laboratory. Tim Peters created Timsort for the Python programming language in 2001. Timsort first analyses the list it is trying to sort and then chooses an approach based on the analysis of the list.","title":"Timsort‚Ää‚Äî‚Ääthe fastest sorting algorithm you‚Äôve never heard of"},{"content":"Big Omega Whereas Big O measures the upper bound (the maximum amount of time something can take) Big Omega (using the symbol Œ©) measures the best running time.\nWe say that $f(n)$ is $Œ©(g(n))$ if there are real constants c and $n_0$ such that:\n$$f(n) \\geq cg(n) for all n \\geq n_0$$\nWe say that f(n) is $\\theta (g(n))$ (Theta) if f(n) is $\\omega (g(n))$ and f(n) is also $O(g(n))$. Equivalently g(n) is O(f(n)) and f(n) is O(g(n)). Let\u0026rsquo;s see loads of examples.\n$$3 log n + log log n$$ is $\\omega (log n)$ because we choose constant = 3. $3 log n + log log n \\geq 3 log n$ and from the argument 1. So $n_0 = 3, c = 1$\n$$ \\frac{2}{3}n^2 - n ‚àà \\omega (n^2)$$ if we take anything below $\\frac{2}{3}$. If we take c slightly smaller than 2 thirds at some point this factor will take over and grow faster than the function on the right hand side.\nFor example, with c = 1/3. Let\u0026rsquo;s calculate it. We claim that:\n$$ \\frac{2}{3}n^2 - n \\geq c * m^2$$ for any $m \\geq 3$. Let us multiply both sides by 3.\n$$2m^2 - 3m \\geq m^2$$\n$$m^2 \\geq 3m$$\nDivide both sides by m:\n$$m \\geq 3 = m_0$$\nC = $\\frac{1}{3}$ and $n_0 = 3$.\nSummary Bet you were expecting some hard to understand guide to Big O huh? Well, this is all it is. You need to memorise (or learn) the hierarchy, take some algorithms and find out what their Big O notation is.\nBig O represents how long an algorithm takes but sometimes we care about how much memory (space complexity) an algorithm takes too.\nThere are other forms of measuring algorithm time complexity such as Big Theta which is the least amount of time an algorithm takes.\nIf you liked this article, connect with me! LinkedIn | Twitter | Website | Newsletter\n","permalink":"https://polymath.cloud/big-omega/","summary":"Big Omega Whereas Big O measures the upper bound (the maximum amount of time something can take) Big Omega (using the symbol Œ©) measures the best running time.\nWe say that $f(n)$ is $Œ©(g(n))$ if there are real constants c and $n_0$ such that:\n$$f(n) \\geq cg(n) for all n \\geq n_0$$\nWe say that f(n) is $\\theta (g(n))$ (Theta) if f(n) is $\\omega (g(n))$ and f(n) is also $O(g(n))$. Equivalently g(n) is O(f(n)) and f(n) is O(g(n)).","title":"Big omega"},{"content":"Hi! Bit of an unusual post. I\u0026rsquo;m writing about my first open source tool, Ciphey!\nCheck Ciphey out here.\nCiphey answers the question:\n \u0026ldquo;What does this encrypted text say?\u0026rdquo;\n First, an important distinction.\nI define encryption as:\n Anything that you cannot read fluently\n When normally encryption is defined as:\n Text that has an algorithm applied so no one apart from the intended recipients can read it\n My tool, Ciphey, isn\u0026rsquo;t made for cryptographers. It\u0026rsquo;s made for your aunt Linda who has never heard of the word cryptography but works in tech, so knows a little about some things.\nBecause of my target audience and my personal definition of encryption, Ciphey can automatically decrypt all of these:\n Vigen√®re cipher Affine cipher Transposition Cipher Pig Latin Morse Code Ascii Binary Base64 Hexadecimal Caesar Cipher Reverse (palindrome) Sha512 MD5 Sha1 Sha384 Sha256  Now, I know that you\u0026rsquo;re probably cringing. Sha1 can\u0026rsquo;t be decrypted! And decrypting binary? That\u0026rsquo;s not an encryption, it\u0026rsquo;s encoding!\nRefer back to my definition and target market.\nOkay, so Ciphey is cool. You input encrypted text, and Ciphey decrypts it. How?\nFirst, Ciphey is made up of 2 core components.\n Language Checker  Language Checker aims to answer the question:\n \u0026ldquo;Is this text English?\u0026rdquo;\n (and in the future, other languages)\nIt does this by utilising two popular algorithms.\nThe first is Chi Squared.\nChi Squared Chi Squared answers:\n \u0026ldquo;How close is the frequency distribution of this text to the frequency distribution of English?\u0026rdquo;\n Check out this cool video on the general idea by VSauce:\nChi-squared is very fast, but the accuracy isn\u0026rsquo;t that good.\nOnto the next algorithm.\nDictionary checker What better way to check when something is English than to loop through an entire English dictionary and see how many dictionary words appear in the text?\nThe problem is that this is very slow. My dictionary is 500k words. You can\u0026rsquo;t just loop through that every time you want to check when something is English.\nUsing both for fun and profit This is where I use both of these algorithms, combined.\nChi squared tells me when something looks like English, and dictionary checker tells me when something consists of primarily English words.\nBoth together answer the question \u0026ldquo;is this English?\u0026rdquo; really well.\nIt\u0026rsquo;s also a lot faster than normal.\nChi squared keeps a running average of all the scores it comes across. If it sees a score that\u0026rsquo;s below 1 standard deviation, it goes into stage 2 of the algorithm - dictionary checker.\nIf 35% of the words in the string are English, it\u0026rsquo;s likely to be English.\n35% because of slang, passwords, usernames or program names can all exist in the text.\nSo Ciphey brute-forces all the ciphers? Yes, but I like to call it Brute Force Enhanced.\nCiphey uses a deep neural network (DNN) trained on Harry Potter to guess how likely a text is to be encrypted using a method.\nAs an example, the DNN might predict that the text is 81% likely to be SHA1, 1% likely to be Caesar and so on.\nCiphey then runs all of the decryption modules using multi-threading in the order of most likely to least likely.\nIf at any moment a decryption returns True, as it has found the plain-text, Ciphey stops and returns the answer.\nThis method of brute-force enhanced as well as language checker means Ciphey is very fast.\nThe internal data packet Decryption modules don\u0026rsquo;t just return True. I have an internal data packet that\u0026rsquo;s passed around.\n{ \u0026quot;lc\u0026quot;: self.lc, \u0026quot;IsPlaintext?\u0026quot;: True, \u0026quot;Plaintext\u0026quot;: translated, \u0026quot;Cipher\u0026quot;: \u0026quot;Caesar\u0026quot;, \u0026quot;Extra Information\u0026quot;: \u0026quot;The rotation used is {counter}\u0026quot; }  Self.lc is Language Checker. When a decryption module is done, it passes Language Checker back to the parent. The parent then adds the LC it received to the LC it holds as an attribute. This means that we can keep the running average accurate and the overall program accurate.\nWhat\u0026rsquo;s next? Ciphey needs a levels mode. Sure, it\u0026rsquo;s cool to encrypt text using 1 level of encryption. But what if someone uses 2 levels? Ciphey needs to solve this.\nThe way this would work is using files.\nIf the user enters the level command:\nciphey -l 3 \u0026quot;ha skjari isa\u0026quot;  Then Ciphey will run through 3 levels of decryption.\nEvery decryption Ciphey makes will be stored in a file. Ciphey will then have something like this:\nfor x in range(0, levels): for word in file.open(decryption_list.txt, 'r'): one_level_of_decryption(word)  Ciphey needs more decryption methods Ciphey supports a lot, but not enough for it to be considered super cool. I need to work on this.\nCheck Ciphey out here.\n","permalink":"https://polymath.cloud/ciphey/","summary":"Hi! Bit of an unusual post. I\u0026rsquo;m writing about my first open source tool, Ciphey!\nCheck Ciphey out here.\nCiphey answers the question:\n \u0026ldquo;What does this encrypted text say?\u0026rdquo;\n First, an important distinction.\nI define encryption as:\n Anything that you cannot read fluently\n When normally encryption is defined as:\n Text that has an algorithm applied so no one apart from the intended recipients can read it","title":"üîêCiphey - Automated Decryption Tool"},{"content":"Hello üëã Brandon here.\nHope you\u0026rsquo;ve all had an amazing week last week üòÅ\nWithout further ado, let\u0026rsquo;s get right into it üé™\nNear Future üåë Designing Lunar Habitats\nThe same company that designed and engineering the Burj Khalifa, the worlds tallest building, is designing a moon base. In collaboration with the European Space Agency and MIT.\nThe organisation says the 3 most important factors in identifying a site for lunar settlement are:\nLocation, location, location\nOne of the key factors in living on the moon is defending from radiation. Long term occupants need up to 3 metres of shielding.\nIt doesn\u0026rsquo;t make sense to ship tons of concrete from Earth to the Moon. So the astronauts will make use of what is already on the moon (in situ resource utilisation).\nOne way to do this is to 3D print the walls, either all in one piece where they\u0026rsquo;ll stand or as bricks that lock together when stacked.\nLooking into my üîÆ, we\u0026rsquo;ve seen 3D printing being worked on for the creation of homes on Earth. Not too long ago we saw robots that can 3D print bricks, or 3D print walkways. It makes sense to ship a 3D printer and use the material on the Moon to create walls.\nüõ∞ Archinaut Takes $73 Million In Funding To 3d Print In Space\nTo bring 32 feet of solar panels into space, you would need to pack them in the launch. Archinaut has received funding to show how they could 3D print solar panels in space.\nAs we saw earlier, 3d printing in space is becoming an ever more important topic. I look forward to seeing the next big startups creating 3D printers for space.\nüåù Squeezing Rocket Fuel From Moon Rocks\nIn this paper, the author argues that the water on the moon (if it exists) can be broken down into hydrogen and oxygen, which can be used to create rocket fuel.\nIt\u0026rsquo;s pretty farfetched, but as we come closer to habitat on the moon, we\u0026rsquo;re starting to try to find out what we can do with the materials on the moon itself.\nüöÅ Super Fast Helicopter For Army Use Is 100mph Faster Than Current Army Scout Helicopters\n 137 mph  The speed of Bell\u0026rsquo;s OH-58 Kiowa, the Army\u0026rsquo;s current light scout and attack aircraft.\n 238 mph  The speed of the new (and still in testing) S-97\nThe new wacky design is created to be faster and more agile than current helicopters. You\u0026rsquo;d have to see it to believe it!\nLooking into my üîÆ, I can see this being used in the near future, and the long term. I don\u0026rsquo;t know much about the aviation industry, but helicopters mixed with planes seems like a really cool idea. Especially in drones, where it is utilised better. Combining this new helicopter technology with a smaller drone would be amazing to see.\nü§ñ California Law Banning Bots From Pretending To Be Real People Without Disclosure\nCalifornia put the law into place to prevent fraud. The bot will have to reveal itself as an \u0026ldquo;artificial identity\u0026rdquo; if it:\n Sell a product Influence a voter  Originally, the law covered all bots.\nLooking into my üîÆ, it\u0026rsquo;s sad to see certain states deciding such sweeping and wide internet rules like this. Under the previous legislation, let\u0026rsquo;s say I tell Google to buy me something and it reveals to the buyer that it\u0026rsquo;s a bot. Doesn\u0026rsquo;t the buyer have the right to not sell to me, as I\u0026rsquo;m using a bot?\nThis is going back to \u0026ldquo;do robots have rights?\u0026rdquo; Which is a very, very hard argument. And one that I\u0026rsquo;m not knowledgable enough about to argue.\nDiscrimination based on bots could be a good thing. You can stop mass ticket buyers and resellers. But at the same time, you make some peoples lives harder.\nI know lawmakers are looking at this from a fraudulent content perspective. But they are going to be hard-pressed to do anything in the long run to quell this.\nüì∫ Using Google Ads For Social Good\nContent warning: Suicide\nIn this New York Times people, the author uses Google ads for social good.\nThey create adverts to prevent suicide, talk about adverts to prevent extremism.\nIf you can create adverts for good, you could also create adverts for bad.\nüîÆ What\u0026rsquo;s interesting is that Google may know who is vulnerable, who is likely to commit suicide. But yet, they aren\u0026rsquo;t doing anything about it. Should they do anything about it?\nGoogle is already working on preventing suicide using their platform. If you search \u0026ldquo;commit suicide\u0026rdquo; in Google, you\u0026rsquo;ll see a help number at the top of the result. Often by websites saying not to do it.\nGoogle\u0026rsquo;s working hard to make sure their platform doesn\u0026rsquo;t promote extremism or radicalisation. But it\u0026rsquo;s a slippery slope and they\u0026rsquo;ve got to be careful.\nüì∫ Why The Bbc Does Not Want To Store Your Data\nThe BBC is developing a personal data box that analyses information from multiple sources.\nThe BBC will use the information to recommend events, holidays, music, BBC shows, and activities.\nThe BBC does not have access to your personal data box. Nor does it upload any data. Your device, locally, does all the datamining.\nIt\u0026rsquo;s powered by a Raspberry Pi and the Databox Personal Data Management System.\nAlso, slight warning. I\u0026rsquo;ve learned to like the BBC more and more ever since they started these futuristic experiments. Take what I say with a grain of salt, but I\u0026rsquo;ve tried to get rid of my bias for liking them.\nüîÆ I can see the future is related to boxes like these. Tim Berners-Lee (inventor of the WWW) talks about the idea of data boxes. The Brave Browser sends adverts to your browser and does the data mining locally to decide what adverts to show you.\nGiving you the power to delete your personal information at will. To decide what to share and what not to share. This is the future of the internet.\nüó£ Machine Learning Has Been Used To Automatically Translate Long-lost Languages\nGoogle\u0026rsquo;s AI lab has successfully decoded to automatically translate a long-lost language.\nThe language has been translated by hand (about 100 years ago) so they know it correctly deciphered it.\nThe lab is looking at applying this to other long-lost languages that have no correct translations.\nThe article is interesting, as it talks in detail about how the algorithm is used.\nüõí Amazon Asks FCC For Permission To Launch Internet Satellites\nAmazon wants to launch 3,236 satellites into 98 orbital planes. These fly at altitudes of 366 and 391 miles.\nThe idea is to provide \u0026ldquo;internet to the entire world\u0026rdquo;.\nüîÆ We see many companies try to do this. Including SpaceX\u0026rsquo;s missions. By building our artificial solar rings (filled with satellites and junk) we make it harder for us to enter space. We\u0026rsquo;re filling space with junk.\nThis is the next big problem for many space agencies around the world. There\u0026rsquo;s so much stuff, it\u0026rsquo;s hard to imagine us being able to fly outside of the atmosphere soon.\nKessler proposed the Kessler Syndrome. It states that a small ding of a satellite, or a rock hitting it in the right way would teat apart the satellite. Bouncing those parts to other satellites.\nCreating a cascade where more collisions exponentially create a higher chance for a collision. Until, , all our satellites are dead and turned into space trash. Hence why so many countries are building Space Forces.\nAll it takes is for one rogue nation to force one of their satellites to collide with another.\nThe idea of a space army sounds silly. But, what they plan to be working on is satellites that can defend from rogue satellites. That can dodge. And even, those that could attack and destroy other satellites.\nüõí Amazon Introduces Computer Vision Into Warehouses\nWorkers had to scan the barcodes on each bin and each product so the warehouse could track where everything is.\nThis cost time. Some items were small and easy. Some were much larger and required the worker to find the barcode.\nIn the Amazon Go store, you pick up an item and a computer vision algorithm recognises this. You put it down and it recognises that too.\nThis same technology is being used in warehouses now. No longer will workers have to fiddle around with scanning barcodes.\nüîã Solar Power Could Power 7% Of Los Angeles, California By 2023\nThe deal calls for a huge solar farm backed up by a very large battery. It\u0026rsquo;s estimated to provide 7% of the power for Los Angeles at a cost of 1.997 cents per kilowatt-hour (cheaper than most fossil fuels).\nDistant future ü§ñüå¥ Robots Made Out Of Branches Use Deep Learning To Walk\nThe robots learnt how to walk virtually first, then did it in the real world.\nLooking into my üîÆ the idea of being able to construct a mobile robot out of whatever is lying around is intriguing.\nI can definitely see this technology being ever more relevant to our world, especially on a lunar colony. Imagine sending a robot to a distant planet (or even, to places on earth such as forests). This robot then builds other robots out of whatever\u0026rsquo;s lying around.\nWe\u0026rsquo;re getting closer and closer to being able to create robots that can create other robots.\nAnd to think, this is all possible with what\u0026rsquo;s lying around. You do not need to carry that much to create a hoard of robots.\nüêù Robobee Flying, Diving, Swimming\nRoboBee (a tiny robot) is quickly becoming my favourite robot.\nIn this video, the small robot flies, dives, and swims.\nYou can see how small the robot is in the video too (very, very small).\nüîÆ I\u0026rsquo;m so excited about the possibilities of a hoard of drones that can work together.\nLooking for a shipwreck? Send in a bunch of drones to check it out. They\u0026rsquo;ll work together to find it.\nCitywide emergency? Small drones could be the answer.\nCCTV? Small drones.\nA large part of our future is within small, tactile drones that work together with humans to produce amazing results.\nüö¢ Shipping Industry Investing Heavily Into Iot\nSmall devices placed into each shipping container will track shocks, jolts, temperature and more.\nThe idea is to keep food fresh, keep food cold (if needed). Keep the food at an optimal point.\nBy adding more IoT you increase the cybersecurity risks. I don\u0026rsquo;t know much about this industry, but I\u0026rsquo;m excited to see shipping containers talk to each other.\nSmart shipping containers may also allow parts of the world to try food that would rot or go off before it gets there.\nü¶ë Robot Squid And Robot Scallop Showcase Bio-inspired Underwater Propulsion\nThe underwater autonomous vehicle industry is still being built. These biology-inspired robots seem to hit a sweet spot at being low powered and having alright propulsion.\nü§ñ Unsupervised Learning Could Imbue Machines With The Ability To Reason\nThe chief AI Scientist at Facebook and a professor at NYU, Yann LeCun, claims that unsupervised learning could give machines the ability to reason.\nAlgorithms are typically based on supervised learning.\nYou have a picture of the letter \u0026ldquo;1\u0026rdquo; and you label the image \u0026ldquo;1\u0026rdquo;. Given enough of these labelled images, the machine learns.\nUnsupervised learning is where you give the machine data and it tells you what the connections are.\nNatural language processing has used these algorithms because of their ability to find relationships between billions of worlds. This proves useful for auto-complete or generating convincing prose.\nüîÆ It\u0026rsquo;s possible. There hasn\u0026rsquo;t been as much research into unsupervised learning as there has been on supervised learning.\nüöÅü§ñ Drone Explode Into Maple Seed Microdrones In Midair\nAs we saw a few weeks ago, the idea of maple seed drones seems cool.\nNow, researchers have developed a drone that explodes into many maple seeds in midair.\nThe idea of releasing a bunch of them from the back of an aircraft is long gone. Fly the drone into the right spot and get it to explode.\nI\u0026rsquo;m super excited to see drone networks like this being used in the future.\nüêú Robot-ants That Communicate And Work Together\nThe three-legged, T-shaped robots are called Tribots. They\u0026rsquo;re assembled in only a few minutes by folding a stack of thin, multi-material sheets.\nMaking them suitable for mass production.\nThese bots communicate together and work together.\nThe robots are modelled after Odontomachus ants. There are 3 jobs in this robotic colony.\n Explorer  These ants explore and detect physical objects in the path.\nLeader  Gives instructions \u0026amp; commands.\nWorkers  These ants pool their strength together to move objects.\nüîÆ A recurring theme is smaller robots that work together to achieve great things. I\u0026rsquo;m so excited to see this future being played out. To see farm bots working together. Ant bots that work together. Robots that work together to build other robots.\nUntil next time,\n Brandon üêù  ","permalink":"https://polymath.cloud/edition-8/","summary":"Hello üëã Brandon here.\nHope you\u0026rsquo;ve all had an amazing week last week üòÅ\nWithout further ado, let\u0026rsquo;s get right into it üé™\nNear Future üåë Designing Lunar Habitats\nThe same company that designed and engineering the Burj Khalifa, the worlds tallest building, is designing a moon base. In collaboration with the European Space Agency and MIT.\nThe organisation says the 3 most important factors in identifying a site for lunar settlement are:","title":"Edition 8"},{"content":"Hello üëã Brandon here.\nüåä Welcome to the seventh edition of üîÆTechnologically ClairvoyantüîÆ\nWe\u0026rsquo;re now verified on Brave Browser [or will be in 24 hours]. If you don\u0026rsquo;t know what Brave Browser is, click here. (affiliate link. I get $5 and it costs you absolutely nothing if you use this).\nIf you use the Brave browser, consider supporting my site üòé\nWithout further ado, let‚Äôs get into it üé™\nNear Future üëü Gucci uses AR to let users try on shoes\nWe\u0026rsquo;ve seen this almost weekly. Online stores embracing using AR. In a Gartner survey, 46% of online stores plan on using AR by 2020.\nüíâ Researchers eliminate HIV from mice\nThis is groundbreaking, but not as groundbreaking as the media claims it to be. We probably won\u0026rsquo;t see clinical trials for 15 years.\nHowever, this is good evidence that this could probably work in humans (bar the fact that n = 29 mice).\nüöó Apple\u0026rsquo;s self driving car isn\u0026rsquo;t dead. They buy startup Drive.ai\nApple still remains secretive about this project. Almost no information has leaked other than they appeared to have brought the startup. I\u0026rsquo;ll keep you updated if I see anything gnarly happening in this space üñ≤\nüé≠ UK police\u0026rsquo;s facial recognition software has 81% fail rate\nThe system is being rolled out at events across the UK (well, 10 events so far).\nThe system can detect when someone is wanted by the police (a suspect match).\nHowever, out of the 42 suspect matches, only 8 were correct, giving an 81 percent error rate.\nThe error rate doesn\u0026rsquo;t matter so long as it\u0026rsquo;s not the only thing they go by.\nIf the AI detects a suspect, I wouldn\u0026rsquo;t expect a SWAT force to tackle the person to the ground and arrest them. The police would likely take them aside and see for themselves if they\u0026rsquo;re the suspect.\nThe articles online don\u0026rsquo;t talk about what happens when a suspect is identified, they only seem to care about the error rate.\nI\u0026rsquo;m interested to see what happens with the data. Is the incorrect suspect\u0026rsquo;s data then used to train the AI? Or is it deleted? I guess we\u0026rsquo;ll find out more in the coming months when it\u0026rsquo;s rolled out.\nüíâ Boy dying from rare disease saved by Zebrafish\nThe doctors pinpointed the genetic mutation driving the disease, but had no idea how to treat it.\nThey made zebrafish with the mutation and screened hundreds of FDA approved drugs until they found one that worked.\nThe boy was saved, and has since recovered.\nZebrafish are common for genetic research because their genes are well charecterised and they have fundamental similarities to humans. In some cases, mice would be closer in similarity to humans, but their genes are harder to manipulate than zebrafish. They also take longer to reproduce.\nüíä Tylenol - a popular pain relieving drug - can now be synthesised from a natural compound rather than chemicals from coal tar.\nI didn\u0026rsquo;t realise that commons drugs could be created from fossil fuels. This is interesting to see, solving a problem most didn\u0026rsquo;t realise we had!\nüè† Get your house delivered\nAmazon is selling DIY tiny-home kits, that let you build your own house.\nThis idea isn\u0026rsquo;t new, unlike what the news will say. In the 1940s, Sears let people buy houses through mail-order catalogues and it will be delivered to them - ready for them to build it.\nIn the distant future üîÆ you can look around houses in VR, design your dream house, get it delivered, and get it built by robots in a matter of days.\nüîã‚úà Hybrid flight (half electric) is the future of flight\nProject 804 is converting a 40-seater aircraft into a hybrid vehicle. It expects to start fly-testing soon.\nOther companies are expecting to release hybrid aeroplanes by 2022 at the earliest.\nMany people don\u0026rsquo;t believe fully electric planes are possible. We\u0026rsquo;re far away from hybrid aeroplanes being the norm, but we are getting there. And maybe, one day, fully electrical aeroplanes will be possible.\nüöΩ Bladder cancer infected and eliminated by a strain of the common cold virus\nIn a recent study (n = 15), all signs of cancer dissapeared in one patient, and in 14 others there was evidence that cancer cells had died.\nThe next step is to perform a larger study.\nüå¥ New study shows that restoring forests could cut atomspheric carbon by 25 percent\nUsing Google Earth, finding that there‚Äôs 0.9 billion hectares of land available for planting forests, which could store 205 gigatonnes of carbon.\nI just want to add this comment I found too:\n Right now, Rainforest Trust is trying to raise $318,120 to preserve Palm Rainforests in Puerto Rico. They are at $217,743. Currently, each donation is being doubled by an outside foundation so your $20 donation is effectively $40. Rainforest Trust has 4 stars on Charity Navigator. Rainforest Trust takes donations from around the world.\n If you own a garden, please do consider planting some trees or plants in general.\nüè° Reparing walls with a 3D pen - Guerilla Public Service\nThis person goes around, finds broken bricks in public walls and fixes them with a 3D pen (with bio-degradable ink).\nMy favourite quote of the video is:\n Hey wall. There\u0026rsquo;s no need to pay me. It\u0026rsquo;s okay. Come tell me when you\u0026rsquo;re hurt again\n This reminded me of Guerilla Public Service. Taking public service into your own hands. In this podcast episode, 99% Invisible talks about repairing streeet signs because the council won\u0026rsquo;t do it. Taking public service into your own hand.\nReminds me of the right to repair. I can see this movement growing, with #trashtag being recently a viral trend.\nDistant Future üè´ Using microphones and AI to detect aggression in a bid to prevent school shootings\nThe technology looks like smoke alarms in the ceiling.\nIt can detect aggression through raising voices or gunshots.\nHowever, it\u0026rsquo;s not \u0026lsquo;very effective\u0026rsquo;. It can be set off by:\n Singing happy birthday Opening and closing lockers Cash registers opening and closing Loud voices in a general area (vocal noise increases to let one group talk over another, for example)  The author refused to say whether the data used from classrooms is used to train the AI.\nSchools prefer to \u0026lsquo;be safe\u0026rsquo; even if they have a high false positive rate.\nüß† Three people play a Tetris-like game using a brain-to-brain interface - one step closer to telepathic communication\nThis is a really cool paper.\n \u0026ldquo;The team hopes that these results pave the way for future brain-to-brain interfaces that allow people to collaborate to solve tough problems that one brain alone couldn‚Äôt solve.\u0026rdquo;\n This is what Elon Musk\u0026rsquo;s company, Neuralink, is trying to achieve. Combining brains with other brains to create a super computer brain that can solve problems that a single brain couldn\u0026rsquo;t.\nWhat\u0026rsquo;s worrying is that if the whole is greater than the sum of its parts, I could see humans being bred and forced to exist only to be a part of this super-computer.\nOf course, we have human rights and many, many laws that prevent this. But, it\u0026rsquo;s still a nerve wrecking thought to think about.\nOn a brighter side, we\u0026rsquo;ve seen humans interfaced with AI can out-perform AI. This is something I support and I see the future being this way.\nThe idea of combining many brains with many computers to create Dualistic Intelligence (a term I just came up with). Half human super-computer pure intelligence. Half super-computer artifical intelligence.\nüë©‚Äçüåæ Farmbot - Small robot that does everything apart from harvesting\nFarmbot is the smallest farming bot I\u0026rsquo;ve seen yet.\nIt can:\n Plant Water Weed Montior the soil  The only thing it needs to do next is to harvest. We\u0026rsquo;ve seen bots of this size in the past capable of harvesting.\nThe bot is pricy at $800, but this will get cheaper over time.\nüß† Editing Images with neural networks\nThis software lets you add objects, or remove objects from images.\nThink that image of a cathedral could do with a larger door? Just add it in. Want to remove the road for some grass? You can do that too.\nThe idea of adding and removing things has existed in photography for years. I\u0026rsquo;m excited to see a future where we can import AI to help edit our photos.\nüëì Refocussing glasses for Presbyopes\nPresbyopes is where you cannot focus on close distances. Some glasses fix this by focussing close distances, but unfocussing far distances.\nOr the top of the glasses focuses on far distances, the bottom half focus on short distance.\nThese glasses (which are basically headsets) auto-focus.\nüêÑ We can breed climate-friendly livestock\nLivestock are responsible for 14.5% of global greenhouse gas emissions, with the majority being caused by flatulent, belching cattle.\nPreviously, researchers have looked at editing their diet by adding seaweed to reduce these emissions.\nIt is possible to edit the genes of cows and breed cows in such a way that they reduce their gas emissions. However, this could take many years and I\u0026rsquo;m not really a fan of the idea of editing an animals genes to solve a problem that humans caused.\nüåë On bringing the internet to the planets\nNASA has been developing a protocol called Delay/Disruption-Tolerant Network (DTN) that could link spacecraft, rovers, and landers all over the solar system to Earth.\nThe end goal is to \u0026ldquo;do what the internet did to the Earth to the solar system\u0026rdquo;.\nüêõ Success in mapping every neuron in a worm, a breakthrough in neuroscience\nMapping neurons is vital. In AI, mapping a full neural network is a giant step forward to creating AI that can think the same as humans.\nIt can also be used to understanding how malfunctions in neurons can lead to mental illnesses.\nThis is incredibly exciting. While we understand worms now, the end goal is, of course, humans. We have a long way to go before we reach that stage.\nüìö Ebooks purschased from Microsoft will be deleted\nMicrosoft is shutting down it\u0026rsquo;s e-book service. Meaning that any books brought on the platform will be deleted. Ebooks are an interesting thing.\nYou can edit them after the user has brought them. You can delete them at will. The user likely won\u0026rsquo;t be able to back them up or give them to friends.\nWhen you move from a physical platform that you own to another platform - virtual - it\u0026rsquo;s important to remember that you do not own the virtual platform. You merely rent what\u0026rsquo;s on the platform from the people that do own it.\nUntil next time,\n Brandon üêù  ","permalink":"https://polymath.cloud/edition-7/","summary":"Hello üëã Brandon here.\nüåä Welcome to the seventh edition of üîÆTechnologically ClairvoyantüîÆ\nWe\u0026rsquo;re now verified on Brave Browser [or will be in 24 hours]. If you don\u0026rsquo;t know what Brave Browser is, click here. (affiliate link. I get $5 and it costs you absolutely nothing if you use this).\nIf you use the Brave browser, consider supporting my site üòé\nWithout further ado, let‚Äôs get into it üé™\nNear Future üëü Gucci uses AR to let users try on shoes","title":"Edition 7"},{"content":"Hello üëã Brandon here.\nüåä Welcome to the sixth edition of üîÆTechnologically ClairvoyantüîÆ\nWithout further ado, let‚Äôs get into it üé™\nNear future üñ≤ Nimses - Most Addictive Social Network\nThis social network pays you to use it. Every new post you create is more money for you.\nThe more engagement your post gets, the more money you make. We\u0026rsquo;ve seen this with Steemit before.\nWhat differentiates it from Steemit is the idea that you can buy a property.\nWith enough money saved up, you can buy a place. Let\u0026rsquo;s say you can buy Hounslow, London\nEvery single post/engagement in that area, you make 15% of what that person made.\nYou now have people making more money for you.\nThe store\nNimses lets you buy items from their store. Clothes, shoes, music streaming. You don\u0026rsquo;t need to convert the Nimses currency into a normal currency to use it.\nThis means that if you\u0026rsquo;re 12 \u0026amp; popular on Nimses - you can buy things such as streaming services without your parents finding out.\nHow does it make money?\nSome users believe that Nimses tracks you (a lot more than traditional social networks do). Nimses owns an advertising platform, so it would make sense for them to do this. Some of the things people claim Nimses can do (as they claim to have de-compiled the APK) are:\n Start when the phone turns on Install additional apps/services Reads which accounts you\u0026rsquo;re logged into (note from me: it probably does this to see if you can log in with Google, Facebook etc. You\u0026rsquo;ve seen this before) Record audio and video GPS Is a launcher on Android - meaning it can change any or all your home screen.  üê∂ AI Can Now Detect Deepfakes By Looking For Weird Facial Movements\nIt\u0026rsquo;s good to see it\u0026rsquo;s possible to detect Deepfakes.\nBut, this technology could also be used to help create more realistic looking Deepfakes.\nYou can tell an AI to improve its Deepfake technology until the AI to detect whether it\u0026rsquo;s a Deepfake can no longer tell. Of course, it\u0026rsquo;s a lot harder than it sounds. But, still possible.\nüöÅ Uber Eats Completes Successful Drone Delivery Tests In San Diego\nWe see news like this every week.\nWhat interested me is:\n \u0026ldquo;The team plans on beginning larger scale testing operations in San Diego imminently.\u0026rdquo;\n We\u0026rsquo;re getting closer and closer to drone deliveries every week.\nThe UK has strict laws on flying, especially drones - especially London.\nTo successfully fly a drone in the UK, you need to:\n Not be higher than 400ft from the surface \u0026ldquo;you must keep the drone in your direct sight at all times while it is flying\u0026rdquo; \u0026ldquo;you must not endanger anyone, or anything with your drone, including any articles that you drop from it\u0026rdquo; \u0026ldquo;you must not fly within the Flight Restriction Zone of a protected aerodrome\u0026rdquo; \u0026ldquo;if your drone weighs more than 7kg, additional rules apply\u0026rdquo; Not be flown over congested areas  As you can see, the UK isn\u0026rsquo;t ripe for drone deliveries like America is.\nü§ñ Using AI, You Can Undress A Photo Of Any Woman With A Single Click\nThe app uses the same technology that Deepfakes use to create a naked body of a woman.\nThe technology has existed for a few years. Most famously it was used to decensor anime in DeepCream.py.\nIt is horrifying to imagine people using this technology to undress children, and adults.\nI can\u0026rsquo;t begin to imagine how you would fight against something like this. For sure we need laws that regulate this kind of stuff. But, like with most technology, the laws come after the technology is in widespread use (Facebook, for example).\nIt sounds ridiculous, but the only way to protect yourself from this type of technology is to never, ever appear in front of a camera. Not even for a single photo.\nüì∞ Study Of Thousands Of Players Shows A Simple Online Game Works Like A \u0026lsquo;vaccine\u0026rsquo;, Increasing Skepticism Of Fake News By Giving People A ‚Äúweak Dose‚Äù Of The Methods Behind Disinformation\nThe perceived reliability of fake news is reduced by 21%, yet it makes no difference to how users ranked real news.\nI can see an education reform happening soon in the UK. The UK understands that Computer Science is an ever-evolving field. When you study 3 years in Computer Science (whether that\u0026rsquo;s for GCSE or a degree) it\u0026rsquo;s estimated that 40% of the things you\u0026rsquo;ve learned are no longer relevant. 5 years and 70%.\nThe UK government has rebuilt the Computer Science GCSE path to reflect more on the real world.\nIn the future, politicians would want students to take fake news classes. Because this will increase the trust of the nation in the politicians.\nüöö Cement Produces More Pollution Than All The Trucks In The World, Despite There Being An Alternative Which Reduces Carbon Emissions 90%\nThe industry is not adopting this technology because:\n It costs more to make The materials are harder to get in certain parts of the world (Europe)  But, Australia is embracing it. Brisbane West Wellcamp Airport has used this for their taxiways.\nüöó Lightyear One Debuts As The First Long-range Solar-powered Electric Car\n450 miles on a single charge, powered by solar and intended for the consumer market.\nFor reference, Tesla\u0026rsquo;s average about 325 miles at the moment.\nüì∫ Inside The Life Of A Traumatic Facebook Moderator\nTheir bosses fire them if they do not uphold an accuracy rating of 98%. The average accuracy rating is around 80%.\nSeeing people die every day has caused the moderators to develop PTSD.\nThis is one job where AI could replace humans and we wouldn\u0026rsquo;t be mad or upset.\nüïäScientists Discover A Neurotics That Doesn\u0026rsquo;t Appear To Be Harmful To Any Living Thing Except Anopheles Mosquito\u0026rsquo;s That Spread Malari\nFrom the paper:\n Further research about the interaction between the toxin and the nervous system cell membranes in different species is needed. This compound hurts part of the nervous system in mosquitoes that mammals (such as birds and fish) don\u0026rsquo;t have. This was verified by exposing mice to the compound without significant harm, although it should be noted that the scientists could not verify whether the compound reached the mouse nervous system, so further research is needed.\n Distant future üí° Brightest And Highest Pixel Density Monitor In The World Revolutionises Light High Fidelity Xr Headsets\n1\u0026rdquo; inch screen with a resolution of 5000x4000 and 1KHz, i.e. 1000 fps. Also, 1 million nits of brightness.\nThe author of the above video didn\u0026rsquo;t know what to talk about. I agree. This is so different from everything we\u0026rsquo;ve seen before it\u0026rsquo;s hard to know what to talk about.\nThis is going to take XR to the next level.\nüöÅ Amazon Gets U.s. Patent To Use Delivery Drones For Surveillance Service\nA few weeks ago, I talked about the idea of using drones as CCTV. Amazon\u0026rsquo;s taken this idea and ran with it.\nI see a future filled with drones. The idea of using drones for surveillance makes total sense. Even non-public sector drones.\nAmazon says that the drones can be used to find broken windows on a house, or garage doors left open.\nThe Broken Windows Theory states that one single broken window (signs of crime or anti-social behaviour) will cause more crime and anti-social behaviour to happen. Even when the broken window was caused by something unrelated to crime.\nI envision a future where the public sector pays for companies to use their drones for surveillance. Amazon\u0026rsquo;s patent allows them to track homes - not the roads or paths.\nBut, of course, distant future because Amazon patented it. Meaning that only Amazon can do this for a long time.\nI still envision a distant future where the public sector outsources most CCTV to drone companies.\nüíÄ Oxford Performance Materials‚Äô 3D printed PEKK implants demonstrate accelerated bone regeneration\nThis technique enables cartilage repair, showing strong evidence of new bone formation.\nThis could aid in treatments for critical-sized bone defects, reducing the need for invasive procedures such as bone grafting.\nüö∂‚Äç‚ôÄÔ∏è 3d-printed Flexible Meshes For Ankle And Knee Braces\nThe mesh can be adjusted in terms of flexibility and toughness, it emulates and supports soft tissues such as muscles or tendons.\nThis leads to tough-yet-stretchable material being used as personalised wearable support (such as knee braces) and even implantable devices (such as hernia meshes) that better match the patient\u0026rsquo;s body.\nüåë NASA Will Go Looking For Alien Life On Titan, A Moon Of Saturn\nNASA will use Dragonfly, the drone-like spacecraft we\u0026rsquo;ve seen on this newsletter before.\nThe drone will hop from one spot to another, drill down and take measurements.\n‚ÄúTitan has all of the key ingredients needed for life,‚Äù says Lori Glaze, the director of NASA‚Äôs planetary science division.\nüß¨ Startup Packs All 16GB Of Wikipedia Onto DNA Strands To Demonstrate New Storage Tech\nComputer storage has moved from magnets to hard disks to 3D stacks of memory chips. Could the next storage technology be DNA?\nThe startup has stored 16GB of English Wikipedia (text only) on a very, very small sample of DNA (a tiny drop).\nBut, the machines used to write to DNA are large and complex. We likely won\u0026rsquo;t see this technology used commercially for a while.\nüêù Robobee Improvements. No Longer Needs A Wire, Is Entirely Solar Powered.\nThe robobee, a small drone (about the size of a finger) loses its power cord for solar energy.\nIt is the first to fly without a power cord (of all the robobees) and the lightest, untethered vehicle to achieve sustained flight.\nSolar power will power the future of drones.\nLooking into my üîÆ, the Robobee would be effective in combat and CCTV use. Imagine flying this thing with a small camera. The Robobee is so small it is possible to not make it out in a background amongst other things.\nüêØ Facebook\u0026rsquo;s VR Tracking Gets Better. Wearing A VR Headset This Prototype Will Model Your Entire Face\nThe technology is mainly being used for games at the moment.\nGames where the custom avatar is you.\nIt could also work effectively in online poker tournaments to show your face.\nI\u0026rsquo;m worried that if VR tracks the movements of your face, they could be used for Deepfakes or to train Deepfake models.\nüè≠ The World Is Increasingly At Risk Of ‚Äúclimate Apartheid‚Äù, Where The Rich Pay To Escape Heat And Hunger Caused By The Escalating Climate Crisis While The Rest Of The World Suffers, A Report From A UN Human Rights Expert Has Said\nWall-e, anyone?\nNo surprise here. This has been happening for quite some time.\nWith space tourism starting up next year, I\u0026rsquo;m excited about space hotels. Sick of all the death and disease on earth? Got a few billion ¬£¬£¬£? Just fly to space.\nü•° Oyster Shells, The Part Known As Mother-of-pearl, Inspire Scientists To Create Glass That‚Äôs Much Harder To Shatter.\nThe inspired glass is 2-3 times more impact resistant than laminated glass and tempered glass and outperforms Plexiglass. The fabrication method is relatively easy and scalable.\nüíâ A Vaccine For Alzheimer\u0026rsquo;s Is On The Verge Of Becoming A Reality\nPrevention of Alzheimer\u0026rsquo;s is looking good for the distant future.\nThe study linked found that the vaccine produced _**_40 percent reduction in beta-amyloid and up to a 50 percent reduction in tau. Importantly, there were no adverse immune reactions.\nWhat this means is that there is a chance this vaccine can prevent Alzheimer\u0026rsquo;s. Still in the very early stages.\nUntil next time,\n Brandon üêù  ","permalink":"https://polymath.cloud/edition-6-technologically-clairvoyant-ed.-6-alzheimers-addictive-social-networks-3d-printing/","summary":"Hello üëã Brandon here.\nüåä Welcome to the sixth edition of üîÆTechnologically ClairvoyantüîÆ\nWithout further ado, let‚Äôs get into it üé™\nNear future üñ≤ Nimses - Most Addictive Social Network\nThis social network pays you to use it. Every new post you create is more money for you.\nThe more engagement your post gets, the more money you make. We\u0026rsquo;ve seen this with Steemit before.\nWhat differentiates it from Steemit is the idea that you can buy a property.","title":"Edition 6 - \"üîÆ Technologically Clairvoyant ed. 6 - Alzheimer's, addictive social networks, 3d printing\""},{"content":"Technical side of Libra Some things about this crypto:\n It is pseudo-anonymous (there is no identity on the blockchain) It\u0026rsquo;s permissioned (like hyper ledger)  Organisations will run nodes.\nThese nodes validate transactions.\nEach time a consensus is voted on, a new leader will be designated at random to count up the votes.\nFacebook says:\n\u0026ldquo;Founding Members are organizations with established reputations, making it unlikely that they would act maliciously,\u0026rdquo;\n On-chain governance  The Founding Members hold Libra Investment Tokens.\nThese give them voting rights.\nThey make decisions about the design of the crypto, managing the reserve and letting new validators join the network.\nBitcoin does not use this system. They require 51% of the network to vote on decisions.\n Smart Contracts  In Etherum, these are contracts that cannot be broken. Basically, it\u0026rsquo;s a way to program something directly into the blockchain.\nLibra will allow you to code things directly into the blockchain.\nEvery time you run Libra code, you have to pay for it (no free beer here).\nUnlike Etherum:\n Libra limits how much its users can do on the protocol at first It breaks data out from the software, so one smart contract can be directed at any pool of assets. One set of code can be used on any number of wallets or collection of assets.  What\u0026rsquo;s super interesting about this, is that Libra sounds to be Turing complete.\nThis means you can build Facebook on web 3.0, a decentralised Facebook.\n\u0026ldquo;Facebook - the worlds first social network where you control your data, and we can\u0026rsquo;t control it at all\u0026rdquo; has a nice ring to it.\nIf Facebook builds itself onto this blockchain, imagine everyone else that follows. Eventually, we\u0026rsquo;ll be on a completely decentralised web, and Facebook will own it. And their founders will be the only ones who have voting rights to change things.\nA subset of people get to decide on the majority of the population, sounds familiar, huh?\n Proof of stake is the future (but it\u0026rsquo;s not ready yet)  ‚ÄúOver time, membership eligibility will shift to become completely open and based only on the member‚Äôs holdings of Libra,‚Äù\nBy not using proof of work (Bitcoin) and proof of stake (Etherum) they are reducing high energy costs and increasing performance. From the paper:\n‚ÄúWe did not consider proof-of-work based protocols due to their poor performance and high energy (and environmental) costs.‚Äù\n Libra is burning  Burning is where you permanently remove coins from circulation, reducing the total supply.\nWe burn coins because:\n Proof of burn. It\u0026rsquo;s a way of achieving consensus in a network Increase the value of coins (supply/demand curve) Protection against spam. In Bitcoin, the miner gets paid the fee. In Ripple, the fee is burnt so everyone gets treated equally.  However, Libra won\u0026rsquo;t use burning to increase the value of its coin. Tokens will be issued and burned constantly, as the Libra association responds to demand shifts for its reserve.\nWhat\u0026rsquo;s interesting is that there isn\u0026rsquo;t a hard number of minimum or maximum supply stated. This will be up to the Founding Members to decide.\n Users don\u0026rsquo;t need to hold onto the whole transaction history  With Bitcoin, to really use it, you need to download the entire 37gb transaction history.\nLibra makes it ledger disposable. Users only need to hold proof of the last block, which they can easily do on a smartphone.\n‚Äúhistorical data may grow beyond the amount that can be handled by an individual server. Validators are free to discard historical data not needed to process new transactions.‚Äù\n","permalink":"https://polymath.cloud/libra/","summary":"Technical side of Libra Some things about this crypto:\n It is pseudo-anonymous (there is no identity on the blockchain) It\u0026rsquo;s permissioned (like hyper ledger)  Organisations will run nodes.\nThese nodes validate transactions.\nEach time a consensus is voted on, a new leader will be designated at random to count up the votes.\nFacebook says:\n\u0026ldquo;Founding Members are organizations with established reputations, making it unlikely that they would act maliciously,\u0026rdquo;","title":"Libra"},{"content":"Hello üëã Brandon here.\nüåä Welcome to the fifth edition of üîÆTechnologically ClairvoyantüîÆ\nThis edition is a little long. Lots of things have happened (Libra, + the 2-week break from posting about news)! I\u0026rsquo;ve reduced it to as short as it can be, I hope you don\u0026rsquo;t mind!!! üòÅ\nWithout further ado, let‚Äôs get into it üé™\nNear Future ‚ôé Facebook announces new cryptocurrency Libra, working with 100 organisations\nFirst, let\u0026rsquo;s get a little background on cryptocurrencies. What\u0026rsquo;s wrong with them right now?\n Computationally expensive (requires a lot of electricity) Super slow. Bitcoin handles about 7 transactions / second. Visa handles 1,700 / second. Can\u0026rsquo;t abide with laws set by governments (or generally, don\u0026rsquo;t want to)  Libra aims to fix all these problems.\nWhy would we want a globalised currency?\nMy favourite example of this is Kenya (among other African countries).\nIn Kenya:\n 19 million out of 44 million people use M-Pesa, a mobile currency system  The most popular use is working in a city, and sending the money back home to a rural town in a matter of seconds. I remember reading a story about how in countries that are fought over, the currency changes a lot. It\u0026rsquo;s possible to have 2, 3, 4 currencies carried with you at all times in case someone didn\u0026rsquo;t accept it.\nWith a global currency, you don\u0026rsquo;t have to worry about that. Imagine having all of your money in one currency, and then the country for that currency dies. Your money just\u0026hellip; dissapears. A global currency would prevent this from happening.\n Visa and Mastercard take a 3 - 4% cut of every transaction  Libra plans to take 0%. In fact, Facebook is giving consumers discounts who use Libra. You buy something at Tesco, get an x% discount, Facebook will give Tesco x%.\n There are many people all over the world without access to banking  Modern life cuts you off without access to banking. No storage of money, no investments, no way to transfer it.\n Fights against hyperinflation  If you live in a country with tight currency \u0026amp; economic controls and experience hyperinflation (Zimbabwe, Venezuela, others https://tradingeconomics.com/country-list/inflation-rate) access to alternative currencies can mean the difference between life and death.\nThe money you make on your salary will be worthless by the time you get your cheque.\nNot with Libra, which aims to be stable globally.\nHey!!! So I\u0026rsquo;ve written a lot about the technical side to this crypto. If you\u0026rsquo;re super interested in a short TL;DR of the 12-page white paper, check it out on my blog here :-)\nTL;DR tech specs\n Libra is decentralised, but not 100% decentralised.  While Facebook intends for Libra to become decentralised,\nthe Founding Members will validate transactions initially.\n Libra is half cryptocurrency/half fiat currency  Libra aims to combine the cool software from cryptocurrencies with the regulations and stability of fiat currencies. One of the features of fiat currencies Libra wants to use is:\n Hard exchange rate. No wild swings like Bitcoin from ¬£0.7 to ¬£20,000  Libra also aims to stick at a hard exchange rate. For example, 1 libra could equal $1 (the exact exchange is unknown at the moment).\nWith Bitcoin, 1 BTC could equal ¬£0.07, or ¬£20,000.\nWith Libra, the price is semi-set in stone. It may differ by a few % every day (as all currency conversions do) but it aims to remain stable.\nLibra is an asset-backed token. This means it is backed by an asset (such as gold, the euro etc). It does not have a fixed price in any one currency\nLibra will:\n\u0026ldquo;\u0026hellip;be backed by a basket of fiat currencies and government securities\u0026rdquo;\nAny interest earned on this basket (reserve) will go to the holders of the investment tokens (given to the Founding Members).\n Web 3.0  Libra has smart contracts built in.\nThis uses a programming language (called Move).\nThis language is Turing Complete.\nAny software written at all can be re-written in Move (on Libra).\nThis includes the World Wide Web.\nLibra can create the web 3.0, and with over 100 of the worlds largest companies (including Facebook) it is possible for this to take off.\nAlthough, this is looking into my crystal ball üîÆ First comes the currency.\nTL;DR The technology behind the currency is sound. It\u0026rsquo;s super cool to see this.\nFacebook is planning on creating this currency, then leaving forever.\nYup, Facebook doesn\u0026rsquo;t want to play a big part in it.\nThis leaves a big question.\nWhy create something so big, only to leave it right after?\nThere are 2 main reasons I can think of:\nGet rich. As Libra Investment Tokens generate income (via appreciation), the Founding Members will make money. Libra is asset-backed. The amount of assets scales with how much Libra scales. If Libra scales up, Libra will own more assets. More assets = more interest payments for the Investment Token Holders.\nFacebook will move to web 3.0\nWith Libra, you can create web 3.0.\nThis means no servers hold all your data. You control it. It\u0026rsquo;s all decentralised.\n\u0026ldquo;Facebook - the worlds first decentralised social network\u0026rdquo;\nTheir share price would rocket. People would join and start to trust them.\nIf they work on web 3.0, lots of fundamental shifts will happen on the internet.\nFor starter, Amazon\u0026rsquo;s online store would die. Imagine being a woodworker and you want to sell something. You make a posting on your website, which is federated to marketplaces.\nThese platforms charge very little fees (they\u0026rsquo;re not businesses, but smart contracts on a blockchain). The fees are what you pay for creating smart contracts.\nYour product is now in many market places for everyone to see. You only put it online once, but it\u0026rsquo;s on a lot of marketplaces. When someone buys your item, you pay minimal fees and get most of the profit.\nIt\u0026rsquo;s hard to imagine where the web will be, but, this is a currency. They may not work on the web 3.0 at all. , I would hope they do. 100 of the worlds largest companies all working on a cryptocurrency with smart contracts? They\u0026rsquo;d be missing out if they didn\u0026rsquo;t explore it. üîÆ\nüèÉ‚Äç‚ôÄÔ∏è Open-source bionic leg aims to rapidly advance prosthetics\nResearchers who work with disabled people often have to build their own robotic leg system.\nInstead of starting from scratch, the researchers can take this open-source platform and begin working on research.\nThis platform aims to take the time of building prosthetic legs down.\nIt\u0026rsquo;s a cool idea, but like with most open-source things it remains to be seen whether people will actually use this or not. I\u0026rsquo;m hoping they do.\nBuilding your own leg from scratch to test some things seems absurd.\nü§ñüöÅ Hybrid drone with mid-air transition changes from quadcopter to aeroplane\n2 weeks ago we discussed how Amazon wants to create hybrid drones like this.\nNow, we have a video of someone (not Amazon) who have succeeded at this.\nQuadcopters have manoeuvrability. They can take off and land vertically. But, they are slow.\nAeroplane based drones are much faster, but can\u0026rsquo;t place packages down as a normal quadcopter can.\nThis system combines the best of both worlds. With drone delivery becoming ever more important, we need to work on increasing their speed.\nüéÆ Gaming arena opens within Sports Direct - UK\u0026rsquo;s largest sports retailer\nThis is cool to see. In fact, this is very important for esports.\nRecently, Sports Direct brought Game (large UK game retailer).\nThe founder sees that sports and e-sports are closer than most people think.\nWhat I\u0026rsquo;m especially excited for is the prospect of combining the physical movements of sport, with virtual creative games. The perfect use case for VR.\nThe world\u0026rsquo;s first e-sports VR league runs every year in Leicester, UK. This happens to be the same country that Sports Direct is in.\nThe founder of Sports Direct is very secretive. He hasn\u0026rsquo;t spoken about why he\u0026rsquo;s investing in e-sports.\nFifa, close to a traditional sport, can be played in VR.\nI\u0026rsquo;m excited to see the UK lead the way in combining traditional sports with e-sports.\nüåø Plant-based replacements for meat can produce 2 to 20 times more food per unit cropland, which is nutritionally comparable. The opportunity cost of animal-based diets exceeds all food losses.\nPlant-based replacements are becoming ever more important.\nThis research states that plant-based replacements can produce 2 - 20 times more food per unit cropland than meat. And is nutritionally comparable.\nOnce the economy of scale kicks in, plant-based replacements should be a lot cheaper to produce than they are now. And with less cropland needed, it\u0026rsquo;s inevitable (unless we find research that says otherwise).\n‚òÄ Researchers identify a key flaw in solar panel efficiency after 40 years of searching\nThe study outlines a defect in silicon used to produce solar cells. This causes the 2 percent efficiency drop that solar cells can see in the first hours of use called Light-Induced Degradation (LID).\nThe UK\u0026rsquo;s 15 nuclear power plants don\u0026rsquo;t make up for the estimated global loss caused by LID.\nCurrently solar panels transform between 15 - 22% of sunlight into energy.\nAs an example of this, the British cycling team under Sir Dave Brailsford set out to improve by 1% at a lot of things. Better seats, better underwear - you name it. This caused them to win 7 golds at the Olympics after only winning 1 gold in its 76-year history.\n2% isn\u0026rsquo;t a lot, but it\u0026rsquo;s exciting to know that many smaller efficiency upgrades will combine together.\nüîã Energy firms buy electricity from household solar panels (in the UK)\nIf you have solar panels, it\u0026rsquo;s now possible to make money from them by selling it to energy firms. This is a relatively popular thing in America.\nWhen your solar batteries are full, instead of wasting the electricity it goes back into the grid - earning you money.\nElectricity in the grid is a confusing topic. Imagine oil, but more volatile.\nThe price of electricity swings many times a day. Take, for instance, a large football game on TV. The breaks in the football game cause people to make tea, which causes a massive surge in electricity demand.\nIt\u0026rsquo;s unclear on how much firms will pay for electricity from their customers, as the price changes a lot throughout the day.\nPoliticians recently voted on this, I\u0026rsquo;ll keep you updated if I see any updates on the pricing situation.\nüöó Waymo teams up with Jaguar to release self-driving cars for their Uber rival\nWaymo has recently released some of their luxury Jaguar I-Paces into the wild in Mountain View, California.\nThe cars are the start of a 20,000 strong fleet of self-driving cars.\nCustomers will be able to order cars to drive them somewhere via an app.\nThis reminded me of Tesla\u0026rsquo;s Uber rival. Tesla drivers will be able to set their cars to work as a taxi via the app. Meaning that if you\u0026rsquo;re asleep, your car could be out earning money for you.\nTaxis might not be replaced anytime soon. Driverless cars aren\u0026rsquo;t available everywhere. And when they are, many people won\u0026rsquo;t believe they are safe.\nüçï Domino\u0026rsquo;s teams up with Nuro to begin robot deliveries in Houston, Texas\nThe robots are super small cars that drive autonomously.\nThere have been similar things in Greenwich since 2016 (not Domino\u0026rsquo;s).\nI like the idea of food being delivered by autonomous robots. Much faster, cheaper, in the long run, work longer than normal delivery drivers can.\nWe\u0026rsquo;re about 10 years away from autonomous robots being able to deliver food in large cities across the UK or USA.\nüåæ Results of 21 years of insect-resistant GMO crops in Spain/Portugal\nFor every extra ‚Ç¨1 spent on GMO vs. conventional, income grew ‚Ç¨4.95 due to +11.5% yield.\nDecreased insecticide use by 37%.\nDecreased the environmental impact by 21%.\nCut fuel use, reducing greenhouse gas emissions and saving water.\nFor more about GMO, see my farming special.\nDistant future üè† Printstone shows off new 3d Concrete Mobile Printer\nThe robot is a box on tire tracks with a moveable arm. The moveable arm prints out concrete.\nThe robot can print small traditional concrete structures (not sure on how \u0026lsquo;small\u0026rsquo; but by the looks of it, smaller than 3ft).\nThis robot can print concrete walkways, while it is moving.\nI can definitely see more construction being automated in the distant future.\nüö∂‚Äç‚ôÄÔ∏è Complete Wearable Locomotion System for VR\n3 small devices you put onto your body that tracks the way your body moves.\nThis is then put into the game.\nThe company behind this, KAT, are known for its VR treadmill which aims to do the same thing (but on a treadmill).\nI\u0026rsquo;m excited to see full body tracking implemented with haptic feedback to come into this world. The end goal of VR is to be fully immersed. This is one step towards that.\nüöÅ Maple Leaf Seed Flying Machines\nColloquially called \u0026lsquo;helicopters\u0026rsquo;. The kind of seed that spins as it\u0026rsquo;s dropped.\nThese machines aim to do the same. You drop them, and they spin - meaning they stay in the air for much longer.\nThe cool thing is that they don\u0026rsquo;t need much power to be able to spin. Unlike drones, which need the power to hover.\nThe robot can make ad-hoc networks.\nImagine being in a warzone and dropping a bunch of these out to create an ad-hoc radio network.\nOr attaching cameras to these to monitor the battlefield.\nThanks to the fact that they don\u0026rsquo;t need the energy to fly, I can imagine these being cheaper than drones in the long run.\nüöÅ Anti-drone gun\nAutomated anti-drone guns will be very important in the near future.\nLondon Gatwick was shut down because of a drone a few months ago.\nIf there was an automated anti-drone gun in place, the drone will be out of commission before airport officials even knew it was there.\nA few weeks ago, I touched on the idea of emergency service drones. Drones being used to respond to human emergencies.\nI\u0026rsquo;m starting to think about how drones can police other drones.\nI\u0026rsquo;ve talked about how the police might use drones to stop criminals (tase them or track them). It goes without saying that the criminals could also use such drones to carry out crimes without being there.\nIn the distant future, it is unreasonable to think about how human police officers could respond to every drone incident. It makes sense to me to have a drone police force put in place to prevent criminal drones and to help the police force with human issues.\nüíµ \u0026ldquo;If money wasn\u0026rsquo;t an issue, what job would you pick?\u0026quot;\nUniversal Basic Income (UBI) is the idea of paying everyone in a nation a fixed income to let them do what they want.\nThis Reddit post was a nice sociology post.\nMany Redditor\u0026rsquo;s talked about baking companies, becoming writers, doing their passions.\nA few weeks ago, New Zealand said they wanted to make people happy, not rich.\nThe idea of universal basic income is one where the happiness of a nation might be lifted up if they could do what they love.\nIt also supports the idea of businesses. Many Redditors talked about starting their own business. If money wasn\u0026rsquo;t an issue, why wouldn\u0026rsquo;t you start one? You\u0026rsquo;ve got nothing to lose.\nWhile this sounds like a socialist agenda, it\u0026rsquo;s weird. It\u0026rsquo;s not right wing, it\u0026rsquo;s not really left wing either.\nWith universal basic income, you could get rid of free public sector initiatives. Instead of paying for the NHS through tax and not paying for it when you need it, you can pay for it when you need it.\nFinland\u0026rsquo;s study into UBI left people happier, but jobless.\nAlthough, it\u0026rsquo;s worth mentioning that the Finland study was taken on a group of randomly selected people on unemployment benefits.\nü•õ Can\u0026rsquo;t breath in medication? Try Liquid Air\nSome chronic illnesses prevent you from breathing in the medication.\nBreathing in medication is the go-to standard for medication relating to the lungs.\nThe solution? Liquid air. You drink this liquid\u0026hellip; which lets you breathe? And contains the medication?\nYeah, I thought it was wild too. You drink this liquid, and you\u0026rsquo;ve breathed.\nI don\u0026rsquo;t think this will play a big part in our future like drones or XR, but it\u0026rsquo;s cool and I wanted to show you üòÖ‚ú®\nUntil next time,\n Brandon üêù  ","permalink":"https://polymath.cloud/technologically-clairvoyant-edition-5-libra-sports-direct/","summary":"Hello üëã Brandon here.\nüåä Welcome to the fifth edition of üîÆTechnologically ClairvoyantüîÆ\nThis edition is a little long. Lots of things have happened (Libra, + the 2-week break from posting about news)! I\u0026rsquo;ve reduced it to as short as it can be, I hope you don\u0026rsquo;t mind!!! üòÅ\nWithout further ado, let‚Äôs get into it üé™\nNear Future ‚ôé Facebook announces new cryptocurrency Libra, working with 100 organisations\nFirst, let\u0026rsquo;s get a little background on cryptocurrencies.","title":"üîÆ Technologically Clairvoyant edition 5 - Libra, Sports Direct"},{"content":"Hey!!! So the short answer is, I don\u0026rsquo;t really take notes (although sometimes I do) With the internet, I don\u0026rsquo;t believe that taking notes from a book is very useful in most cases.\nWhat you want to develop is assioicative knowledge. For example, you know that in the book Four Hour Body Tim Ferris talks about how to lose weight for martial arts competitions, but you don\u0026rsquo;t remember exactly what he said.\nThis is perfect!!! You can just Google it. Or re-read that book. When reading books, you don\u0026rsquo;t want to make your knowledge deep. You want it to be shallow and spread over everything. For example, if I wanted to know about the best way to evaluate a company using their managerial team, I know that this is a chapter in the intelligent investor. Although I have no idea where, and I don\u0026rsquo;t remember a part of it!\nWith the internet, we get this really cool effect where you don\u0026rsquo;t need to know the specifics of anything.\nThere\u0026rsquo;s this story of a famous American businessman. People claimed he was the smartest man in the world, because he was so incredibly rich.\nOne day, a news reporter goes to debunk this. They ask him: \u0026ldquo;How many gallons of Oil does the USA buy every year?\u0026rdquo;\nThe businessman presses a button on his desk. He\u0026rsquo;s connected to an expert on oil economics in the USA. He answers \u0026ldquo;1.28 billion a year\u0026rdquo;\nThe newsreporter remarks \u0026ldquo;calling someone up and asking them the question clearly doesn\u0026rsquo;t make you the smartest man in the world\u0026rdquo;\nThe bussinessman replied: \u0026ldquo;No, what does make me the smartest person in the world is knowing that I know nothing. Having friends that do know things. And being able to talk to them to find out the answers of any question I may have\u0026rdquo;\nThe moral of the story is that you don\u0026rsquo;t need to go deep for information in books. Just like how that businessman had a speed dial of people, we have the internet. (PS: you bet I got this from a book üòõ)\nSo, read as much as you want, as fast as you can. You don\u0026rsquo;t need to remember it.\nAnother thing, books are strange. I\u0026rsquo;ve just read Thinking Fast and Slow. I can\u0026rsquo;t recount any one single experience of the book, but I know the whole picture. Biases are everywhere and we must know this.\nWhen you read books, you don\u0026rsquo;t really come away with information, you come away with experience. The best people in the world who have worked in that field for 20, 40 years are distilling all the information down so you can learn it in a few days.\nIf I\u0026rsquo;m ever designing a lesson plan for psychology students. I know there\u0026rsquo;s a chapter about it in this book.\nWhen you read, you come away with life experience, life lessons. There\u0026rsquo;s a nice article on this: https://medium.com/the-polymath-project/its-okay-to-forget-what-you-read-f4ef1c34cc01\nOkay, so when do I take notes? If I\u0026rsquo;m reading something and I think \u0026ldquo;hey, this information is useful to my life right now. I need to remember it, so I\u0026rsquo;m going to write it down\u0026rdquo;.\nActually, I don\u0026rsquo;t exactly write it down. I ignore the page and try to write what I just read. Often times, I\u0026rsquo;ll forget most of it. This is fine. I\u0026rsquo;m implementing active recall here. The same principle is used in flashcards to help you remember things.\nThis helps me remember it for longer, and it only takes a couple of seconds so it\u0026rsquo;s worth it :)\nI don\u0026rsquo;t try to write everything down.\nI have a private blog post on my blog where I write down all the things I read in books. I used to do it in my notes app :)\nI prefer digital storage because I can crtl + f to find it on the page, if I remember a part of it.\nSo, in summary, I:\n ¬†Don\u0026rsquo;t aim to memorise books at all. I aim to create shallow water that strecthes out far, because If I need to remember the specifics of something I can just Google it. When I do find something that is directly useful to me, I write it down in some digital notebook so I can find it. When I\u0026rsquo;m bored, I\u0026rsquo;ll read through it.  I don\u0026rsquo;t use flashcards, because that\u0026rsquo;s a habit and I\u0026rsquo;m bad at making habits as it is.\nIf you\u0026rsquo;re using a Kindle, you can use Readwise (paid service, not affiliate). readwise.io They email you daily of some cool Kindle highlights. They also have flashcards and stuff. I\u0026rsquo;m not paying for them, they send me some highlights every couple weeks to try and make me pay.\nAlthough 2 really important tips for generally reading books:\n Skip the parts you find boring. You don\u0026rsquo;t have to read from A to Z. ¬†Rereading a good book again is 100x more effective than reading a new book (this plays into memorising things. Once you\u0026rsquo;ve read a book a few times, you\u0026rsquo;ll know a lot about it)  Hope this helps!!! :)\n","permalink":"https://polymath.cloud/sted/","summary":"Hey!!! So the short answer is, I don\u0026rsquo;t really take notes (although sometimes I do) With the internet, I don\u0026rsquo;t believe that taking notes from a book is very useful in most cases.\nWhat you want to develop is assioicative knowledge. For example, you know that in the book Four Hour Body Tim Ferris talks about how to lose weight for martial arts competitions, but you don\u0026rsquo;t remember exactly what he said.","title":"sted"},{"content":"Hey this is a really good question thanks!!! So i actually have a lot of opinions about this. First, I\u0026rsquo;m going to share generally how to stay motivated. Then I\u0026rsquo;m going to share specifically how to stay motivated in projects. I feel like the second one builds on from the first one.\nThis is divided into two camps, sprints and jogging. When you run a marathon, you don‚Äôt sprint all the way to the end. You jog and sprint when it‚Äôs needed for you to win. Like in life, you can‚Äôt sprint 100% of the time.\nIf you see people who sprint 100% of the time, either they‚Äôre lying through their teeth or they jog so much that their jogging pace looks like a sprinting pace to you. That‚Äôs okay, we all want to increase our jogging speed.\nNow, you want to minimise the amount you sprint. The way to do this is to batch your work in such a way you only sprint once every few days / a week at most.\nI do this by automating myself out of failure. If I try to come up with a good instagram caption / photo every day, I‚Äôd fail so fast. Instead, I spend a few hours a week making all the posts for that week. I know I‚Äôm going to fail, so I automate myself out of this failure.\nBy sprinting at pinpoint precision and working smartly you end up doing more than what is possible if you sprint all the time. Other things you can automate include emails, food (meal prep), travel etc. Basically, if it doesn‚Äôt bring me joy but it‚Äôs essential for me to do, I‚Äôve likely automated it in some way (or it can be automated).\nOnce you‚Äôve done this, what you‚Äôve got to know is that every single human is different. Some prefer to wake up at 5am, I wake up at 12pm and go to bed late. Do not copy other people. Experiment with yourself and find out what works for you.\nOne of the ways you can automate more of your life is by experimenting. I found that light coloured photos on instagram do better than darker. For every 3 dark photos i post, 1 light photo would get the same amount of engagement. By experimenting i‚Äôve reduced how much I have to automate. When you automate a slow process, you just have a slow process automated. When you automate a fast process, you‚Äôve 10x that process. Experimenting is key, always.\nNow, when you have to sprint, there are a couple of things you can do. I like having people depend on me. Knowing that if I don‚Äôt finish my newsletter by Monday, people will be disappointed. People depending on you is the ultimate form of motivation.\nSometimes, we‚Äôve just got to be such fucking babies and just do it. There are some things in my life that i think over for weeks before doing them. If I just do it, it‚Äôs over and i can work on other things.\nThe best way to do something you dont want to do:\n ¬†Go somewhere (the worse the better. Neil Gaiiman locks himself into a 1* hotel in the middle of nowhere infested with cockroaches. He doesn‚Äôt leave until he writes his book, good motivation). Personally i prefer libraries / coffee shops. But you need to be around other people who are also working. Your natural instinct is to follow the group. Note: if you‚Äôre tired, drink water first. At least a litre. If you‚Äôre still tired, coffee or a nap. Coffee should be the last thing you drink. Ifyou‚Äôre tired because you‚Äôre dehydrated, coffee will only make it worse. Get rid of everything that is absolutely not essential to the task at hand. Nothing to distract you. Just do it. ¬†Relax. The worst motivator is being mentally tired and burnt out. Relax often. This has to be a daily thing, to relax, to unwind.  Now, we discussed earlier: \u0026ldquo;One persons jog is another persons sprint\u0026rdquo; How do you get your jogging level to that where it looks like you\u0026rsquo;re sprinting to others? Work 1% every day. Every single day. write one line of code. Write one sentence. 1% every day.\nI read this study (I can\u0026rsquo;t think of the name of the top of my head) about how working out 7 times a week for 10 minutes is better than working out once a week or 70 minutes, as it builds up your jogging level.\nNow, how do you stay motivated in a project?\nWhat you want to do is build a minimal viable prodoct. Everyone feels motivated at the start.\nWhen you\u0026rsquo;re at the start, plan everything. Psuedocode for all the major functions, plan it as much as you can. Use this motivation at the start of a project to understand your project. I find that I leave a project after 1 or 2 weeks if I don\u0026rsquo;t really know where I\u0026rsquo;m going. If I plan it all at the start, I have a concrete plant of what to do.\nUnderstand where your MVP ends. You know where it ends. and you know the psuedocode / classes etc that you need to get to that end. If you follow on from earlier, you start out by sprinting.\nThen, after sprinting, jog. 1 or 2 lines of a code a day. thats it. even if you\u0026rsquo;re sick of it and bored. 1 or 2 lines a day. Those lines eventually add up. Those 1 or 2 lines could be print statements, everyone has time to add print statements.\nNow, when you have an MVP, release it into the wild. Building on what I said earlier, you\u0026rsquo;ll have people use your project. They will depend on you. You now have users. You can\u0026rsquo;t give up now? With all these people interested in your project.\nMy largest / most popular github repos all have issues on them. In fact, some of them don\u0026rsquo;t even work properly. https://github.com/exgen-code/Exgen https://github.com/brandonskerritt/HowToGetAnyJobYouWant https://github.com/brandonskerritt/Ciphey\nSo now, you\u0026rsquo;ve been jogging for a while. You have an MVP. Which, btw, you can totally talk about your MVPs in interviews as actual products. Even better if you have a few users too. Doesn\u0026rsquo;t matter if it doesn\u0026rsquo;t work, you\u0026rsquo;ve still made stuff!\nThe combination of jogging / having users / people knowing your project exists and expect more should be enough motivation. Maybe you\u0026rsquo;ll want to sprint again. Maybe you\u0026rsquo;ve decided \u0026ldquo;well, that was fun. The MVP is all I want to do\u0026rdquo;.\nSo the most important things to do:\n ¬†When you start a project, don\u0026rsquo;t start by code. Start by planning. Know where your MVP ends (and make it easy). Know how to get to that MVP. Once the MVP is made, release it. Start jogging. Whatever you want. It\u0026rsquo;s okay to not complete projects. Maybe you want to complete them, so perhaps you should sprint again.  If you lose motivation before you finish your MVP, reduce the MVP down even more. Make it so your goal is closer, so your MVP is closer to where you are right now. Or just jog until you reach the MVP.\nHope this has helped you :)\n","permalink":"https://polymath.cloud/jp-touma/","summary":"Hey this is a really good question thanks!!! So i actually have a lot of opinions about this. First, I\u0026rsquo;m going to share generally how to stay motivated. Then I\u0026rsquo;m going to share specifically how to stay motivated in projects. I feel like the second one builds on from the first one.\nThis is divided into two camps, sprints and jogging. When you run a marathon, you don‚Äôt sprint all the way to the end.","title":"jp.touma"},{"content":"Hello üëã Brandon here.\nWelcome to Edition 4 üîÆ\nNear Future üóΩ New York Tenants Fight As Landlords Embrace Facial Recognition Cameras\nIn a bid to stop facial recongition replacing traditional keys, 130 tenants have signed a petition. The public sector heavily regulates facial recognition, but there are currently no laws in the private sector.\nOn the one hand, keys are often lost. Tenants come and go. This all saves money for the landlords.\nBut, we may see some transitive relations. The landlords won\u0026rsquo;t sell the data, but the company the landlords are leasing (or buying) the equipment from might sell the data. Is it then a problem with the landlords, or a problem with the company?\nüëì Drag:on - Air Resitance For Vr\nResearches from the German Research Center for Artificial Intelligence (DFKI) have created VR controllers which can vary their air resistance. This is 1 step closer to being immersed in VR. In the distant future, weight will be introduced into VR and other aspects of human life. I can see it being possible to workout in VR or practice archery as if it were real life.\n‚å® Markov Keyboard\nAfter every letterpress, the design of the keyboard changes. It uses Markov Modelling to predict what\u0026rsquo;s the next key you\u0026rsquo;ll press and it brings these keys to the home row.\nOur current keyboard layout, QWERTY, is designed to increase travel distance to prevent mistakes from happening on Typewriters (yes, it is that old).\nThis is a small example, but I can imagine in the distant future keyboards which know what you\u0026rsquo;ll type and reduce key travel, preventing RSI.\nü§ñ Amazon Announces 800 New Robots Designed To Create New Jobs\nAmazon\u0026rsquo;s factory workers are becoming maintainers and robot specialists. In this video interview, Amazon interviews a part-time factory worker whose job is now to maintain 800 robots in a factory.\nHorses did everything 100 years ago. Carrying packages. Mail. Transport. Public transport. Everything. With the introduction of the car, horses got to do what they loved. Racing - enjoying life. They stopped doing mundane tasks of walking up and down a street and started doing exciting things.\nAutomation\u0026rsquo;s job isn\u0026rsquo;t to replace humans, it\u0026rsquo;s to replace doing the boring, mundane jobs. Note: I\u0026rsquo;m pro replacing humans for mundane jobs, but the idea of every single human becoming a maintainer is ridiculous.\nAs a side note, Amazon\u0026rsquo;s event RE:MARS was this week. This event is where Amazon shows off the future technology they\u0026rsquo;re working on. Expect a lot of Amazon in the near future section.\nüñê Magic Leap Achieves Full Hand Tracking\nMagic Leap can track hands (without gloves or equipment on the hands) as well as being able to recognise gestures. This is a huge step forward for XR equipment. Imagine using XR without controllers. Only your hands. Crazy.\nüöÅ Amazon Announces New Half-drone Half-aeroplane\nThe drone will have the moveability of drones, mixed with the performance and speed of aeroplanes.\nüó£ Chinese Search Engine Sogou Has A 90% Accurate Ai Lip Reading System\nThe system was designed to help the deaf, but it\u0026rsquo;s not hard to see this system being used in facial recognition software.\nüíÑ Amazon Is Partnering With L‚Äôor√©al To Let You Digitally Try On Makeup\nTo be clear, this isn\u0026rsquo;t invented by Amazon. L‚ÄôOr√©al invented Modiface to let consumers try on makeup at home. Originally based on Facebook, Amazon is now implementing it in its app. Looking at the website, L‚ÄôOr√©al expects to sell this technology to rival companies.\nüòÅ New Zealand\u0026rsquo;s Latest Budget Puts Happiness Over Wealth\nThe goal is to downplay the role of gross domestic product (GDP) in favour of increasing the happiness of all citizens.\nJacinda Ardern, New Zealand\u0026rsquo;s Prime Minister, has promised billions of dollars in funds to work on:\n Address mental health problems Preventing Suicide Child Poverty  Mental health services have been promised NZ$2 billion.\nüö™ Amazon\u0026rsquo;s Ring Is Putting Suspected Thieves Into Their Advertisements\nAmazon\u0026rsquo;s advert showed a video of someone breaking into a car and stealing something. The advert asked:\n \u0026ldquo;Mountain View Residents: Do you recognise this woman? If so, call the police\u0026rdquo;\n Crowdsourcing the solutions to crimes is nothing new. TV shows have been doing it for years. What\u0026rsquo;s interesting is the idea of using targetted advertisements for crimes such as theft.\nüêâ Bbc Reporter For Beijing Locked Out Of Wechat For Posting About Tiannaman Square Massacre\n \u0026ldquo;Chinese friends started asking on WeChat what the event was? Why were people gathering? Where was it?\u0026rdquo;\n  \u0026ldquo;I answered a few of them, rather cryptically, then suddenly I was locked out of WeChat.\u0026rdquo;\n What interested me the most about this story were the Orwellian steps they had to take to regain access to WeChat. The author notes \u0026ldquo;living in Bejing without WeChat is impossible.\u0026rdquo; so he has to get it back.\nThe reporter posted about the memorial they visited on WeChat Moments. They say:\n \u0026ldquo;I was instructed to hold my phone up - to \u0026ldquo;face front camera straight on\u0026rdquo; - looking directly at the image of a human head. Then told to \u0026ldquo;Read numbers aloud in Mandarin Chinese\u0026rdquo;.\n A few weeks ago, we explored how with such little data you can create a deepfake of anyone doing anything. Sharing this type of data with a singular entity is always worrisome.\nI would like to make it clear that living in China without WeChat is impossible, so you have to do this. The author notes the uses of WeChat:\n \u0026ldquo;When you meet somebody in a work context they don\u0026rsquo;t give you a name card any more, they share their WeChat; if you play for a football team training details are on WeChat; children\u0026rsquo;s school arrangements, WeChat; Tinder-style dates, WeChat; movie tickets, WeChat; news stream, WeChat; restaurant locations, WeChat; paying for absolutely everything from a bowl of noodles to clothes to a dining room table‚Ä¶ WeChat.\u0026rdquo;\n üôå Jeff Bezos Tries On Big Hands\nBezos tried on haptic feedback hands. He described it as \u0026ldquo;incredible\u0026rdquo;. Not much to say other than haptic feedback hands are cool and would make a fine addition to XR related products.\nüöÄ Nasa Allowing Tourists To Visit Iss\nNASA expects to open up the ISS as a \u0026lsquo;hotel\u0026rsquo; by 2020, per night this costs $35,000.\nDistant future üöÄ Rockets On Standby\nTwitter user Tom Carrol suggested to NASA \u0026amp; SpaceX to develop a fleet of pre-made spacecraft that are ready to go on short notice for quick responses to events like Oumuamua.\nOumuamua is the only interstellar object detected passing through the solar system.\nLet\u0026rsquo;s go one step further. Why are we building rockets pre-mission when events like this happen? Why don\u0026rsquo;t we build rockets ready to react to things like this?\nOne step further. Why are we building rockets on earth? Our gravity forces rockets to spend a lot of energy to leave the earth. If we built rockets in space, we would save a lot of energy. The problem is then, how do we build rockets in space?\nüõ© Uas Technologies Launches Solar-powered Drone Which Can Fly Up To 8 Hours A Day, 4 Hours At Night\nWith drones being ever more relevant, it\u0026rsquo;s obvious that drones will have to find eco-friendly ways to be kept in flight. This is 1 step towards that.\nLooking into my crystal ballüîÆ electric vehicles already have ways to generate power while driving, such as regenerative breaking. Birds use minimal energy to fly and often use the wind to carry them distances, rarely flapping their wings . Drones in the future could use the same principle to conserve energy. They could rely on the highways in the sky. Using the wind to fly, they might also have small turbines on board which can generate power (or used to fly like a plane).\nAlong with the solar energy they get, it\u0026rsquo;s not hard to see that in the future drones may be able to fly upwards of 16+ hours a day.\nThen again, with ion drives becoming a thing the idea of propellors in the distant future seems absurd. The idea is to \u0026ldquo;ionise the air and use electric fields in the air to provide acceleration\u0026rdquo;.\nIon craft do not need any moving parts. They can fly without them. The drawbacks at the moment are that it\u0026rsquo;s very energy inefficient. At the moment, it\u0026rsquo;s about 10 times less inefficient than a helicopter. They also leave a trail of ozone in its path.\nLikewise, take reading about ion craft with a grain of salt. In the distant future, it is possible to see them becoming ever more used. With normal drones, they have moving parts. Over time, these parts need to be repaired. With a non-moving parts plane, that plane will have less that needs to be repaired. Meaning it could fly longer continuously if only the disadvantages were fixed. Again, this is looking into my crystal ball üîÆ and making assumptions about the future which might never come true.\n‚úà Klm And Tu Delft Make Energy Efficient Flying V Aircraft\nThe conceptualised plane has a very unusual look to it. Imagine a V, where each line of the V is both a wing and seating for passengers. The plane manufacturer claims it will use 20% less fuel than the Airbus A350\ns v-shaped design will integrate the passenger cabin, the cargo hold and the fuel tanks in the wings. Its improved aerodynamic shape and reduced weight will mean it uses 20% less fuel than the Airbus A350 which Airbus claims is the \u0026ldquo;most modern and efficient aircraft\u0026rdquo;.\nüß¨ Stem Cells Edited In Body\nStem cells are cells which are nestled deep inside certain tissues in the body and constantly replace old cells. In recent years, scientists have been able to correct genetic diseases by removing these stem cells, editing their genomes, and then implanting them back into the patient.\nNow scientists at Harvard have successfully edited the genes of stem cells while still in the body of mice.\nüöÅ Designing A Drone To Fire From A Grenade Launcher\nGlytche, the hacker behind this, says that armies and police forces want quick deployment of drones. But he says search and rescue operations can benefit using this technology too.\nIn a fictional film, Slaughterbots, the writers showed how drones can be used to kill people. They use facial recognition to find their target (which, by the way, is so accurate that airports are forgoing passports for facial recongition). Then with explosives onboard, the drone explodes on the victims head - killing them.\nDrones can be so small. You don\u0026rsquo;t need a lot of explosives to hurt someone. Drones can also manoeuvre well and can go fast. With grenade launchable drones, it may be possible to see \u0026ldquo;heat-seeking bullets\u0026rdquo; come to life.\nWhen it comes to search and rescue operations, small, launchable drones could become very useful. You could create a network of drones, all launched in unison which uses a SLAM algorithm. These algorithms are often used by robot vacuum cleaners. \u0026ldquo;What\u0026rsquo;s the fastest way to clean 100% of this room?\u0026rdquo; could be rephrased to \u0026ldquo;What\u0026rsquo;s the fastest way to search 100% of this area?\u0026rdquo;\nLet\u0026rsquo;s look at a freak fire in a building. Once the fire is discovered, a network of these small drones is immediately fired at the building. They\u0026rsquo;re the first on the scene by a longshot. Once on the scene, they address everything. They find people trapped. They find where the fire is, where it\u0026rsquo;s spreading. They map 100% of the building. Working together as an army of small, versatile drones. They can fly through windows, soar through hallways and under tables.\nMore drones come. This time, these drones are looking at putting out the fire. They attach to a fire hydrant. Thanks to the small network of drones earlier, they know exactly where to fight the fires at. They begin putting out the fires, stopping it from spreading.\nMore drones arrive on the scene. Or robots (delivered by drones?) These robots help rescue people inside. They guide people safely out. Thanks to our network of robots earlier, these robots know the exact safest route out. All these robots work in tandem to help people.\nFinally, the firefighters \u0026amp; ambulance services arrive on the scene. Since the robots have done all the mundane jobs, they can work on what they do best. Rescuing people from under the rubble, supporting and caring for people who have come out of the fire.\nThanks to our robots from earlier, the fire is controlled. It\u0026rsquo;s being put out by drones. They have an entire map of the building, with the exact locations of everyone and any points of interest. Instead of working on figuring all this out for themselves, they can save people instead and help put out the fire.\nThis is where I see automation going. Not replacement, but supplementing those in difficult or mundane jobs.\n‚öõ Michael Bloomberg Pledges $500 Million To Close All Remaining Coal Plants (in The Usa) By 2030\nOne step forward for America, a giant leap for mankind. Britain is almost entirely off from coal. A few weeks ago Britain lasted for 2 weeks without coal. It\u0026rsquo;s amazing to see how most of our efforts are going more into renewable energy.\nüöÅ Researchers Develop A Self-assembling Quadrotor Drone\nThis enables drones to track \u0026amp; dock together while in flight. This has all sorts of uses. Firstly, logistics. Drones could combine together to lift heavier objects and then break apart again to carry out other tasks.\nThis technology can improve drones while they fly. Let\u0026rsquo;s say a drone is working on something, say putting out a fire. It could need vision assistance (The fires too strong for the drones vision sensors to work) so the drone requests an upgrade. Another drone flies to it and provides vision to it while it deals with its main task.\nWith solar-powered drones which need to fly 24/7, we could have drones that fly to these drones and provide power to them. Serving as flying battery packs. The possibilities are endless.\nüëì Rokid Shows Off A Mixed Vision Headset\nThe headset plugs into your phone, and using their AR glasses provides a full desktop experience for you. You can see as many, or as little monitors as you want. This idea has been around for a while. I doubt the display released will look anything like this video, it\u0026rsquo;s cool to see we\u0026rsquo;re still heading in this direction.\nüë∏ German Researchers Introduce Dentronics, A Robotic Arm Dentist\nAt the moment, the arm is designed to assist the dentist. By providing tools, mirrors and more. I doubt it\u0026rsquo;ll be long until the robot starts doing work too, and then the robot will be the one doing the work while the dentist supervises.\nüöÅ Nasa Has Developed A Drone For Use On Mars\n \u0026ldquo;Can we fly on Mars?\u0026rdquo;\n Is the question they are hoping to answer with this mission.\nIt\u0026rsquo;s interesting to see. I\u0026rsquo;m sure we\u0026rsquo;ll see a lot of things from a bird\u0026rsquo;s eye view that we can\u0026rsquo;t normally see.\nUntil next time,\n Brandon üêù  ","permalink":"https://polymath.cloud/edition-4/","summary":"Hello üëã Brandon here.\nWelcome to Edition 4 üîÆ\nNear Future üóΩ New York Tenants Fight As Landlords Embrace Facial Recognition Cameras\nIn a bid to stop facial recongition replacing traditional keys, 130 tenants have signed a petition. The public sector heavily regulates facial recognition, but there are currently no laws in the private sector.\nOn the one hand, keys are often lost. Tenants come and go. This all saves money for the landlords.","title":"Edition 4"},{"content":"Hello üëã Brandon here.\nüåä Welcome to the third edition of üîÆTechnologically ClairvoyantüîÆ\nNo announcements this week, so let‚Äôs get right into it üé™\nNear Future üöÖ Netherlands‚Äôs Rail System Uses WiFi Tracking\nFollowing on from last week, the Netherlands publicly admits to using WiFi tracking. However, unlike TFL, they detail more on why and how. Firstly, lets cover the security concerns. MAC addresses are uniquely identifiable addresses which can identify a network card. Typically you have one network card per device, so they can be used to identify a device. When they track your device, the MAC address is hashed, then sent to a server, where it is salted. The salt changes everyday, and is not stored on a computer. They then cut some of the hash out, so there is no way that the hashed MAC address can be traced to an individual .The hashing algorithm they use is Bcrypt. I have to admit, hashing locally in the train station is genius.\nNormally, client-side hashing sucks. When you hash client-side, the hashed passwords becomes the actual password. That means you will be storing the plain text in the database (the hashed password is the plain text).\nBut, MAC addresses are different. We know they are entirely unique, and can be used to identify a single device. By hashing them client-side, the hashes will become the IDs of the MAC address. Meaning that on the server, there is no way to get a MAC address. You can only get hashes, which do not give information on what device you own.\nThere is absolutely no way to personally identify you, all while keeping the benefits of having individual devices tracked through stations. It‚Äôs clear from this technique that they have put a lot of thought into the privacy of individuals, while still maintaining the benefits.\nThey also admitted to using Bluetooth tracking, which was discontinued last year. If you‚Äôre interested in this, do check out the link. They detail exactly why they track people, what for, how the data is being stored and for how long. This is a typical GDPR setup. All companies have to give you this information if you ask for it, they‚Äôve published it online. I‚Äôll let you know if I see any GDPR inquiries of what the WiFi tracking on the tube system is for / how they do it.¬ß\nüßö‚Äç‚ôÄÔ∏è Breast Cancer AI Outperforms Traditional Methods\nThe AI has an accuracy of 31%, compared to traditional methods at 18%. Something else interesting from this article is:\n ‚ÄúBlack women are 42% more likely to die from breast cancer‚Äù\n The researchers at MIT believe this is due to lack of healthcare access. They hope their AI can be implemented around the world to provide cheap screenings for women of all kind.\nüçº One Million Plastic Bottles Are Made per Second. Only 9% Are Recycled\nPlastic bottles take 400 years to naturally decompose. If our plastic bottle creation rate carries on, every 400 years (when one bottle decomposes) 12610000000000000 plastic bottles will be created. It‚Äôs estimated that there will be more plastic in the ocean than fish by 2050.\n‚òÅ 5g Frequency Set To Disrupt Weather Forecasts\nThis isn‚Äôt directly caused by 5G. The frequencies that are planning to be used by 5G disrupt satellites from detecting water vapor, disrupting a part of weather forecasting (but not all weather forecasting). The FCC and NOAA are working together to make sure that companies do not use the frequencies which can effect weather forecasting. Speaking of 5G, let‚Äôs address some other 5G issues.\nCan 5g kill you?\nNo. It can‚Äôt kill you. Can it harm you? Very, very unlikely. I‚Äôm going to list some of the things that people use as ‚Äòproof that 5G can harm us‚Äô and objectively look at each one.\nSenate Bill 637\nThis is a law from the United States of America. A lot of news articles / conspiracy theorists claim it‚Äôs senators fighting to protect us from 5G, and that this law wasn‚Äôt put into place.\nTurns out, this law is in place. It was ratified. But the bill isn‚Äôt about the ‚Äòdangers‚Äô of cellphone towers. Here, you can read it:\n The bill would cap the amount the state and local governments could charge for zoning, permits and other fees imposed on these ‚Äú5G‚Äù networks.\n This law places a limit on how much the state and local governments can charge for permits, zoning and other fees of putting 5HG into place. It‚Äôs nothing related to the ‚Äòdangers‚Äô of 5G. You can read it here.\n5g Test Killed Hundreds Of Birds\nFalse. The original source of this is Erin Elizabeth. It was posted to her blog, Health Nut News. This same blog claims that vaccines cause autism and other strange things. What‚Äôs funny is that her website is dedicated to selling products to protect you from all these ‚Äòharmful‚Äô things.\nCan 5G kill humans?\nAbsolutely not. This is absurd. Firstly, there‚Äôs a 20 - 30 year test in Europe on 30,000 people which monitors how harmful phones are to humans. This study is still ongoing, but so far they‚Äôve found nothing. Secondly, infrastructure like this is tested intensively.\n4G was announced in the late 90s / early 2000s. It was officially announced in 2002. I personally got 4g 4 or 5 years ago. That‚Äôs an awfully long time for them to test things, to make things right. A lot of networking has been announced for 20+ years and still hasn‚Äôt come into effect.\nEven if 5G was dangerous, it would be fixed far, far before you can even buy the first phone that supports 5G. Now, I do recommend you read for your own. Do not trust everything you read online, including this newsletter. Find the original source, always. And test that source subjectively like I have done so here.\nüë©‚Äçüç≥ Deepfake Youtube Channel\nThis YouTube channel is dedicated to creating \u0026amp; distributing Deepfake videos. While there‚Äôs no technological breakthroughs, I have to admit that some of the videos are fun üòÇ\nüçÜ Software Developer Makes Facial Recognition Software To Find Social Media Links Of People In Porn\nThey claim they‚Äôve found the identities of 100,000 porn stars so far. Just to be clear, there is no proof he has done this. However, it‚Äôs caused quite a stir on Twitter and other social media sites. As a computer scientist, it is definitely possible this is real. As we saw 2 weeks ago, Facial Recognition is being used in airports for passports. It‚Äôs very possible to find someone‚Äôs social media account using multiple images of them (via video).\nThe user posted this on Chinese site Weibo. It is difficult for me to find the original source, as it doesn‚Äôt index for me on English Google. However, there are screenshots of the original source here.\nüîã Chinese Government Claims A New Technological Breakthrough Pushes Lithium Production Prices Down 817%\nThe report claims that it‚Äôs made the cost of extracting lithium (usually ¬£20,000 per ton) down to ¬£2180, a 817% decrease. This can bring electric vehicle costs down. But, with the Trade war Between China And America it looks like American EV manufactures will have to wait to experience this decrease in production costs.\nü§ñüöó Studies Show Autonomous Vehicles Are No Safer Than Manual Vehicles\nThis article has no hard numbers to prove that autonomous vehicles are no safer, however, that is where the problem lies. Tesla is refusing to release data on its crashes. The numbers that Tesla does release show that autonomous vehicles are getting safer, but perhaps right now they are not as safe as the industry hopes them to be. While I‚Äôm pro autonomous vehicles, it‚Äôs clear that these vehicles - in their current state are not cut out to work in most places.\nDistant future üíâ Do-it-yourself Insulin: Biohackers Aim To Counteract Skyrocketing Prices\nWe had hackers in the 70s / 80s who could do all kinds of cool things. Free long distance phone calls, free television cable and more. I believe that we‚Äôre on the verge of a biohacking revolution. Millions of people with diabetes don‚Äôt have access to insulin globally. And if they do, it might cost money. Biohackers aim to create a protocol for ‚Äúdo-it-yourself insulin‚Äù.\nüó£ Natural Language Processing To Cure Cancer\nThis is an extremely fascinating presentation. The short term clinical goal of this group is to decrease the number of unnecessary surgeries. In their words:\n ‚Äú80% of high risk biopsies are benign‚Äù\n We know that AI can predict cancer better than humans, but it simply does not have the data set. This team is using NLP to process text documents, reports generated by machines (such as heart rate monitors) and every single medical record. Using this massive data set, they‚Äôre going to train a neural network to predict cancer.\nLooking into my crystal ball üîÆ I can imagine this being used for so much more. Imagine wearing a fitness tracking device that tracks every single thing about you. You can track food and water intake too. All of this will be combined with doctors reports and past medical data. In the background, a machine will use NLP to process all of these documents.\nUsing neural networks, the machine will run tests for every single disease / illness under the sun. Some diseases exist for years before their first symptoms show. Imagine how many lives will be saved if in the background this unified machine checks on you 24/7.\nLet‚Äôs go one step further. I don‚Äôt want some machine to know all my private health stuff? I want it all to be encrypted. I want it so if they‚Äôre hacked, no one can read it. How do you train a neural network on things that are encrypted?\nYou can use fully homporphic encryption. You can perform calculations on data without knowing what the data is. E(a) * E(b) = E(a * b) - where E(x) is the encryption function being applied to x. Imagine in the future being able to train a neural network without knowing any single persons data. Of course, this is looking into my crystal ball now. As far as I know, there is no fully homorphic encryption scheme. And no one has published anything on using it in this way. But it‚Äôd be a cool thing to have in 100 years.\nüëª Tiny 3d Printer Prints Gengar\nAndrew Birch (a one-man hacker show) created an incredibly small 3D printer and demoed it by printing Gengar. The 3D printer looks to be about the size of a foot. I can imagine a day where everyone walks around with 3D printers and prints what they need. Need a screwdriver? No worries, I‚Äôll print one now.\nüêå Crispr Has Been Used To Create The Worlds First Left Snail\nMost snails are born right. That is, their shell coils to the right. In fact, almost all snails are. Left snails are often lonely.\nThe technology is important for understanding why 1 in 10,000 people are born with situs inverus, a condition where their internal organs are flipped like a lefty snail‚Äôs shell.\nüöÄ NASA Partners With Virgin To Create A 3d Printed Combustion Chamber For Rockets\nTraditionally it takes many months to manufacture, test, and deliver a conventional combustion chimer. This new technology is expected to reduce that time considerably.\nüñ® New Low Cost Bio-printer\nBio-printing is an additive procedure where biomatierals such as cells and growth factors are combined to create tissue-like structures that imitate natural tissues. Typically low-end bioprinters cost ¬£10,000. While higher end ones cost ¬£170,000. This printer can be built with ¬£375.\nüöÄ Jetpacks Are Real\nJetpacks Are Real. Just like in the movies. But, there are too many problems that outweigh the advantages.\nFor one, humans aren‚Äôt meant to fly. We‚Äôre not aerodynamic at all, requiring a relatively large amount of force to lift into the air. Two, the fuel used for jetpacks is the same fuel used for rockets. Combining hydrogen with an oxidizing agent. Rocket fuel isn‚Äôt very good for the environment, as we can all imagine.\nThirdly, they don‚Äôt fly very long. The upper limits seem to be around 90 seconds. The fastest speed set in a jetpack is 32.02 MPH.\nüêù Robot Bees Can Pollinate Flowers, Swim Underwater And Stick To Surfaces\nRobot bees exist. They can pollinate flowers, swim underwater (for some reason) and stick to surfaces just like regular bees. Scientists have seen the mass extinction of bees and decided to just build robotic bees.\nOn the one hand, robot bees are cool. They can pollinate 24/7. On the other hand‚Ä¶. I don‚Äôt understand why scientists have decided to go straight to replacing bees instead of trying to save them. In the distant future, would it be ridiculous to think that all of our animals on earth are replaced by robots?\nWe can replace dogs, bees, fish, cats and all sorts. In the distant future, I can imagine the rally cry‚Äôs for replacing animals. ‚ÄúBees go to sleep, our robots don‚Äôt. They do more than bees do‚Äù.\n ‚ÄúLions are vital in the circle of life, but they kill so many humans. Think of our robot lions which have learned not to harm humans‚Äù\n üëì Varjo Announced Xr-1 Headset\nVolvo reportedly use this headset to test / help build cars. What‚Äôs impressing me is the idea of using AR within cars. AI can drive better than humans, but sometimes humans can see things better than AI can. Using AR, I can imagine the windshield of the car being augmented to provide details about the environment to enable drivers to drive with the AI - as opposed to either the AI or human driving.\nüõ¥ UC Berkeley Unveil Salto, A Hoppy Robot\nThe tiny robot hops around, as opposed to walking or driving. What‚Äôs amazing to me is that out of all the robots I‚Äôve seen, this robot shows the most emotion - despite only being able to hop.\nUntil next time,\n Brandon üêù  ","permalink":"https://polymath.cloud/edition-3/","summary":"Hello üëã Brandon here.\nüåä Welcome to the third edition of üîÆTechnologically ClairvoyantüîÆ\nNo announcements this week, so let‚Äôs get right into it üé™\nNear Future üöÖ Netherlands‚Äôs Rail System Uses WiFi Tracking\nFollowing on from last week, the Netherlands publicly admits to using WiFi tracking. However, unlike TFL, they detail more on why and how. Firstly, lets cover the security concerns. MAC addresses are uniquely identifiable addresses which can identify a network card.","title":"Edition 3"},{"content":"Hello üëã Brandon here.\nüåä Welcome to the second edition of üîÆTechnologically ClairvoyantüîÆ\nWe now have a website! You can view past editions of this newsletter here: https://Technologicallyclairvoyant.com (Github)\nWithout further ado, let‚Äôs get into it üé™\nNear Future üöÄ NASA Has Autonomous Robots On The ISS\nNASA‚Äôs first robot, Bumble, can de-dock itself and float to an astronaut to provide a research terminal. In the future, it‚Äôd be interesting to see most of the International Space Station automated by robots.\nüöÅ Mavlav Showed Off Their Tiny Racing Drone\nMAVLab‚Äôs drone is incredibly tiny, no larger than the average human hand. The drone can fly completely autonomously, packing computer vision into it‚Äôs 72 gram form factor. Looking into the distant future I can see CCTV cameras being replaced with micro-drones like this. These CCTV replacements could use AI to follow someone if they‚Äôre looking ‚Äòdodgy‚Äô. Currently AI Can Be Used To Tell If Someone Is Lost, Anxious Or Being Trafficed.\nüåû Inspecting Solar Panels With Thermal Drones\nFLIR recently showed off a drone which inspects solar panels. The company states that these drones can detect errors in a fraction of a second, and with higher accuracy than a human inspector and exponentially faster than humans.\nüöá London‚Äôs Tube Network To Switch On WiFi Tracking By Default\nTransport for London touts that the benefits of WiFi tracking outweigh the downsides. TFL can see where congestion is in the tube and redirect traffic, making the tube more efficient. It‚Äôs always been possible to track people using WiFi. When your phone is in range of WiFi, it pings the router. The router can use the signal strength to approximate how far you are away from the router. It‚Äôs possible to work out How many people are in a tube station.\nIt‚Äôs also possible to pinpoint the exact location of everyone using just WiFi. If you have 3 routers set up in a perfect triangle in a tube station, each router will know how far away someone is from that router. Combining this data, you can triangulate the exact location of someone.\nThis reminds me of IMSI Catchers. IMSI Catchers are devices that can ease drop on mobile communications by pretending to be radio towers. It may be possible in the near future to alleviate traffic completely.\nü§ñ Amazon Rolls Out Machines That Pack Orders And Replace Jobs\nAmazon‚Äôs robots can crank out 600 - 700 packages each hour, per robot. Amazon warehouse employees don‚Äôt like working in the warehouse, so robots can be seen as a good thing. But like with all automation, Amazon employs 615,000 People. The majority of them will lose jobs when Amazon replaces them with robots.\nüåä Researchers Develop Viable, Environmentally-Friendly Alternative To Styrofoam\nStyrofoam is one of the most damaging plastics. 1439 kg or 153048 cups of Styrofoam have been produced since you started reading this newsletter. Crazy, right? With so much produced, it is destroying the oceans. I‚Äôve put this into the near future because the planet is fucking dying. This change has to happen soon for the environment to be saved.\nüèé Driverless Cars Working Together Can Speed Up Traffic By 35 Percent\nIn the future when all cars are autonomous traffic problems will become non-existent. The cars will know where traffic is and create a route that doesn‚Äôt create more traffic. In Computer Science, this problem is called the Max Flow Problem and it‚Äôs solved. If you have 10,000 cars heading to a motorway traffic jam, it is possible to find a route whereby all 10,000 cars can travel the same direction but experience no traffic. For the record, I‚Äôm pro replacing drivers with cars. Uber and Lyft drivers force surge pricing to earn more money. In the future when all taxis are autonomous the consumer wouldn‚Äôt have to worry about artificial surge pricing.\nüë©‚Äç‚öïÔ∏èGoogle‚Äôs Lung Cancer Detection AI Outperforms Humans\nWe‚Äôve seen this pattern over and over. AI outperforming humans in detecting cancer. In the near future, diagnosis will be replaced by machines. What‚Äôs important to know is that I don‚Äôt believe in artificial general intelligence being smarter than humans. AI infused with humans is better than AI or humans on its own. Ray Dalio‚Äôs company, Bridgewater Assiocates uses AI + Humans to invest. In the 2008 - 2009 financial crisis, their portfolio made 15.6%. Back testing to the great depression, they only lost 2%. Gary Kasparov, a chess grand master, says that the best chess players are humans infused with Ai. It‚Äôs not long until human + AI doctors revolutionize the world.\nüì¨Self Driving Mail Delivery Vans\nUSPS are trialing self driving delivery vans. This is a great idea. There are some places in the USA where mail is delivered by mules (because cars cannot travel there). Drones may also be incredibly useful in this instance. This is going to sound strange, but I believe hand delivered mail will become really big in the next 10 - 15 years. In the early 90s, static HTML pages were all the rage. Then they were replaced. But now no one has a static page, so we‚Äôve gone back to them to stand out.\nThe same will happen to mail. No one gets mail anymore. And when we do, we feel happier. A little joyus. Everything will move to email, but the people that start using mail when everyone else is using email will be a favourite to the nation.\nüöÅNASA Tests Drone Traffic System In Cities\nFollowing on last weeks prediction of emergency service drones and traffic systems, NASA has started a 4 year plan to control the traffic of drones in a city. Their system unifies all drones, a communications hub for drones. This flight system will let each drone know where everything is and how to plan the fastest routes. In the not so distant future, autonomous vehicles will also have a unified system to communicate through.\nDistant Future üõ∞Spacex Is Building A Network Of Satellites Around The Earth To Provide WiFi To Everyone\nThe first 60 test Satellites have been launched. Elon Musk says that the system will be fully operational by 2025. Having read Musk‚Äôs Biography, I know that he has a habit of estimating timelines badly. This is in the distant future because it‚Äôll probably happen in 2035.\nüá®üá≥ Chinese Social Credit System Used To Warn People Before Dealing With Them\nThe government algorithm has recently received an update. When you have low social credit, you become a \u0026lsquo;laolai'. The ringtone on your phone changes to one that shames you every time you get a public call. I‚Äôve linked to an English source here. In an effort to be unbiased, I‚Äôve found Chinese government sources here (as well as Chinese newspapers, but translated into English) [1] [2] [3] that discuss China‚Äôs social credit system. China wants the entire system rolled out nationwide by 2020.\nüì∏Static Single Image Of Someone To Talking Moving Video\nResearches have created an AI that takes a single image of someone and turns it into a moving video of the person talking. This technology was used to create a speaking Mona Lisa. With deep fakes becoming ever more prevalent, it is surprising to learn that they don‚Äôt need that much content to learn from and can in fact just use a single image.\nüå≥ University Of Maryland Researches Create High Tech Wood That Reflects The Sun‚Äôs Rays\nBy removing the Lignin‚Äîa component of the cell walls in trees‚Äîfrom natural wood using hydrogen peroxide researches have found that the wood reflects sunlight. Meaning that the wooden house would be a lot cooler than a normal wooden house.\nThe wood is also 8.7 times stronger than normal wood, as it‚Äôs incredibly dense.\nüöÄAirbus Shares A Glimpse At It‚Äôs Flying Taxi\nFlying cars are becoming ever more popular. It\u0026rsquo;ll be interesting to see which company is leading the flying card industry in 10 - 15 years.\nüöóü§ñFord Autonomous Robots + Autonomous Vehicles\nFord have shown off a new delivery concept. Vans with packages are autonomously driven to the persons house, and then an autonomous robot unpacks itself and delivers the package. I don‚Äôt believe this to Be\nüçéEchord++ Small Agriculture Robots That Work Together, Rather Than A Large Machine\nEchord++ uploaded a video of their MARS agricultural robot in action the other day too. The MARS program aims to redefine how we use robots in farming, by using a swarm of small bots that work together instead of larger machines. I‚Äôll have more of this in my farming special, coming soon.\nüß† DARPA are looking into brain-to-computer interfaces\nAs we\u0026rsquo;ve discussed earlier, humans infused with AI seem the way to go. DARPA are looking at interfacing your brain with AI. Similar to what Elon Musk\u0026rsquo;s Neuralink are doing\nUntil next time,\n Brandon üêù  ","permalink":"https://polymath.cloud/edition-2/","summary":"Hello üëã Brandon here.\nüåä Welcome to the second edition of üîÆTechnologically ClairvoyantüîÆ\nWe now have a website! You can view past editions of this newsletter here: https://Technologicallyclairvoyant.com (Github)\nWithout further ado, let‚Äôs get into it üé™\nNear Future üöÄ NASA Has Autonomous Robots On The ISS\nNASA‚Äôs first robot, Bumble, can de-dock itself and float to an astronaut to provide a research terminal. In the future, it‚Äôd be interesting to see most of the International Space Station automated by robots.","title":"Edition 2"},{"content":"Note: these links are affiliate links. If you buy through these links I will get a small portion of the profit at no extra cost to you.\n How to Win Friends and Influence People  If you talk to other humans, if you interact with humans, you must read this book. No exceptions. All my life, people told me that making friends and influencing people is an artform - something you can\u0026rsquo;t learn. This book showed me the hidden rules required to win friends.\nSince reading this book, every aspect of my friendships / relationships have gone up tenfold. As a result, everything else in my life has greatly improved. If you go to a foreign country and you\u0026rsquo;re only allowed to bring 1 thing with you, make it this book. That is how good this work is.\nThis book has sold over 16 million copies - with good reason. It is one of the best books out there, ever, period. I\u0026rsquo;ve read this book 13 times. That\u0026rsquo;s how ridiculously good this book is.\nThe Richest Man in Babylon  This book is about a gold lender from the age of Babylon. Published in the early 1900s but based on a story from Babylon, it truly is an old book. This gold lender started off with nothing. Less than nothing, they were a slave. This gold lender learnt the secrets to becoming rich and he became The Richest Man in Babylon.\nThe king was so impressed with his rules he paid scribes to inscribe the rules of money into stone tablets and sent them far and wide. He wanted everyone to know these rules and to prosper, just like Babylon did.\nIf you want to be rich, this is the book to read. Not only will it teach you personal finance lessons that have worked for thousands of years but it\u0026rsquo;ll teach it to you in stories - interesting stories of The Richest Man in Babylon.\nI Will Teach You To Be Rich  A modern day version of the Richest Man in Babylon. If you want to be rich, read this book. This book covers all the same principles as The Richest Man in Babylon, but with modern day takes on credit cards, travel hacking, investing and more.\nPersonal finance isn\u0026rsquo;t about personal finance. It\u0026rsquo;s about so much more. Having good personal finance makes you happy. It makes others in your life happy. It gives you discipline. And discipline gives you freedom.\nIf you\u0026rsquo;re overweight, you don\u0026rsquo;t have discipline. Can you afford to eat that McDonalds? No. If you\u0026rsquo;re fit, you can. This disciplinegives you more freedom. By learning about personal finance, you\u0026rsquo;re creating more freedom for yourself.\nI prefer The Richest Man in Babylon, so if you can - read both.\nThe Alchemist  The Alchemist is a fictional fable with more life lessons in it than the average nonfiction book. It\u0026rsquo;s been said that non-fiction cannot distill lessons as easily as fiction. You cannot learn something you can only experience, you can only experience it. By reading fiction and seeing others experience it - it brings you a step closer to learning those fundamental life lessons.\nThis book is a story about following your dreams.\nHow to Become a Straight-A Student  I failed my GCSEs 8 times. I dropped out of sixth form. Yet, in university, I have straight A\u0026rsquo;s. Getting marks of 95% on final exams. How did I do it? I read this book twice a semester. Once at the start, once at the end. This book is what helped me get those good grades. Highly recommend.\nThe Code Book  The single most influential book in my life. I read this book when I was a child, it got me into encryption and codes. Because of this, I started to program when I was 10. Because of that, I went on to study computer science at university. Because of that, this blog exists.\nShoe Dog  One of the best biographies I\u0026rsquo;ve read. This is a memoir by the creator of Nike. From his insane business partner to his insane team, this has it all. His story is good. He doesn\u0026rsquo;t hide the fact he comes from a well-off family, but at the same time it\u0026rsquo;s clear as to why he\u0026rsquo;s just like us.\nOne of the richest men in the world, but yet hardly anyone knows of his story. This is a tour de force through the business world, through startups, through discovering yourself and learning to love.\nMeditations  Marcus Aurelius ruled the Roman empire. He was also a philosopher who thought about life a lot. His books will teach you to deal with pain, to deal with loss, to deal with life. Some of my favourite quotes are:\n \u0026ldquo;Many lumps of incense on the same altar. One crumbles now, one later, but it makes no difference.\u0026rdquo;\n  \u0026ldquo;You have power over your mind - not outside events. Realize this, and you will find strength.\u0026quot;\n  \u0026ldquo;At dawn, when you have trouble getting out of bed, tell yourself: ‚ÄúI have to go to work ‚Äî as a human being. What do I have to complain of, if I‚Äôm going to do what I was born for ‚Äî the things I was brought into the world to do? Or is this what I was created for? To huddle under the blankets and stay warm?‚Äù\nSo you were born to feel ‚Äúnice‚Äù? Instead of doing things and experiencing them? Don‚Äôt you see the plants, the birds, the ants and spiders and bees going about their individual tasks, putting the world in order, as best they can? And you‚Äôre not willing to do your job as a human being? Why aren‚Äôt you running to do what your nature demands?\nYou don‚Äôt love yourself enough. Or you‚Äôd love your nature too, and what it demands of you.\u0026rdquo;\n His original books can be found online for free. But be warned, they\u0026rsquo;re not in an English tongue you can decipher unless you\u0026rsquo;ve studied it. I\u0026rsquo;ve linked the modern day translation above. It\u0026rsquo;s more expensive, but it\u0026rsquo;s more understandable in my opinion.\nHow Not To Die  An ode to veganism or a desperate plea to increase the longevity of human lives? Either way, it\u0026rsquo;s a great book. This book backs up the facts. Eating more plants makes you live longer. Not only that, it goes through all the plants which make you live longer.\nIt references the China Study, a study on everyone in China - all 1.2 billion people and found that meat causes cancer in the same way that smoking causes cancer.\nAlthough this book doesn\u0026rsquo;t beg you to turn vegan. It just encourages you to eat more plants. An overall great book and essential reading if you want to not die anytime near in the future.\nTuring\u0026rsquo;s Vision  In 1939 Alan Turing invented Computer Science. This book explains his phenominal world changing paper and gives background on it. If you study computer science, this is a must. It shows you the birth of computer science, the history of computer science and more.\nAlan Turing is a mastermind. Inventing the computer. Inventing the Turing machine. Inventing artifical intelligence. Not many people know of his existance. This is a good book on that famous first paper.\nHis Dark Matierals  On the rare occasion that I read fiction, I tend to stop halfway through because of how boring it is. This book is the exception. This book discusses all sorts. Love, quantum phyics, friendships, being nice to others and above all else - magic.\nI really enjoyed this series and would highly reccomend it.\nAtomic Habits   Losers and winners have the same goals. You don\u0026rsquo;t rise to your goals. You fall to your systems.\n Habits are what makes us. This book isn\u0026rsquo;t just about making or breaking habits - it\u0026rsquo;s about habits. What is a habit? How do they form?\nHabits are such a vital part of life. It\u0026rsquo;d be stupid to not learn about them. Atomic - small. Habit - something you routinely do. By creating small habits, getting 1% better every day you\u0026rsquo;ll improve every aspect of your life.\n$$ 0.99^{365} = 0.03 $$\n$$1.01^{365} = 37.8$$\n1% better every day. That\u0026rsquo;s all you need.\nOn Writing Well  The author of this book is an expert on writing - well. if you write things, this book is essential for you. A lot of the content of this book is common knowledge. But, common knowledge stated clearly is knowledge all the same.\n Hey üëã Want to subscribe to my blog and stay up to date with posts similar to this one? Subscribe to my email list below. I won\u0026rsquo;t spam you. I will only send you posts similar to this one üòä‚ú®\n#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; } /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */ #mc-embedded-subscribe-form input[type=checkbox]{display: inline; width: auto;margin-right: 10px;} #mergeRow-gdpr {margin-top: 20px;} #mergeRow-gdpr fieldset label {font-weight: normal;} #mc-embedded-subscribe-form .mc_fieldset{border:none;min-height: 0px;padding-bottom:0px;}  Like this article? Subscribe to my mailing list to get more like this‚ú®\nPlease tick this box to let me know you want to be contacted via email. Email\nIf you\u0026rsquo;re feeling extra generous, I have a PayPal and even a Patreon. I\u0026rsquo;m a university student who writes these blogs in their spare time. This blog is my full time job, so any and all donations are appreciated!\n","permalink":"https://polymath.cloud/my-favourite-books/","summary":"Note: these links are affiliate links. If you buy through these links I will get a small portion of the profit at no extra cost to you.\n How to Win Friends and Influence People  If you talk to other humans, if you interact with humans, you must read this book. No exceptions. All my life, people told me that making friends and influencing people is an artform - something you can\u0026rsquo;t learn.","title":"These books will change your life"},{"content":"There are many Alternate (Alt) coins on the market, but what makes them so different? Why would people invest in them instead of Bitcoin? This article seeks to explain Altcoins.\nNote: This article is not a primer on Bitcoin and presumes you have fundamental knowledge of cryptocurrencies. If not, please read this article. Ripple Ripple is one of the largest cryptocurrencies on the market. Ripple‚Äôs website explains its philoposphy, as seen below\n Ripple seeks to expand on what Bitcoin started. More than just a digital currency, Ripple is the world‚Äôs first open transaction network. It serves as a decentralized, shared record of accounts and transactions of any kind. By creating this global ledger, Ripple does for money what the Internet did for all other forms of information.\n Ripple is designed to allow any person with a certain currency to access another currency, as in transform one currency into another; although it does much more than this as will be explained shortly.\nRippled is not mined in the same way that Bitcoin. Bitcoin is mined using the proof-of-work algorithm whereas Ripple operates its network using consensus. In fact, Ripple cannot be mined at all. When Ripple was created 100,000,000,000 XRP (the currency Ripple uses) was created and a small amount is destroyed every time a transaction occurs on the network. An incentive program to give out XRP is currently being discussed.\nTo understand how the Ripple network works, we first need to understand how a typical Hawala network works.\nLet‚Äôs say Bob wants to send cash to Alice. The process goes as follows:\n Bob goes to his local Hawala representative and gives them some cash and a password, which Bob and Alice share. The representative phones Alice‚Äôs local representative and tells them to release funds to someone who can provide the password (note, they don‚Äôt directly know who Alice is) Alice walks into her local representatives office, states the password, and receives the cash. Commisions are often taken from both representatives.  Although it may appear that the money has been moved to Alice and Bob, no money has been moved. Bob‚Äôs representative owes Alice‚Äôs representative money. They can either settle the debt by, for example, meeting up once a month to settle all debts or they can hope that a reverse transaction will happen so money will move in the opposite direction, cancelling out the debt.\nTrust is essential and required in the Hawala network. Bob has to trust that his representative will hand over the cash, Alice will have to trust that her representative will give her the cash and the representatives need to trust each other to repay the debts.\nBut instead of physical people, we now have online representatives. Websites, servers, computers. Ripple works the same way as the Hawala system but uses something called Ripple Gateways instead of representatives.\nBut, Ripple doesn‚Äôt just work for cash. It works for anything. Gold, Cash, Bottles of Water. As long as both gateways are set up and have the necessary supplies to deal with it, it is entirely possible for anything to be transferred through the Ripple network. If 2 gateways agree on a conversion of goods, so one gateway accepts cash and the other dispenses gold, it is possible to convert commodities or currency. Ripple can also morph anything into anything, as long as the gateways are set up for it.\nWhat if the 2 gateways don‚Äôt trust eachother? Ripple uses an algorithm to find the shortest trust path between the two gateways. Bob‚Äôs representative may not trust Alice‚Äôs representative, but Bob and Alice‚Äôs representatives both trust Eve, so they use Eve as a third agent.\nWhat is the network can‚Äôt find any paths of trust between two gateways?\nThis is where the Ripple currency (XRP) comes in. All gateways provide a price of XRP for anything they deal with, for example ¬£1 could be 200 XRP and 1 oz of gold could be 300,000 XRP. As the old saying goes:\n ‚ÄúEverything has a price‚Äù‚Ää‚Äî‚ÄäUnknown\n XRP settles immediately, so when it‚Äôs put through the network it‚Äôs final and trustless, which is why it‚Äôs often seen as a last resort for a trust system such as Ripple. Transfer of XPR over the Ripple network has smaller transaction fees than transfers of anything else over the network.\nRipple also cannot suffer a 51% attack, which Bitcoin is susceptible to. If one computer or network of computers (miners) controls 51% of the nodes on the Bitcoin network they can make Bitcoins out of nothing, or do anything they want with the network.\nLitecoin\nLitecoin uses a different hashing algorithm to Bitcoin in order to allow anyone (not just people who can afford expensive ASICS) to mine Litecoin. As a result, 1 Litecoin is usually worth less than Bitcoin.\nWhile Bitcoin has an upper limit of 21 billion Bitcoins, Litecoin has an upper limit of 84 billion Litecoins. Litecoin transactions have always been traditionally faster than Bitcoin transactions too. Bitcoin has a mean block time (how long it takes to mine a block) of 10 minutes, whereas Litecoin has a mean block time of 2.5 minutes.\nScrypt is similar to Bitcoins SHA-256 hashing algorithm but instead of rewarding raw asynchronous power (hence why Bitcoins are mined with ASICS) it rewards more memory. ASICS have been created for Litecoin now, defeating the purpose of Scrypt. However, this is only a recent advancement.\nBelow is an image comparing Litecoin and Bitcoin, image from CoinDesk. Image from CoinDesk Dogecoin\nDogecoin started off as a meme but eventually progressed into a fully fledged cryptocurrency based on the Bitcoin system. Dogecoin is named after the internet meme Doge.\nDogecoins mean block time is 1 minute, a lot less time than its competitors. Dogecoin also has no upper limit on the number of dogecoins that can be minded.\nWhereas the reward for Bitcoin started at 50 btc and halves every couple hundred thousand blocks, Dogecoins reward started off as being random. After each sucessful mine the winner will be rewarded between 0 and a halving maximum for the first 600,000 blocks, as seen below.\n Block 1‚Äì100,000: 0‚Äì1,000,000 dogecoins Block 100,001‚Äì200,000: 0‚Äì500,000 dogecoins Block 200,001‚Äì300,000: 0‚Äì250,000 dogecoins Block 300,001‚Äì400,000: 0‚Äì125,000 dogecoins Block 400,001‚Äì500,000: 0‚Äì62,500 dogecoins Block 500,001‚Äì600,000: 0‚Äì31,250 dogecoins Block 600,001+: 10,000 dogecoins  Etherum\nEtherum is perhaps the most promising altcoin on the market right now.\nTo understand Etherum, we need to understand the internet. Today, all our personal data is on the internet and is controlled by companies such as Google, Facebook, Apple, and Twitter. All our personal data is stored on a server controlled by a company.\nThis has upsides, mainly that the uptime of the websites is very high so we will have 24/7 access to our personal data and that a team of specialists can work around the clock to make our data secure.\nHowever, there are downsides too. A hacker or hacking group can gain unwanted access to your personal data without you knowing by hacking this third party. Brian Behlendorf, creator of the Apache Web Server, has been quoted as saying that this centralised design is the:\n‚ÄúOriginal sin of the internet‚Äù Many believe the internet should be open source, decentralised. A new movement has sprung up to try and shift the internet into a more decentralised state. Etherum is one of the newest technologies to join this movement.\nEtherum has the goal of using the blockchain, Bitcoins crowning technology, to get rid of third parties on the internet.\nEtherum‚Äôs goal is to become the worlds computer which would decentralise and democratise the traditional client-server model of the internet. Servers are replaced by thousands of computer nodes across the internet. There are many apps which require a server to be used, Evernote, Dropbox, One Note, Slack. Etherum is designed to return the control of the user‚Äôs data back to the user and to give the creative rights of the users personal data back to the user.\nThink of Etherum like a decentralised Heroku.\nWhat is Ether?\nEther is the currency of Etherum. Running programs and software on the Etherum network is costly, Ether is a unique piece of code that is used to pay for the resources of the network.\nBut instead of being a sole currency like Bitcoin, Ether is designed to be the fuel of the Etherum network. In order for a user to change, delete, or add notes to a notebook on the Etherum network the user will need to pay Ether to the network to get the changes to happen. The transaction fee is called ‚Äògas‚Äô and that‚Äôs how hard it is to perform the given task. Every action costs an amount of gas that is based on the computational power that is required and also how long it will take to run. For example, a transaction costs 500 gas.\nThere is no upper limit on how much Ether can exist, however, Etherum is planning to move to a proof-of-stake consensus algorithm which may change some things. To reiterate, Etherum seeks to replace companies such as Facebook and Google.\nThe proof-of-work algorithm that Etherum uses is very similar to Bitcoin. It is called ethash and is designed to be more memory intensive to make it harder to mine using ASICS.\nThe developers of Etherum are looking to shift from proof-of-work to proof-of-stake where the network is secured by the owners of tokens. Proof-of-stake uses several times fewer resources meaning that the electrical cost of mining Ether will be decreased. The argument goes that users have to spend a lot of fiat money to mine cryptocurrencies putting pressure onto the cryptocurrency, by switching to a proof-of-stake algorithm the pressure alleviates.\nThis infographic from Blockgeeks details the differences. Blockgeeks also has a good article on proof-of-stake. Infographic from Blockgeeks Decentralised Apps\nThe Etherum white paper splits Decentralised Apps (DAPPs) into three categories:\n Those which manage money App where money is involved Other (includes voting and governance systems)  A Decentralised autonomous organisations (DAO) is one of the ambitious ideas to come about from Etherum. The goal of a DAO is to form a leaderless company, create rules at the beginning of how members can vote and how to release company funds and then just let it run.\nMost businesses have rules set at the foundation, such as its purpose (donate 20% of profits per month to a charity) or an idea.\nAs shown in the Lean Startup, the change triangle. A company will have a set vision for what they wish to achieve which is extremely hard to change as it is the foundation of the company. The only difference is that within a DAO it is set digitally. Image from Lean Startup The DAO is a way to cryptographically guarantee democracy within a company, where stakeholders can vote on adding new rules, changing the roles or kicking out a member. This is why smart contracts are being applied to government voting systems . One of the issues of a DAO is that once a rule has been set at the foundation level it is incredibly hard to change as 51% of the stakeholders will need to vote to change the rule, meaning that if the rule has a bug in it, it could potentially destroy the DAO.\nSmart Contracts\nIn 1994, Cryptographer and legal scholar Nick Szabo realised the decentralised ledger could be used for smart contracts, also known as self-executing contracts. Contracts could be converted to computer code, stored and replicated on the system and supervsed by the blockchain.\nA smart contract lets you exchange property, money, shares, or anything of value in a transparent and conflict-free way while avoiding the use of a middleman.\nIn order to get a contract (be it for property or shares) you would have to pay a third party to analyse you and provide the contract back to you. With a smart contract, you pay whatever node you need to and the contract comes back to you, without the use of a third party.\nSmart contracts not only define the rules and penalties of a contract but can also automatically enforce them, something a normal contract cannot do. Image from Attores.com NEO (Antshares)\nCalled the ‚ÄúEtherum of China‚Äù, NEO is one of the newest cryptocurrencies on the market. NEO is of course, named after the famous charecter from the Matrix.\nThe first unusual thing about NEO is that it ‚Äúuses fiat currencies as its internal currency‚Äù. Yes, fiat currencies such as Sterling, Yen, Dollars etc. This is because Neo doesn‚Äôt strive to be a cryptocurrency, in fact, they don‚Äôt really have a cryptocurrency. They aim to be the link between the old financial system and the new, much more exciting system of Smart Contracts.\nThe coin currently displayed on the index is the NEO coin, but it‚Äôs not the thing that makes the blockchain work. NEO Coin acts like shares in the company that runs the NEO platform. Many of the NEO coins were sold in an Initial Coin Offering (ICO) and the NEO company holds 50% of the remaining coins or even more.\n ‚ÄúThe remaining 50% of the NEO shares held by the NEO team, will be in the NEO net after the use of NEO smart contract locked for 1 year. 1-year lock-up period, this part of the NEO will be used to maintain the long-term development of Neo.‚Äù\n The company behind NEO even calls the NEO coins shares.\nMuch like Etherum they use ‚Äògas‚Äô to run the whole platform, but unlike Etherum you need fiat money to buy gas to execute the smart contracts. Some believe this is because in order to be a bridge between old and new financial systems NEO has to discredit crytpcurrencies as a non-stable source of value and go with the supposed much mroe stable currency of fiat currency.\nA smart contrat is again a contract. Reading any contract it‚Äôs just a bunch of conditional statements. ‚ÄúIf the tenant doesn‚Äôt pay rent every 4 weeks, the tenant will be fined ¬£40‚Äù. A smart contract just autoamtically ensures the contract carries out. With a normal contract, anyone may forget the conditional or find a way to game the system but it‚Äôs harder to game a smart contract because it‚Äôs cryptographically carried out.\nNEO aims to combind 2 conflicting ideaologies from the cyptocurrency world. On-chain transactions, which is how most cryptocurrencies work. All transactions are recorded on the blockchain and off-chain transactions much liek the Lightning network, where transactions are performed off-chain and the results are bundled into the blockchain.\nThe NEO white paper describes this:\n ‚ÄúRipple, BitShares, NXT, etc all are blockchains of decentralized functionality but without layered design.The blockchain itself acts as the ledger and transaction matcher. In such a blockchain, pending orders, withdraw orders, matching and other operations are recorded on the blockchain.‚Äù\n  ‚ÄúAlthough NEO support the exchange of assets on the chain, the blockchain itself does not provide order book and order matching functionality‚Ä¶through a mechanism called ‚Äòsuperconducting.‚Äô\n  Under the superconducting transaction, the two parties do not need to host the property to an intermediary (traditional exchange). Users only need send to the exchange an order signed with their private keys. After the exchange matches the buyer and seller orders and broadcast transactions is the transaction complete. From beginning to end, property does not leave the user‚Äôs control, putting an end to the traditional moral hazard. Exchange under the superconducting trading mechanism only plays the role of information matching.‚Äù\n Thank you for taking the time to read this article. ","permalink":"https://polymath.cloud/a-guide-to-altcoins/","summary":"There are many Alternate (Alt) coins on the market, but what makes them so different? Why would people invest in them instead of Bitcoin? This article seeks to explain Altcoins.\nNote: This article is not a primer on Bitcoin and presumes you have fundamental knowledge of cryptocurrencies. If not, please read this article. Ripple Ripple is one of the largest cryptocurrencies on the market. Ripple‚Äôs website explains its philoposphy, as seen below","title":"A guide to Altcoins."},{"content":" ‚ÄúThe bee is more honored than other animals, not because she labors, but because she labors for others.‚Äù\n  ‚Äî St. John Chrysostom.\n A third of our crops rely on pollination from bees, 75% of fruit and vegetables need bees to pollinate them. If suddenly a third of our crops and 75% of fruit and vegetables disappear from the planet, we will struggle to maintain our global population and to provide food to our nation.\nSome of the foods we will lose to the decline of honey bees are:\n Apples Almonds Blueberries Strawberries Tomatoes  Just to name but a few of the many foods we will lose.\nSince 2010, more than 45% of bees in the UK have died, a massive decline in the population of UK Honey Bees. There are many suspected causes as to why honey bees are dying. Pesticides, destruction of natural habitat and climate change are just a few of the many causes. Nevertheless honey bees are dying and we need to save them.\nHow can we save them? Buy organically farmed fruits and vegetables from your nearest farmers market. Insecticides and pesticides are cited as one of the biggest causes of bee decline, so switching to organically farmed foods and supporting the local farmers who work with nature and the seasons to grow their crops is the first step.\nPlant bee friendly flowers and plants. Try planting some Roses, Lavender, Rosemary, Hydrangea or some Hawthorne. The British Beekeepers society has a list of all the plants that support the bee ecosystem.\nSet up a bee refreshment station in your garden. This could be as simple as a dog-bowel with a few rocks in it to make sure it doesn‚Äôt fly away or a bowel full of marbles in your garden.\nFeed any bees that appear to be dead or dying. Most bees will have a lot of pollen attached to them and will have run out of energy to move, so they may appear dead. If this happens, feed a bee a small tea spoon of water / sugar to revive it.\nTell a friend! Bees are dying at a rapid pace and we need them to live, by telling other people about the decline of bees society will eventually understand the impact the loss of bees will have and we will work as a society to save the bees.\n","permalink":"https://polymath.cloud/humanity-is-dying-we-need-to-save-the-bees/","summary":"‚ÄúThe bee is more honored than other animals, not because she labors, but because she labors for others.‚Äù\n  ‚Äî St. John Chrysostom.\n A third of our crops rely on pollination from bees, 75% of fruit and vegetables need bees to pollinate them. If suddenly a third of our crops and 75% of fruit and vegetables disappear from the planet, we will struggle to maintain our global population and to provide food to our nation.","title":"Humanity is dying, we need to save the bees."},{"content":"Finding anagrams of words does not look like a difficult problem but has an interesting solution.\nAn anagram is a word or sentence that can be transformed into another word or sentence. Elvis has all the same letters as Lives, so Elvis is an anagram of Lives. The way most people would immediately solve this problem would be to take a word, go through every word in the dictionary and see if the combinations of letters match exactly.\nThe way to do this will use a multiset. *Sets *are like arrays where the order doesn‚Äôt matter and repetitions aren‚Äôt allowed. With an array, [a, b] is not the same as [b, a]. But with a set, (a, b) is the same as (b, a).\nSet‚Äôs don‚Äôt allow repetitions. So (a, a, a, a, a, b) is the same as (b, a)‚Ää‚Äî‚Ääbecause the first set would be turned into (a, b).\nA *multiset *is a set which allows repetitions but the order doesn‚Äôt matter. For this example, let‚Äôs start small.\nWith our example, we have a list called a dictionary where each item in that dictionary is a word. We want to find out which of these words are anagrams of ‚ÄúElvis‚Äù, so what we do is for loop through the dictionary like so:\nNote: this isn‚Äôt how multisets work in Python, but I‚Äôm mainly using this to illustrate a point. You can find out how multisets work here. You, probably. You‚Äôre right. This is really slow. It would work, but we have 2 problems. The first problem is that capitalisation won‚Äôt make the multisets equal. The second problem is that more spaces can appear in the outputted sentence than in the original word. As an example, ‚Äúroast beef‚Äù is an anagram of ‚Äúeat for BSE‚Äù.\nGiven 2 sentences such as ‚Äúroast beef‚Äù and ‚Äúeat for BSE‚Äù, if we turned these into multisets they wouldn‚Äôt be equal due to the differing amount of spaces. There‚Äôs another way we can calculate if 2 sentences are anagrams of each other. The fundamental theorem of arithmetic states:\n Every integer either is a prime number itself or can be represented as the product of prime numbers and that, moreover, this representation is unique, the order of the factors.\n Prime numbers are numbers which only have 2 factors‚Ää‚Äî‚Ääthe number itself and 1.\nIf we assign each letter in the alphabet to a prime number, like so: And so on, then compute the product of these numbers this number is unique‚Ää‚Äî‚Ääbecause of the fundamental theorem of arithmetic.\nThat means that for a multiset of letters, the product of prime numbers for each letter in that multiset is unique. If two words or sentences have the same number, these two words or sentences are anagrams of each other. Let‚Äôs see a quick example, is ‚ÄúBAC‚Äù an anagram of ‚ÄúA Bc‚Äù? Determining which words are anagrams of other words would be as simple as creating a dictionary of {Word: Prime factorisation} and then grouping all the prime factorisation up.\nNow, given 2 sentences we can easily tell if they are anagrams of each other.\nWe can go faster This prime factorisation trick is interesting, but it doesn\u0026rsquo;t scale very well. Prime numbers grow exponentially, so the longer the message the larger the numbers - meaning the slower it becomes.\nA much quicker way to check for anagrams is to \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000sort the message, ascending from A to B while removing all punctuation / spaces. There are many ways to sort data, for example Timsort is a sorting algorithm.\nOnce you\u0026rsquo;ve sorted the two sentences / words you want to compare, if each list is equal to eachother then they are anagrams.\n Hey üëã Want to subscribe to my blog and stay up to date with posts similar to this one? Subscribe to my email list below. I won\u0026rsquo;t spam you. I will only send you posts similar to this one üòä‚ú®\n#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; } /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */ #mc-embedded-subscribe-form input[type=checkbox]{display: inline; width: auto;margin-right: 10px;} #mergeRow-gdpr {margin-top: 20px;} #mergeRow-gdpr fieldset label {font-weight: normal;} #mc-embedded-subscribe-form .mc_fieldset{border:none;min-height: 0px;padding-bottom:0px;}  Like this article? Subscribe to my mailing list to get more like this‚ú®\nPlease tick this box to let me know you want to be contacted via email. Email\nIf you\u0026rsquo;re feeling extra generous, I have a PayPal  and even a Patreon. I\u0026rsquo;m a university student who writes these blogs in their spare time. This blog is my full time job, so any and all donations are appreciated!\n","permalink":"https://polymath.cloud/an-algorithm-for-finding-anagrams/","summary":"Finding anagrams of words does not look like a difficult problem but has an interesting solution.\nAn anagram is a word or sentence that can be transformed into another word or sentence. Elvis has all the same letters as Lives, so Elvis is an anagram of Lives. The way most people would immediately solve this problem would be to take a word, go through every word in the dictionary and see if the combinations of letters match exactly.","title":"An Algorithm for Finding Anagrams"},{"content":"Moore‚Äôs law is dying. There have been countless articles on this. We cannot keep on packing transistors into a given unit of space, expecting each time that the power of the CPU doubles every year.\nThe smaller and smaller the chips are made, the more problems that are produced. To think this rule would last forever is na√Øve, we‚Äôre running out of space and it‚Äôs going to cause problems. Luckily there‚Äôs a storm brewing. It is theoretically possible to perform computations with zero power. This article will explain how that is possible.\n In the 1950s Computer Scientists wanted to know if it is possible to build an accurate simulation of classical physics. Not a ‚Äúclose to‚Äù simulation, but 100% accurate.\nWhilst working this problem, they discovered something interesting:\nNewton‚Äôs Laws of Physics are reversible\nLet‚Äôs say you see a ball from a basketballers hand in an alternate world. In this world, friction doesn‚Äôt exist. For the next few examples, remember that** in this world friction doesn‚Äôt exist. **The ball is dropped, bouncing off the ground to the same starting height it started at.Gif by Michelle Sherrina on Giphy. Gif depicting a headless basketball player bouncing a basketball.\nLet‚Äôs put some arbitrary numbers on this now. Let‚Äôs say that the ball gains 6 units of energy to reach the floor.\nWhen the ball touches the floor, it goes back up again‚Ää‚Äî‚Ääusing 6 units of energy.\nIn this world of pure Newtonian physics, the laws are reversible.\nIf we made a movie out of the ball falling; the ball would look the same going forwards in time as it would going backwards in time.\nLet‚Äôs see another example from this same world‚Ää‚Äî‚Äätaken from the book ‚ÄúComputing with Quantum Cats‚Äù.\nLet‚Äôs assume you have 2 balls of the same colour on a snooker table. One of the balls hits the other and you filmed this interaction. If you reversed the film it would make as much sense as it did going forward. If you presented this film to someone and asked them ‚ÄúWhich ball hit the other ball?‚Äù they would not know the answer.\n Take a look at the ball below. We do not hold any information about how the ball got there, only that it is there. We don‚Äôt know whether it was placed, kicked, dropped or even teleported there. Photo by Ben Hershey on Unsplash. Image depicting a motionless tennis ball on the floor. We don‚Äôt know whether the ball was dropped from 40ft or 50ft, we hold no information about this ball.\nFrom the last few examples we can see that there is an interesting link between information and energy.\nAlthough each individual action is reversible, if we add more balls it‚Äôs not reversible. Let‚Äôs say we take the snooker example from earlier, but this time we watch a break at the start of the game:Image from Giphy. Image depicting a break in pool.\nWe can always tell which one is the future and which one is the past. The future is the one with more disorder.\nAs the second law of thermodynamics states:\n The amount of disorder in a system always increases and the result is not reversible.\n The term disorder is often called *entropy. *These rules of thermodynamics and entropy is useful to us since entropy is measured in information.\nWhat‚Äôs important to note here is that the relationship between thermodynamics, reversibility, and information are all based on the act of computation itself. Not the power required to run the computer or the power required to run the monitors.\nRolf Landauer found out in 1961 whilst a researcher at IBM that some computation does not need to dissipate energy. He found out that computation and the physical reality are united. In his own words: Photo of Rolf Landauer from here *‚ÄúInformation is not a disembodied abstract entity; it is always tied to a physical representation. It is represented by engraving on a stone tablet, a spin, a charge, a hole in a punched card, a mark on paper, or some other equivalent. This ties the handling of information to all the possibilities and restrictions of our real physical word.‚Äù‚Ää‚Äî‚Ää*Rolf Landauer\nWe have a connection between reversibility and thermodynamics. We have a connection between thermodynamics and information. Therefore we have a connection between reversibility and information.\nThe author John Gribbin describes a fun thought experiment to better get an overall view of this thinking. Figure 1‚Ää‚Äî‚ÄäImage depicting a ball on a box with the number ‚Äú0‚Äù under it. There is another box with the number ‚Äú1‚Äù on it over a hill. The 0 and 1 here represent binary bits. The hill represents the physical aspect to toggling the binary bit. When the ball goes over the hill and down the other side, it‚Äôll toggle the binary bit to be 1.\nWhen it does the reverse, it‚Äôll toggle the binary bit to be 0.\nThe ball traversing the hill would look like this: Figure 2- image depicting a ball going up one side of the hill using +6 energy and going down the other side of the hill using -6 energy. The ball eventually toggles the switch to 1. The ball gains an arbitrary amount of energy as it is pushed up the hill and it releases this energy going down the hill.\nIt has, effectively, cost 0 energy to toggle the binary bit. This is an important statement. John Von Neumann once said ‚Äúit costs energy to toggle a switch‚Äù but our little experiment has displayed that it it possible to not expend energy.\nAlthough it cost nothing to toggle the switch (moving the ball from one side to the other) it will cost something to check where the ball is. It will cost something to check what position the switch is in.\nThe act of the computation itself can cost nothing, but everything else might cost something.\nComputers are entirely made up of toggles like this. If it costs nothing to toggle a simple switch like this, we can have entire circuit boards built up of gates that cost nothing.\n Gates Let‚Äôs take a look at some logic gates.\nA logic gate is a decision making tool. You give it some input and it gives out an output. One of the simpler logic gates is the AND gate. And gate taken from my post on logic gates, here Logic gates can only take 0 or 1 as input. The AND gate outputs the product of A and B. Or in other words, it only outputs 1 when A **and **B are 1. Truth table taken from my article here In all other instances when A and B are not both 1 the AND gate will output 0.\nIf we come across an AND gate and the output is 1‚Ää‚Äî‚Ääwe know for sure that the 2 inputs were 1 and 1.\nIf we come across an AND gate and the output is 0, we don‚Äôt know what the input was. It could of been A = 0, B = 1 or A = 1, B = 0 or A = 0, B = 0.\nWe cannot *reverse *the AND gate to find out what the input is when the output is 0.\nA reversible computer has to be built out of logic gates that can be reversed. The AND gate is not a reversible logic gate so it is not useful here. To build a computer which can replicate classical physics the components of the computer have to be reversible too.\n Reversible Programs Charles Bennet in 1973, whilst working at IBM, created a few simple reversible computer programs. The first half would do the computations and the second half would undo the computations. In his words: Photo of Charles H. Bennet. Image from here ‚ÄúThe first half would generate the desired answer ‚Ä¶ as well as typically, some other information ‚Ä¶ the second half would dispose of the extranous information by reversing the process that generated it but would keep the desired answer.\n*This led me to believe that any computation could be rendered into this reversable format by accumulating a history of all information that would normally be thrown away, then disposing of this history by the reverse of the process that generated it. To prevent the reverse stage from destroying the desired output along with the undesired history, it suffices, before begginging the reverse stage, to copy the output on blank tape. Copying onto blank tape is already logically reversible.‚Äù‚Ää‚Äî‚Ää*Charles Bennet\nSimply put the proces is as follows:\n Compute the answer Write the answer down somewhere reverse all computations to get back to the original state   Fredkin Gates The Fredkin gate is a *universal *gate. Meaning that any logical or arthimetic instruction can be created using a Fredkin gate. Any logic circuit can be created using just Fredkin gates. This means that any computer can be made entirely out of Fredkin gates.\nIf you are not so sure on logic and gates, check out this previous article I‚Äôve written here. Image of a Fredkin gate from here Wikipedia has a nice explanation for how Fredkin gates work, copied here with slight changes.\nThe Fredkin gate maps three inputs (A, B, C) onto three outputs (P, Q, R). The C input is mapped directly to the R output. If C = 0, no swap is performed; A maps to P and B maps to Q.\nOtherwise (if C = 1) the outputs are swapped. A maps to Q and B maps to P. C is **always **mapped to R.\nIf this is run backwards, it undoes itself. If the output of this Fredkin gate is fed to the input of another Fredkin gate (P to A, Q to B, R to c) the output of the second Fredkin gate is the same as the input of the first Fredkin gate.\n Conclusion If we build a perfect Fredkin gate we will get zero power computation. Computing would no longer cost energy. This can change everything. Blockchain uses up enough energy to power a country. Imagine a blockchain that consumed next to 0 energy, the only limitations for it would be the memory problems.\nThe battery life of a mobile phone would be 10x that of a phone today. The phone no longer has to waste power in computing things, the only power it wastes is keeping the screen on. But, there are always downsides to the upsides.\nThe problem with building a reversible computer is that it‚Äôs hard. It requires us to completely shift our mindset away from everything we know. Computer Scientists have always built computers to consume electricity. Which have always been built using traditional logic gates. This is a quantum shift in not only our thinking but, fundamentally, how every single device on the planet should behave.\nIt‚Äôs also a slow process. Although Fredkin gates can reverse and give us back the computational energy they can never give back time. What might take something 4 seconds on a CPU to compute would take 8 seconds on a Fredkin gate to compute. This is due to the fact that once you have computed it, you have to undo all the calculations‚Ää‚Äî‚Ääeffectively 2 times the process.\nIt‚Äôs also impossible as of yet. Throughout this article we have assumed that we live in a frictionless world, which isn‚Äôt very reasonable. It‚Äôs theoretically possible, but not much work has been done here.\nIn the 1990s a research team discovered that the energy savings from a Fredkin gate are linearly proportional to how slowly you run them.\nIn 2016 it was announced that researchers had created a quantum Fredkin gate which could be used to build a quantum computer. This is a quantum gate, so cannot be used in ordinary analogue computing. It‚Äôs one step closer to building computers which can perform zero power computations, but it‚Äôs still a long way off.\n Hey üëã Want to subscribe to my blog and stay up to date with posts similar to this one? Subscribe to my email list below. I won\u0026rsquo;t spam you. I will only send you posts similar to this one üòä‚ú®\n#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; } /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */ #mc-embedded-subscribe-form input[type=checkbox]{display: inline; width: auto;margin-right: 10px;} #mergeRow-gdpr {margin-top: 20px;} #mergeRow-gdpr fieldset label {font-weight: normal;} #mc-embedded-subscribe-form .mc_fieldset{border:none;min-height: 0px;padding-bottom:0px;}  Like this article? Subscribe to my mailing list to get more like this‚ú®\nPlease tick this box to let me know you want to be contacted via email. Email\nIf you\u0026rsquo;re feeling extra generous, I have a PayPal  and even a Patreon. I\u0026rsquo;m a university student who writes these blogs in their spare time. This blog is my full time job, so any and all donations are appreciated!\n","permalink":"https://polymath.cloud/zero-power-computing-how-to-perform-calculations-using-zero-power/","summary":"Moore‚Äôs law is dying. There have been countless articles on this. We cannot keep on packing transistors into a given unit of space, expecting each time that the power of the CPU doubles every year.\nThe smaller and smaller the chips are made, the more problems that are produced. To think this rule would last forever is na√Øve, we‚Äôre running out of space and it‚Äôs going to cause problems. Luckily there‚Äôs a storm brewing.","title":"Zero Power Computing‚Ää‚Äî‚ÄäHow to Perform Calculations Using Zero Power"},{"content":"Introduction Image of Blain Baxter from here 10-year-old Blaine Baxter injured his arm in a go-karting accident last year. Painful daily dressing changes at the hospital made him so anxious he had to be sedated. Not only was the sedation costing money, but Blaine was still anxious before the sedation.\nTwo weeks into his stay at Lucile Packard Children‚Äôs Hospital Stanford, a team of pain management specialists suggested he tried playing games using the Samsung Gear VR. This was such an effective distraction that Blaine didn‚Äôt need sedation anymore.\nThis is one case of many where virtual reality has been used to replace sedation or painkillers in a hospital. In this article, we‚Äôre going to explore this in more depth. First, let‚Äôs learn the basics of VR.\n How does VR work? Virtual reality tricks your brain into believing you are in a 3D world. VR does this using many different ways. The first way VR does this is with a stereoscopic display. This works by displaying two different angles of the world to each eye, simulating depth. Image from here Looking at this image, as you can see, the angle of the weapon is slightly different on each side. But when you put on the headset and play the game, everything looks perfect.\nThe second way is using parallax. Parallax means that the further an object is to you, the slower it moves.\nOther ways include shading the world or manipulating field of view. Humans have a field of view of about 180 degrees when looking straight, but 270 degrees with eye movement.\nThe human eye is very good at noticing vision imperfections, with tunnel vision being an example of such phenomena. Even if a VR headset had a 180-degree FOV, you may still be able to tell a difference. The Vive and Rift both have 110-degree FOVs, Cardboard has 90, the GearVR has 96 and it is rumoured that Daydream may have as much as 120. This should generally speaking, greatly affect the VR experience.\nIn short: there are many many ways that VR tricks your brain into believing you are in a different world.\nThe important thing to note here is that VR tricks your brain (you) into believing you are in a different world. This is an extremely important point which we‚Äôll come back to regularly throughout this article.\n The need for a replacement to painkillers The NHS (National Health Service of the UK) spends ¬£160 million on over the counter painkillers every year. Data from NHS Open data This is especially shocking when you realise that most people can purchase these painkillers for ¬£0.35 at a local shop. The NHS is giving out free medication, which is easily purchased by anyone in the UK.\nOther painkillers, such as opioids, given out by the NHS don‚Äôt work so well with people who have chronic illnesses. People who use opioid painkillers for months or even years develop a tolerance to the drugs. This means that they need higher doses to achieve the same results, which results in hospitals spending more money. Dr. Rosenquist states that you can also develop a tolerance to regular painkillers.\nNot to mention that with opioid painkillers, 2 million Americans either abused or become dependent on them every year.\nPainkillers play an important role in our society, but most of the time people don‚Äôt need prescription painkillers. Having talked to a few doctors, they tell me that they mainly prescribe over the counter painkillers for something as minor as a little headache.\n Virtual Reality as a replacement for painkillers Pain requires conscious attention. Virtual reality lets patients drift away from the real world. It tricks people into believing they are in a whole new world. While their physical mind is in another world, the pain they feel from their physical body is reduced.\nStudies have shown that ratings of pain during painful medical procedures drop 40‚Äì50% when patients are distracted by virtual reality.\nThe exact usage of VR depends upon the need for it. If someone is experiencing a small operation or some dental work, a Samsung Gear VR and any game should be enough to distract them from the pain. Image from the game Ice Lakes on Steam The game itself does not matter in the simple cases. When using VR to change the dressing on burn victims, it has been shown that using a VR game which puts the player into an icy landscape helps reduce the pain.\nThe VR is not a drug, but at the same time, it is not a placebo effect. Placebo would imply that the patient is ‚Äúfeeling better‚Äù from an attribute that cannot come from the drug. In the words of Google‚Äôs dictionary:\n A beneficial effect produced by a placebo drug or treatment, which cannot be attributed to the properties of the placebo itself, and must therefore be due to the patient‚Äôs belief in that treatment.\n Hospitals can use VR as a distraction tool. In most cases, it is a highly effective distraction tool. VR is designed to trick your brain into thinking you are in another world. When your brain believes you are in this other world, you start to tune out of the real world you are in. This tuning out is what causes VR to be so effective in real-world applications like this.\nOf course, if you are treating burn victims who have burns on their face a normal VR headset would not work. You wouldn‚Äôt want to risk the VR headset getting stuck to their face and having to rip their skin off to take it off. This is where things begin to get costly and may not be so great in some circumstances.\nVR only works if it is attached to your face. If you can move your head around and have your virtual head move around. Image from here Because of this, hospitals use special VR systems for patients with burns. The exact system used depends on the patient. Take, for instance, the VR system on the left. This VR system is very out of the way and allows the nurse or doctor to do their work. But, notice it still has to be attached to the head. Image from here In this instance, the burn victim is undergoing a water treatment to soften scar tissue and remove the dead skin. VR systems, like electronics, do not play well with water. So this specially designed system has been made for use by burn victims who don‚Äôt have serious facial burns.\nVR systems used to treat burn patients first came around in the early 2000s. Hunter Hoffman, a researcher at the University of Washington, launched the first pain studies in the early 2000s. Back then, the VR headset weighed 8 lbs and hooked up to a computer the size of a small fridge. This VR headset cost around ¬£90,000.\nThe VR would transport the players into a game called SnowWorld, designed in cool blues and whites. Burn patients often relive the moment they were burned while the doctors/nurses clean their wounds. By teleporting the player to a nice, icy, refreshing world the patients reported feeling half as much pain as they normally would do. Image from here In this instance, we have a burn victim with facial burns. The VR headset has been designed to immerse them, but not to ‚Äústick on‚Äù to their face. The headphones used are coated in such a way that they do not cause much pain.\nThe exact design and layout for each headset changes, due to this still being a relatively new technology.\nIn the case of young Blair earlier, a single Gear VR was enough to immerse him into another world and prevent Blair from needing a sedative. The exact design and layout for each headset changes, due to this still being a relatively new technology.\n Conclusion Virtual reality is still changing lives every single day. Technology has the power to change the world, for the better. Using VR in hospitals is an example of something that isn‚Äôt relatively new, but is still coming into play. There‚Äôs so much to work on in this field, and the research shown has been positive. I urge you, if you are looking for a way to make a positive impact in the world using technology this is one of the ways you still can.\nVirtual reality isn‚Äôt a new subject, but the applications of virtual reality are being expanded every single day. This article was a brief introduction to how VR is actively being used in hospitals.\n Hey üëã Want to subscribe to my blog and stay up to date with posts similar to this one? Subscribe to my email list below. I won\u0026rsquo;t spam you. I will only send you posts similar to this one üòä‚ú®\n#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; } /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */ #mc-embedded-subscribe-form input[type=checkbox]{display: inline; width: auto;margin-right: 10px;} #mergeRow-gdpr {margin-top: 20px;} #mergeRow-gdpr fieldset label {font-weight: normal;} #mc-embedded-subscribe-form .mc_fieldset{border:none;min-height: 0px;padding-bottom:0px;}  Like this article? Subscribe to my mailing list to get more like this‚ú®\nPlease tick this box to let me know you want to be contacted via email. Email\nIf you\u0026rsquo;re feeling extra generous, I have a PayPal  and even a Patreon. I\u0026rsquo;m a university student who writes these blogs in their spare time. This blog is my full time job, so any and all donations are appreciated!\n","permalink":"https://polymath.cloud/who-needs-painkillers-when-you-have-virtual-reality/","summary":"Introduction Image of Blain Baxter from here 10-year-old Blaine Baxter injured his arm in a go-karting accident last year. Painful daily dressing changes at the hospital made him so anxious he had to be sedated. Not only was the sedation costing money, but Blaine was still anxious before the sedation.\nTwo weeks into his stay at Lucile Packard Children‚Äôs Hospital Stanford, a team of pain management specialists suggested he tried playing games using the Samsung Gear VR.","title":"Who needs painkillers when you have virtual reality?"},{"content":"We‚Äôre going to create a summary of BBC News Articles and place them at the top using a Firefox extension. This article is about the gnarly algorithm Term Frequency-Inverse Document Frequency (TF-IDF). We‚Äôre going to create a real-world usage in the form of a Firefox extension. I know what you‚Äôre thinking. ‚ÄúTF-IDF? Yawn üò¥‚Äù but bare with me, it‚Äôs quite interesting!\nWhen we‚Äôre done, it‚Äôll look like this: News article found here. Red box highlights the most important sentences. The red box is not in the final product, is only used for illustration purposes.\n Term frequency * Inverse Document Frequency Don‚Äôt worry, the name of the algorithm makes me fall asleep every time I hear it said out loud too. This algorithm is 2 algorithms multiplied together. Let‚Äôs see how both of these work:\nTerm Frequency Term frequency (TF) is how often a word appears in a document, divided by how many words there are. The Term Frequency (TF) of a term, t, and a document, d. Let‚Äôs say you‚Äôre reading a news article on Brexit. The word ‚ÄúBrexit‚Äù will appear a lot, so the term frequency of the word ‚ÄúBrexit‚Äù is high.\nQuite often, we would want to build a dictionary (hashmap) of term frequencies alongside the term. Like {word: term frequency of that word} and then iterate through this dictionary to find out which word appears the most times.\nNow, what if I told you that the term frequency dictionary would look a little like this:\n{\u0026quot;and\u0026quot;: 0.87, \u0026quot;the\u0026quot;: 0.73}  You can see how these common English words aren‚Äôt useful to us. Of course, most English texts have these words in them, but we call English words like these stopwords. Stopwords usually refer to the most common words in a language, although there isn‚Äôt one singular definition. You have to choose stopwords per usage. You have to decide on what words to use. Before processing some text you‚Äôll usually want to remove stopwords to better process the text.\nWords with capital letters in them differ from words without capitals. In programming, ‚ÄúAfrica‚Äù and ‚Äúafrica‚Äù are two different things. Because of this, we want to turn everything into lowercase or uppercase to better process our text. We‚Äôre going to turn all words into lowercase.\nGiven a string, we want to remove stop words and turn it into lowercase. Our extension will give us a string of all text on a BBC news article. Don‚Äôt worry about where we get the text from yet, that‚Äôs done later in the Firefox extension section. For now, assume we have text that looks like this:\n... These are external links and will open in a new windowA neat feature of many modern laptops is the ability to power them up through the USB port. Unlike the rectangular USB ports of old, the newer type - USB-C - can carry enough power to charge your machine.That‚Äôs great news: it means ...  The above text is shortened to prevent the reader from falling asleep. GitHub freaks out on this page when I try to insert the stopwords_array, so I had to split it up like this.\nThis is the function which will ‚Äúprettify‚Äù our documents. Line 3 is an array of stopwords I found on StackOverflow. I added ‚Äúshare‚Äù and ‚Äúlinkthese‚Äù since these are commons words in the news article we don‚Äôt want.\nLine 5 is Regex. The square brackets mean or. [,.] means ‚Äúactivate on a comma or a full stop ‚Äù. /g means global. Once you find one *‚Äò,‚Äô *or *‚Äò.‚Äô *don‚Äôt stop, continue searching the string. The empty string is what we‚Äôre replacing it with. If we find a full stop or a comma, replace it with nothing‚Ää‚Äî‚Äädelete it. This is because the words ‚ÄúAfrica.‚Äù and ‚ÄúAfrica‚Äù would be classified as two different words without this. From my Instagram, @Brandon.codes Line 4 splits the document up into separate words. The map function applies a function to every element in an array. Once the string is split up into an array of words we apply the toLowerCase() method to every element. It makes every word lowercase. From my Instagram, @Brandon.codes. The arrows are Arrow Functions (Lambda / Anonymous functions).\nWe then return the lowercase words once we‚Äôve filtered out stop words. Filter() creates a new array with only the elements for which the function inside returns True.\nIf a word is a stop word, it‚Äôll result in True which means we‚Äôll get a new array of **only **the stopwords in the document. We use the negation operator ‚Äú!‚Äù to get the opposite, which is what we want. To return a list of words with no stopwords in it.\nNow we want to count how many times each word appears in the document. This will be useful for both Term Frequency and Inverse Document Frequency. First, we want to get all the unique words from an array of words.\nWe convert the array into a set because sets have no repetitions. This lets us get only the **unique **words in the array. Sets also don‚Äôt have an order, so we can‚Äôt use array indices to access elements. We need to turn it straight back into an array. For more about Set Theory, check out this article I wrote.\nOkay, now time to count how many times a word appears in the words array.\nThis function goes through every single unique word and counts how many times that word appears in the array of words. The Term frequency function is quite long, so I‚Äôm going to break it down.\nLine 6 divides the document up into sentences. Sometimes sentences have white space before them. ‚ÄúBrandon. Dogs.‚Äù Has whitespace before ‚ÄúDogs.‚Äù we apply the trim() method to each item to get rid of these trailing whitespace.\nRegarding line 7, The first 146 characters of the first word is social media links. The rest of that word is a title or sub-title. Here, look:\nShare this withEmailFacebookMessengerMessengerTwitterPinterestWhatsAppLinkedInCopy this linkThese are external links and will open in a new windowRyanair is tightening the rules on what passengers pay to take luggage onto the plane, in order to \u0026quot;speed up boarding\u0026quot;.  This is annoying, as the title is an essential part of the story and needs to be taken into account. So we remove the first 146 characters of the first word to get:\nRyanair is tightening the rules on what passengers pay to take luggage onto the plane, in order to \u0026quot;speed up boarding\u0026quot;  Remember this formula? The Term Frequency (TF) of a term, t, and a document, d. The variable ‚ÄúTFVals‚Äù is calculating this formula. If we run the sentence ‚ÄúHello, my name is Brandon. Brandon Brandon. The elephant jumps over the moon‚Äù through the term frequency function, we‚Äôll get something that looks like this: TF only returns 1 ‚ÄúBrandon‚Äù, so not every Brandon has a TF score. For this example, bare in mind that TF only returns 1 Brandon because we are calculating the singular term (word) frequency. We have the term frequencies of words, but we want to calculate the most important sentences, not words. To do that, we go through every single sentence and see what words come up in that sentence which are in TFVals. TF only returns 1 ‚ÄúBrandon‚Äù, so not every Brandon has a TF score (like in the image above). For this example, bare in mind that TF only returns 1 Brandon because we are calculating the singular term (word) frequency.\nWe just need to add them all up and divide by how many words we have. Since we‚Äôre only adding up the TF values of non stop words, it‚Äôs only fair if we divide by how many non stop words there are, instead of how many words there are in a sentence. If we don‚Äôt divide by how many words we have, long sentences have an advantage over shorter ones. The sentence with the highest TF is ‚ÄúBrandon Brandon.‚Äù This is what line 20 onwards does below. We go through every single sentence and calculate the TF values of each sentence, just as we did above. New code starts at line 20.\nAnd that‚Äôs it. But we have a problem with using only Term Frequency. As you may have seen earlier, ‚ÄúBrandon Brandon‚Äù was the highest scoring TF out of all 3 sentences we looked at.\nPopularity isn‚Äôt enough. We don‚Äôt want sentences that have the most keywords in them as they may not make sense, or they may be repetitions of each other. Such as in the ‚ÄúBrandon‚Äù Brandon‚Äù sentence. It has a high TF value but doesn‚Äôt hold much content.\nIt doesn‚Äôt contain much information and isn‚Äôt useful. We want a sentence that is both rare, unique and contains keywords common in the article. This is where inverse document frequency comes in.\n Inverse document frequency Term frequency is how common a word is, inverse document frequency (IDF) is how unique or rare a word is. The formula for IDF is: t is the term and d is the documents. We have multiple documents, we‚Äôre treating each sentence as its own document.\nIDF used over many documents, whereas TF is built for one document. You can decide what a document is. In this article, each sentence is its own document.\nThe first few steps of IDF is the same as TF. We prettify the document, count the words in the document and get all the unique words.\nLines 1‚Äì6 is nothing new. The for loop on line 17 loops through every sentence in the document. Since each sentence is a new ‚Äòdocument‚Äô, we need to count the words of each sentence individually. We have to prettify them to get rid of the stopwords and turn them into an array of words. We push the wordcount object of each new sentence into wordCountSentences.\nThere are 3 sentences here. We don‚Äôt care how many times Brandon appears over the whole document. I tried to pick the words to give you something interesting without making the maths too large, but in the process I developed narcissism. We‚Äôre now going to go through every single word and count how many times that word appears in every sentence and calculate the IDF score using the below formula. I use log 10 here. Note: all logarithms are constantly scaled, so it doesn‚Äôt matter much on what logarithm you use. A small example of how IDF is used. Now we just do this for every non stop word. New code starts on line 25.\nNow we want to get the IDF Values of all the sentences, we use the same code from TF here but replace some things to make it work.\nIf I‚Äôm being truthful with you, I did a simple ‚Äúfind and replace‚Äù the variables. Instead of ‚ÄúTF‚Äù in the comments, I replaced them with IDF. Instead of ‚ÄúTFVals‚Äù, I replaced it with ‚ÄúIDFVals‚Äù. Nothing important has happened here, so feel free to skip this part. New code starts on line 38. Now that we have written code to calculate the IDF value of sentences; we have completed the formula from earlier. ‚Äúis a dog‚Äù has the highest IDF value.\nWe now know how unique or rare a sentence is. This isn‚Äôt that useful since we want the sentence to be information-rich too. We want some way to combine the popularity of TF with the uniqueness of IDF. This leads us to our next section‚Ä¶\n#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; } /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */ #mc-embedded-subscribe-form input[type=checkbox]{display: inline; width: auto;margin-right: 10px;} #mergeRow-gdpr {margin-top: 20px;} #mergeRow-gdpr fieldset label {font-weight: normal;} #mc-embedded-subscribe-form .mc_fieldset{border:none;min-height: 0px;padding-bottom:0px;}  Like this article? Subscribe to my mailing list to get more like this‚ú®\nPlease tick this box to let me know you want to be contacted via email. Email\n TF-IDF revisited via GIPHY\n‚ÄúAre we done yet? Can I wake up now?‚Äù Yes, very nearly done!\nWe now have TF and IDF functions implemented. The only thing left to do is to multiply them together.\nThe objects TF and IDF both stem from the same data, so TF isn‚Äôt going to contain something that isn‚Äôt in IDF. Because of this, we can iterate through one object and use the same key. We multiply the value in TFVals by the value from in IDFVals.\nOur next step is to calculate the 3 most important sentences in our TF-IDF Object. Iterating over the [key, value] of the object with a couple of if statements works perfectly.\nYou‚Äôll see at the bottom we return the formatted string. We format it so it looks nice when we insert it into the webpage. Each is a line break, a space in the text. The black dots are bullet points. We‚Äôre now going to implement this algorithm into a Firefox extension. üî•ü¶ä\n Getting \u0026amp; changing text in a BBC news article Go to any BBC news article, right-click and press ‚Äúinspect element‚Äù. You‚Äôll see a nice box at the bottom of the screen. Use the element selector tool in the top left-hand corner and hover over the article. We can see that the whole article is encompassed within a CSS class of ‚Äòstory-body‚Äô. If we go further in, we can see that all the actual text in the article is encompassed by paragraph tags, inside this CSS class. We‚Äôre going to use JQuery to select the text.\nThis line selects all the  tags within the story-body class. Now we want to get the text, we do this by applying the method .text().\nWe want to add our text to the top of the article. JQuery has a method called prepend which lets us prepend data to the top of an object.\nAnd we‚Äôre done! We can now identify the most important sentences in a BBC News article and display them right at the top. Just time to turn it into an extension.\n Firefox extension basics Firefox extensions have 2 main parts. The Javascript you wrote and the manifest.json file which tells Mozilla what your extension does. We‚Äôre going over manifest.json now.\nmanifest_version tells Firefox what version of manifest you are using. *Name *tells Firefox what the name of your extension is. *Version *tells Firefox what version number your extension is. These 3 are mandatory.\n*description *tells Firefox what your extension does.\n*content_scripts *tells Firefox what scripts to load when the URL matches what you have inputted. In order for the scripts you have specified to run, the current URL must match at least one of the URLs you have specified. You can use 2 special characters here:\n ‚Äú*****‚Äù Matches zero or more characters. In this instance, I don‚Äôt know whether the user will load HTTP or HTTPS so I have it step to load both. I also don‚Äôt know what exact article the user will look at, so I have it set to activate on any article. ‚Äú?‚Äù matches exactly one character.  For example: \u0026quot;*na?i\u0026quot; would match \u0026quot;illuminati\u0026quot; and \u0026quot;annunaki\u0026quot;, but not \u0026quot;sagnarelli\u0026quot;.\nSince we‚Äôre going to be using jQuery, we‚Äôll import the jQuery JS file as well into the website, before our script executes. You can grab the jQuery file from here. Copy and paste into a file named ‚Äújquery.js‚Äù.\nEnter ‚Äúabout:debugging‚Äù into your Firefox URL to load this page: From here, click *‚ÄúLoad Temporarary Add-on‚Ä¶‚Äù *and then click any of the files in the extension. Once you do, you should see this: Mozilla have a nice article on the basics of Firefox extensions, here.\nNow load any BBC news article to play with it!\n Conclusion You‚Äôve now seen the awesome power of TF-IDF and a real-world application for it. This idea came to me because I have email anxiety. I get so nervous about reading emails that I wanted a quick summary of them to calm my thoughts. Alas, this is my first time ever writing Javascript. I started out on something easier like BBC news articles.\nHere are some ways you can improve upon this code, if you so wish:\n Dynamically select how many sentences in a summary you want. You can find out the average TF*IDF value in the whole article and anything over X you can include in the summary. This makes it so long articles are treated as equally as shorter articles. Extending this to work on any other websites you wish.   Hey üëã Want to subscribe to my blog and stay up to date with posts similar to this one? Subscribe to my email list below. I won\u0026rsquo;t spam you. I will only send you posts similar to this one üòä‚ú®\n#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; } /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */ #mc-embedded-subscribe-form input[type=checkbox]{display: inline; width: auto;margin-right: 10px;} #mergeRow-gdpr {margin-top: 20px;} #mergeRow-gdpr fieldset label {font-weight: normal;} #mc-embedded-subscribe-form .mc_fieldset{border:none;min-height: 0px;padding-bottom:0px;}  Like this article? Subscribe to my mailing list to get more like this‚ú®\nPlease tick this box to let me know you want to be contacted via email. Email\nIf you\u0026rsquo;re feeling extra generous, I have a PayPal  and even a Patreon. I\u0026rsquo;m a university student who writes these blogs in their spare time. This blog is my full time job, so any and all donations are appreciated!\n","permalink":"https://polymath.cloud/tfidf/","summary":"We‚Äôre going to create a summary of BBC News Articles and place them at the top using a Firefox extension. This article is about the gnarly algorithm Term Frequency-Inverse Document Frequency (TF-IDF). We‚Äôre going to create a real-world usage in the form of a Firefox extension. I know what you‚Äôre thinking. ‚ÄúTF-IDF? Yawn üò¥‚Äù but bare with me, it‚Äôs quite interesting!\nWhen we‚Äôre done, it‚Äôll look like this: News article found here.","title":"Finding The Most Important Sentences Using NLP \u0026 TF-IDF"},{"content":"Decision trees, one of the simplest and yet most useful Machine Learning structures. Decision trees, as the name implies, are trees of decisions. Taken from here You have a question, usually a yes or no (binary; 2 options) question with two branches (yes and no) leading out of the tree. You can get more options than 2, but for this article, we‚Äôre only using 2 options.\nTrees are weird in computer science. Instead of growing from a root upwards, they grow downwards. Think of it as an upside down tree.\nThe top-most item, in this example, ‚ÄúAm I hungry?‚Äù is called the root. It‚Äôs where everything starts from. ***Branches ***are what we call each line. A ***leaf ***is everything that isn‚Äôt the root or a branch.\nTrees are important in machine learning as not only do they let us visualise an algorithm, but they are a type of machine learning. Take this algorithm as an example. Taken from here This algorithm predicts the probability that a passenger will survive on the Titanic.\n‚Äúsibsp‚Äù is the number of spouses or siblings aboard the ship. The figures under each leaf show the probability of survival.\nWith machine learning trees, the bold text is a condition. It‚Äôs not data, it‚Äôs a question. The branches are still called branches. The leaves are ‚Äúdecisions‚Äù. The tree has decided whether someone would have survived or died.\nThis type of tree is a **classification **tree. I talk more about classification here. In short; we want to classify each person on the ship as more likely to die or to have survived.\nIn real life, decision trees aren‚Äôt always as easy. Take a look at this photo, and brace yourself. I‚Äôll try to describe as much of it as I can. üò¥‚Ää‚Äî‚ÄäMe when I have to look at this image This is a decision tree. It wants to answer the question ‚Äúcan I eat this mushroom?‚Äù Taken from here Given an image of a mushroom (like on the left) we want to find out if it‚Äôs edible.\nYou see those things at the top which look like variable assignments? Those are if statements. Let‚Äôs take a look at one of those.\n‚Äúodor = a: e (400.0)‚Äù\nIf the smell (odor) of the mushroom is ‚Äúa‚Äù for almond, then it is edible (e) and we are 400.0 points confident that it is edible. Each of these statements is a feature.\nFeatures are just attributes of an object. The features of a bike are: it has wheels, it has handlebars etc.\nWe do this on and on until we reach a point where the odor is neutral (n) at which point we start to check more **features **of the mushroom.\n Making decision trees using a formal language Okay, We can draw them but how do we write decision trees? There‚Äôs a nice notation for that.\nLet‚Äôs jump right into an example. Sorry for the blurry formula. It‚Äôs a problem with screen shotting LaTeX üò¢ The fancy little ‚Äú^‚Äù means ‚Äúand‚Äù. It‚Äôs some fancy mathematical notation. For more notation like this, check out this other article I wrote. In this notation, when we don‚Äôt see anything connecting 2 items (like x2 and x5) we assume it is ‚Äúand‚Äù. We want a decision tree that returns **True **when both *x2 *and x5 are true. Okay, let‚Äôs see another one. This one features a lot more logic symbols. You might want to check out this other article I wrote. Okay, the ‚Äú‚à®‚Äù symbol means ‚Äúor‚Äù and the ‚Äú¬¨‚Äù means ‚Äúnot‚Äù. Notice how the X1 decision becomes True if X1 is **not **true. This is because of the ‚Äúnot‚Äù symbol before it in the formal notation. Splitting candidates in the tree Decision trees are made by taking data from the root node and splitting the data into parts. Taken from here Taking the Titanic example from earlier, we split the data so that it makes the most sense and is in alignment with the data we have.\nOne of the problems with decision trees is the question ‚Äúwhat is the best way to split the data?‚Äù Sometimes you‚Äôll instinctively know, other times you‚Äôll need an algorithm\nWe want to design a function which when given a dataset will split the data accordingly.\nIf we have numerical features we can split it based on the data we see. There are many different ways of splitting. We can sort all the values in the dataset and decide the split thresholds between instances of different classes. We can also cut them straight down the middle. There are too many splitting algorithms to discuss here. So instead we‚Äôll go through a simple algorithm.(1, a), (2, b), (1, c), (0, b), (3, b)\nSo we have 3 classes (a, b, c). The first thing we do is put them into different categories.\n{(0, b)}, {(1, a), (1, c)}, {(2, b)}, {(3, b)}  Now we have 4 different sets. For more on set theory, click here.\nLet‚Äôs just pick some arbitrary numbers here. We‚Äôll split them like so:\nSplit 1 \u0026lt;= 0.5 Split 2 \u0026lt;= 1.5 but \u0026gt; 0.5 Split 3 \u0026gt; 1.5  We now have a decision tree split up. If we didn‚Äôt split the data up, the tree wouldn‚Äôt look much like a tree. Imagine what the tree might look like if our split was ‚Äúall data less than 3‚Äù. Everything would be there! It wouldn‚Äôt be very tree-like.\n Occam\u0026rsquo;s razor Image of William of Ockham, from here. Occam\u0026rsquo;s razor is a philosophy attributed to William of Ockham in the 14th century. In short, the quote is:\n ‚ÄúWhen you have two competing theories that make exactly the same predictions, the simpler one is the better one.‚Äù\n We can use this principle in machine learning, especially when deciding when to split up decision trees.\n ‚ÄúThe simplest tree that classifies the training instances accurcately will work well on previously unseen instances.‚Äù\n The simplest tree will often be the best tree, so long as all other possible trees make the same results.\n Finding the best splitsGif from Giphy. Sometimes, the subject you‚Äôre teaching is just plain old boring. Gif provided to try to alleviate the boredom. Trying to find and return the smallest possible decision tree that accurately classifies the training set is very very hard. In fact, it‚Äôs an NP-hard problem.\nInstead, we‚Äôll try to approximate the best result instead of getting the best result. We‚Äôre going to talk a lot about probability and statistics, if you want to know more about probability and statistics click here.\nWhat we want is information that explicitly splits the data into two. We don‚Äôt want something that can include both male and females, we want purity. One singular class for each split.\nThis measure of purity is called information. It represents the expected amount of information that would be needed to specify whether a new instance should be classified as the left or right split.\nTo find the best splits, we must first learn a few interesting things.\n Expected Value This part talks about random variables. For more on random variables, check out this article on statistics \u0026amp; probability I wrote.\nThe expected value is exactly what it sounds like, what do you expect the value to be? You can use this to work out the average score of a dice roll over 6 rolls, or anything relating to probability where it has a value property.\nSuppose we‚Äôre counting types of bikes, and we have 4 bikes. We assign a code to each bike like so: For every bike, we give it a number. For every coding, we can see we use 2 bits. Either 0 or 1. For the expected value, not only do we need the value for the variable but the probability. Each bike has equal probability. So each bike has a 25% chance of appearing.\nCalculating the expected value we multiply the probability by 2 bits, which gets us: What if the probability wasn‚Äôt equal? What we need to do is to multiply the number of bits by the probability  Entropy This measure of purity is called the information. It represents the expected amount of information that would be needed to specify whether a new instance (first-name) should be classified as male or female, given the example that reached the node. We calculate it based on the number of male and female classes at the node.\nRemember earlier when we talked about purity? Entropy is a measure of impurity. It‚Äôs how uncertain something is. The formula for entropy is: Entropy is trying to give a number to how uncertain something is.\nYou can also have conditional entropy, which looks like this: Information Gain Example Let‚Äôs show this using an example. What‚Äôs the information gain of splitting on Humidity? An example of splitting on humidity We have 9+ and 5-. What does that mean? That means in the table we have 9 features where data is positive and 5 where it‚Äôs no. So go down the PlayTennis table and count 9 times for positive (Yes) and 5 times for negative (No).\nNow we want to find out the information gain of humidity. If humidity is high, we look at the data and count how many yes‚Äôs for humidity high. So when humidity is high, we have 3+ and 4-. 3 positives and 4 negatives. D indicates the specific sample, D.The information gain is the gap between uncertainty. We have 14 sets of data in total, The denominator is always 14. Now we just calculate them using the formula. The information gain of playing tennis (yes) when the humidity is high is: 3 yes‚Äôs and 4 no‚Äôs And the information gain of playing tennis when the humidity is normal is: 6 yes‚Äôs and 1 no. This isn‚Äôt how likely something is to happen, it‚Äôs just how much information we gain from this. We use information gain when we want to split something. In the below example we want to find out whether it is better to split on humidity or wind. Now we know what the information gain on each split is using entropy, we apply the information gain formula. The information gain on splitting by humidity amongst our sample, D, is 0.151.\nIf we use the same formula for entropy in the wind part, we get these results: And if we put them into the information gain formula we get: It is better to split on humidity rather than wind as humidity has a higher information gain.\n Definition of accuracy What we want to do is to check how accurate a machine learning model is. M(x) means given a sample, X, we give the predicted classification. The label. lx is actually the true label. So this sample has already been labeled so we know the true label. This set of samples shows that these are correctly labeled.\nWhat we do is feed the algorithm a sample set where we already know the classification of every single item in that sample set. We then measure how many times the machine learning algorithm was right.\n Overfitting with noisy data Look at the below example. We have this formula and noisy data. Noisy data means that the data isn‚Äôt correct. Our formula is X1 and X2 = True. Our noisy data is True and False = True, which is wrong.\nThe x3, x4, x5 are all additional features. We don‚Äôt care about them, but this is just an example to show that sometimes we have many additional features in a machine learning model which we don‚Äôt care about.\nWe build a decision tree that can match the training data perfectly. The accuracy is The problem is that it matches the training data perfectly, 100% but because of the noisy data it doesn‚Äôt perform very well on the true data. That one small error makes a larger decision tree and causes it to not perform as well in the real world.\nIf we build a decision tree that works well with the true data, we‚Äôll get this: Even though it performs worse in the training set, due to not worrying about noisy data it performs perfectly with real-world data.\nLet‚Äôs see another example of overfitting.\n Overfitting with noise-free data Here are the probabilities for each one: There‚Äôs a 50% chance that the resultant,* x3*, is True. There‚Äôs a 0.66% chance that the resultant, *Y*, is True.\nFor our first model let‚Äôs have a quick look. The accuracy is: It‚Äôs good on training data, but on real world data (D_true) it doesn‚Äôt perform as well. From this, we can tell that overfitting has occurred.\n Preventing overfitting The reason for overfitting is because the training model is trying to fit as well as possible over the training data, even if there is noise within the data. The first suggestion is to try and reduce noise in your data.\nAnother possibility is that there is no noise, but the training data is small resulting in a difference from the true sample. More data would work.\nIt‚Äôs hard to give an exact idea of how to prevent overfitting as it differs from model to model.\n Hey üëã Want to subscribe to my blog and stay up to date with posts similar to this one? Subscribe to my email list below. I won\u0026rsquo;t spam you. I will only send you posts similar to this one üòä‚ú®\n#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; } /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */ #mc-embedded-subscribe-form input[type=checkbox]{display: inline; width: auto;margin-right: 10px;} #mergeRow-gdpr {margin-top: 20px;} #mergeRow-gdpr fieldset label {font-weight: normal;} #mc-embedded-subscribe-form .mc_fieldset{border:none;min-height: 0px;padding-bottom:0px;}  Like this article? Subscribe to my mailing list to get more like this‚ú®\nPlease tick this box to let me know you want to be contacted via email. Email\nIf you\u0026rsquo;re feeling extra generous, I have a PayPal  and even a Patreon. I\u0026rsquo;m a university student who writes these blogs in their spare time. This blog is my full time job, so any and all donations are appreciated!\n","permalink":"https://polymath.cloud/what-is-a-decision-tree-in-machine-learning/","summary":"Decision trees, one of the simplest and yet most useful Machine Learning structures. Decision trees, as the name implies, are trees of decisions. Taken from here You have a question, usually a yes or no (binary; 2 options) question with two branches (yes and no) leading out of the tree. You can get more options than 2, but for this article, we‚Äôre only using 2 options.\nTrees are weird in computer science.","title":"What is a Decision Tree in Machine Learning?"},{"content":"An AVL tree (named after inventors Adelson-Velsky and Landis) is a self-balancing binary search tree.\nBefore we delve into AVL trees, we need to learn a few things.\n Height of a tree The height of a tree is the length of the longest path from the root node (the top node) to some node. In the image above, the tree has a height of 3.\nThis tree is called balanced. Balance is an important topic in AVL trees. First, let\u0026rsquo;s look at why balance is important. The speed of searching a balanced tree is $\\theta{log n]$. The speed of searching a non-balanced tree is $\\theta{n}$. This tree isn\u0026rsquo;t balanced, it\u0026rsquo;s a sad tree üò¢. Formally, balance is defined as:\n The tree is considered balanced if the height is $\\theta{log n}$\n This sucks as a definition. So, everytime you make a tree you have to check this weird property? Balance can be better explained.\nBalance is where each node has one left and one right child. In the above example, no nodes had a left child so it is unbalanced.\nHeight of a node The depth of a node is a distance from it to the root. The height of a node is the length of the longest path from the node to a leaf. Here is a tree with heights of each node listed next to them.\nEach leaf has its own pointers, both pointing towards NULL (with a height of -1). We often do not include the null pointers in diagrams, but they\u0026rsquo;re important as they make our lives easier later on.\n AVL Trees AVL trees require the weight of the left and right children of every node to differ by at most =+ 1. In fact, anything in the range $-1 \\le x \\le 1$ is fine. Preferably, we\u0026rsquo;d like them to differ by 0. That is, it\u0026rsquo;s perfectly matched on left and right. This isn\u0026rsquo;t realistic and is impossible for an odd number of nodes in a tree. $$S - R \\le 1$$\nNow, we know we can\u0026rsquo;t make them 0. And it\u0026rsquo;s tiresome to calculate $$S-R$$ for every single pair of nodes. So we just make sure the right has +1 more node than the left. A very short proof of this working is:\n$$ left = n$$\n$$ right = n + 1$$\n$$H = right - left = n - n + 1 = 1$$\n Inserting in AVL  Simple Binary Search Tree Insert Fix AVL balance issues  Let\u0026rsquo;s start out with this tree. If you look at the root node, the right side has height 2. The left side has height 3. 2 - 3 = -1, which is fine.\nNow, let\u0026rsquo;s insert 23. Right is 2, left is 4. 2 - 4 = -2. Uh oh! It\u0026rsquo;s a sad tree now because it\u0026rsquo;s not balanced. We can turn this tree into a balanced tree by rotating it.\nRotations Our tree is right heavy. We want to rotate it left. We can do it like this: Rotations take O(1) time. We rotate the tree we had above, now it is a happy tree. A colleague told me that 26 is between 23 and 29, therefore 26 goes on top. While this isn\u0026rsquo;t official advice in any textbooks, it seems to work for most of the problems I\u0026rsquo;m going to present in this article. We insert(55). Now it\u0026rsquo;s a sad tree again, what a disaster! What we have here is a zig-zag: If we rotate the zig-zag we get: That\u0026rsquo;s\u0026hellip;. no better than before. Let\u0026rsquo;s quickly rotate our tree to match this zig-zag pattern: Now, the solution to the zig-zag pattern is to rotate again. A double rotation. 55 is inbetween 50 and 65, so it should go on top. Now it\u0026rsquo;s a happy tree! üå¥\nNow we understand rotations, let\u0026rsquo;s take a look at AVL insertions one more time.\nAVL Insertion  BST insert Fix AVL property from changed node up.  Suppose X is lowest node in the now not-AVL tree. Assume right(x) is higher (heavier).\n If X\u0026rsquo;s right is right-heavy, Right rotate - RR(x). Else, Right rotate, then left roate.  AVL Deletion AVL Deletion is the same as insertion, but instead of insertion we delete. The same 2 principles apply:\n Delete the node Rebalance the tree  ","permalink":"https://polymath.cloud/avl/","summary":"An AVL tree (named after inventors Adelson-Velsky and Landis) is a self-balancing binary search tree.\nBefore we delve into AVL trees, we need to learn a few things.\n Height of a tree The height of a tree is the length of the longest path from the root node (the top node) to some node. In the image above, the tree has a height of 3.\nThis tree is called balanced.","title":"AVL Trees - Trees that can keep balanced by rotating"},{"content":"Decentralising a government controlled object such as currency is so much bigger than you know.\nBitcoin made its debut in 2011, but the most important thing about it was the concept. The idea of taking something as tangible and government controlled as currency and turning it into a decentralised, anonymous object. This was a strong conceptual idea that manifested itself into what we know and love as Bitcoin. If we can decentralise something so fiat and ingrained as currency, what stops us from decentralising other seemingly government controlled objects?\nBlockchain Bitcoin makes use of something called Blockchain, a public ledger system. The Blockchain is a peer to peer decentralised network which validates all actions made on the network using complex maths. In a normal bank, only the bank would validate. But here multiple anonymous sources validate the Blockchain.\nFrom an economics standpoint if Blockchain (technology behind bitcoin) was to catch on it may destabilise the current UK economy because organisations and the government simply aren‚Äôt ready to accept an anti 1984-esque stance. With the recent introduction of the Digital Economy Bill and the Investigatory Powers Act of 2016, it is clear that anything as anonymous and secure as Blockchain may be seen as a threat to not only the economy but to the country itself.\nDespite this, there are multiple advantages to Blockchain technology.. In the next section I will be discussing advantages as if coming from a currency standpoint.\nWhy was Blockchain born?\nThe idea of using an escrow bank with fiat money dates back to not so long ago. Before, users could double spend their money. They could send a copy of their money and keep the original. Within our current escrow system a user asks a bank to buy something, stopping the duplication of money. This is partly why our current currency‚Ää‚Äî‚Äädollars and Sterling are considered centralised.\nEscrow is bad within our current system because in order to purchase something with a card you need to first check it with your bank (done automatically). Your bank can monitor, watch, report, and decline any transactions you make as well as having the ability to sell your purchasing habits on.\nAll Blockchain transactions are faster than a normal banks transaction speed. In order to verify a normal banks transaction it has to be done at one of four time slots within a day but is usually completed at midnight. With Blockchain, the transaction can be completely cleared in 8‚Äì14 seconds.\nWithout the need for a centralised system, Bitcoin is also cheaper to run in a typical peer to peer network since each peer is calculating and verifying instead of a central, computer-powerful body.\nThis decentralisation using Blockchain changed the way currency works.\nWhat is decentralisation? Decentralisation is typically lowering power on a hierarchical structure so the power which used to reside at the top is now distrusted amongst the lower levels of the hierarchical triangle.\nMost organisations use a hierarchical structure where the top of the triangle has the most power over everything. A decentralisation is where you distribute the top-most power amongst the lower levels of the triangle.\nWhy decentralise? This is a good question and for each use case it changes, but typically the best advantages are that its:\n Cheaper‚Ää‚Äî‚ÄäDecentralisation is often cheaper, giving authority and power lower down the ladder of command often allows lower-paying employees to make decisions Accessible by everyone‚Ää‚Äî‚ÄäThe goal of a truly decentralised Blockchain system is to allow everyone to be able to access it. Fair‚Ää‚Äî‚Ääeveryone is treated the same in Blockchain.  What can we expect from Blockchain? Some of the biggest Blockchain innovations happening right are distributed, eco-friendly electricity and Etherum. We can be sure that Blockchain will and is changing the world with the UK government running trials of implementation of Blockchain and other countries exploring the endless possibilities this could have.\nDon‚Äôt forget to like this post because as I am a teenager addicted to social media I require likes and social media acceptance more than I need to breathe. References / further reading Evry, (2016). [online] Available at: https://www.evry.com/globalassets/insight/bank2020/bank-2020\u0026mdash;blockchain-powering-the-internet-of-value\u0026mdash;whitepaper.pdf [Accessed 21 Dec. 2016].\nNakamoto, S. (2011). Bitcoin. [online] bitcoin.org. Available at: https://bitcoin.org/bitcoin.pdf [Accessed 21 Dec. 2016].\n","permalink":"https://polymath.cloud/bitcoin-innovation/","summary":"Decentralising a government controlled object such as currency is so much bigger than you know.\nBitcoin made its debut in 2011, but the most important thing about it was the concept. The idea of taking something as tangible and government controlled as currency and turning it into a decentralised, anonymous object. This was a strong conceptual idea that manifested itself into what we know and love as Bitcoin. If we can decentralise something so fiat and ingrained as currency, what stops us from decentralising other seemingly government controlled objects?","title":"Bitcoins biggest innovation wasn‚Äôt the currency"},{"content":"Absolute Fundamentals of Machine Learning https://unsplash.com/photos/0E_vhMVqL9g Machine learning, what a buzzword. I‚Äôm sure you all want to understand machine learning, and that‚Äôs what I‚Äôm going to teach in this article.\nI found that learning the theroetical side alongside the programming side makes it easier to learn both, so this article features both easy to understand mathematics and the algorithms implemented in Python. Also, technology becomes outdated‚Ää‚Äî‚Ääfast. The code used in this tutorial will likely be meaningless in 5 years time. So for that reason, I‚Äôve decided to also teach the mathematical side to Machine Learning that will not die out in a few years.\nWhat is machine learning? Let‚Äôs start with learning. Learning is a long and complicated process to describe but in a nutshell it is turning experience into knowledge.\nMachine learning is teaching machines how to learn, as insane as that sounds it‚Äôs actually plausable using probability.\nI highly reccomend you read this article on probability, as it is the essential foundation to machine learning and artifical intelligence. We will go over conditional probability and Bayes therom again in this article.\nTypes of learning There are many different ways for a machine to learn, in this I try to explain the different types.\nSupervised Learning In supervised learning we start with a dataset that has training examples, each example has an assiocated label which identifies it.\nAn example of this is presented below: Google ReCaptcha We want the machine to be able to identify drinks, so we present the machine with 9 images, some containing drinks. We then select the pictures that contains the drinks, teaching the computer what a drink looks like.\nIt does this by running labelled data through a **learning algorithm. **The goal of supervised learning is to be able to correctly identify new data given to it, having learnt how to identify the data using the previous data set and learning algorithm.\nUnsupervised Learning Unsupervised learning is quite different from supervised in the sense that it almost always does not have a definite output. The learning agent aims to find structures or patterns in the data.\nA good article on unsupervised learning can be found here.\nReinforcement Learning Reinforcement learning is where the learner receives rewards and punishments for its actions. The reward could simply be utility and the agent could be told to receive as much utility as possible in order to ‚Äúwin‚Äù. Utility here could just be a normal variable.\nA good example of reinforcement learning is this:\nMachine Learning Now we understand some of the terminiology of machine learning, we‚Äôre actually going to teach a machine something. In order for us to do that, we need to learn a bit of probability.\nMost of the probability here is directly copied off of another blogpost I wrote on probability, but I‚Äôll only include the important parts required for machine learning here.\nConditional Probability Conditional probability is where an event can only happen if another event has happened. Let‚Äôs start with an easy problem:\nJohn\u0026rsquo;s favourite programming languages are Haskell and x86 Assembley. Let A represent the event that he forces a class to learn Haskell and B represent the event that he forces a class to learn x86 Assembley.On a randomly selected day, John is taken over by Satan himself, so the probability of P(A) is 0.6 and the probability of P(B) is 0.4 and the conditional probability that he teaches Haskell, given that he has taught x86 Assembley that day is P(A|B) = 0.7.Based on the information, what is P(B|A), the conditional probability that John teaches x86 Assembley given that he taught Haskell, rounded to the nearest hundredth?\nTherefore the probability of P(A and B) = P(A|B) * P(B); read ‚Äú|‚Äù as given, as in, ‚ÄúA|B‚Äù is read as ‚ÄúA given B‚Äù. It can also be written as P(B|A) * P(A).\nThe reason it is P(A|B) * P(B) is because given the probability of ‚ÄúGiven the probability that B happens, A happens‚Äù and the probability of B asP(B). (A|B) is a different probability to P(B) and P(A and B) can only happen if P(B) happens which then allows P(B|A) to happen.\nSo we can transform this into a mathematical formula:\nP(A and B) = P(A|B) * P(B) = 0.7 * 0.5 = 0.35Solving it P(B|A) * P(A) P(A) = 0.5 So 0.6 * P(B|A) Now we don\u0026rsquo;t know what P(B|A) is, but we want to find out. We know that P(B|A) must be a part of P(A and B) because P(A and B) is the probability that both of these events happen so\u0026hellip;P(A and B) = 0.350.35 = P(B|A) * 0.5 With simple algebraic manipulation 0.35/0.5 = P(B|A) P(B|A) = 0.7\nBayes Therom Bayes Therom allows us to work out the probability of events given prior knowledge about the events. It is more of an observation than a therom, as it correctly works all the time. Bayes therom is created by Thomas Bayes, who noted this observation in a notebook. He never published it, so he wasn‚Äôt recgonised for his famous therom during his life time. From https://betterexplained.com/articles/colorized-math-equations/ Confusing, right? Let us look at an example.\nSuppose a new drug is found on the streets and the police want to identify whether someone is a user or not.The drug is 99% sensitive, that is that the proportion of people who are correctly identified as taking the drug.The drug is 99% specific, that is that the proportion of people who are correctly identified as not taking the drug.Note: there is a 1% false positive rate for both users and non users.Suppose that 0.5% of people at John Moores (A rival university) takes the drug. What is the probability that a randomly selected John Moores student with a positive test is a user?\nLet‚Äôs colourfy this and put this into the equation Note: we don‚Äôt directly know the chance of a positive test actually being positive, it isn‚Äôt given to us so we have to calculate it, that is why the formula expands on the denominator in the second part.\nLearning with Bayes Therom Now, bayes therom isn‚Äôt designed to be used only once. It is designed to work with continus data. Baye originally created this using a thought experiment. He wondered that if his assistant threw a ball on the table, can he predict where it will land?\nBaye asked his assistant to do just that. Then again, and to tell him whether it was left or right of the original spot. He noted down every single spot it hit, and over time, with each throw, he got better at predicting where it‚Äôll land. This is where bayes therom comes into play, by repeatedly using bayes therom we can overtime calculate where the ball might land more accurcately.\nLet‚Äôs do a quick example just to get some numbers: Medium doesn‚Äôt support colours, so I have to copy and paste images. Sorry! So what would happen if you went to another hospital, got a second opinion and had the test run again by a different lab? This test also comes back as positive, so what is the probability you have the disease?\nWe change the postieor probability of having the disease before the test to 9%, so it looks like this: Now the new number is 0.9073319 or 91% chance of having the disease.\nWhich makes sense, 2 positive results from 2 different labs are unlikely to be conincidental. And if you get more lab results done and they all come back as positive, this number will gradually increase towards 100%.\nNaive Bayes Classifier Naive Bayes Classifier is a type of classifier that is based on Bayes‚Äô Therom with an assumption of independence among predictors. A Naive Bayes Classifier assumes that the presence of a particular feature is unrelated to the presence of any other feature. For example, a frut may be considered an apple if it is red, round, and about 3 inches in diameter. Even if these features depend on each other or upon the existance of all other features of an apple, all of these contribute to the probability that the fruit is an apple and that is why this classifier is known ‚Äú Naive‚Äù.\nWikipedia put it nicely:\n In simple terms, a naive Bayes classifier assumes that the presence (or absence) of a particular feature of a class is unrelated to the presence (or absence) of any other feature, given the class variable. For example, a fruit may be considered to be an apple if it is red, round, and about 4\u0026rdquo; in diameter. Even if these features depend on each other or upon the existence of the other features, a naive Bayes classifier considers all of these properties to independently contribute to the probability that this fruit is an apple.\n Problem\nSuppose we have 2 datasets, ‚Äúplay‚Äù and ‚Äúweather‚Äù. We want to see the possibillities of playing given the weather. Image from https://www.analyticsvidhya.com/blog/2017/09/naive-bayes-explained/\n The first step is to turn the data into a frequency table The second step is to create a likelihood table by finding the probabilities like Overcast = 0.29 and the probability of playing is 4 / 14 (where 14 is the amount of times they play overall) and 4 is the number of times they played in that weather previously. Now use the Naieve Bayesian equation to calculate the conditional probability for each class.  Here‚Äôs an example problem question solved using the above data and the equation.\nIs the statement ‚Äúplayers will play if weather is sunny‚Äù correct?\nP(Yes | Sunny) = P(Sunny|Yes) * P(Yes) /P(Sunny)\nRemember Bayes Therom? This is the same but with variable names inputted to make it easier to read.\nNow we have P(Sunny|Yes) = 3/9 = 0.33. P(Sunny) = 5/14 = 0.36. P(yes) = 9/14 = 0.64Now using Bayes Therom we can work out P(Yes|Sunny) = 0.33 * 0.674 / 0.36 = 0.60 which has high probability.Thus, given that it is sunny, there is a 60% chance they will play.\nMachine Learning using Python Wow, what a boring read that was. ‚ÄúTheoretical Computer Science is boring‚Äù I hear you say. Well, you‚Äôll be excited to know this next part is about the application of machine learning using Python.\nLet‚Äôs calculate whether an email is spam or ham (that is, a normal email) using machine learning.\nSo, given a large corpus of ham and spam emails, we need to train the model. We‚Äôll start by calculating for each word in each email the number of times that word appears in spam and ham emails.\nWe‚Äôll then calculate a ‚Äúspaminess‚Äù level of each word using a formula. The formula we will be using is quite simple. So, the numerator (the number on top) shows how many times the word appears in a spam email, and the denominator (the bottom) shows how many times it appears in any email.\nSo, lets say there are 9 spam emails and 10 ham emails, making 19 total. If a word appears in 9 spam emails, but 1 ham email than the equation is 9/10 which gives us a 90% chance that this word means it is a spam email.\nBut we cannot simply just count one word, we need to do this for all the words in the email.\nWe essentially have 3 steps:\n Find the spamminess of each word in a message. Find the total spamminess of a message, say by multiplying together the spaminess levels of each word. Call this S[M]. Then find the haminess of each word, by multiplying together the (1‚Ää‚Äî‚Ääspaminess) level of each word. Call this H[M].  Then if S[M] \u0026gt; H[M] then the message is spam, else it is ham.\nOkay, so let‚Äôs implement this. We‚Äôll be using the bodies of emails only, and there won‚Äôt be many emails just to make the explanation easy. Also, the spam emails are **fairly **obvious. Below is the bad emails text file I‚Äôm using\nViagra for sale, get sexy body soon! U want sum viagra bby? u sexy s00n VIAGRA VIAGRA VIAGRA VIAGRA VIAGRA SEXY SOON VIAGRA PLEASE YASSSSS VIAGRA BUY PLEASE I really like today\nAnd the good emails\nHello, how are you? I hope you have the work ready for January the 8th. Do you like cats or dogs? Viagra viagra\nSo the first step is to somehow take this file and split it up.\nThe code reads the file, and splits it per new line, spitting out 2 lists. The lists look like this. Below is the bad emails\n[\u0026lsquo;Viagra for sale, get sexy body soon!', \u0026lsquo;U want sum viagra bby? u sexy s00n\u0026rsquo;, \u0026lsquo;VIAGRA VIAGRA VIAGRA VIAGRA VIAGRA\u0026rsquo;, \u0026lsquo;SEXY SOON VIAGRA PLEASE YASSSSS \u0026lsquo;, \u0026lsquo;VIAGRA BUY PLEASE\u0026rsquo;, \u0026lsquo;I really like today\u0026rsquo;]\nAnd the good emails\n[\u0026lsquo;Hello, how are you?', \u0026lsquo;I hope you have the work ready for January the 8th.', \u0026lsquo;Do you like cats or dogs?', \u0026lsquo;Viagra\u0026rsquo;, \u0026lsquo;viagra\u0026rsquo;]\nOkay, now we need to calculate the spaminess of each word. We do this by finding the word, and seeing how many times it appears in the bad emails and how many times it appears in the good emails, basically the formula seen here: So to find out how many words appear in bad and good emails, we could use nested for loops; but I‚Äôve opted to go a bit functional here.\nSo, the first line is a lambda (anonymous) function which just turns a list of lists into one list. Anonymous functions are functions that are only intended to be used once or twice. The second and third line do the same. First, they map the function ‚Äúx.split(‚Äú ‚Äú)‚Äù onto each email in the list, generating a new list of list of words in the email, then they apply the flatten function to make the list of lists into one list.\nNow we have 2 lists, one containing all the words in a bad email and one containing all the good words in a good email.\nNow we create a function that calculates the spamminess level of a word. First, it counts how many times a word appears in the bad emails. Then it counts how many times it appears in both emails. Then it returns how many times it appears in bad emails divided by how many times it appears in total emails.\nNow we want a dictionary of every word and its spaminess level.\nword_Dict shall now return\n{\u0026lsquo;body\u0026rsquo;: 1.0, \u0026lsquo;': 1.0, \u0026lsquo;want\u0026rsquo;: 1.0, \u0026lsquo;get\u0026rsquo;: 1.0, \u0026lsquo;I\u0026rsquo;: 0.5, \u0026lsquo;January\u0026rsquo;: 0.0, \u0026lsquo;s00n\u0026rsquo;: 1.0, \u0026lsquo;SOON\u0026rsquo;: 1.0, \u0026lsquo;you?': 0.0, \u0026lsquo;dogs?': 0.0, \u0026lsquo;sale,': 1.0, \u0026lsquo;U\u0026rsquo;: 1.0, \u0026lsquo;are\u0026rsquo;: 0.0, \u0026lsquo;Viagra\u0026rsquo;: 0.5, \u0026lsquo;sexy\u0026rsquo;: 1.0, \u0026lsquo;ready\u0026rsquo;: 0.0, \u0026lsquo;SEXY\u0026rsquo;: 1.0, \u0026lsquo;the\u0026rsquo;: 0.0, \u0026lsquo;8th.': 0.0, \u0026lsquo;really\u0026rsquo;: 1.0, \u0026lsquo;Do\u0026rsquo;: 0.0, \u0026lsquo;Hello,': 0.0, \u0026lsquo;BUY\u0026rsquo;: 1.0, \u0026lsquo;bby?': 1.0, \u0026lsquo;like\u0026rsquo;: 0.5, \u0026lsquo;for\u0026rsquo;: 0.5, \u0026lsquo;sum\u0026rsquo;: 1.0, \u0026lsquo;work\u0026rsquo;: 0.0, \u0026lsquo;PLEASE\u0026rsquo;: 1.0, \u0026lsquo;VIAGRA\u0026rsquo;: 1.0, \u0026lsquo;YASSSSS\u0026rsquo;: 1.0, \u0026lsquo;how\u0026rsquo;: 0.0, \u0026lsquo;viagra\u0026rsquo;: 0.5, \u0026lsquo;cats\u0026rsquo;: 0.0, \u0026lsquo;u\u0026rsquo;: 1.0, \u0026lsquo;hope\u0026rsquo;: 0.0, \u0026lsquo;have\u0026rsquo;: 0.0, \u0026lsquo;you\u0026rsquo;: 0.0, \u0026lsquo;or\u0026rsquo;: 0.0, \u0026lsquo;today\u0026rsquo;: 1.0, \u0026lsquo;soon!': 1.0}\nGiven a message, this code will compute how spammy the message is by multiplying the spaminess level of each word. The reduce function is foldl in haskell, it takes a list and a function and returns a single value by applying the function to every item of the list. In this case, given a list of [x, y, x, y, x, y] it will multiply x*y and then add that together.\nNow we need to find the haminess of each message, not so hard now that we can find the spaminess.\nThe haminess is 1‚Ää‚Äî‚Ääthe spaminess\nNow we just need to create a function that determines whether it is spam or ham.\nIf it is true, it is spam, if not; it‚Äôs ham. Obviously this won‚Äôt work so well with such a limited dataset, but if we had thousands of emails this should work well, despite the initial startup time being slow.\nWe just used a naieve bayes classifer‚Ää‚Äî‚Ääa supervised machine learning based approach to spam detection. Isn‚Äôt that really cool sounding?\nK-Nearest Neighbour Like Naieve Bayes above, let‚Äôs create an intution about K-nearest neighbour.\nLet‚Äôs start off with some facts to build up this intuition.\nA point is a location. It has no size, but much like any location it shows you where something is. It can be represented in different ways, depending on how many dimensions it lives in.\nA line is a 1 dimensional object. We can represent a location on a line like so So say the line starts at the number 3 and ends at the number 9, a location is any number between 3 and 9. In this diagram, it is represented as X.\nIn a 2-dimensional object such as a square, we can represent the location using X and Y coordinates. Any location in this square can be reached using X and Y coordinatess.\nA cube is a 3-dimensional square, we can represent its location using 3 coordinates Taken from here A point in geometry is a location. It has no size i.e. no width, no length and no depth. A point is shown by a dot.\nSo a point in an n-dimensional space needs n coordinates to represent it. We find it hard to visualise anything more than 3 dimensional space (as our world is 3 dimensional).\nAn n-dimensional space is represented by an n-dimensional hypercube.\nA hypercube is just a fancy word meaning that any location can be represented as a tuple of n numbers.\nNow, back to the example of stopping spam. Any email message can be represented as a point in a hypercube.\nLet‚Äôs say for example, we have a list of every single possible word that could ever appear in an email.\nSo there are:\nW1, W2, \u0026hellip;, Wn\nWords in the list. Let‚Äôs simplfy this, lets say every single word that could appear in an email is\n(\u0026lsquo;Hello\u0026rsquo;, \u0026lsquo;Goodbye\u0026rsquo;, \u0026lsquo;Email\u0026rsquo;, \u0026lsquo;Cheese\u0026rsquo;, \u0026lsquo;United Kingdom\u0026rsquo;)\nfor simplicities sake, we‚Äôll pretend only these words are possible in an email.\nEvery single email will contain a subset of the words above like so:\n‚ÄúHello, Cheese.‚Äù or ‚ÄúUnited Kingdom, Goodbye.‚Äù\nEach of these messages can be represented as a list of 1‚Äôs and 0‚Äôs, just like bit vectors.\nSo for the first message:\n(\u0026lsquo;Hello\u0026rsquo;, \u0026lsquo;Cheese\u0026rsquo;) (1, 0, 0, 1, 0)\nSo we simply turn the words that are in both the email and the universe of possible words into a 1, in this instance the first element, ‚ÄúHello‚Äù, and the fouth element, ‚Äúcheese‚Äù are turned into 1s.\nSo now we‚Äôve taken a message and turned it into a point in an n-dimensional hypercube.\nNow we want to do this for the email we want to classify as well as every email we hold information about. So we have training data, and a message to classify.\nNow we have a bunch of points in an n-dimensional hypercube, we want to calculate the distance between each point. There are many ways to calculate the distance. We‚Äôll be using the Euclidean Distance Formula here. Taken from here. More on this later. When we insert a new email to be classified, we check its nearest neighbours. If most of the emails near it are spam, then the email is likely to be spam. But if most of the emails near it are ham, then the email is likely to be ham. The feature space for spam and ham emails So we have our training data classified and this is what it looks like on a graph. When we place our email to be classified into it, the graph will look like: Feature space We know where to place the email to be classified because we turned it into a set of coordinates earlier. Feature space We draw a circle around the email to be classified and since most of the spam emails are inside the circle, we mark this email as spam. This is slightly simpler than reality.\nWhen we categorised each email as a bit vector containing 0 and 1s, normally we would hash subsets of the email and use that instead and the distance will likely not be a straight euclidean formula but a more sophisticated formula that works well in training.\nDistance Measurements I said that Euclidean Distance was one of the ways you could calculate the distance, in this section I‚Äôm going to talk a little more about that.\nThe Euclidean Distance is used for **quantitative **data, data that is only numbers.\nWhat is ‚ÄúEuclidean Distance‚Äù? Well, first let‚Äôs go back to Pythagoras‚Äô Therom. We all remember it as Taken from here but Pythagoras‚Äô therom can be applied to many instances. In short, it is findign the distance between 2 points at a right angle. Let‚Äôs say you walk 3 meters east and 4 meters north, how far away are you from the original source? Well, 5 meters as the crow flies. If you want to learn more about how the Pythagoras‚Äô Formula can be used to find any distance, read this article:\nHow To Measure Any Distance With The Pythagorean Theorem *We\u0026rsquo;ve underestimated the Pythagorean theorem all along. It\u0026rsquo;s not about triangles; it can apply to any shape. It\u0026rsquo;s not‚Ä¶*betterexplained.com\nThe actual formual for euclidean distance is: Notice how it‚Äôs very similar to Pythagoras‚Äô therom.\nLet‚Äôs say we have this table: We want to find the distance between these 2 cars, so we insert the values into the Euclidean Distance formula as such: Thus the distance is around 220.\nWhat About Qualitative Data? Qualitative data is data that cannot be represented as a number. Let‚Äôs try an example: Table inspired by slides from Frank Wolter, AI Lectuer @ UoL Lets say you have data of the weather over 4 days and whether or not children in a school played during breaktime. There‚Äôs no numbers here, so we cannot use the Euclidean Distance. You cannot square a concept like ‚Äúsunny‚Äù or squareroot the resultant concept.\nSo we have to find a different way of measuring how close a day is to another. Let‚Äôs take day 1 and day 3. How simialr are they? There is an equally natural way of doing this, we just count the number of features on which the days are the same.\nSo day 1 and 2 have all the same features apart from wind, so we give it a distance of 1. We count the amount of features that differ.\nSo day 1 and 3 have a distance of 2.\nYou can easily change this corresponding to what you believe is more important, this method isn‚Äôt a one size fits all method but rather a method that you, as a human being (and not AI; hopefully) need to decide on.\nWhat defines an ‚Äòneighbour‚Äô You may have spotted something weird earlier that I didn‚Äôt expand on here: Feature space How was the size of the circle decided? Well, good question. This is a very typical problem in learning. Do you want the nearest 3 neighbours or the nearest 20 neighbours? Well, that all depends on your training data. This is entirely down to you.\nImplementing K Nearest Neighbour in Python So now we understand K nearest neighbour, lets implement it in Python. Here is the data we‚Äôll be using in Comma Seperated Value (CSV) format.\nNote: This section uses code from here,here, and here.\nDownload the file here either by running the command\nwget https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data\nIn a Terminal or by selecting all the lines on the website, copying them and pasting them into a text file called iris.data.\nNext up we want to read in the data like so:\nThe csv module allows us to work with comma seperated value (CSV) files. If you were to print it by adding the following to the code\nYou would get something like this as an output, but much longer.\n6.5, 3.2, 5.1, 2.0, Iris-virginica 6.4, 2.7, 5.3, 1.9, Iris-virginica 6.8, 3.0, 5.5, 2.1, Iris-virginica 5.7, 2.5, 5.0, 2.0, Iris-virginica 5.8, 2.8, 5.1, 2.4, Iris-virginica 6.4, 3.2, 5.3, 2.3, Iris-virginica\nNow we need to make 2 datasets, one is a training dataset and the other is a test dataset. The training dataset is used to allow K-nearest neighbour (KNN) to make predictions (note: KNN does not *generalise *the data)\nThe file we just loaded was loaded in as strings, so we need to turm them into numbers we can work with then we need to split the data set randomly into training and testing datasets. A ratio of 2/3 for training and 1/3 for testing is normally the standard ratio used.\nNote to the reader: I had a hard time trying to import the iris data on my own, so this code is exactly copied from here.\nNow we want to calculate the Euclidean Distance between 2 points, since the flower dataset is mostly numbers and a small string at the end, we can just use the euclidean distance and ignore the final feature.\nWoah! What is that? This is functional programming. I‚Äôve just completed a 12-week functional programming class and as my lectuer said:\n By the end of 12 weeks, you will be the person who always says ‚Äúthis could be done in 1 line in functional‚Äù to every bit of code you read\n Let‚Äôs divert quickly from AI and have a run down over this functional code. With functional, it‚Äôs best to read inwards to outwards so we‚Äôll start with the first functional bit of code\nNote: the remove_flowers function will be talked about later, but without this here it causes an error in the code later on. remove_flowers just turns an item of data like\n5.0,3.4,1.5,0.2,Iris-setosa\ninto\n5.0,3.4,1.5,0.2\nMap is a function which applies a function to every item in a list. The function it is applying is a lambda (anonymous) function. An lambda function is a function which is only used for one purpose, so it doesn‚Äôt need to have its own define statement. The syntax for a lambda looks like this:\nLambda var1, var2: calculation\nIn this instance we have 2 variables, x and y and we are putting them into Pythagoras‚Äô Therom. The map syntax is:\nmap ( function, list)\nBut our map takes 2 lists, X and Y. When it does the maths, it takes the first element of list1 and makes it into a variable called x, then it takes the second element of list2 and makes it into a variable called y. it does this until all items in both lists are finished.\nThe last part, list, turns our map into a list. So we get a list containing the Pythagoras‚Äô Therom output of every item in both list1 and list2, which is just\n[4, 4, 4]\nOur next piece of code is\nNow we know what list(map(‚Ä¶ does we can just ignore it and treat it as a function which returns [4, 4, 4].\nSo that leaves us with this funky function:\nNow, reduce is just foldl from Haskell but implemented in Python. It takes a list and turns it into one single value. It does this by applying a function to a list. The function it is applying is again a lambda function, where it adds the x and y together. What are x and y? Say we have a list like so\n[1, 2, 3]\nthen when we add x + y we get\n[1, 2, 3] x = 1, y = 2 1 + 2 = 3 x = 3, y = 3 x + y = 6\nNow, we know what the lambda function does inside reduce, what list is it applying to? Well, reduce is taking the list produced by our earlier map function and turning it into one value.\nSo list is taking [4, 4, 4] and just adding them together. 4 + 4 + 4 = 12. So the output is 12.\nNow we just need to find the square root of it all, which is simple.\nAlthough this may not be readable, it‚Äôs simple to understand once you know some functional programming.\nThere‚Äôs a slight error, the flowers all end with a string representing what flower it is. We can‚Äôt perform math on this, so we have to use this function\nto any list we pass to the Euclidean Distance function.\nNow we need to find the distance from every item in the training set to the item in the test set.\nThis code simply maps a lambda (anonymous) function onto every element in the training and test sets which finds the distance between the two elements and returns those distances in a list. The second part then zips together the element with the corresponding distance. So the first part returns\n[3.4641016151377544, 0.0]\nWhen given these parameters\ntrainSet = [[2, 2, 2, \u0026lsquo;a\u0026rsquo;], [4, 4, 4, \u0026lsquo;b\u0026rsquo;]]testInstance = [4, 4, 4]k = 1\nand the second part returns this\n[([2, 2, 2, ‚Äòa‚Äô], 3.4641016151377544), ([4, 4, 4, ‚Äòb‚Äô], 0.0)]\nThe last part to the code orders the code and returns K many neighbours, in this instance K = 1 so it just returns\n[[4, 4, 4, \u0026lsquo;b\u0026rsquo;]]\nNext we need to somehow vote on what K could be, now that we know its neighbours. We‚Äôll create a voting system. Each neighbor will vote on its attribute (IE, what it is) and the majority vote will be taken as the prediction. So if the majority of its neighbours are of class ‚Äúa‚Äù then the prediction will be of class ‚Äúa‚Äù.\nSo this just goes through all the nearest neighbours and keeps a dictionary. The dictionary is just the flowername + how many times it appears. Each flower votes for their type into the dictionary, the dictionary is sorted so the most amount of vote appears in the first item in the dictionary and then the predicted flower is returned.\nAnd that‚Äôs it. We‚Äôve put together a K-Nearest Neighbours classifier. If you want to read more about implementing this algorithm I suggest reading this or this.\nK-Nearest Neighbour vs Naieve Bayes It‚Äôs entirely down to you when to implement KNN or Naieve Bayes. There are some advantages and disadvantages to both, so I‚Äôll list them here:\nK-Nearest Neighbour Advantages\n Simple but effective Only a single parameter, K, easily leanred by cross validation  K-Nearest Neighbour Disadvantages\n What does nearest mean? Need to define a distance measure Computational cost‚Ää‚Äî‚ÄäMust store and search through the entire trainign set at test time.  Note: The Netflix progress prize winner was essentially K-Nearest Neighbour.\nNaieve Bayes Advantages\n Very simple to implement Needs less training data Can generalise the data  Naieve Bayes Disadvantages\n Accuracy increases with the more data it has, so to get a 95% or higher accuracy you‚Äôll need alot of data Strong Independence Assumptions  You should now have a firm foundation in machine learning. Instead of teaching you an algorithm that will very likely be replaced in 3 years, I decided to teach the fundamental mathematicals and theroy that define these algorithms and then show 2 of the most widely used algorithms that will likely be around for a while.\n/*(  Produced by Brandon Skerritt https://skerritt.tech Instagram: @brandon.codes Email: brandon@skerritt.tech\nRemove stop words Create frequency table of words - how many times each word appears in the text Assign TF score to each sentence depending on the words it contains and the frequency table Assign IDF Score to each sentence, same as above Build summary by adding every sentence above a certain score threshold Only chooses top 3 highest scoring sentences\nRequirements: JQuery */\nfunction prettify(document){ // Turns an array of words into lowercase and removes stopwords const stopwords = [\u0026ldquo;a\u0026rdquo;, \u0026ldquo;\u0026quot;, \u0026ldquo;share\u0026rdquo;, \u0026ldquo;linkthese\u0026rdquo;, \u0026ldquo;about\u0026rdquo;, \u0026ldquo;above\u0026rdquo;, \u0026ldquo;after\u0026rdquo;, \u0026ldquo;again\u0026rdquo;, \u0026ldquo;against\u0026rdquo;, \u0026ldquo;all\u0026rdquo;, \u0026ldquo;am\u0026rdquo;, \u0026ldquo;an\u0026rdquo;, \u0026ldquo;and\u0026rdquo;, \u0026ldquo;any\u0026rdquo;,\u0026ldquo;are\u0026rdquo;,\u0026ldquo;aren\u0026rsquo;t\u0026rdquo;,\u0026ldquo;as\u0026rdquo;,\u0026ldquo;at\u0026rdquo;,\u0026ldquo;be\u0026rdquo;,\u0026ldquo;because\u0026rdquo;,\u0026ldquo;been\u0026rdquo;,\u0026ldquo;before\u0026rdquo;,\u0026ldquo;being\u0026rdquo;,\u0026ldquo;below\u0026rdquo;,\u0026ldquo;between\u0026rdquo;,\u0026ldquo;both\u0026rdquo;,\u0026ldquo;but\u0026rdquo;,\u0026ldquo;by\u0026rdquo;,\u0026ldquo;can\u0026rsquo;t\u0026rdquo;,\u0026ldquo;cannot\u0026rdquo;,\u0026ldquo;could\u0026rdquo;,\u0026ldquo;couldn\u0026rsquo;t\u0026rdquo;,\u0026ldquo;did\u0026rdquo;,\u0026ldquo;didn\u0026rsquo;t\u0026rdquo;,\u0026ldquo;do\u0026rdquo;,\u0026ldquo;does\u0026rdquo;,\u0026ldquo;doesn\u0026rsquo;t\u0026rdquo;,\u0026ldquo;doing\u0026rdquo;,\u0026ldquo;don\u0026rsquo;t\u0026rdquo;,\u0026ldquo;down\u0026rdquo;,\u0026ldquo;during\u0026rdquo;,\u0026ldquo;each\u0026rdquo;,\u0026ldquo;few\u0026rdquo;,\u0026ldquo;for\u0026rdquo;,\u0026ldquo;from\u0026rdquo;,\u0026ldquo;further\u0026rdquo;,\u0026ldquo;had\u0026rdquo;,\u0026ldquo;hadn\u0026rsquo;t\u0026rdquo;,\u0026ldquo;has\u0026rdquo;,\u0026ldquo;hasn\u0026rsquo;t\u0026rdquo;,\u0026ldquo;have\u0026rdquo;,\u0026ldquo;haven\u0026rsquo;t\u0026rdquo;,\u0026ldquo;having\u0026rdquo;,\u0026ldquo;he\u0026rdquo;,\u0026ldquo;he\u0026rsquo;d\u0026rdquo;,\u0026ldquo;he\u0026rsquo;ll\u0026rdquo;,\u0026ldquo;he\u0026rsquo;s\u0026rdquo;,\u0026ldquo;her\u0026rdquo;,\u0026ldquo;here\u0026rdquo;,\u0026ldquo;here\u0026rsquo;s\u0026rdquo;,\u0026ldquo;hers\u0026rdquo;,\u0026ldquo;herself\u0026rdquo;,\u0026ldquo;him\u0026rdquo;,\u0026ldquo;himself\u0026rdquo;,\u0026ldquo;his\u0026rdquo;,\u0026ldquo;how\u0026rdquo;,\u0026ldquo;how\u0026rsquo;s\u0026rdquo;,\u0026ldquo;i\u0026rdquo;,\u0026ldquo;i\u0026rsquo;d\u0026rdquo;,\u0026ldquo;i\u0026rsquo;ll\u0026rdquo;,\u0026ldquo;i\u0026rsquo;m\u0026rdquo;,\u0026ldquo;i\u0026rsquo;ve\u0026rdquo;,\u0026ldquo;if\u0026rdquo;,\u0026ldquo;in\u0026rdquo;,\u0026ldquo;into\u0026rdquo;,\u0026ldquo;is\u0026rdquo;,\u0026ldquo;isn\u0026rsquo;t\u0026rdquo;,\u0026ldquo;it\u0026rdquo;,\u0026ldquo;it\u0026rsquo;s\u0026rdquo;,\u0026ldquo;its\u0026rdquo;,\u0026ldquo;itself\u0026rdquo;,\u0026ldquo;let\u0026rsquo;s\u0026rdquo;,\u0026ldquo;me\u0026rdquo;,\u0026ldquo;more\u0026rdquo;,\u0026ldquo;most\u0026rdquo;,\u0026ldquo;mustn\u0026rsquo;t\u0026rdquo;,\u0026ldquo;my\u0026rdquo;,\u0026ldquo;myself\u0026rdquo;,\u0026ldquo;no\u0026rdquo;,\u0026ldquo;nor\u0026rdquo;,\u0026ldquo;not\u0026rdquo;,\u0026ldquo;of\u0026rdquo;,\u0026ldquo;off\u0026rdquo;,\u0026ldquo;on\u0026rdquo;,\u0026ldquo;once\u0026rdquo;,\u0026ldquo;only\u0026rdquo;,\u0026ldquo;or\u0026rdquo;,\u0026ldquo;other\u0026rdquo;,\u0026ldquo;ought\u0026rdquo;,\u0026ldquo;our\u0026rdquo;,\u0026ldquo;ours\u0026rdquo;,\u0026ldquo;ourselves\u0026rdquo;,\u0026ldquo;out\u0026rdquo;,\u0026ldquo;over\u0026rdquo;,\u0026ldquo;own\u0026rdquo;,\u0026ldquo;same\u0026rdquo;,\u0026ldquo;shan\u0026rsquo;t\u0026rdquo;,\u0026ldquo;she\u0026rdquo;,\u0026ldquo;she\u0026rsquo;d\u0026rdquo;,\u0026ldquo;she\u0026rsquo;ll\u0026rdquo;,\u0026ldquo;she\u0026rsquo;s\u0026rdquo;,\u0026ldquo;should\u0026rdquo;,\u0026ldquo;shouldn\u0026rsquo;t\u0026rdquo;,\u0026ldquo;so\u0026rdquo;,\u0026ldquo;some\u0026rdquo;,\u0026ldquo;such\u0026rdquo;,\u0026ldquo;than\u0026rdquo;,\u0026ldquo;that\u0026rdquo;,\u0026ldquo;that\u0026rsquo;s\u0026rdquo;,\u0026ldquo;the\u0026rdquo;,\u0026ldquo;their\u0026rdquo;,\u0026ldquo;theirs\u0026rdquo;,\u0026ldquo;them\u0026rdquo;,\u0026ldquo;themselves\u0026rdquo;,\u0026ldquo;then\u0026rdquo;,\u0026ldquo;there\u0026rdquo;,\u0026ldquo;there\u0026rsquo;s\u0026rdquo;,\u0026ldquo;these\u0026rdquo;,\u0026ldquo;they\u0026rdquo;,\u0026ldquo;they\u0026rsquo;d\u0026rdquo;,\u0026ldquo;they\u0026rsquo;ll\u0026rdquo;,\u0026ldquo;they\u0026rsquo;re\u0026rdquo;,\u0026ldquo;they\u0026rsquo;ve\u0026rdquo;,\u0026ldquo;this\u0026rdquo;,\u0026ldquo;those\u0026rdquo;,\u0026ldquo;through\u0026rdquo;,\u0026ldquo;to\u0026rdquo;,\u0026ldquo;too\u0026rdquo;,\u0026ldquo;under\u0026rdquo;,\u0026ldquo;until\u0026rdquo;,\u0026ldquo;up\u0026rdquo;,\u0026ldquo;very\u0026rdquo;,\u0026ldquo;was\u0026rdquo;,\u0026ldquo;wasn\u0026rsquo;t\u0026rdquo;,\u0026ldquo;we\u0026rdquo;,\u0026ldquo;we\u0026rsquo;d\u0026rdquo;,\u0026ldquo;we\u0026rsquo;ll\u0026rdquo;,\u0026ldquo;we\u0026rsquo;re\u0026rdquo;,\u0026ldquo;we\u0026rsquo;ve\u0026rdquo;,\u0026ldquo;were\u0026rdquo;,\u0026ldquo;weren\u0026rsquo;t\u0026rdquo;,\u0026ldquo;what\u0026rdquo;,\u0026ldquo;what\u0026rsquo;s\u0026rdquo;,\u0026ldquo;when\u0026rdquo;,\u0026ldquo;when\u0026rsquo;s\u0026rdquo;,\u0026ldquo;where\u0026rdquo;,\u0026ldquo;where\u0026rsquo;s\u0026rdquo;,\u0026ldquo;which\u0026rdquo;,\u0026ldquo;while\u0026rdquo;,\u0026ldquo;who\u0026rdquo;,\u0026ldquo;who\u0026rsquo;s\u0026rdquo;,\u0026ldquo;whom\u0026rdquo;,\u0026ldquo;why\u0026rdquo;,\u0026ldquo;why\u0026rsquo;s\u0026rdquo;,\u0026ldquo;with\u0026rdquo;,\u0026ldquo;won\u0026rsquo;t\u0026rdquo;,\u0026ldquo;would\u0026rdquo;,\u0026ldquo;wouldn\u0026rsquo;t\u0026rdquo;,\u0026ldquo;you\u0026rdquo;,\u0026ldquo;you\u0026rsquo;d\u0026rdquo;,\u0026ldquo;you\u0026rsquo;ll\u0026rdquo;,\u0026ldquo;you\u0026rsquo;re\u0026rdquo;,\u0026ldquo;you\u0026rsquo;ve\u0026rdquo;,\u0026ldquo;your\u0026rdquo;,\u0026ldquo;yours\u0026rdquo;,\u0026ldquo;yourself\u0026rdquo;,\u0026ldquo;yourselves\u0026rdquo;, \u0026ldquo;this\u0026rdquo;]; // turn document into lowercase words, remove all stopwords var document = document.replace(/[.,]/g, \u0026lsquo;'); let document_in_lowercase = document.split(\u0026rdquo; \u0026ldquo;).map(function(x){ return x.toLowerCase() }); return document_in_lowercase.filter( x =\u0026gt; !stopwords.includes(x) ); }\nfunction countWords(words){ // returns a dictionary of {WORD: COUNT} where count is // how many times that word appears in \u0026ldquo;words\u0026rdquo;. const unique_words = uniqueWords(words); let dict = {}; // for every single unique word for (let i = 0; i \u0026lt;= unique_words.length - 1; i++){ dict[unique_words[i]] = 0 // see how many times this unique word appears in all words for (let x = 0; x \u0026lt;= words_without_stopwords.length -1; x++){ if (unique_words[i] == words[x]){ dict[unique_words[i]] = dict[unique_words[i]] + 1; } } } return dict; }\nfunction uniqueWords(words){ const unique_words_set = new Set(words); return unique_words = Array.from(unique_words_set); }\nfunction termFrequency(document){ // calculates term frequency of each sentence words_without_stopwords = prettify(document);\n// gets rid of trailing spaces const sentences = document.split(\u0026quot;.\u0026quot;).map(item =\u0026gt; item.trim()); sentences[0] = sentences[0].substring(146); const TFVals = countWords(words_without_stopwords) const unique_words = uniqueWords(words_without_stopwords); // actually makes it TF values according to formula for (const [key, value] of Object.entries(TFVals)){ TFVals[key] = TFVals[key] / words_without_stopwords.length; } // splits it up into sentences now var TFSentences = {}; // for every sentence for (let i = 0; i \u0026lt;= sentences.length - 1; i ++){ // for every word in that sentence let sentence_split_words = sentences[i].split(\u0026quot; \u0026quot;); // get the assiocated TF values of each word // temp.add is the \u0026quot;TF\u0026quot; value of a sentence, we need to divide it at the end let temp_add = 0.0; let words_no_stop_words_length = prettify(sentences[i]).length; for (let x = 0; x \u0026lt;= sentence_split_words.length - 1; x++){ // get the assiocated TF value and add it to temp_add if (sentence_split_words[x].toLowerCase() in TFVals){ // adds all the TF values up temp_add = temp_add + TFVals[sentence_split_words[x].toLowerCase()]; } else{ // nothing, since it's a stop word. } } // TF sentences divide by X number of items on top TFSentences[sentences[i]] = temp_add / words_no_stop_words_length; } return TFSentences;  }\n// each document is a sentence function inverseDocumentFrequency(document){ // calculates the inverse document frequency of every sentence const words_without_stopwords = prettify(document); const unique_words_set = uniqueWords(words_without_stopwords);\nconst sentences = document.split(\u0026quot;.\u0026quot;).map(item =\u0026gt; item.trim()); sentences[0] = sentences[0].substring(146); const lengthOfDocuments = sentences.length; // prettifys each sentence so it doesn't have stopwords const wordCountAll = countWords(words_without_stopwords); // counts words of each sentence // as each sentence is a document wordCountSentences = []; for (let i = 0; i \u0026lt;= lengthOfDocuments - 1; i ++){ wordCountSentences.push(countWords(prettify(sentences[i]))); } // calculate TF values of all documents let IDFVals = {}; // how many times that word appears in all sentences (documents) wordCountSentencesLength = wordCountSentences.length; // for every unique word for (let i = 0; i \u0026lt;= unique_words_set.length - 1; i++){ let temp_add = 0; // count how many times unique word appears in all sentences for (let x = 0; x \u0026lt;= wordCountSentencesLength - 1; x++){ if (unique_words_set[i] in wordCountSentences[x]){ temp_add =+ 1; } } IDFVals[unique_words_set[i]] = Math.log10(wordCountAll[unique_words_set[i]] / temp_add); } let IDFSentences = {}; // for every sentence for (let i = 0; i \u0026lt;= lengthOfDocuments - 1; i ++){ // for every word in that sentence let sentence_split_words = sentences[i].split(\u0026quot; \u0026quot;); // get the assiocated IDF values of each word // temp.add is the \u0026quot;IDF\u0026quot; value of a sentence, we need to divide it at the end let temp_add = 0.0; let words_no_stop_words_length = prettify(sentences[i]).length; for (let x = 0; x \u0026lt;= sentence_split_words.length - 1; x++){ // if the word is not a stopword, get the assiocated IDF value and add it to temp_add if (sentence_split_words[x].toLowerCase() in IDFVals){ // adds all the IDF values up temp_add = temp_add + IDFVals[sentence_split_words[x].toLowerCase()]; } else{ // nothing, since it's a stop word. } } // term frequency is always between 0 and 1 IDFSentences[sentences[i]] = temp_add / words_no_stop_words_length; } return IDFSentences;  }\nfunction longerSentenceWeighting(sentence){ // longer sentences are weighted better // has to be how many words // number was randomly chosen sentence = sentence.toString() return (length(sentence.split(\u0026rdquo; \u0026ldquo;)) * 1.5); }\nfunction isNumber(n) { return !isNaN(parseFloat(n)) \u0026amp;\u0026amp; isFinite(n); }\nfunction numberWeighting(sentence){ // negative weighting on setnences with just numbers in them sentence = sentence.toString() temp = sentence.split(\u0026rdquo; \u0026ldquo;); weighting = 1.0; for (var item in temp){ if (isNumber(item)){ // more numbers in a sentence, the harsher the weighting // but still gets the option of having one or two numbers // number was randomly chosen weighting = weighting * 0.8 } } return(temp * weighting) }\nfunction TFIDF(documents){ // calculates TF*IDF const TFVals = termFrequency(documents); const IDFVals = inverseDocumentFrequency(documents);\nlet TFidfDict = {}; for (const [key, value] of Object.entries(TFVals)){ if (key in IDFVals){ TFidfDict[key] = TFVals[key] * IDFVals[key] * longerSentenceWeighting(value) * numberWeighting(value); } } let max = 0.0; let max2 = 0.0; let max3 = 0.0; let max_sentence = \u0026quot;\u0026quot;; let max2Sent = \u0026quot;\u0026quot;; let max3Sent = \u0026quot;\u0026quot;; // finds the top 3 sentences in TFidfDict for (const [key, value] of Object.entries(TFidfDict)){ if (TFidfDict[key] \u0026gt; max){ max = TFidfDict[key]; max_sentence = key; } else if (TFidfDict[key] \u0026gt; max2 \u0026amp;\u0026amp; TFidfDict[key] \u0026lt; max){ max2 = TFidfDict[key]; max2Sent = key; } // do i need the third \u0026amp;\u0026amp; here? else if (TFidfDict[key] \u0026gt; max3 \u0026amp;\u0026amp; TFidfDict[key] \u0026lt; max2 \u0026amp;\u0026amp; TFidfDict[key] \u0026lt; max){ max3 = TFidfDict[key]; max3Sent = key; } } return (\u0026quot;\u0026lt;br\u0026gt;\u0026quot; + \u0026quot;‚Ä¢\u0026quot; + max_sentence + \u0026quot;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026quot; + \u0026quot;‚Ä¢\u0026quot; + max2Sent + \u0026quot;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026quot; + \u0026quot;‚Ä¢\u0026quot; + max3Sent);  }\n// get all text from .story-body within p tags on a BBC news web article\n// console.log(termFrequency(\u0026ldquo;Hello, my name is Brandon. Brandon Brandon. The elephant jumps over the moon\u0026rdquo;));\n// get all text from .story-body within p tags on a BBC news web article let $article = $('.post-full-content\u0026rsquo;).find(\u0026lsquo;p\u0026rsquo;).text(); console.log($article) // insert text into body of document let $insert = TFIDF($article); // let insert = $('.story-body\u0026rsquo;).prepend(TFIDF($article));\nFeel free to connect with me: LinkedIn | GitHub\n","permalink":"https://polymath.cloud/ml-fundamentals/","summary":"Absolute Fundamentals of Machine Learning https://unsplash.com/photos/0E_vhMVqL9g Machine learning, what a buzzword. I‚Äôm sure you all want to understand machine learning, and that‚Äôs what I‚Äôm going to teach in this article.\nI found that learning the theroetical side alongside the programming side makes it easier to learn both, so this article features both easy to understand mathematics and the algorithms implemented in Python. Also, technology becomes outdated‚Ää‚Äî‚Ääfast. The code used in this tutorial will likely be meaningless in 5 years time.","title":"Absolute Fundamentals of Machine Learning"},{"content":"You are allowed to reprint anything from my website so long as it follows these rules:\n You reprint **parts **of it. You reprint the entire thing, with my full name and website link for non commercial use.  The knowledge on this website is all public domain, but the formulation of words and images is my own content. If you republish parts, please cite me (you don\u0026rsquo;t have to). I\u0026rsquo;m a university student, I don\u0026rsquo;t have authority in this domain yet so it would mean a lot to me if you did cite me ‚ú®‚ú®üòÅüòÅ‚ú®‚ú®\nIf you want to republish my entire article for commercial use, message me. I\u0026rsquo;ll probably say no if you want me to re-publish it on your website in exchange for \u0026lsquo;more views\u0026rsquo; or some cryptocurrency. So far every single request for me to re-publish on another website has been denied. I want this content to be pure, free of advertisements.\nOne of the core fundamentals of this website is free for everyone, forever. The content will be amazing and unbiased. If you want me to republish on your website, I cannot trust you will add an advert to it or make the article non-free.\nTL;DR\nDo whatever you want. Please cite me if you can (not required, but it\u0026rsquo;ll be so nice). If you want me to republish on your website, probably not. If you want to use my content for commercial reasons, get in touch.\n","permalink":"https://polymath.cloud/licensing/","summary":"You are allowed to reprint anything from my website so long as it follows these rules:\n You reprint **parts **of it. You reprint the entire thing, with my full name and website link for non commercial use.  The knowledge on this website is all public domain, but the formulation of words and images is my own content. If you republish parts, please cite me (you don\u0026rsquo;t have to). I\u0026rsquo;m a university student, I don\u0026rsquo;t have authority in this domain yet so it would mean a lot to me if you did cite me ‚ú®‚ú®üòÅüòÅ‚ú®‚ú®","title":"Licensing"},{"content":"As a diverse team of students, at the University of Liverpool, from China, United Kingdom and Ukraine, we are engaging with the local community and enhancing safety for residents. Our idea is to develop an app to determine the \u0026lsquo;safest\u0026rsquo; route from your location to where you want to be. In Liverpool there is a lot of crimes committed to people walking from once place to another. Examples of crimes which occur commonly are mugging or anti-social behavior induced violence.\nWe\u0026rsquo;re doing this because the statistics show that our area is one of the cities in the UK with the highest rates of crime.\nThe core principle of the app is to be easy to use, for everyone. Discrimination is a large part of crime, so our app needs to be used by people who do not speak English as a first language. Ease of use isn\u0026rsquo;t just a usability feature, it is a requirement.\nWe‚Äôll use the Open Maps API along with the UK police API to create a map of crime in Liverpool. To determine the route through Liverpool we will use artificial intelligence.\nDue to the police cuts in recent years, 76% of reported crime is not acted upon, not to mention the friction involved in reporting a crime. Once a crime has been reported the police expect you to stay on the scene until they arrive. In our busy world, rarely is it possible for someone to take the time out of their schedules to wait for the police, when such waits can be up to half an hour for non-serious crimes. It is better to try and prevent the crime occurring in the first place.\nUsers will be able to report problems and issues that the police API cannot report on. Roadworks, broken street lamps or even if they‚Äôve heard gunshots or aggressive behavior. We plan to be the Waze for pedestrians. Eventually, we hope to work with the police to make Liverpool a safer place. The police will be able to see the most dangerous streets (as this changes dynamically night to night) which would allow them to patrol those streets.\nThe development of this app will benefit Barclays in a number of ways. Barclays\u0026rsquo; core value is to give the ability to rise. Maslow‚Äôs hierarchy of needs states that in order to rise, you need to feel safe. We are giving people the opportunity to rise by being safe.\nWe\u0026rsquo;re already working on making Liverpool safer. We want Barclays\u0026rsquo; help to achieve this in a year, not 5 years.\n","permalink":"https://polymath.cloud/barclays-proposal/","summary":"As a diverse team of students, at the University of Liverpool, from China, United Kingdom and Ukraine, we are engaging with the local community and enhancing safety for residents. Our idea is to develop an app to determine the \u0026lsquo;safest\u0026rsquo; route from your location to where you want to be. In Liverpool there is a lot of crimes committed to people walking from once place to another. Examples of crimes which occur commonly are mugging or anti-social behavior induced violence.","title":"Barclays proposal"},{"content":"How to write a blog post Hi. This is the checklists I use whenever I post a blogpost. Enjoy :) Also, this is my checklist. It contains hints / things I\u0026rsquo;ll want to do. It\u0026rsquo;s customised to me. You might see a lot of SEO / Convertkit stuff here. Convertkit is my email program of choice. Here are some affiliate links if you want to use these tools. I\u0026rsquo;ll get some money if you use them at no extra cost to you. This isn\u0026rsquo;t designed to \u0026lsquo;sell\u0026rsquo; you on these tools. If you want to minimise expenditure, replace Convertkit with Mailchimp free version.\nThis is kind of a mix between checklists / general tips. I just write stuff down whenever I think of it or read it.\nPre thinking about blog posts (maybe you just set up a blog)   Your domain name kinda matters. Bing and DuckDuckGo use your domain name to determine your content. Google doesn\u0026rsquo;t care. Bing and DDG will probably stop doing this. If you don\u0026rsquo;t want your name as the domain name, use something similar to what you\u0026rsquo;re writing about. Pick a niche to it, and try not to branch out too much. The narrower your niche is, the better. I know a blogger who gets 30k views / month and they write about speeding up Gatsby blogs hosted on Netily. Super specific niche, but it has readers. Also, your niche should have readers. Submit your website to Google search console \u0026amp; bing web master tools. Your site needs a site map (yoursite.com/sitemap.xml). My blog generates this automatically, if you‚Äôre using wordpress you can use Yoast to make one. By submitting your site to google and bing, you‚Äôre telling them your site exists. Not essential but pretty important if you want your blog to be popular. Analytics software from day 1. Use google analytics if you like, or any other analytics. Just install it. Collect email subscribers from day 1. You‚Äôll be thankful you started collecting them later on in your blogging life. Your site has to be accessibility and mobile friendly. If not, Google / Bing will punish you. Your site has to be fast. Like really fast. If it takes longer than 2 seconds to load your website look at optimising it. Maybe use CloudFlare, deliver less html / JavaScript. If your site takes 3 seconds to load, imagine how long it takes to load in Asia where the WiFi is a lot worse. 40% of my blog readers are based in India. That‚Äôs a whole lot of people to ignore. Don‚Äôt base your blog on Medium / Tumblr. You do not own your content. You are not treated as you. If you make your own blog, people will know you. I have around 35,000 readers on Medium. I get more engagement from my new 5000 reader / month personal blog than I ever did from Medium. Seriously. Don‚Äôt exclusively use them. If you post to other websites, use canonical links. Long content is super important. write lots of long content Know your customers really well. Like, so specifically well you can easily find them on Instagram / Pinterest or Facebook. Use static content! Wordpress sucks. Just, stop worrying. Like. Just stop. No one cares about what your website looks like, whether its cusotmised or not. They only care about the content. The people who aren\u0026rsquo;t thinking about making the best content will never the best content. You only need great content.  Pre-writing (Ideas, how to validate them)  Keep some form of note. Write down any and all ideas you come across. Whether you thought them yourself or you read someone elses article and liked it. Add this idea to a spreadsheet (I use Airtable) The spreadsheet should have at least 3 columns.  BlogIdeas\n Idea name, search traffic, and difficulty. Go to Mangools and sign up for a free account. Go to Keyword Finder Tool in Mangools. Enter your blog idea in the keyword finder tool. It\u0026rsquo;ll tell you the search traffic and the difficulty. Put these into your table. You might want to make a 4th column, \u0026ldquo;blogpost?\u0026rdquo; as a boolean.\nMangools will show you the top 10 search results for this keyword. If any of them are blog posts, write \u0026ldquo;true\u0026rdquo; in the new column you might have made. Mangools lets you search 5 free keywords a day.\nOnce you\u0026rsquo;ve inputted all your ideas, you\u0026rsquo;ll now have a spreadsheet full of ideas with search traffic and difficulty. Sort by search traffic, look for the ones with highest search traffic and low difficulty. Anything over 40 is really hard for a new blog to rank. Also, if there\u0026rsquo;s other blogposts in that result it may be harder to rank.\nGenerally speaking, you want to target keywords which are longer. The longer they are, the easier they are to rank #1. Take dynamic programming for example. 33,000 views a month, difficulty 49. But, \u0026ldquo;dynamic programming in java\u0026rdquo; is 2100 views a month and difficulty of 11. When you rank #1 for \u0026ldquo;dynamic programming in java\u0026rdquo; you increase your chances of ranking on first page for \u0026ldquo;dynamic programming\u0026rdquo;. once you land on first page for the parent keyword, you\u0026rsquo;ll get a lot more traffic.\nWhen starting out, you want to build domain authority and citation flow. These 2 things basically tell google \u0026ldquo;how much can we trust that this new article from this blog is high quality?\u0026quot;. If the answer is high (wikipedia has a DA of 89) then you\u0026rsquo;re more likely to rank in top 10 on google for the parent keyword within a few days. This is why Wikipedia appears for everything you search - even if the articles are incomplete or small in word count.\nNow you know what blog posts to write. But, don\u0026rsquo;t forget to write about things that have lower rankings but interest you more. Before I wrote about Timsort, it had almost no traffic. Now, it gets thousands of searches a month. You can make the traffic go up by writing blogposts in things that people don\u0026rsquo;t write about. But you might also want to target things that are highly searched.\n Put together a set of research documents. Tbh I just paste them into the blogpost I\u0026rsquo;m writing. idc if you use Markdown on Github or Wordpress or whatever. Doesn\u0026rsquo;t really matter. Procrastination over the \u0026lsquo;right\u0026rsquo; tools to use is still procrastination. Mix popular science with academic papers / books. Popular science can get things wrong, so back it up with academic papers. At the same time, academic papers / academic books are super boring. Make them more fun with popular science. I aim to be inbetween popular science and academia. Give aways and list articles rank supreme amongst all blog content Your content needs to be better than everyone elses. Bloggers who earn over ¬£50k per year focus the most on keyword research / traffic from Google. ( https://growthbadger.com/blog-statistics/ ) Higher income bloggers focus less on social media than lower income bloggers do For high income bloggers, advertising sucks. they are 2.5 times more likely to sell their own product or services Higher income bloggers have 343% more email collection methods than lower-income bloggers High income bloggers write for a specific niche, not a broad audience. If you Google [keyword] and go onto images, Google will show you similar keywords.  Pre first draft (writing tips)   This sentence has five words. Here are five more words. Five-word sentences are fine. But several together become monotonous. Listen to what is happening. The writing is getting boring. The sound of it drones. It‚Äôs like a stuck record. The ear demands some variety. Now listen. I vary the sentence length, and I create music. Music. The writing sings. It has a pleasant rhythm, a lilt, a harmony. I use short sentences. And I use sentences of medium length. And sometimes, when I am certain the reader is rested, I will engage him with a sentence of considerable length, a sentence that burns with energy and builds with all the impetus of a crescendo, the roll of the drums, the crash of the cymbals‚Äìsounds that say listen to this, it is important. Write to please one person. Forget everyone else. I write to make past Brandon happy. Wait at least one week between your first draft and editing \u0026ldquo;I didn\u0026rsquo;t have time to write a short letter so I wrote a long letter instead\u0026rdquo; Use small words. Only use big words when you absolutely have to. Hemmingway said: \u0026ldquo;Poor Faulkner. Does he really think big emotions come from big words? He thinks I don‚Äôt know the ten-dollar words. I know them all right. But there are older and simpler and better words, and those are the ones I use.\u0026rdquo; Delete these words: very really quite utilise thing just words that end in -ing now get / got  ‚Äúnow she drove over the hill‚Äù just say ‚Äúshe drove over the hill‚Äù.\nInstead of\n‚Äúby the time i hit 24, i was extremely underweight‚Äù\ntry:\n‚Äúby the time i hit 24, i was 5\u0026rsquo;5‚Äù and bearing a 112 lb figure‚Äù\n use numbers. numbers are super important. especially statistics. instead of ‚Äúi was inspired by her work ethics‚Äù say ‚Äúher work ethics inspired me‚Äù. Write in the first person. bleed in the first sentence ‚Äúim going to tell you a story about a boy and his dog‚Äù jump right into the story ‚Äúno amount of wrenching would loose the bullet burried in the stomache of the innocent pup‚Äù the road to hell is paved with adverbs \u0026ldquo;gradually he slowly lifted the beautifull braided head of the softly sleeping princess\u0026rdquo; say: \u0026ldquo;his breath stopped as he held her glowing hair in his hands and lifted her quiet lips to his trembling own\u0026rdquo; There is no pleasure so acute as that of a well-place semi-colon. One typo is as discrediting to your reputation as one failed brain surgery is to a neurosurgeon. It\u0026rsquo;s your art. Don\u0026rsquo;t give the reader a chance to think less of you. Your blog post should have this sort of format: Intro main argument take aways conclusion / call to action  Everytime you make a point, do this:\n point reason example (story, anecdote) point reiterated Write for humans, not SEO. write 5‚Äì10 headlines per article and choose the one thats best Make the reader feel like they immediately need to know the answer within your article. Make readers curious Odd numbers are better than even numbers Make the reader feel an emotion in the headline. Never ever edit your text as you write it. Add humor, humor is super important. Lists, bullet points, quotes. multimedia. mix it up :) Instead of writing ‚Äúyou‚Äù or ‚Äúi‚Äù write ‚Äúwe‚Äù. It‚Äôs an exploration for both of you. Longform content gets more engagement than any other type of post. When writing, mix word numbers with numbers. Instead of \u0026ldquo;7 1-a-day emails\u0026rdquo; write \u0026ldquo;7 one-a-day emails\u0026rdquo; Don\u0026rsquo;t get rid of counter arguments in popSci, you often want to reduce someone to be small (10 mins at most) so you delete things The apperence of science is often mis-intrepreted as \u0026ldquo;science\u0026rdquo; by outsides. Don\u0026rsquo;t create fake news.   Instagram Sign up for later.com it\u0026rsquo;s by far the best instagram scheduler ever.\nCreate 2 types of content. Time / date agnostic content and content that needs a time and date. So for example, content about me studying for exams is time sensitive. But programming quotes isn\u0026rsquo;t time sensitive. Let\u0026rsquo;s face you. You don\u0026rsquo;t have the time to edit a picture, think up a caption, and upload it every day. No one does.\nYou want to automate as much of this as possible, so you don\u0026rsquo;t have to do anything for ages. Know that you\u0026rsquo;re going to fail, and automate yourself out of this equation as much as possible.\nI tend to create content on a weekly basis. So for studying, I\u0026rsquo;ll predict what I\u0026rsquo;ll be doing and make content on that. I use lightroom for editing, later for scheduling. Now, I don\u0026rsquo;t have time to create 7 posts. Again - I needed to find a way to automate myself out of this equation. 3 / 7 posts a week are programming quotes / programming tidbits.\n\r\r\rThis is made in Canva.com. I use the instagram post template, colour it one solid colour (I picked yellow as I\u0026rsquo;m a bee keeper and I love bees). I googled \u0026ldquo;programming quotes\u0026rdquo; and brainstormed for around 10 - 15 minutes. I now have around 20 of these quotes. meaning that just under half of my weekly instagram is now automated.\nIf I tried to make 7 coding photos, I would fail. I\u0026rsquo;m automating my failure out of the equation.\nOkay, but still, 4 photos a week? How do I make that less? What if I have a super busy week?\nI\u0026rsquo;ve taken photos that look like they could of been taken that day, but haven\u0026rsquo;t.\n\r\r\rThis post is about a book I\u0026rsquo;m reading. If I ever have a boring week or I can\u0026rsquo;t be bothered, I\u0026rsquo;ll use this post or posts similar to it.\nUsing later.com, you can see your posts in a grid before they post.\n\r\r\rAlso, Later posts your posts for it - 100% automated. No notifications, it just does it. Alsooo, it picks the best times to post. Seriously, I love Later.\nWhen it comes to next week, I might want to make more instagram posts. If I do, I\u0026rsquo;ll move the posts that are agnostic later on.\nHow to make a theme It\u0026rsquo;s actually quite simple. for my theme, the yellow is just a default colour in Canva. The pink is from my Philips Hue bulb which glows pink. Maybe you\u0026rsquo;ll want to learn about colour theory. I just picked the first 2 colours I saw haha.\nI\u0026rsquo;m testing lighter vs darker themes for instagram. I\u0026rsquo;m pretty sure lighter wins, but I want to test it for myself.\nBio Use your name as your name. Or your business name.\nInstagram giveaway  Choose what items to giveaway. They have to be relevant to the audience you are targetting (also, you\u0026rsquo;ll pay for postage. Don\u0026rsquo;t be an asshole) Take really nice pictures of the items to giveaway and promote it on your page Decide on the rules. \u0026ldquo;Comment below your favourite books \u0026amp; tag 2 people\u0026rdquo; for example. Choose a deadline. Too long, and why bother entering now? Too short, it won\u0026rsquo;t reach people When talking about your giveaway, give the value in the caption. \u0026ldquo;Win this giveaway of ¬£30!\u0026quot;. It\u0026rsquo;s a copywriting thing. Maybe they don\u0026rsquo;t care about your products, but they do care about selling them and making a small profit.   Make incentives, such as ‚Äútag 2 people to enter, but for every additional person you tag you get an extra entry‚Äù  So I want it to be ‚Äúcomment below your favourite book‚Äù and then I‚Äôll build a spreadsheet of instagram devs favourite books and will use those books in a future contest, also probably get reshares from big accounts for the interesting data :)\nDon#t tag #giveaway\nOk test time, these are my stats before giveaway:\nFollowers 1,390\n27 new followers / week\nGrowth rate 1.98%\n8,824 Impressions\n2,715 Reach\n327 Profile views\n3 website clicks\nTwitter \r\r\rTwitter  Have goals Understand your audience and keep your twitter strategy centred around a few topics Be personal. People need to trust you and know you. Mix up the content, not just text all the time  Instagram  If your images have captions built in, make sure they\u0026rsquo;re readable Do your own graphics \u0026ldquo;Personal stuff works better on Insta\u0026rdquo; - Ali For videos on YT, put thumbnails onto instagram Repost YT videos on IGTV  General tips Find top level comments on posts similar to yours and reply to them\n How to become an expert in your field  Join trade organisations with official sounding names. Read and summarise three best selling books on your topic. Completely original ideas don\u0026rsquo;t exist. Everything you read is based on something else. So, take your favourite concepts from these books and write them from your own perspective. Turn these into blog posts. Write for other sites and magazines. Give a talk at a local university and local offices of large companies. Piggyback on other people for press. Write a book. You\u0026rsquo;ll instantly become an expert in the field.  Writing a book Finding a market Two factors determine the success of your book. Does it teach a skill that other people use to make money? Do thes epeople gather and communicate online?\nTo really make money and be successful, it\u0026rsquo;s best people use you book to make considerably more money\nIt\u0026rsquo;s also important that you can reach this audience.\nCompetitors No competitors is a bad thing. If there aren\u0026rsquo;t any competitors you should ask why.\nAdvertising without paying STtart teaching and people will pay attention. When you release a book, people will buy it.\nThis is how it works. You don\u0026rsquo;t need to pay for advertising.\nBooks or courses? If you want people to pay a lot, don\u0026rsquo;t say it\u0026rsquo;s a book. Say it\u0026rsquo;s a kit, a toolkit, a guide, a course.\nBooks aren\u0026rsquo;t worth a lot. Courses are.\nPre-publishing (SEO stuff)   Use an odd number in the title, headlines with numbers are 2x more likely to generrate clicks. Numbers thate are odd have a 20% better CTR Google the things you want to rank for. If there\u0026rsquo;s a featued snippet, make sure you have what they have but better. Use [brackets] in the headline - for some reason this has shown to increase CTR by 38% Short URLS - 2.5x more likely for CT  \r\r\r#8 Get a Featured Snippet Search for your keyword and see if there is a featured snippet position taken.\nIf it is, see what your competitor did, and do it better. Pay attention to what Google bolded as that is likely important and relevant.\nIf isn\u0026rsquo;t taken, depending on the type / intent of your keyword, you can make a:\n Table With Data Unordered or Ordered List Clear and Concise Answer to the Question Descriptive URLS - no random nonsense. increase CTF by 25% In the intro use short sentence.s Short sentences increase readability by 58% Colourful image for the cover photo. 80% more likely to read it. I use Unsplash for most cover photos. I might also use Canva to make my own cover photos. Here\u0026rsquo;s a secret: all the graphics I make for my blog are made in Lucid chart. More images = more shares. Put in loads of images / diagrams More images = more credibility Use good images Publish long content. Longer content is 80% more likely to be heavily shared. Your word count should match that of Wikipedia (if possible). Include infographics (if possible) Include hashtags (if putting it onto twitter) Get emotional. Anger, love, surprise, awe. Publish between 8am and 12pm (when my audience is most active) Lots of lists, less paragraphs. Keywords in title (bing and DDG prefer this), keyword in first line of text. Meta description and meta title Frontload your keywords in the title. \u0026ldquo;How to lose weight\u0026rdquo; vs \u0026ldquo;weight loss tips\u0026rdquo;. Google prefers \u0026ldquo;weight loss tips\u0026rdquo;. Use outbound links in your post Use internal links in your post, link to things that you\u0026rsquo;ve written about. Make sure all the headings make sense. H1 followed by H2, for example. Try to limit the amount of H1s on a page. Make a logical sturcture Use Grammarly and Hemmingway to check your work before you publish. All images need to have alt text Duck duck go and Bing lean heavily on page titles Use content upgrades. 785% higher conversion if you have content upgrades in your email subscription box. I\u0026rsquo;ve said this before in this document, but write for humans not SEO. Ask yourself \u0026ldquo;If I am a developer at Google, would I punish this in my SEO algorithm?\u0026rdquo; Make sure convertkit is set up. For convertkit you need to add the content upgrade, add the form to automations, properly tag the form, rewrite the html code to not include H1 tags too ALSO USE UTM PARAMS!!! Focus on the long term. You want to rank on Google. In the short term you can increase views by publishing on reddit or the likes. In order to rank on Google, you need a lot of backlinks. To get backlinks, you need people to view your post. To get people to view your post, you need to post it in lots of places. Force yourself to come up with 15 titles.  Copywriting Copywriting is any form of writing which requires you to sell a service or product.\n Customer focussed copy  Write like your customers talk. The next parts are about how to find out how your customers talk.  Head over to Reddit and find where your target customer hangs out. Take a look at some of the most popular threads. Read what they\u0026rsquo;re writing. Understand how they talk. Customer surveys, specifically these questions:  why did you buy the product? what was the #1 thing that made you say \u0026ldquo;yes, this is for me\u0026rdquo; what have you tried before? what was the experience with these products?   Amazon reviews Customer interviews Social media. Find a competing product on twitter. keep an eye out for complaints made to this company, complaints that always show up. If your product fixses these complaints, emphasise them.    Pro copywriting secrets. These are secrets that pro copywriters don\u0026rsquo;t like sharing, because if they share them then you\u0026rsquo;ll get the advantage\n The purpose of the first sentence in an ad is to get you to read the second sentence. You want your writing to follow a slippery slide:   Headline - gets them sucked in Next line - sucked in even more Next line - even more  and so on\n You can use listicles to bring people in. \u0026ldquo;How do you stop people from not reading your blog? here are 3 tips that work GREAT!\u0026rdquo; Little stories, such as \u0026ldquo;how I helped Buffer turn their YouTube Channel around\u0026rdquo; Open loops. \u0026ldquo;I\u0026rsquo;ll show you how to do this later, but for now\u0026hellip;.\u0026quot;. Make them want to carry on reading.  AIDA  Attention  Grab attention with the firt line. \u0026ldquo;This is the best blog post on careers on the planet\u0026rdquo;.\n Interest  Drump up interest with a bold promise. \u0026ldquo;I\u0026rsquo;m going to show you techniques for getting any job you want\u0026rdquo;\n Desire  Tap into their desires. \u0026ldquo;In short: if you want to be making ¬£100,000 working a job you love, you\u0026rsquo;ll love this guide\u0026rdquo;\n Action  Let them know what to do next. \u0026ldquo;Let\u0026rsquo;s get started\u0026rdquo; or \u0026ldquo;Go to the next page to achieve your dreams\u0026rdquo;\nBenefits \u0026gt; Features Who cares about features? Tell me the benefits.\nBenefits vs features\nStrong call to actions Your customers are busy. Very busy. They don\u0026rsquo;t have time to figure out your shit. Tell them exactly what to do.\n\u0026ldquo;Enter your email address and click \u0026ldquo;free ebook\u0026rdquo;\nFocus on benefits, not features.\n\r\r\rThis has features. It has a strong call to action. It tells the user exactly what they\u0026rsquo;re getting. FYI: this email subscriber form had a conversion rate of 63.72%. 63.72% of people who saw this, signed up to my email list.\n\r\r\rAlthough I admit, it\u0026rsquo;s because the e-book was published online for free. Who want\u0026rsquo;s to sit down and read a 34,000 word blog post? No one. They\u0026rsquo;d rather download the e-book and move on.\nSocial proof People rely on social proof when they\u0026rsquo;re not sure what to do next. Social proof is imporant when someone\u0026rsquo;s deciding whether or not to buy what you sell.\nPro copy writers pack their copy with social proof. You need social proof to sell, but you need sales to get social proof.\nSay you\u0026rsquo;re selling software. Only a handful of people paid for it, the rest are free trials. Show off your strongest form of social proof. Show of fhow many people signed up for your trial (but say like, 1000 people signed up not 1000 people signed up for the free trial)\nMaybe you have 5 customers, and 3 of them got amazing results. Feature these 3 customers on your homepage.\nCrystal Clear USP USP = unique selling point\nWhy should someone buy from YOU??\nyou need a USP.\nWarby Parker lets you try on frames at home, and return any you dont like.\nSense of urgency How do you get customers to buy right now?\nUrgency.\nUse these to create urgency:\n Limited time offer Quantities limited (Supreme) only 47 left sale ends on august 31st don\u0026rsquo;t miss out  You need to back up a sense of urgency with real limitations, otherwise you lose your customers trust.\nAmazing headlines 80% of people read the headline, only 20% read the copy.\nYour headlines need to be insanely specific Your headline should tell your prospect exactly what they\u0026rsquo;re going to get\n Save more time the easy way  change this to\n save 2 hours per day with these 7 productiity hacks  Use a number numbers force you to write insanely specific headlines. A study showed that headlines with numbers in them got 327% more clicks than headlines with questions.\nStrong emotions You need to have storng emotions in headlines. \u0026ldquo;You need to read this!\u0026rdquo;\nFew examples of strong emotions:\n crazy now fast mistake new breakthrough amazing  Use FOMO Fear of missing out. If you can use FOMO, you should use FOMO. You land on a page nad it says \u0026ldquo;limited time savings\u0026rdquo; goes hand in hand with urgency\nWIIFM You land on a site and the first thing yo usee is all about them. Who cares? You want headlines that care about the customer. oYou need to answer the question \u0026ldquo;whats in it for me?\u0026rdquo;\n Email campaigns that run your shopify store  Master the lead Start with a hook The first sentence of your lead is huge. Look at this one:\n The stats are in and the results are undeniable: Email is still the #1 way to dirve sales online.  Here are some copy and paste first lines:\n \u0026ldquo;Does this sound familar? now you can now [benefit] in [timeframe] without [common problem] you know the feeling\u0026hellip; i struggled with [common problem] for [x years] until one day\u0026hellip;  Use mini stories Stories are a great way to hook people, and keep them reading.\nMini stories condense a story into 4 - 5 lines.\nComplement the headline sometimes your lead can complement your headline.\n8 lines or less you want your lead to be super short\n8 lines max. the goal of your lead is to grab someone\u0026rsquo;s attention so they keep reading.\nHow to write compelling copy Write like you talk When you write like you talk, your copy just\u0026hellip;. works\nShort sentences Short sentences = better copy\narticles with shorter sentences had 711% comprehension than thoe with longer sentences.\nWrite to one person instead of saying:\n lots of people stuggle with weight loss if you\u0026rsquo;re reading this that means you\u0026rsquo;re struggling to lose weight  Active voice Active voice is so important. Like it should be on your list of top 5 most important things.\n  The blog post was written by Brian\n  Brian wrote a blog post\n  The second one is better.\nSex sells Seriously. Sex sells. It has sold for centuries. It will continue to sell. But, it\u0026rsquo;s complicatd. You can\u0026rsquo;t sell a laptop using sex. But sex and cars? Yeah go ahead.\nNo big words Big words suck. Don\u0026rsquo;t use them. I\u0026rsquo;ve talked about that a lot in this document. Don\u0026rsquo;t do it.\nWrite for skimmers No ones going to read your shit. No one. Everyone is going to skim the content. To format your writing for skimmers:\n Use lots of subheadings Use takeaway lines, sum up each section of your writing Lots of images and multimedia. Use bolding to indicate \u0026ldquo;hey, you. i know you\u0026rsquo;re not reading this paragraph, but read this sentence\u0026rdquo;.  Great copy is assembled, not written Every copywriter copys the best. you should do it too. Here\u0026rsquo;s some proven templates.\nEmails  short and sweet subject line grabbing lead lesson as a story call to action use a PS  subject line = Short and sweet\nYour subject line should outline your netwsletter,\nYou want it to be short, as an air of mystery. You want them to open it. You want it to be sweet , so they know what its about.\nAttention grabbing leads\nA compelling first line that hooks your reader right away. This line also shows up as a preview in Gmail. So it needs to be good.\nLesson as a story\nYour newsletters need to sound like they are from friends. Friends always share stories. You should too.\nClear CTA\nLet your reader know EXACTLY what to do next. \u0026ldquo;read this blog post\u0026rdquo;\nUse a P.S\nMost people can\u0026rsquo;t resist not reading a P.S.\nLanding pages  headline social proof body = pas (problem, agitate, solve) transistion (introducing ur product) cta  Headline = clear benefit Your headline should let the reader know what they\u0026rsquo;ll get from your product, service, newsletter, or free trial. Example:\n talk to invite-only growth mentors that truly enjoy helping  Social proof Include social proof above the fold. This means before any other content, right below your headline.\nPeople have a tendency to say yes to those who are similar or like themselves.\nBody = PAS The meat of your landi should follow the \u0026ldquo;problem, agitate, solve\u0026rdquo; formula. Start with your prospects #1 problem.\ntransisition transisition from their number 1 problem to a specific offer, your pdocut.\nCTA Let your readers know exactly what to do next.\nAdvance copy writing stratergies Non round numbers numbers like 57, 41.9%. Not 40% or 60. Don\u0026rsquo;t round here.\nDon\u0026rsquo;t talk about your product, show i selling ain\u0026rsquo;t telling.\nYour buttons have to be copy too clicking a button is a last step for a conversion on your site. don\u0026rsquo;t mess the step up. it\u0026rsquo;s copy all the same. Make the button crystal clear.\nInstead of \u0026ldquo;click here to subsscribe\u0026rdquo;, use \u0026ldquo;click here to download your PDF\u0026rdquo;.\nThis single phrase = 20% more buyers  \u0026ldquo;¬£5 fee\u0026rdquo;  vs\n \u0026ldquo;a small ¬£5 fee\u0026rdquo;  the second one converts 20% more.\nMake your testimonials 10x better most testimonials look like\n\u0026ldquo;i brought this 3 months ago, it\u0026rsquo;s great. highly reccomend\u0026rdquo;\nblah\nthis sucks.\nFollow this formula:\n before after what they\u0026rsquo;d tell someone  Before I brought this, I was a fat loser who struggled to have fun.\nThat\u0026rsquo;s when I tried product X. Within hours, my entire life changed. I could have fun. And other people wanted to have fun with me.\nif you\u0026rsquo;ve been frustrated like I have, I can\u0026rsquo;t reccomend product X enough.\nMake them say yes Create a set of questions which makes the customer nodding and saying yes.\nAre you depressed?\nDo you feel like you\u0026rsquo;re at a dead end?\nBut you\u0026rsquo;re a hard worker and very intelligent?\nWhen you make the say yes, they\u0026rsquo;re more likely to buy your product\nPeople will do anything for those that encourage their dreams and justifies their failures\nCustomers first, products second The sure fire way to make more money isn\u0026rsquo;t to release new products. It\u0026rsquo;s to focus on your customers. Stregthen the relationship with your current customers.\n\u0026ldquo;If you want to make more money, don\u0026rsquo;t focus on the product you\u0026rsquo;re selling. Focus on the people you\u0026rsquo;re selling to.\u0026rdquo;\nCopy tip: center the success of your customers wherever you can. Instead of: \u0026ldquo;$10 in sales\u0026rdquo; Say: \u0026ldquo;you\u0026rsquo;ve earned $10.\u0026rdquo;\nHow to lie To make a sentence more beleivable:\n Use odd numbers Maximise the contrast between the sentence and the background. Bright blue or bright red are more likely to be beleived. Do not use complex language  Colour  Something that\u0026rsquo;s been working recently is adding the color red to my creatives. Whether it\u0026rsquo;s the color of the background or the text in the creative I\u0026rsquo;ve seen this increase the CTR and decrease the CPC consistently for my dropshipping products. Highly recommend testing it out!  Don\u0026rsquo;t use the word \u0026lsquo;cheap\u0026rsquo; Don\u0026rsquo;t ever, ever, ever, ever, ever use the word ¬´cheap¬ª next to your offers. Better ways to convey this idea: * Cost-effective * Competitive pricing * On sale for $37 * Instead of paying $1000, pay $597 * Low-cost * Small investment of \u0026hellip;\nLead Magnets The best lead magnets will solve a problem for your audience.\nOutbrain discovered that negative words in headlines like ‚Äúnever‚Äù and ‚Äúworst‚Äù outperform positive words, like ‚Äúalways‚Äù and ‚Äúbest‚Äù‚Ä¶ by 63%.\nReplace ‚ÄúBuy‚Äù or ‚ÄúSign up‚Äù with Benefit-Oriented CTAs\nMake Your Headlines SUPER Specific\n/headi\nPre number 1 on Google (published your post, now what?)   Make sure the form used in the blogpost is in an automation in ConvertKit! (if you\u0026rsquo;re reading this and you\u0026rsquo;re thinking \u0026lsquo;brandon this is in this post 6 times already\u0026rsquo; damn right it is i\u0026rsquo;m a doofus and i ALWAYS forget to do my email stuff properly lol)  Make sure convertkit is set up. For convertkit you need to add the content upgrade, add the form to automations (rule), properly tag the form, rewrite the html code to not include H1 tags too ALSO USE UTM PARAMS!!!\n Read the whole thing again, look for formatting issues Internal links and external links all work Put in more links if needed submit to bing and google search console (webmaster) Simply *Goto your webmaster account *Add new URL in inspection tool *You\u0026rsquo;ll get the status of indexation for that URL, If it already in google index there will green checkmark, if it\u0026rsquo;s not you\u0026rsquo;ll get a button like \u0026ldquo;request indexing\u0026rdquo; *Click request indexing and wait. Post on social media Share on reddit / hacker news. When posting on reddit ,post to the right subreddits and customise the title for each subreddit. Use the app laterForReddit to find out the best times to post to these subreddits ( https://laterforreddit.com/ ). Send an email campaign https://backlinko.com/email-outreach-study Share on niche group reply to comments Forums / Slack Repost to Medium Repost to dev.to Post on Twitter (twice the first day it\u0026rsquo;s released, once the next day, once 3 days after. space it out) Post to instagram Direct message friends who may be interested Google advertising your blog posts is a thing, and it works ( https://growthbadger.com/six-month-progress-update/ ) Email newsletters that send you a lot of traffic!  Post here  HackerNews Lobste.rs Twitter (#devstory, #python) Slack https://www.discoverdev.io/ https://morningcupofcoding.com/ https://t.me/s/thedevs/1522?q=%23article Dev.to https://twitter.com/sangkonhan https://importpython.com/newsletter/ https://pycoders.com/submissions r/compsci, r/python . r/learnpython https://freepo.st Mastodon https://news.python.sc/ https://www.meneame.net Indiehacker https://slashdot.org/submission  \u0026ldquo;Hey [Site owner], I just stumbled upon your [roundup name] this afternoon, good stuff!\nI\u0026rsquo;m just reaching out because I recently published a [content description] that might be a good fit: [URL]\nKeep up the awesome work!\nCheers, Brandon\u0026rdquo;\n List of places to get easy backlinks to your blog (SEO) Is your site brand new? Add your URL to these sites to get some easy backlinks. Your SEO will improve. This is called \u0026ldquo;backlinks from web 2.0 websites\u0026rdquo;. web 2.0 is a website you can create content on.\n  Facebook Twitter amazon (product pages) moonfruit about.me buzzfeed.com imgur.com sites.google.com answers.yahoo.com Quora tribalpages.com dailymotion.com Medium Instrucables tumblr.com reddit dev.to Your friends websites 10 Words:¬†https://app.10words.io/ digg:¬†http://digg.com/submit Tech Crunch:¬†https://techcrunch.com/pages/contact-us Boing Boing:¬†https://boingboing.net/sub Venture Beat:¬†https://venturebeat.com/contact crunchbase:¬†https://www.crunchbase.com Hacker News:¬†https://news.ycombinator.com Beta List:¬†https://betalist.com/submit Geek Wire:¬†https://www.geekwire.com/startup-list betafy:¬†https://www.betafy.co/easysignup/startup Spring Wise:¬†https://www.springwise.com/contact AngelList:¬†https://angel.co/join Launch Lister:¬†https://launchlister.com/submit-startup Product Hunt:¬†https://www.producthunt.com AlternativeTo:¬†https://alternativeto.net killerstartups:¬†http://www.killerstartups.com/submit-startup gust:¬†https://gust.com F6S:¬†https://www.f6s.com vator:¬†https://vator.tv Inc 42:¬†https://inc42.com/startup-submission Capterra:¬†https://www.capterra.com/vendors/sign-up Designer News:¬†https://www.designernews.co iamwire:¬†http://www.iamwire.com/startups/user/register?uType=Entrepreneur Collaborizm:¬†https://www.collaborizm.com Land-Book:¬†https://land-book.com/guidelines Git + Hustle:¬†http://www.githustle.com/developer Get Worm:¬†https://getworm.com/submit-startup paggu:¬†https://www.paggu.com/submit-your-startup Maker Updates:¬†https://www.makerupdates.com/ stackshare:¬†https://stackshare.io Snap Munk:¬†https://www.snapmunk.com/submit-your-startup Startup Stash:¬†https://startupstash.com/add-listing Tech Faster:¬†http://techfaster.com/submit-your-company Startup Beat:¬†https://startupbeat.com/startup-beat-featured-startup-pitch-guidelines The Startup Pitch:¬†https://thestartuppitch.com/post-a-pitch Startup Ranking:¬†https://www.startupranking.com Launching Next:¬†https://www.launchingnext.com/submit/ Tech Pluto:¬†https://www.techpluto.com/submit-a-startup/ Netted:¬†https://www.netted.net/contact-us/ Startup88:¬†https://startup88.com Startup Dope:¬†http://startupdope.com/submit-news/ ProgrammableWeb:¬†https://www.programmableweb.com/news/how-to-pitch-programmableweb-covering-your-news/2016/11/18 Crazy About Startups:¬†https://www.crazyaboutstartups.com/share-your-startup-2/ Startup Buffer:¬†https://startupbuffer.com/site/submit Next Big Product:¬†http://nextbigproduct.net/product-submission Startup Inspire:¬†https://www.startupinspire.com/submit App Rater:¬†https://apprater.net/add/ Publicity X:¬†https://www.publicityx.com/startups/new All Startups:¬†http://www.allstartups.info/Startups/Submit Launched:¬†https://launched.io/SubmitStartup The Museum of Modern Betas:¬†http://momb.socio-kybernetics.net/about Beta Bound:¬†https://www.betabound.com/announce/ Beta Page:¬†https://betapage.co/submit-startup Apps 400:¬†https://apps400.com/submit-your-application-for-review State of Tech:¬†https://stateoftech.net/advertise/?submit-an-app-for-review Apps Mirror:¬†https://appsmirror.com/submit-your-app-for-review Apps Listo:¬†https://appslisto.com/submit-your-app/ Appvita:¬†https://www.appvita.com/ Apps Thunder:¬†https://appsthunder.com/submit-your-app/ Postscapes:¬†https://www.postscapes.com/get-listed/ SaaS Genius:¬†http://www.saasgenius.com/free-listing CrozDesk:¬†https://vendor.crozdesk.com/user/signup   Reviving dead posts Dead posts as in ones that had a lot of popularity and died, or ones that had a lot of potential but didn\u0026rsquo;t quite hit the mark.\n  There are 3 main steps to reviving dead content:   Identify the content Improve and update the content Republish your post   Finding content that can be improved  Go to Google Search Console Analytics and look at Position, Clicks and impressions. Content with high impression but low positions can be improved upon.\nThings you can improve in dead content  Update images / screenshots Improve the posts structure Change up case studies / examples Address common reader questions. If they comment with questions, answer them in the post. Answer the public. Do more story telling, improve the stories. Add more content, bonus steps Improve your english / grammar The time between originally writing the post and now is enough time for you to find more of your voice, for you to learn more. Use this new knowledge to improve the blogpost.  Relaunching  Change the published date to today Share it as if it were a brand new piece of content Any backlinks to your old content? Let them know it\u0026rsquo;s been updated.   Tests Here are some tests I\u0026rsquo;ve run. Mostly email, but some blog post things too. These are all A/B tested btw. Converttkit suppots it natively. It\u0026rsquo;s really hard for me to A/B test blog posts.\n Email headlines with more emoji get higher opens / higher CTR (click through rate) Content upgrades increase email signups exponentially. If the content says it takes 24 minutes to read it, no one has that time. Offer a PDF of the post. People will sign up just to get the conveinance of reading it on a PDF Starting my emails with \u0026ldquo;New blog post\u0026rdquo; in the subject get exponentially higher CTR / opens email subjects that have the blog post title in them have higher opens (CTR didn\u0026rsquo;t increase so much) Emails that have discounts / offers have higher CTR Writing \u0026ldquo;Click here to read the blog post\u0026rdquo; instead of \u0026ldquo;click here\u0026rdquo; have higher CTR Visual embeddings of email signups has higher CTR and sign ups. An image / in line form for singups is better than a hyperlink with some text. Emails sent from a personal account have higher CTR than emails sent from a generic company account Plaintext emails get higher open rates and more engagement than html emails Taking your most popular blog posts and relaunching them has a higher ROI because you do little work (as the blog is already there) but improving it gives an exponential rise in views Social media posts which directly help the user get more engagement. So for example, code tips / hints So I have 2 links leading to the same landing page. One says \u0026ldquo;subscribe\u0026rdquo; and one says \u0026ldquo;Become a better dev\u0026rdquo;. Results: \u0026ldquo;Become a better dev\u0026rdquo; got 400% more views than \u0026ldquo;subscribe\u0026rdquo;. Probably because \u0026ldquo;become a better dev\u0026rdquo; provides more value than just \u0026ldquo;subscribe\u0026rdquo; contents of email in subject line for my newsletter weekly news roundup generates more CTR (40% more) and more reads (about 10% more) than no contents in subject line Testing: Instagram lighter posts vs darker posts. My growth rate is 1.14% at the moment. I\u0026rsquo;ve posted one recent light coloured image. That got 7.5% engagement (no editing). An edited dark coloured imaghe got 6.8% engagement. Lots of reposting accounts only repost light coloured things. Testing: Landing page which is skimmable vs non skimmable  \r\r\rBy skimmable, I mean theres headings. You can just skim through it. Although this landing page was more popular, it didn\u0026rsquo;t convert at all.\n Clear CTAs in Instagram captions get more engagement. \u0026ldquo;What are you working on today?\u0026rdquo; got less engagement than \u0026ldquo;Comment below what you\u0026rsquo;re working on today\u0026rdquo; TESTING larger inline email forms with more benefits:  \r\r\rAtm my signup rate is 2% for all blogposts on my forms (average)\n TESTING I have a sneaky suspicion that for very long blog posts table of contents will increaes views / email signups   Cold emailing people  Reference mutual friends and tell the other person \u0026ldquo;they suggessted I ask you for coffee\u0026rdquo; Paraphrase and make it obvious in the title. UoL Brandon will be in NYC next week - coffee? List things you have in common. \u0026ldquo;We\u0026rsquo;re both interestyed in tech\u0026rdquo; Offer them something, but don\u0026rsquo;t make it too obvious what it is. \u0026ldquo;I\u0026rsquo;m working on a persuasive technology which might be useful for your company\u0026rdquo; Give the date specifically, but also flexibe. \u0026ldquo;‚ÄúHow does next Thursday, 4/20 or Friday, 4/21 work? I\u0026rsquo;m free all day, especially the afternoon, and I can meet whenever is convenient for you.‚Äù\u0026rdquo;   Newsletter  My newsletter is a weekly roundup of future technology and news. Sometimes there won\u0026rsquo;t be any good news to report on. So I\u0026rsquo;ve created \u0026lsquo;specials\u0026rsquo; for those dry weeks. Each special focuses on an area (such as agriculture). This helps me post every week while being able to survive dry news weeks. Cal Newport says \u0026ldquo;write longer emails\u0026rdquo;: http://www.calnewport.com/blog/2016/04/19/write-longer-emails/  Getting signups Content upgrades work!!! So for my emails, I provide a PDF of the blog post + some extra stuff that isn\u0026rsquo;t in the blogpost. Most of my blogposts are around 8k words. Literally no one wants to sit down and read an 8k word blogpost! So they choose to sign up to my email list and get the PDF.\n Popups  Popups work! But I have a few rules:\n No popups as soon as they load the webpage. This is annoying! No full screen popups. Yeah, that sucks. Don\u0026rsquo;t do it. Popups can\u0026rsquo;t cover content. Popup has to look nice / work well on Mobile!  Customise your pages! When you sign up to my email, you\u0026rsquo;ll get a custom page showing you what to do next: confirm your subscription!\n\r\r\rHere\u0026rsquo;s some more of my copy that you can copy:\n\r\r\r\r\r\rCustomise your subscribe buttons!!!\n Grammar  Form the possessive singular of nouns by adding \u0026lsquo;s  Charles\u0026rsquo;s friend\nBurns\u0026rsquo;s poems\n Oxford comma. \u0026ldquo;Red, white, and blue\u0026rdquo;\n  Enclose parathetic expressions between commas. The best way to see a country, unless you are pressed for time, is to travel on foot.\n  Do not join independent clauses with a comma\n  If two or more clauses gramattically complete and not joined by a conjunction are to form a single compound sentence, the proper mark of puncuation is a semicolon.\nMary Shelley\u0026rsquo;s works are enteraining; they are full of engaging ideas.\nIf the second clause is preceeded by an adverb, such as accordingly, besides, then, therefore, the semicolon is still required.\n Do not break sentences into two. Do not use periods for commas.\n  One paragraph to each topic.\n  Use the active voice. When a sentence is made stronger (via active voice) it usually becomes shorter. Thus, brevity is a by-product of vigor.\n  Delete \u0026ldquo;would, should, could, may, might, and can\u0026rdquo;\n  Omit needless words. Vigiros writing is concise. A sentence should contain no unneccesary words.\n   Advertising (sorta copywriting) People don\u0026rsquo;t give a shit about your prducts. They don\u0026rsquo;t care how many staff yoy have. People care most about themselves. They care about what products will do for them, how they\u0026rsquo;ll make their lives better, more fufilled.\nHuman beings are biologically programmed with the following 8 desires:\n Survival, enjoyment of lfie, life extension Enjoyment of food and beverages Freedom from fear, pain, and danger Sexual companionship Comfortable living conditions To be superior, winning, keeping up with the Joneses Care and protection of loved ones Social approval  The 2 strongest appeals are sex and self improvement.\n\u0026ldquo;People buy because of emotion and justify with logic. Force an emotional response by touching on a basic want or need\u0026rdquo;\nThe 9 secondary human wants:\n To be informed Curiosity Cleanliness of body and surroundings Efficieny Conveniance Dependability / quality Expression of beauty and style Economy / profit Bargains  These secondary wants are strong but they don\u0026rsquo;t even come close to the primal wants.\nThe simple formula for desire and the result it sets into motion:\nTension ‚Üí Desire ‚Üí Action to satisfy the desire\nNot only is it pleasant for us to satisfy our eight primary desires, but it\u0026rsquo;s also pleasant for us to read about how others have satisfied them.\nThe first use of any product is inside the consumers\u0026rsquo; mind. Imagining the use of something that appeals to you increases your desire for it.\nFear sells Fact: your home is a cesspool filled with hundreds of strains of evil bacteria waiting to infect your innocent child as he crawls along the kitchen floor, sticking plastic toy blocks into his mouth. Don\u0026rsquo;t laugh. Did you know that one single bacteria cell expands into 8 million cells in less than 24 hours? And that invisible microbes of all kinds can cause everything from athlete\u0026rsquo;s foot to diarrhea, the common cold to the flu, menningistis, strep throat, tuberculosis, and a lot more.\nFear causes stress. and stress causes the desire to do something. Make this stress go away. When you read that story, you wanted some tool to protect your child.\nThe fear appeal is most effective when:\n It scares the hell out of people It offers a specific reccomendation for overcoming the fear aroused threat The reccomended action is perceived as effective for reducing the threat The message repicent believes that he or she can perform the reccomended action  If you create too much fear, you could scare someone into inaction. Fear can paralyse people. The only way to make sure it will motivate is to be sure that your prospect believes they can change their situation.\nYour advert must contain specific, believable reccomendations for reducing the threat that are both credible and achieveable.\nLet\u0026rsquo;s say you own a karate school where you teach self defence to people. You need the other person to understand that they can learn to protect themselves from knife fights, they, themselves, personally.\nThe fear appeal works best if the fears targetted are specific and widely recgonised.\nYour goal is not to creat new fears, but to tap into existing fears.\nEgo Morphing \u0026ldquo;By purschasing the righ stuff, we [the consumer[ enhance our own egos and rationalise our inadequancies\u0026rdquo;\nBy taking a product you can match it to an adueicne such that they feel their ego will be improved by it\nYour job is to cause consumers to become so closely assiocated with the product\u0026rsquo;s image that it almost becomes a part of their identity.\n\u0026ldquo;Ooooh look at all these hot girls climbing all over that guy wearing Levi jeans. I want those jeans\u0026rdquo;\nAppealing to people\u0026rsquo;s vanity and ego is most successful when it hones in on charecteristics that society considers being desierable, such as physical attractivness, intelligence, economic success, and sexual prowress.\nCredibility by osmosis Transfer is a stratergy that involves using symbols, images, ideas commonly assiocated with people, groups, institutions of authority or respect in order topersuade your prospect that your product or service is in some way accecptably endorsed.\nIf you can\u0026rsquo;t get a testament, you can achieve similar success by spotlighting readily recongnized symbols that carry the weight of the endorsement. For example, \u0026ldquo;my newsletter is read by people at NASA, SpaceX, Google, Microsoft\u0026rdquo;. You don\u0026rsquo;t have a singular full endorsement from the company, but you can prove that people from these companies do read your newslette\nYou can also use symbols of any guilds / groups. You could attach the logo of the National Guild of Hypnotists to letters, to make it seem mroe offiical and less sales.\nThe bandwagon effect Humans are social beings with a power psychological need to belong.\nAccording to Maslow\u0026rsquo;s hierarchy of needs, the need to belong is third olny to our physiological needs.\nThere are 3 types of groups:\n Aspirtional. Groups to which you\u0026rsquo;d like to belong Assiocative - groups that share your ideals and values Dissociative - groups that you do not want to belong to  The means end chain \u0026ldquo;Don\u0026rsquo;t buy my product for what it does for you today, but it for what it does for you tomorrow!\u0026rdquo;\nThe idea is that many consumers purschases do not satisfy what they need right now, but what they\u0026rsquo;ll need in the future.\nWhat\u0026rsquo;s the core benefit or service?\n\u0026ldquo;Join my email list\u0026rdquo;\nWhy?\n\u0026ldquo;Because you\u0026rsquo;ll get my emails weekly\u0026rdquo;\nok, but whats the benfit?\n\u0026ldquo;So you can learn more things and be like me\u0026rdquo;\nok, but what\u0026rsquo;s the benefit of that?\n\u0026ldquo;So you can become a good programmer\u0026rdquo; There we go!\nInstead of leading with the boring \u0026ldquo;join my thing lol\u0026rdquo; frontload the benefit / value\nThe transtheoretical model  Precontemplation - people in this stage are either ignorant of your product\u0026rsquo;s existance, or they\u0026rsquo;re unaware they need it Contemplation. Prospects in this stage are aware of your proeuct and have thought baout using it Preperation. Your prospect is thinking about buying from you, but needs information about your products benefits and advantages. Action. Success! Your prospect has arrived at the coveted action. Maintanence - they contineu to buy your rpoducts without giving it a second thought. its their product of choice  Make them prefer you for life This is used to reinforce a consuemrs existing attitude towards a product or service by presenting a weak argument that tricks the consumer into defending their position and therefore strengthing their argument.\n Warn of an impeding attack Make a weak attack Encourage a strong defence  One way to do this is to advertise your competitors critiscisms of the product and turn them to the advantage.\n\u0026ldquo;Our competitors tell you they use fresh mozzarella, but they don\u0026rsquo;t tell you they buy it in pre-shredded bags. At pauly\u0026rsquo;s pizza we hand shred mozzarella every morning\u0026rdquo;\nStatistics vs examples Statistics are cool and all, but only using statistics sucks. You should use examples, stories that have statistics built into them.\nTwo sided stories When you have 2 stories, your own and your components, it\u0026rsquo;s stronger persusasion than just your own (Allen, 1991)\nThe key is to present both sides and only advocate for one. Make your two sided story appear to the reader as fair and balanced, but in actual fact defend your position and attack the enemys position.\nYou can play takeaway. \u0026ldquo;If you\u0026rsquo;re not into persuading people and making ¬£100,000 a year, this book isn\u0026rsquo;t for you\u0026rdquo;\nTelling someone they can\u0026rsquo;t have something not only boosts your credibility, but if their true prospects it\u0026rsquo;ll add fire to their desire.\nEvidence To sell someone something, you need them to believe you. To make them believe you, you need to present facts.\nYour evidence should be clear and easy to grasp. People will not take time to figure out what you mean.\nSimple Write to the chimpanzee brain. Simple Directly. If your ad isn\u0026rsquo;t simple, people won\u0026rsquo;t read it.\nConsumers buy based on what the product will do for them, not what it does\nPut your biggest benefit in your headline Unless your headline sells your product, you have wasted 90 percent of your money\n","permalink":"https://polymath.cloud/blogging/","summary":"How to write a blog post Hi. This is the checklists I use whenever I post a blogpost. Enjoy :) Also, this is my checklist. It contains hints / things I\u0026rsquo;ll want to do. It\u0026rsquo;s customised to me. You might see a lot of SEO / Convertkit stuff here. Convertkit is my email program of choice. Here are some affiliate links if you want to use these tools. I\u0026rsquo;ll get some money if you use them at no extra cost to you.","title":"How to write a blog post"},{"content":"Set Theory If you\u0026rsquo;ve spent time on HackerRank or LeetCode, you might have noticed most of the optimal solutions use Set Theory. By reading this article, you will gain a deeper knowledge into set theory and how to use it to create optimal algorithms. Set Theory was invented (or found, depending on how you view maths) by George Cantor. It revolves around the idea of sets, as in collections of objects. Set theory is incredibly powerful and can be used to write some beautiful \u0026amp; elegant code.\nü§î What is a Set? A set is simply a set of objects. They don\u0026rsquo;t have to be the same type, or have any relation to one another. Sets are denoted with parenthesis ( ). With the separation of elements being a comma. Or sometimes { }. Sets follow 2 rules:\n Only unique items.  Sets can only contain unique items. It cannot contain the same item twice or more.\n The set is unordered.  There is no order or structure to a set. The first rule is quite useful. Say, for example we have a list of words from a book: To find all the unique words, we put the words into a set: The 2nd rule ties in nicely with the 1st rule. A set aims to replicate how we see things in our lives. Imagine we are on a road trip with Jahan, Olivia, and Ryan. Next year, we want to go on a field trip again. It doesn\u0026rsquo;t make much sense to invite Jahan, Olivia, Jahan, Ryan, Jahan. And it also doesn\u0026rsquo;t make sense to assign an \u0026ldquo;order\u0026rdquo; to them. They\u0026rsquo;re people, not elements in an array! There are other types of sets too. Such as a a multiset which allows non-unique elements but no order.\nü¶Å Cardinality The cardinality of a set is the length of the set. For the set: $$A = {1, 2, 3, 4, 5, 6}$$ The cardinality is $$|A| = 6$$\nüö¥‚Äç‚ôÄÔ∏è Equality of Sets 2 sets are equal when all the elements match. $$a = {1, 2, 3}$$ $$b = {3, 2, 1}$$ $$a == b$$ Remember, order doesn\u0026rsquo;t matter - so sets are equal despite being in the \u0026lsquo;wrong\u0026rsquo; order!\nüöá Infinite Sets Some sets are infinite. Such as the set containing all the natural numbers, or all the real numbers. We can express infinite sets using a little bit of maths. Heard of list comprehensions? It looks the same syntactically, but operates infinitely. The set of all even numbers is: $$A = {2n: n \\in \\mathbb{Z}}$$ Read this as \u0026ldquo;for each number, n, in the set of all integers, $\\mathbb{Z}$, multiply the number by 2\u0026rdquo;. Which will give us the set of all even numbers. In a list comprehension, it would look like: However, this won\u0026rsquo;t work as Python doesn\u0026rsquo;t allow infinite sets.\nüêà‚Äç‚¨õ The Empty Set The empty set is the set containing nothing at all. It is much like 0. It is nothing, and serves the purpose as a negated value. We don\u0026rsquo;t have 0 apples, we have no apples. The empty set serves the same purpose. We don\u0026rsquo;t have a set containing all the words, we have nothing. Its symbol is $\\varnothing$\nüåå The Universal Set The Universal Set $\\mathbb{U}$ is the set which contains all objects, including itself. If our universe contains only integers, 1, 2, 3, \u0026hellip;, then the universal set is the set of all integers.\nüè• Operations Just like with other data types, sets have operations! Let\u0026rsquo;s start with some operations you may already know.\n‚ùå Union The union is combining 2 sets together (think addition). The symbol for the union is $\\cup$. Let\u0026rsquo;s look at an example. $$A = {1, 2, 3}$$ $$B = {3, 4, 5}$$ $$B \\cup A = {1, 2, 3, 4, 5}$$ Notice how when we perform a union, we have two 3\u0026rsquo;s. Since sets only contain unique elements, we simply toss the extra 3 away. Also note, there is no order. So B $\\cup$ A does not result in (3, 4, 5\u0026hellip;) as the order doesn\u0026rsquo;t exist. We can even say B $\\cup$ A = {3, 5, 1, 4, 2}.What if we union an empty set with a non-empty set? Or an empty set with another empty set? $$\\varnothing \\cup {1, 2, 3} = {1, 2, 3}$$ $$\\varnothing \\cup \\varnothing = \\varnothing$$ When we get onto subsets and the likes we\u0026rsquo;ll learn to appreciate the empty set and this simplistic maths.\nü¶Ñ Intersection The intersection of a set is every item in set A that is also in set B. Think of it like the boolean operator AND. Its symbol is $\\cap$. $$A = {1, 2, 3}$$ $$B = {3, 4, 5}$$ $$A \\cap B = {3}$$ Let\u0026rsquo;s say we have a list of flights with passengers on board. And we have a list of the people that took my daughter (Taken reference). We can use the intersection operation to find the list of flights that contain the people who took my daughter. Because sets only contain unique elements, it is very fast to calculate this. However, creating the set itself may take time. But, if we do not know all the names of the people in the child trafficking ring we can build the set first and use the intersection to query it.\nüíç Belongs To We can create sets which belong to other sets. $1$ belongs to the set ${1, 2, 3}$. In notation this is: $$1 \\in {1, 2, 3}$$ We say that \u0026ldquo;1 is in the set {1, 2, 3}\u0026quot;. But don\u0026rsquo;t get caught out! $${1} \\in {1, 2, 3}$$ Is not true. We say the element is not in $\\notin$ the set. $${1} \\notin {1, 2, 3}$$ it would be true if: $${1} \\in {{1}, 2, 3}$$ This is a very, very useful feature. Let\u0026rsquo;s say we have the word \u0026ldquo;FLAG{\u0026rdquo; that we want to find in some text. We turn the text into a set, like so: Because sets do not contain unique items, this is rather fast. However, you have to take into account that to turn it into a set is expensive.\nüõ©Ô∏è Subset The symbol for subset is ${1} \\subset {1, 2}$. The empty set is a subset of all sets, but it is not an element of all sets. Fun fact, we can do: $$ \\mathbb{U} - \\varnothing$$ This equates to a new set, which contains all the elements of the set apart from the empty set. However, it is not the universal set - it\u0026rsquo;s a new set! The power in subsets, in my opinion, comes from the power set.\nüîã Power Set The Power set is the set of all subsets of a set, including the empty set and the set itself. For the set {2, 9} we have 4 subsets. The power set will be: $$\\frak{P} (\\mathbb{A}) = \\emptyset, {2}, {9}, {2, 9}$$ Note: For home use or exams we can denote using P(a). For websites where we want to impress people with our fancy use of the alphabet, use LaTeX. When building subsets, the element can either be included in the subset or not. This is binary. It\u0026rsquo;s either in it, or it isn\u0026rsquo;t. That leads us to the formula for calculating how large a powerset is. $$2^s$$ Where $s$ is the size of the set and 2 is because elements are either in the set or not. Let\u0026rsquo;s say we have a list of ingredients. It makes sense to use a set because the order doesn\u0026rsquo;t matter for a list of ingredients and we don\u0026rsquo;t want to have cabbage twice for some reason. Now, how many combinations of food can we make with this? $$2^5 = 32$$ The empty set doesn\u0026rsquo;t count here (unless we want to starve), so we can reduce this to 31.\nü•∫ Infographic Cheat Sheet for Set Theory I made this for you! Feel free to print and use it however you want. Personally, when I was studying for exams, the symbols section proved to be most useful!\nüêç Python Sets aren\u0026rsquo;t Real Sets In Python, sets remember insertion order. Because they remember insertion order, technically they can be sorted (although in Set Theory maths, sets cannot be sorted. I mean sorted as in insert the elements in a sorted manner). If we insert things into a set alphabetically, it is theoretically possible to make use of both Binary Search and the no repeating elements rule of sets. It takes longer to program this up-front, but it will be much faster if we do not know what we want to find in the text, and we have time to spare at the start of the program. We can always save the sorted set so the next time the program runs, it is faster. Why is this in the belongs to section? Well, sets can also store other sets. Let\u0026rsquo;s say we have a world leader who says a lot. But they often say \u0026ldquo;I\u0026rsquo;ve never said that before\u0026rdquo;. How we can work out if they have said it before? We can build a set of sets, where each subset is the exact quote the person said.\nüíª Sets in Programming Languages Are Often Sorted Not only do sets in most programming languages remember insertion order, but they are often automatically sorted. Take a look at this Python code: And that\u0026rsquo;s just the tip of the iceberg. Sets are implemented as hash maps in many programming languages. This means that we get O(1) lookup time. To perform 6 in x will take O(1) time. For more on Big O notation, check out my other article.\nüìñ Dictionary Checking We have a text such as: And we want to find out how many words in text appear in another list, text_dict. The quickest way to do this without using sets is to sort both lists, and then go through each one, one-at-a-time to count how many times an item in text appears in text_dict. In a real world example, we could be checking to see if a text is English or not by counting how many times the words in the text appear in the English dictionary. By using sets, we delete the repetitions in text_dict. It also automatically sorts the two sets, so it is much easier for us to search through them. Not to mention the O(1) lookup time. 3 birds with 1 stone! However, looping through both of them ourselves is unruly. We\u0026rsquo;d have to write a loop and keep track of it ourselves. Luckily, we can use set theories intersection function to do this for us.\nüëã Conclusion Set theory is gnarly, and incredibly useful in not just competitive programming but all kinds of programming. We\u0026rsquo;ve not only learnt the theory behind set theory, but also how programming languages such as Python have implemented it.\n","permalink":"https://polymath.cloud/sets/","summary":"Set Theory If you\u0026rsquo;ve spent time on HackerRank or LeetCode, you might have noticed most of the optimal solutions use Set Theory. By reading this article, you will gain a deeper knowledge into set theory and how to use it to create optimal algorithms. Set Theory was invented (or found, depending on how you view maths) by George Cantor. It revolves around the idea of sets, as in collections of objects.","title":"Set Theory for Programmers"},{"content":"Logic has been used for thousands of years, from philosophy to mathematics and now to artificial intelligence. Logic is concerned with the truth and falsity of statements. The logic we will be studying will be answering the question: ‚Äúwhen does a statement follow from a set of statements?‚Äù\nNote to the reader I have previously written about logic here and therefore this article will be relatively short when it comes to explaining everything about logic. If you want to understand logic, please read the article I have written on logic. This is just an expansion on what we have learned.\nPropositional logic Propositions can only be true or false.\nIntrepetations An intrepretation assigns to a propositional statement a truth value of True or False. True or False can be represented as 0 and 1 respectively.\nPropositional symbols There are about 500,000 ways to represent logic symbols so here are the most common ways\nNot Symbol in logic\n¬¨ or ! or ~ What does it do\nInverts what is ever inputted into it. Conjunction or and Symbol in logic\n^ or AND or , What it does\nTakes \u0026gt;1 inputs and if both inputs are true, outputs true. Disjunction, ‚Äúor‚Äù Symbol in Logic\nV, or, ‚ÄúOR‚Äù What it does\nTakes \u0026gt; 1 inputs, if any of the inputs are true than the output is true. Equivilance Symbol in Logic \u0026lt;=\u0026gt; or ‚â°\nSymbol in Electronics None, this is a concept not a gate.\nWhat it does A and B must take the same truth value\nTruth Table\nA B A \u0026lt;=\u0026gt; B 1 1 = 1 0 1 = 0 1 0 = 0 0 0 = 1\nImplication Symbol in Logic =\u0026gt; or ‚Äúif a then b‚Äù\nSymbol in Electronics None\nWhat it does If A is true then so is B https://www.dyclassroom.com/boolean-algebra/propositional-logic-truth-table Sorry for the change of pictures. Previously there was an error in this truth table.\nTruth under an interpretation Given an interpretation, I, we can compute the truth value of any formula P under I. That is, given a version of the formula we can computer the truth value.\nif I(P) = 1 then we say that P is true under interpretation I. if I(P) = 0 then we say that P is false under interpretation I.\nLogical Puzzles This section may help the reader in understanding logical puzzles.\nAn island has two kinds of inhabitants, knights, who always tell the truth, and knaves, who always lie. You go to the island and meet A and B. A says that ‚ÄúB is a knight‚Äù B says that ‚ÄúThe two of us are opposite types‚Äù\nWhat are A and B?\nSo we have 2 options, p: ‚ÄúA is a knight‚Äù; and q: ‚ÄúB is a knight‚Äù\nWe have 2 options because one of them needs to be a knight. Either both A and B are knaves, which makes B a knight as it told a truth so it lied or A is a knight and is telling the truth that B is a knight.\nOptions for person A p is true, that is the statement ‚ÄúA is a knight‚Äù is true. P =\u0026gt; Q p is false, that is the statement ‚ÄúA is a knight‚Äù is false. ¬¨P =\u0026gt; ¬¨Q\nOptions for person B q is true then q =\u0026gt; ¬¨p q is false then ¬¨q =\u0026gt; ¬¨p\nNow we simply need to construct a truth table for these values\np q ¬¨p ¬¨q p =\u0026gt; q ¬¨p =\u0026gt; ¬¨q q =\u0026gt; ¬¨p ¬¨q =\u0026gt; ¬¨p 0 0 1 1 1 1 1 1 = 1\nThen we stop here because we‚Äôve found an interpretation under which they are both knaves which is satisfiable. Semantic Conseqeuence Note: The lecture slides for this weren‚Äôt helpful and there is no audio for this. Please message me what this is.\nDigital Logic Circuits Modern computers use logic gates to operate. You should have an understanding of logic gates from the above.\nGeneral house keeping rules of making circuits Never combine two input wires\nIf there are 2 separate inputs, A and B, you cannot combine them into one single wire.\nA single input wire can be split partway and used as input for two seperate gates\nIf you have a single input, A, it can be split into 2 separate wires.\nAn output wire can be used as input\nThe output of a wire can be used as an input.\nNo output of a gate can eventually feed back into that gate\nNo gates can loop on themselves.\nConstructing logic circuits from tables Given a table, such as the one below, how would we construct a logic circuit for it? First, work out where it is equal to 1 (true) and then from there formalise it in mathematical logic, from the mathematical logic we can deduce the circuit for it. Sometimes it is easier to guess directly what logic gates are used.\nCircuit equivalence Two circuits are equivalent if they produce the same output given the same input\nFormula equivalence 2 formula are equivalent if they hold the same truth value under every possible interpretation.\nOn Logical Equivalence The symbol ‚Äú‚â°‚Äù is used to show an equivalence relation.\nFacts\n‚â° is reflexive ‚â° is transitive ‚â° is symmetric\nSimplfying propositonal formulae There are some rules we can use to simplfy propositional formulae.\nCommunicative Law\nAB = BA, A + B = B + A\nExamples: 6 * 2 = 12 and 2 * 6 = 12 3 + 4 = 7 and 4 + 3 = 7\nAssiocative Law\na(bc) = ab(c) = abc\nExamples: (2 + 4) + 5 = 6 + 5 = 11 2 + (4 + 5) = 2 + 9 = 11\nDistributive Law\na(b+c) = ab + ac\nExample: 3 √ó (2 + 4) = 3 * 6 = 18 3 √ó 2 + 3 √ó 4 = 6 + 12 = 18\nDemorgans‚Äô Laws\n(A ‚à™ B)‚Äô = (A)‚Äô ‚à© (B)‚Äô The first law states that the complement of the union of two sets is the intersection of the complements.\n(A ‚à© B)‚Äô = (A)‚Äô ‚à™ (B)‚Äô The second law states that the complement of the intersection of two sets is the union of the complements.\nFor a good blog post on understanding these laws, click (here)[https://brilliant.org/wiki/de-morgans-laws/]\nMiscelanous rules\nNot Not A = A A or A and B = A A or not A and B = A and B (A or B) (A or C) = A or B and C\nWhat to do next From this point, turn the circuit into a logical expression and simplfy it using the rules above.\nIf this is confusing still, maybe this video will help: https://www.youtube.com/watch?v=59BbncMjL8I\nBoolean Functions Arity The arity of a boolean function is how many arguments the function takes\nBoolean function representation\nAny boolean can be represented with ^, v, or ¬¨.\nLogic Gates Extended In this section we will explore logic gates some more, by looking at the family of not / exclusive gates.\nXOR Symbol in Logic\nNone What it does\nAn XOR gate takes \u0026gt;1 inputs and performs exclusive disjunction. The output of an XOR gate is only true if one of its inputs is different to the other input. NAND Symbol in Logic\nNone What it does\nA NAND gate takes \u0026gt;1 inputs and the output is the opposite of an AND gate. The output is true when one or more, but not all, of its inputs are false. Universality of XOR and NAND All boolean functions can be created using either XOR or NAND gates.\nBinary Numbering System Binary is a numbering system that consists of 0 and 1s. Alternatively, you could memorise the powers of 2. 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024‚Ä¶ And then to convert a number into binary, let‚Äôs say 6, you build that up from the different powers. So 6 is 011 and then reverse that, 110\nBinary Addition\nSomethings you need to know in binary 0 + 0 = 0 1 + 0 = 1 0 + 1 = 1 1 + 1 = 10\nOnce you know these basic rules, you can add any numbers together in binary the same way you can add normal numbers. Try this exercise\n011\nhalf-adder\nThe half adder is a type of binary adder in electronics that adds together two single binary digits and provides the output plus a carry value. Note: Boris‚Äô half-adder is overcomplicated, you can achieve the same by replacing 3 of his logic gates with a single XOR gate.\nTruth Table Full-adder\nThe full adder allows you to carry-in as well as carry-out. Watch this video for a better understanding\nhttps://www.youtube.com/watch?v=VPw9vPN-3ac\nBlack Box Notation\nWe can represent the full adder as a black box, we don‚Äôt need to know what happens inside of it, only the inputs and outputs. 4 bit adder\nUsing blackbox notation, we can create 4-bit adder\nhttp://www.electronics-tutorials.ws/combination/comb_7.html\nComputer Representation of negative integers\nA fixed number of bits is used to represent integers: 8, 16, 32 or 64 bits. An unsigned integer can take up all the space available.\nYou can ‚Äúsign‚Äù a binary number to indicate whether it is negative or not. For example, the number 10 can be represented in 8-bit as 00001010 and -10 can be represented in 8-bit as 10001010\nBut this sometimes causes a problem, for example, 10000000 represents -0. Whaaatt?? Negative 0? Yes! That‚Äôs right, and that‚Äôs exactly the problem this causes.\nThis is where 2‚Äôs complement comes into play.\nTwos complement\nConverting a decimal to twos complement\n  Convert the number to binary, ignoring the sign for now. So 5 is 0101 and -5 is 0101.\n  If the number is a positive number then you are done, no need to go any further. Otherwise‚Ä¶\n  If the number is negative then:\n   Find the complement (EG convert all 0‚Äôs to 1‚Äôs and all 1‚Äôs to 0‚Äôs) Add 1 to the complement 1101 1100 with a carry of 1 that goes all the way to the left, it can be ignored.   Originally published at brandonskerritt.github.io on November 25, 2017.\n","permalink":"https://polymath.cloud/mathematical-logic/","summary":"Logic has been used for thousands of years, from philosophy to mathematics and now to artificial intelligence. Logic is concerned with the truth and falsity of statements. The logic we will be studying will be answering the question: ‚Äúwhen does a statement follow from a set of statements?‚Äù\nNote to the reader I have previously written about logic here and therefore this article will be relatively short when it comes to explaining everything about logic.","title":"Mathematical Logic"},{"content":" ‚ÄúProbability Theory Should Be Thrown Under A Bus‚Äù‚Ää‚Äî‚ÄäArtifical Intelligence Expert, Carlos E. Perez.\n We start off by studying Probability Theory and then delve into statistics.\nProbability and Statistics are used all the time in Computer Science. Machine learning? It‚Äôs probability. Data science? It‚Äôs statistics.\nHigh Level Probability Probability provides a way of summarising the uncertainty that comes from our laziness and ignorance. In other words, probability finds out the likeliness that something will happen.\nDiscrete Probability Discrete probability is a formalisation of probability theory that describes probability for usage in computers from discrete mathematics.\nWhen solving problems with discrete probability, we start with using probability spaces. A probability space is the pairing (S, P) where:\n S is the sample space of all elementary events X ‚àà S. Members of S are called outcomes of the experiment. P is the probability distribution, that is, assigning a real number P(x) to every elementary event X ‚àà S such that it‚Äôs probability is between 0 and 1 and ‚àëP(x) = 1  For point 2, P(x) is read as ‚Äúthe probability of X‚Äù. The probability must always be between 0 and 1, or often represented as 0% and 100%.\nExample Imagine flipping a coin. The probability space is (S, P).The outcome S is S = {H, T} where S can either be Heads or Tails.Therefore the probability isP(H) = P(T) = 1/2The probability for heads is the same as the probability for tails which is the same as a half. In other words, if you flip a coin there is an even chance of it becoming head-side up or tail-side up.\nA probability distribution is considered uniform if every outcome is equally as likely.\nAn Introduction to Solving Probability Problems Many many people including university professors and PhD students cannot solve probability problems. As discussed later in this article the Monty Hall problem is a famous problem and good example of this.\n Suppose you‚Äôre on a game show, and you‚Äôre given the choice of three doors: Behind one door is a car; behind the others, goats. You pick a door, say ‚Ññ1, and the host, who knows what‚Äôs behind the doors, opens another door, say ‚Ññ3, which has a goat. He then says to you, ‚ÄúDo you want to pick door ‚Ññ2?‚Äù Is it to your advantage to switch your choice?\n This question was sent into Voe Savant who at the time had the highest IQ in the world. Voe Savant replied that there is a 2/3rd chance of winning the car if you switch and 1/3rd if you don‚Äôt switch.\nThousands of people argued over the Monty Hall problem and many university professors of maths said that math illiteracy was rampant in America because the Monty Hall problem solution suggested was wrong.\nThis problem appeared in every maths class the following week and thousands of readers, many who have PhDs in maths wrote in to explain that Savant was wrong. Even Paul Erd≈ës, one of the worlds most famous mathematicians, said that Savant was wrong.\nUnfortunately for them, Savant was right. This is a simple probability problem that if defined formally can be explained. Many of the mathematicians used their intuition to solve this problem and not follow the steps in solving a probability problem that will be outlined below.\nThere are a few steps you need to take before you solve a probability problem to prove you fully understand the problem.\nSample Space The sample space is the set which contains all possible outcomes.\nSo given a coin, the sample space is {heads, tails} as the coin can only land on heads or tails.\nOutcome An outcome consists of all the information of an experiment after the experiment has been performed. When you flip a coin and it lands on heads, the outcome is {heads}.\nProbability Space The probability space is the sample space but every possible outcome has a probability applied to it. With the coin flip the probability space is {(Heads, 0.5), (Tails, 0.5)}.\nThe total probability of all probabilities in the probability space must be equal to 1. No single probability can be less than 0 or more than 1. Many high-achieving students tell me that they try to visualise what they are dealing with as much as possible.\nExample Let‚Äôs suppose we roll a 6-sided dice and we want to work out the probability we get a 4.\n Count the number of possible events. There are 6 sides to the dice. So there are 6 possible events Decide which event you are examining for probability. The problem let‚Äôs us know we are trying to roll a four. Count the number of chances that heads can occur out of the possible events. There is only one side of the die that has 4 dots, so there is only 1 chance to roll a four out of 6 total chances. Write the number of chances heads could occur over the number of possible events in a fraction. (1/6)  Although this is a simple problem to solve,it illustrates the important steps to take when solving harder probability problems.\nEvents Events are often overlooked in probability theory and are not talked about much, so I took it upon myself to expand on what an event is and why they‚Äôre important in this section.\nAn event is a set of outcomes of an experiment in probability. In Bayesian Probability an event is defined as describing the next possible state space using knowledge from the current state.\nAn event is often denoted with the character ‚Äòe‚Äô. Such as the probability being P(e) of an event. Events are a lot more important in probability than most people make them out to be.\nAn event can be the result of rolling a dice such as a ‚Äú5‚Äù or getting a Tail when flipping a coin.\nEvents can be:\n Independent‚Ää‚Äî‚ÄäEach event is not effected by previous or future events. Dependent‚Ää‚Äî‚ÄäAn event is affected by other events Mutually Exclusive‚Ää‚Äî‚ÄäEvents can‚Äôt happen at the same time  Why are Events Important? Well, events allow us to do some pretty amazing things with probability. Take for instance, the Monty Hall Problem. Attempt the question below: One of the doors above contains a fancy sports car, the other 2 doors contain goats. Pick any door you like, go on!\nOkay, let‚Äôs say you picked #1, the game show host will open a door that contains a goat, so let‚Äôs say we open door number 3 and it contains a goat. So you know that door 1 is your pick, door 3 is a goat and door 2 is untouched. Note: It doesn‚Äôt matter what door you originally picked, what matters is that you pick a door and the gameshow host opens a door with a goat in it. The game show then asks: ‚ÄúAre you sure door number 1 is right? Do you want to switch?‚Äù\nWhat do you do?\nWell, probability states that we should pick door number 2, as in you would switch. Why? well, door number 2 has a 2/3 chance or 77% chance of containing the car and door number 1 (your original pick) has a 33% chance of containing a car.\nWhaaaaattt??\nThis is a famous probability problem called the Monty Hall Problem and it displays how events can affect probabilities. For an explanation of this, watch this Numberphile video below:\nThe Probability of the Complement of an Event The complement of an event is all the other outcomes of an event.\nFor example, if the event is Tails, the complement is Heads. If the event is {Monday, Tuesday}, the complement is {Wednesday, Thursday, Friday, Saturday, Sunday}.\nIf you know the probability of p(x) you can find the compliment by doing 1‚Ää‚Äî‚ÄäP(x). Since all probabillities equal 100%, we can express this as 1.\nWhy is the Complement Useful? Sometimes it is easier to work out the complement first before the actual probability. For example:\nWork out the probability that when 2 die are thrown that the two scores are different  A different score is like getting a 2 and 3, or 1 and 6. The set of all possible different scores is quite large, but the complement of all possible different scores (scores are the same) is quite low. In fact, it is:\n{ (1, 1), (2, 2), (3,3), (4,4), (5,5), (6,6) }\nThe total number of different combinations is 6*6 which is 36, so the probability of getting a score that is the same is 6/36 or 1/6. Now we can take 1/6 away from 1 (think of 1 as the universal set) which equates to 5/6.\nThe Union of Two Events (Inlcusion-Exclusion Principle) This requries you to know a little about set theory, so click here to learn more.\nIf two events are mutually exlusive (they cannot occur at the same time) then the probability of them happening at the same time is 0.\nIf two events are not mutually exclusive, then the probability of the union of the two events is the probability of both events added together. The reason we take away the intersection of A and B is because P(A) + P(B) contains all that it is in A or B but because of the way union works, there will be an intersection which will make 2 A‚Äôs and 2 B‚Äôs so we need to take away the intersection to get the probability of each events.\nIn other words, A contains elements that are in B and B contains elements that are in A. By adding: Union of Three Disjoint Events Suppose that I were to roll a fair dice 3 times.S is the set of sequences of events over length three such that { 1..6)¬≥}P(x) = 1/666 = 1/216 for all x ‚àà SWhat is the probability that we roll at least one 6?So because we throw the dice 3 times, let E1 be the probability that the dice roll is a 6, E2 = P(6), E3 = P(6)We would like to work outP(E1‚à™E2‚à™E3)\nRemember, the union of probabilities is P(A) + P(B)‚Ää‚Äî‚ÄäIntersection of A and B. We want the union of A, b and C which also includes the intersection in the middle. We take away the intersections of A B, A C, B C and add the intersection of all 3 to get the middle part. So this is just: You might have noticed that the intersection is 6/216. This may seem confusing because we didn‚Äôt hand-define a set for this. Worry not: The formula for intersection is: Example Question Given 4 coins, what is the probability that at least 3 of them come up tails?  The event that at least 3 coins come up tails is the union of five disjoint events, that all coins come up tails (1 disjoint event) and that 4 specified coins (4 disjoint events) come up heads. This may sound confusing, so I‚Äôll explain it visually. Feel free to skip the next paragraph if you‚Äôre not confused.\nA disjoint event means that events cannot happen at the same time. The first disjoint event is ‚Äúwhat if all coins come up tails?‚Äù That is that the 5 coins {T, T, T, T, T}. The other 4 events are what if one specified coin comes up heads? So the first disjoint event is {H, T, T, T}, the second is {T, H, T, T} etc. Since we need at least 3 coins to be tails, {H, H, T, T} isn‚Äôt valid.\nThe union of 5 disjoint events is the probability of each event happening added together.\nFirst, lets find out the probability that any probability within this space is possible. The problem space is {H, T} over 4 different coins. Each coin has a 1/2 chance of being heads or tails and there are 4 coins so 1/2 * 1/2 * 1/2 * 1/2 is 1/16 chance of any possible outcome in the state space.\nTherefore the probability of an event is P(1/16)\nKnow that we know how likely it is to get any combination of {H, T} over the 4 coins we can use this to work out how likely it is to get the 5 disjoint events. Since each event is disjoint, one event does not effect another so it‚Äôs just a case of 1/16 * 5 (for the 5 disjoint events) which results in 5/16.\nThus the probability of at least 3 coins coming up tails is 5/16.\nConditional Probability Conditional probability is where an event can only happen if another event has happened. Let‚Äôs start with an easy problem:\nJohn\u0026rsquo;s favourite programming languages are Haskell and x86 Assembley. Let A represent the event that he forces a class to learn Haskell and B represent the event that he forces a class to learn x86 Assembley.On a randomly selected day, John is taken over by Satan himself, so the probability of P(A) is 0.6 and the probability of P(B) is 0.4 and the conditional probability that he teaches Haskell, given that he has taught x86 Assembley that day is P(A|B) = 0.7.Based on the information, what is P(B|A), the conditional that John teaches x86 Assembley given that he taught Haskell, rounded to the nearest hundredth?\nThe probability of P(A and B) = P(A|B) * P(B) read ‚Äú|‚Äù as given, as in, ‚ÄúA|B‚Äù is read as ‚ÄúA given B‚Äù. It can also be written as P(B|A) * P(A).\nThe reason it is P(A|B) * P(B) is because given the probability of ‚ÄúGiven the probability that B happens, A happens‚Äù and the probability of B is P(B). (A|B) is a different probability to P(B) and P(A and B) can only happen if P(B) happens which then allows P(B|A) to happen.\nSo we can transform this into a mathematical formula:\nP(A and B) = P(A|B) * P(B) = 0.7 * 0.5 = 0.35Solving itP(B|A) * P(A)P(A) = 0.5So0.6 * P(B|A)Now we don\u0026rsquo;t know what P(B|A) is, but we want to find out. We know that P(B|A) must be a part of P(A and B) because P(A and B) is the probability that both of these events happen so\u0026hellip;P(A and B) = 0.350.35 = P(B|A) * 0.5With simple algebraic manipulation0.35/0.5 = P(B|A)P(B|A) = 0.7\nFor a visual explanation of conditional probability, watch this video by Khan Academy\nBayes Therom Bayes Therom allows us to work out the probability of events given prior knowledge about the events. It is more of an observation than a therom, as it correctly works all the time. Bayes therom is created by Thomas Bayes, who noted this observation in a notebook. He never published it, so he wasn‚Äôt recgonised for his famous therom during his life time. Bayes Therom from https://betterexplained.com/articles/colorized-math-equations/ The probability of A given B is the probability of B given A (note: it‚Äôs reversed here) times by the probability of A divided by the probability of B.\nOf course this sounds confusing, so it may help to see an example.\nSuppose a new strand of mexican black tar heroin is found on the streets and the police want to identify whether someone is a user or not.The drug is 99% sensitive, that is that the proportion of people who are correctly identified as taking the drug.The drug is 99% specific, that is that the proportion of people who are correctly identified as not taking the drug.Note: there is a 1% false positive rate for both users and non users.Suppose that 0.5% of people at John Moores takes the drug. What is the probability that a randomly selected John Moores student with a positive test is a user? Once you have all the information, it‚Äôs simply a case of substituting in the values and working it out.\nBelow is a video explaining Bayes Therom intuitively with real-world examples along with the history behind it as well as the philosophy of Bayes Therom:\nIf you want to see how Bayes Therom is used in Machine Learning‚Ää‚Äî‚Äächeck this out!\nAbsolute Fundamentals of Machine Learning *Machine learning, what a buzzword. I‚Äôm sure you all want to understand machine learning, and that‚Äôs what I‚Äôm going to‚Ä¶*hackernoon.com\nRandom Variables A random variable is a function, it is not random or a variable.\nA random variable does not need to specify the sample space S directly but assign a probability that a variable (X) takes a certain value. Unlike previous probability where we needed to define a sample space, we only care about the probability itself.\nRandom variables are often written as P(f=r) where f is the event name and r is the probability.\nThe probably has to be between 0 and 1, like all probability values.\nWe write NOT (using any notation you may wish) (F=r) for the event that F is every variable apart from R.\nAn example of this\nP(Die=1) = 1/6The probability that this die takes the value 1 is 1/6NOT P(Die=1) is the event that the die is(Die=2) OR (Die=3) OR (Die=4) OR (Die=5) Or (Die=6)  The complement of P(f=r) ; the notation used to represent random variables, is 1‚Ää‚Äî‚ÄäP(f=r), where 1 is 100% or just 1.\nWe sometimes use symbols (words) instead of numbers to represent random variables. This is really useful. Let‚Äôs say the weather can be 1 of 4 states, sunny, rain, cloudy, snow. Thus, instead of assigning Weather = 1 we could write Weather = sunny.\nSometimes it lengthy to write up all the probabilities such as P(Weather = sunny) = 0.7 or P(Weather = rain) = 0.3. If the values are fixed in order then we could write P(Weather) = (0.7, 0.3)\nWe use bold-face P to indicate that the result is a vector of numbers representing the individual values of Weather. An example of this is: P(Weather) = (0.7, 0.3).\nJoint Probability Distributions A joint probability distribution allows you to have multiple random variables, typically 50 or 100 but our examples will include fewer.\nA possible joint probability distribution P(Weather, Cavity) for the random variables Weather and Cavity is given by the following table: This is a joint probability distribution for tooth cavities and the weather. Cavity is a boolean value, it is either 0 or 1 and there are 4 options for the weather. If we want to create a joint probability distribution of P(Weather, Cavity) we would make the table above.\nThe probability for weather = sunny, and cavity = 1 is 0.144. The probability of the joint distribution sums to 1.\nFull Joint Probability Distribution We call it a full joint probability distribution if everything that is relevant in the domain is included. Unlike the above example, cavities and weather aren‚Äôt in the same domain.\nAssume the random variables Toothache, Cavity, Catch fully describe a visit to a dentist\nThen a full joint probability distribution is given by the following table: From here\nMarginalisation One can computer the marginal probabilities of random variables by summing the variables. For example in the above example, if one wanted to sum the probability of P(Cavity=1) then you will sum all the probabilities where the cavity is equal to 1. Conditonal / Posterior Probability We can calculate the conditional / posteior probability of a full joint distribution the same way we would do it normally. Note that (F, G) signifies F (and, intersection) G.\nExpected Value The expected value is exactly what it sounds like, what do you expect the value to be? You can use this to work out the average score of a dice roll over 6 rolls, or anything really relating to probability where it has a value property.\nGiven the outcomes=(1, 2) and the probabilities=(1/8, 1/4) the expected value, E[x] is E[x] = 1(1/8) + 2(1/4) = 0.625. Suppose we‚Äôre counting types of bikes, and we have 4 bikes. We assign a code to each bike like so: For every bike, we give it a number. For every coding, we can see we use 2 bits. Either 0 or 1. For the expected value, not only do we need the value for the variable but the probability. Each bike has equal probability. So each bike has a 25% chance of appearing.\nCalculating the expected value we multiply the probability by 2 bits, which gets us: What if the probability wasn‚Äôt equal? What we need to do is to multiply the number of bits by the probability Entropy Entropy is a measure of uncertainty assiocated with a random variable. It‚Äôs defined as the expected number of bits required to communicate the value of the variable. Entropy is trying to give a number to how uncertain something is.\nStatistics Statistics is not probability theory. Statistics is the real world application of ideas which come from probabiltiy theory. These can invole:\n Psepholohy‚Ää‚Äî‚ÄäAnalysing voting patterns Data analysis‚Ää‚Äî‚ÄäData science Quality control  Sample Space A sample space is a collection of data as a single finite set that looks something like: Where S is the sample space.\nProbability Distribution Let‚Äôs say we want to pick a random person from a set of all people who read the Sun newspaper. The probability of a single person being chosen is: A probability distribution is a sample space where every item has a probability value between 0 and 1 assigned to them that represents how likely they are to be picked.\nIn total, if s is an element of S, that is, if an element s is a part of the set (group) of sample space, S, then: If you add the probability of every element in the sample space, it has to sum to 1.\nWhen we want to sample this data set, we could just go through every single person in the dataset to get a good feel of the generalness of this sample. However, if there were 7 billion people in this dataset that may take a very very long time.\nThere are 2 ways we can now sample the data.\nWe can either randomly choose people from the dataset and use that as our sample or we can hand-pick a specific subset of the data to use.\nA uniform dataset is one where everyone is equally likely to be picked. A biased sample is not uniform, the people were hand picked.\nUnbiased data sets seem ‚Äúfair‚Äù whereas unbiased seem ‚Äúunfair‚Äù. With an unbiased sample we cannot fix the outcome. We cannot change the data to our favor.\nSometimes we don‚Äôt care about ‚Äúfairness‚Äù and sometimes unbiased samples can lead to unexpected results.\nRandom Variables Remember earlier when we said that random variables are functions? Well, if you apply a random variable to a sample space, a population like so: You get a biased data set from that sample space. It‚Äôs biased because we‚Äôre not randomly picking people in the set; we are applying a filter‚Ää‚Äî‚Ääa rule to the set to get a subset of the population.\nProfessor Paul Dunne had this to say about random variables:\n The notion of a probability distribution. This is the description of the probability that a member of a population (ie set) is selected. For example if we consider a single die the population has 6 members: {1,2,3,4,5,6} We might have a probability distribution corresponding to a fair die so that each has a probability of 1/6 of being chosen. If it‚Äôs a biased die then, for example, the probability distribution could be P[6]=5/6 P[1]=0 and P[2]=P[3]=P[4]=P[5]=1/24 With this the sum of individual outcomes is 1.\n  A random variable is best thought of firstly by forgetting about probabilities and thinking of an arbitrary function from the population to for instance the real numbers. In the die example we could choose f(x)=x¬≤ now unlike the probability distribution function the function chosen has no constraints: members of the population do not have to have values between 0 and 1, the sum of the function values doesn‚Äôt have to add up to 1. Where the idea of ‚Äúrandom variable‚Äù enters is when a function is combined with a probability distribution. Now the distribution is treated not as simply choosing a MEMBER of the population but as choosing the VALUE of the function in a random style, that is instead of returning the selected member (eg result of throwing a die) the function value for that member is reported (eg the square of the number thrown).\n Mean Average Value with Random Variables Given a population, S, whose members are sampled according to a distribution, D. The mean (expected) value of the random variable r(s) under D is denoted as\nThis is simply states that the expected value is a ‚Äúweighted‚Äù sum (taken over all the members, s, of the total population, S) of:  *the chance that D selects s multipled by the value of the function returned by r for s, ie r(s).*In Unbiased Distributions\n Unbiased Distributions In unbiased distributions the expected value is just the total sum of all the random variables divided by the population size: This is just your typical mean value, the one you learn in school. My teacher taught me a cool song to remember the differences between mean, range, median etc.\n Hey diddle diddle the median is the middle we add and divide for the mean. The mode is the one you see the most, and the range is the difference in between!\n Suppose S is a collection of outcomes that may appear by rolling a die 6,000 times.\nThen for a ‚Äúfair‚Äù die you would expect to see each outcome 1,000 times.\nSuppose we have a game where players stake ¬£1 and if the die lands on one of {1, 2, 3} the player gets ¬£2 afterwards otherwise they lose their stake. In a fair game the player can expect to win 3/6 = 1/2 = half of the time.\nConfidence Testing Let‚Äôs say the hypothesis of an experiment‚Äôs outcome is X, and the actual outcome is Y.\nThe outcome Y is so far away from the prediction that the hypothesis is false. This is called significance.\nA null hypothesis states that the outcome will be X.\nSignificance represents that the likelihood of the observed outcome being ‚Äúconsistent‚Äù with the predicted outcome.\nAn hypothesis can be ‚Äúrejected‚Äù with observed outcomes with three increasing levels of confience:\n The probability that X holds given Y is at most 0.05 (significant) The probability that X holds given that Y has resulted is at most 0.01 (highly significant) The probability that X holds given that Y has resulted is 0.001 (very highly siginificant)  There are two types of errors that can occur here:\nType 1 error‚Ää‚Äî‚ÄäA true hypothesis is rejected Type 2 error‚Ää‚Äî‚ÄäA false hypothesis is accecpted\nMeasuring Signifcance The outcome of the event will get ‚Äúcloser and closer‚Äù towards the expected value can be expressed as a formula called the deviance. Recall that the event of a random variable in a sample space is: Variance is just:\n ‚ÄúHow far away a chosen member is from the expected variable‚Äù\n Doesn‚Äôt that look horrible? Well, if we were to put the first formula in it would look like: Doesn‚Äôt that look like the most horrible formula ever?\nthe r(s) part is the random variable, the subset of the population. The part is the expected value of a random member.\nVariance always produces a non negative value.\nThe standard deviation is just this formula, square rooted. It‚Äôs actually more commonly written as:\nI just wanted to see how convuluted the formula could become.\nThe standard deviation is just:\n ‚ÄúHow far away the largest (or smallest) data point is from the mean average‚Äù.\n Q-test Given a predicted outcome, X, of an experiment and the actual outcome, Y. If we know the standard deviation for the environment in which the experiment is set, then we can compute the value: If q \u0026gt; 0.01 then X holds with probability at best 0.05 If q \u0026gt; 2.33 then X holds with probability at best 0.01 If q \u0026gt; 3.09 then X holds with probability at best 0.001\nIf you liked this article, connect with me! LinkedIn | Twitter | Newsletter\nBuy Brandon Skerritt a Coffee. ko-fi.com/hacker Support the content you love. Buy a Coffee for Brandon Skerritt with Ko-fi.comko-fi.comPay Brandon Skerritt using PayPal.Me *Go to paypal.me/BrandonSkerritt and type in the amount. Since it\u0026rsquo;s PayPal, it\u0026rsquo;s easy and secure. Don\u0026rsquo;t have a PayPal‚Ä¶*www.paypal.me\n","permalink":"https://polymath.cloud/an-introduction-to-probability-statistics/","summary":"‚ÄúProbability Theory Should Be Thrown Under A Bus‚Äù‚Ää‚Äî‚ÄäArtifical Intelligence Expert, Carlos E. Perez.\n We start off by studying Probability Theory and then delve into statistics.\nProbability and Statistics are used all the time in Computer Science. Machine learning? It‚Äôs probability. Data science? It‚Äôs statistics.\nHigh Level Probability Probability provides a way of summarising the uncertainty that comes from our laziness and ignorance. In other words, probability finds out the likeliness that something will happen.","title":"An Introduction to Probability \u0026 Statistics"},{"content":"Brazil has developed what is being called an ‚Äúe-democracy‚Äù tool which allows anyone in the public to edit legislative texts and add suggestions.\nThe tool, called WikiLegis is an initiative by the House of Representatives and the creator is LabHacker which states\n ‚Äúto articulate a network among parliamentarians, hackers and civil society that contributes to the culture of transparency and social participation through the management of public data.‚Äù\n Currently it‚Äôs use is limited to two laws: the Access to Information Law (which is Brazil‚Äôs version of the Freedom of Information Act) and the Rules of Instruments for Public Efficiency.\nThis tool is an initiative to use new and emerging technologies in order to create a better democracy. Previously if citizens wanted to change a law they would have to contact their representative of Parliament who will then pass this onto Parliament. But this method wasn‚Äôt always the best. Sometimes the representatives held opinions that did not represent their constituency. This tool aims to completely bypass representatives and allow anyone in Brazil to communicate and edit laws.\nHowever, laws have to still be debated. Citizens couldn‚Äôt simply all want the name of Brazil to change to ‚Äúmeme machine‚Äù (4Chan, I‚Äôm looking at you) and have it be done. Suggestions are voted on in Parliament.\nSuggestions can also be upvoted and downvoted, much like Reddit posts. People can comment on each suggestion to crowdsource and improve the suggestions to legislations, this has proven to work well with the National Union of Students (UK).\nAlthough giving users the power to upvote and downvote might seem like a good idea at first, this sound‚Äôs like a 4Chan raid waiting to happen. To counter this, each person voting and suggesting new ideas to legislation have to have an account and presumably have to have Brazilian citizenship.\nThere‚Äôs a seperate platform for the public to suggest legislation as well as this platform to edit legislation.\nWikilegis also has a Trello board where they keep a list of all their suggestions / features they are working on, found here.\nTo date one of the most popular citizen participation documents on the website is on Personal Data Protection (452 suggestions)\nFeel free to connect with me: LinkedIn | GitHub\n","permalink":"https://polymath.cloud/brazil-open-sources-legislative-texts/","summary":"Brazil has developed what is being called an ‚Äúe-democracy‚Äù tool which allows anyone in the public to edit legislative texts and add suggestions.\nThe tool, called WikiLegis is an initiative by the House of Representatives and the creator is LabHacker which states\n ‚Äúto articulate a network among parliamentarians, hackers and civil society that contributes to the culture of transparency and social participation through the management of public data.‚Äù\n Currently it‚Äôs use is limited to two laws: the Access to Information Law (which is Brazil‚Äôs version of the Freedom of Information Act) and the Rules of Instruments for Public Efficiency.","title":"Brazil Open Sources Legislative Texts"},{"content":"Ever wanted to know how to expand (a+b)¬π‚Å∏‚Å∑? Well now you can!\nWhat is a Binomial Coefficient? First, let‚Äôs start with a binomial. A binomial is a polynomial with two terms typically in the format (a+b)¬≤\nA binomial coefficient is raising a binomial to the power of n, like so (a+b)^n\nWe all remember from school that (a+b)¬≤ = a¬≤ + 2ab + b¬≤, but what is (a+b)‚Å∏? This where the binomial formula comes in handy.\nBinominal Theorem The Binomial Theorem is the expected method to use for finding binomial coefficients because it is how a computer would compute it. The theorem is as follows: Luckily for us, this formula is the same as another formula we‚Äôve seen, according to here. The combinations formula! Let‚Äôs try an example.\nExample What is the coefficient of x‚Å∂ in (1+x)‚Å∏?\nSimply plug this into the formula like so Something that may confuse people is, how do we work out what n and k are? Well, we have n objects overall and we want to choose k of them. For binomial / combinatorics sums it helps to think ‚Äú(combinations of) X taken in sets of Y‚Äù where x \u0026gt; y for obvious reasons, in this case ‚Äú(combinations of) 8 taken in sets of 6‚Äù.\nPascal‚Äôs Triangle Pascal‚Äôs triangle is a triangle created by starting off with a 1, starting every line and ending every line with a 1 and adding the numbers above to make a new number; as seen in this gif. From Wikipedia No one could ever explain a maths topic as well as Numberphile, so here‚Äôs a Numberphile video on it:\nExample Let‚Äôs solve the example from earlier using Pascal‚Äôs triangle. Triangle we want Pascal‚Äôs triangle always starts counting from 0, so to solve 8C6 (8 choose 6) we simply count 8 rows down, then 6 across. So the row here is the line of the number 1‚Äôs on the left hand side, and we start counting from 0. So the eigth row is the one that starts with 1, 8. Notice how the second inner column defines what row we‚Äôre on.\nNow we count 6 across which is‚Ä¶ 28. We just found the binomial coefficient using a super neat and easy to draw up triangle. Of course, the hardest part is adding together all the numbers and if the coefficient is large it may be easier to just use the Binomial theorem, but this method still exists and is useful if you‚Äôve forgotten the binomial theorem.\nFeel free to connect with me: LinkedIn | GitHub\n","permalink":"https://polymath.cloud/this-simple-trick-will-save-you-hours-of-expanding-binomials/","summary":"Ever wanted to know how to expand (a+b)¬π‚Å∏‚Å∑? Well now you can!\nWhat is a Binomial Coefficient? First, let‚Äôs start with a binomial. A binomial is a polynomial with two terms typically in the format (a+b)¬≤\nA binomial coefficient is raising a binomial to the power of n, like so (a+b)^n\nWe all remember from school that (a+b)¬≤ = a¬≤ + 2ab + b¬≤, but what is (a+b)‚Å∏? This where the binomial formula comes in handy.","title":"This Simple Trick will Save you Hours of Expanding Binomials"},{"content":"Please consider the following problems:\n How many possible sudoku puzzles are there? Do 37 Londoners exist with the same number of hairs on their head? In a lottery where 6 balls are selected from 49, how often do two winning balls have consecutive numbers? In how many ways can we give change for ¬£1 using only 10p, 20p, and 50p pieces? How many ways are there of rearranging the letters in the word ‚ÄúABRACADABRA‚Äù?  What do you notice about these problems?\nFirst of all, unlike many mathematical problems that involve much abstract and technical language, they‚Äôre all easy to understand‚Ää‚Äî‚Ääeven though some of them turn out to be frustratingly difficult to solve. This is one of the main delights of the subject.\nSecondly, although these problems may appear diverse and unrelated, they mainly involve selecting, arranging, and counting objects of various types. In particular, many of them have the forms. Does such-and-such exist? If so, how can we construct it, and how many of them are there? And which one is the ‚Äòbest‚Äô?\nThe subject of combinatorial analysis or combinatorics (pronounced com-bin-a-tor-ics) is concerned with such questions. We may loosely describe it as the branch of mathematics concerned with selecting, arranging, constructing, classifying, and counting or listing things.\nThis is really important, so make sure to memorise it: Permutations are ordered combinations. We don‚Äôt care about the order of combinations. If you have a locker number, 4457, you care about the order because 5474 wouldn‚Äôt work.\nProduct Rule If there is a sequence of K events with n1 ‚Ä¶ nk possible outcomes, then the total number of outcomes for the sequence of K events is n1 x n2 x ‚Ä¶ nk\nIt will be best to show this through an example.\nExample 1 In Kent, license plates are made up of two letters followed by 3 digits. How many possible license plates are there?\nWell, the first letter has 26 possible letters and so does the second letter. The first digit has 10 possible choices for the first digit, 10 for the second and 10 for the third.\nTherefore there is a total combination of: 26¬≤ * 10¬≥ = 676,000\nDisjoint Events Two events are said to be disjoint if they cannot happen at the same time.\nThe Sum Rule If A and B are disjoint events and there are N possible outcomes for A and X possible outcomes for B then there are N + X possible outcomes for the event ‚ÄúEither A or B‚Äù\nExample 1 How many 3 digit numbers begin with 3 or 2? It‚Äôs best to get used to this notation. {0..9} means 0 through to 9, which is 10 numbers. Anyway, back to the question.\nWe represent the first number, starting with a 3 as\n3{0..9}{0..9}\nSo there is 1 * 10 * 10 for the first possible number.\nFor the second number starting with a 2, it is:\n2{0..9}{0..9}\nWhich is 1 * 10 * 10 for the second possible number.\nThen to find out how many 3 digit numbers begin with a 3 or 2 we do\n(10 * 10) + (10*10) = 100 + 100 = 200 possible 3 digit numbers.\nExample 2 I want to take two pieces of fruit with me for lunch. I have three bananas, four apples and two pears. How many ways can I select two pieces of fruit of different types?\nWe can split this question up into three parts:\nBanana or Pear = 3 * 2 = 6 Banana or Apple = 3 * 4 = 12 Apple or Pear = 4 * 2 = 8\nNote: Banana or pear = 3 * 2 is because there are 3 bananas and 2 pears.\nthen we just add them all together 6 + 12 + 8 = 26\nSet-Theoretic Interpretation If A and B are disjoint events (that is, the union of A and B is equal to the empty set) then A‚à™B = A + B\nA computer password is a string of 8 charecters where each charecter is an uppercase or digit. Each password must contain at least one digit. How many different passwords are there?\nSo there are 8 charecters _ _ _ _ _ _ _ _\nAnd each one is either an uppercase character or digit. We will make a variable to shorten it. X = {A..Z or 0..9} So there is 26 uppercase letters and 10 digits and we want to know what |{A..Z or 0..9}| is so using the above formula we could just do |A| + |B| which is just 26 + 10 = 36 possible outcomes for every charecter in the password.\nBut, there is a problem. There exists passwords which do not have numbers in them, at all. Becuase of this, we need to take them out of the data set.\nSo, there are 36‚Å∏ possible password permutations. We know the alphabet is 26 letters long, so therefore there must be 26‚Å∏ passwords which only contain letters (pigeon hole principle). Now we need to take away.\n36‚Å∏‚Ää‚Äî‚Ää26‚Å∏ = 2612282842880.\nHacking Apple‚Äôs Passwords A more fun and useful problem. Apple‚Äôs default password settings are one character has to be upper case, there has to be numbers and it has to be at least 7 characters long.\nThat means there is 26 * 2 possibilities for any given character in the password, so 52 possible outcomes and then add 10 as it could be a digit, 62‚Å∑ = 3521614606208\nBut we can guess some things. Firstly, the typical user will have a capital letter at the start of their password and most often they will only use lowercase after that. The lowercase charecters will consist of {a..b or 0..9} as it has to include a number somewhere.\n{A..B}xxxxxx\nSo that‚Äôs 26 + 10 = 36, therefore the password is now 26¬π * 36‚Å∂ = 56596340736 since the first charecter is an uppercase letter.\nButtt we can guess more information. The user‚Äôs password will start with a capital letter, contain only lower-case letters in it and end with a number. Do you have a password like this?Well, after this you might want to change it‚Ä¶\nSo, the format is:\n{A..B}xxxxx{0..9}\nWhere x = {a..b}\nOkay, so work this out one at a time.\n26¬π * 26‚Åµ * 10¬π = 3089157760.\nThe possibilities of passwords decreased by 300% by knowing some simple things about their password.\nBut wait, we can guess some more.\nThe password will likely be a word, followed by a number.\nAccording to this there are 15,000 words that are 6 letters long.\nWe know that the first letter will be a capital letter, snd we know that it ends with a number.\n{A..Z{(5 letters here to make the world}{0..9}\nSo we know that the first section will be 15,000 and then it‚Äôs followed by a random number, 0 to 9. So we have 15,000 + 10 = 15010\nA lot less than what was originally guessed. Knowing some basic information about a user, you can cut down the time it takes to hack their password by 3/4ths.\nCombinations Formula The combinations formula is used to find out how many combinations are possible. The formula is: Let‚Äôs say we have a deck of playing cards (52) and we want to find out how many different hands you can make when you pull out 5 cards, how would we work that out?\nIn this problem the order is irrelevant since it doesn‚Äôt matter what order we select the cards.\nWell, a typical hand might look like: 5 of Spades, 6 of Clubs, King of Hearts, Queen of Diamonds. and another typical hand might look like: 6 of Clubs, 5 of Spades, King of Hearts, Queen of Diamonds.\nThe order doesn‚Äôt matter here. And that‚Äôs how we work it out, using combinations. By diving by the number of hands that are different permutations but the same combination, aka how many different ways there are to arrange 5 cards.\nExample 2 Consider the problem of choosing 5 members from a group of 12 to work on a special project. How many distinct five-person teams can be chosen?\nThe number of 5-person teams is the same as the number of subsets of 5-combinations size that can be chosen from the set of twelve. So we would use the combinations formula for this:\nAnd simplifying this (by simply expanding the factorials and dividing the numbers by hand) we get 11 * 9 * 8 which is 792.\nThe subtraction rule is really simple. If given 2 sets, A and B and they share common outcomes between them then the total number of outcomes is A + B‚Ää‚Äî‚Ää(A intersection B)\nTeams that contain both or neither Suppose two members of the group of 12 insist on working as a pair‚Ää‚Äî‚Ääany team must contain either both or neither. How many five-person teams can be formed?\nCall the two members of the group that insist on working as a pair A and B. Then any team formed must contain both A and B or neither A nor B.\nBecause a team that contains both A and B contains exactly three other people from the remaining ten in the group, there are as many such teams as there are subsets of three people that can be chosen from the remaining ten.\nBy the combinations formula we get\nWhich is 120.\nBecause a team that contains neither A nor B contains exactly five from the other remaining ten, there are as many such teams as there are subsets of five people that can be chosen from the remaining ten. By the combination therom again there is\nWhich is 252.\nBecause the set of teams that contain both A and B is disjoint from the set of teams that contain neither A nor B, by the addition rule:\nNumber of teams containing both A and B or neither A nor B = Number of teams containing A and B + Number of teams containing neither A nor B which in maths is 120 + 252 = 372.\nK-permutations If you a selection of K distinct elements of a set, where order matters then you would use this formula:\nExample question How many ways are there to select 3 students for a prospectus photograph (order matters) from a group of 5?\nP(5, 3) = 5! / 2! = 60 Note: (5, 3) notes that you want to select 3 students from a set of 5.\nFurther reading Combinations vs Permutations *We throw around the term ‚Äúcombination‚Äù loosely, and usually in the wrong way. We say things like, ‚ÄúHey, what‚Äôs your‚Ä¶*medium.com\n","permalink":"https://polymath.cloud/an-introduction-to-combinatorics/","summary":"Please consider the following problems:\n How many possible sudoku puzzles are there? Do 37 Londoners exist with the same number of hairs on their head? In a lottery where 6 balls are selected from 49, how often do two winning balls have consecutive numbers? In how many ways can we give change for ¬£1 using only 10p, 20p, and 50p pieces? How many ways are there of rearranging the letters in the word ‚ÄúABRACADABRA‚Äù?","title":"An Introduction to Combinatorics"},{"content":" ‚ÄúRelationships suck‚Äù‚Ää‚Äî‚ÄäEveryone at some point in their life\n What is a relation? There is a relation between two things if there is some connection between them. Relations exist on Facebook, for example. In this blog post we‚Äôll be studying relations between sets.\nBelieve it or not, but relations between sets occur naturally in every day life such as the relation between a company and its telephone numbers\nThe Cartesian Product An ordered pair contains 2 items such as (1, 2) and the order matters. (1, 2) is not equal to (2, 1) unlike in set theory. Sets of ordered pairs are called binary relations.\nLet A and B be sets then the binary relation from A to B is a subset of A x B. In other words, a binary relation from A to B is a set of ordered pairs where the first element of each ordered pair comes from A and the second from B.\nSo a binary relation such as A = {a, b} and B = {1, 2} would be A x B = { (a, 1), (b, 1), (a, 2), (b, 2) }\nNote: (a, b) = (c, d) if and only if a = c and b = d.\nA relation between A and B is always a subset of the cartesian product.\nExamples of the cartesian product are cartesian coordinates, created by Decartes or friendships on Facebook or Twitter.\nThe Cartesian Product can be used to create sets too such as the below mathematical formula:\nA = {1, 3, 5, 7} B = {2, 4, 6}{(X, Y) ‚ààA x B | X + Y = 9}{(3, 6), (2, 7), (5, 4)}\nAn interesting fact about the cartesian product is that the cardinality of A + the cardinality of B is how many items will be in the cartesian product. |A| + |B| = |Cartesian Product| unless the cartesian product has a filter applied to it like the above example.\nDirected Graphs A directed graph is a graph with nodes connected by lines that have a direction attached to them, often called Diagraphs.\nLet A and B be two finite sets and R a binary relation between them.\nWe represent the two sets as vertices (or nodes) on the graph.\nFor each binary relation (a, b) we draw an arrow linking the related elements.\nLet‚Äôs create an example.\nSet A = {1, 2} Set B = {3, 4} Let\u0026rsquo;s create a binary relation. A x B = {(1, 3), (2, 3), (2, 3), (2, 4) A binary relation between set A and itself (A x A) is every possible combination of ordered pair, unless specified otherwise or a predicate is applied.\nFor example, the relation A x A where A is {1, 2} is\n{(1, 2), (2, 1), (1, 1), (2, 2)}\nIf a set exists such as {1, 2, 3, 4} and there is a relation, R, on the set such that {y, x| y \u0026gt; x} then the set would be {(2, 1), (3, 2), (4, 3), (3, 1), (4, 1), (4, 2), (3, 1)}.\nThe ordered pair is always in the order specified, above it is specified as (y, x) and the relation only contains ordered pairs where the first element is larger than the second element in the ordered pair.\nFunctions as Relations If 2 sets hold a relation such that for every element in set A there is a relation with at least one element in set B then that relation is said to be functional.\nExample A = {1, 2} B = {3, 4, 5} Relation between A and B results in at least the ordered pairs of: {(1, 3), (2, 4)} Then the relation A x B is functional.\nInverse Relation Because a relation is said to be functional, we can steal a property from functions in mathematics, specifically calculating the inverse of a function.\nIn English, the inverse of a relation is the exact inverse of the set of ordered pairs of the original input.\nLet‚Äôs look at the set {(0, 2), (3, 4), (-3, -2), (2, 4)}\nTo find the inverse of this relation, all we need to do is flip over the ordered pairs. So the inverse is\nInverse of original relation = { (2, 0), (4, 3), (-2, -3), (4, 2)}\nComposition of relations We can also create composition of relations. For example:\nIf R is the relation \u0026ldquo;is a sister of\u0026rdquo; and S is the relation \u0026ldquo;is a parent of\u0026rdquo; thenS‚ó¶R is the relation that \u0026ldquo;is an aunt of\u0026rdquo; and S‚ó¶S is the relation that \u0026ldquo;is a grandparent of\u0026rdquo; DiaGraph representation, taken from Boris Konev‚Äôs Slides In the above picture, we can see that you can get to Y from A: a -\u0026gt; 1 -\u0026gt; y.\nThe diagraph on the right of the image is the composition of S and R. Truth table of composition Knowing the diagraph, you can represent the composition in a truth table like above.\nMatrices  ‚ÄúUnforunately, no one can be told what the Matrix is. You have to see it for yourself.‚Äù‚Ää‚Äî‚ÄäMorpheus\n Watch this video for an introduction to matrices and their origin from amazing Youtuber 3blue1brown\nA matrix is an array used to represent data in Mathematics, Computer Science and Physics. Another way of representing a binary relation between two finite sets is to use a matrix. It is best to show this using an example:\nA = {1, 3, 5, 7} B = {2, 4, 6} And given the relation Relation Then the matrix can be made like so Matrix The columns are labeled from set B and the rows are labeled from set A, as seen in the below picture: Bad quality photo of a binary relation on a matrix If there exists a relation, we write True. Otherwise we write False. According to the above relation, 6 + 3 makes 9 which is in the relation, therefore it is True in the matrix. This is literally me copying Boris‚Äôs slides and explaining them The relation R shows a matrix where the side on the left is the set {a, b} and the part on top is {1, 2, 3}. This shows that there is a relationship between a and 1 but no relationship between b and 1.\nThe second relation, S, is self-explanatory if you have read the previous paragraph.\nThe next relation is a composition of relations. There are 4 total elements over 2 sets in the diagraph, therefore the matrix contains 4 elements.\nLogical Boolean Matrices A logical boolean matrix is a matrix which only has entries from the domain of Boolean Algebra, {0, 1} or {True, False}, the matrices seen above are logical boolean matrices.\nProperties of Binary Relations Binary relations can hold certain properties, in this we will explore them.\nInfix Relation Symbols We can show a relationship using infix notation. Infix notation is notation that is placed in the middle of an equation, as compared to a relation outside of the notation.\nAn example of an infix notation is X \u0026lt; Y or 6 + 3 or X == Y. Infix notation doesn‚Äôt seem too bad, right?\nReflexive A relationship is called reflexive if xRx. In other words, if x is equal to x, or x == x then the relationship is reflexive.\nGiven the example\nA relation R on A is reflexive if (x, x) ‚àà *R for every x *‚àà AA relation called R on set A is reflexive if for every ordered pair, (x, x) is an element of the relation and for every x is an element of the set.This may sound confusing so let\u0026rsquo;s continue with out example. So if A = {1, 2, 3, 4} Then the following are all **reflexive **\n R = {(1, 1), (2,2), (3,3), (4,4)} R = {(1, 1), (1, 2), (2,2), (3,3), (4,4)} R = {(1, 1), (1, 3), (2,2), (2,3), (3,3), (4, 1), (4,4)}  The first relation, number 1, has a special name. It is the identity relation. Every set contains at least 1 ordered pair where every element, x, in the set is an ordered pair in the form (x, x).\nNote the following:\n1) R={(1,1),(2,2),(3,1),(4,4)} 2) R={(1,1)} 3) R={(1,1),(1,3),(1,4),(2,1),(2,2),(3,1),(3,3),(4,3)}\nAre they reflexive?\nNope. 1 does not contain the ordered pair (3,3). 2 is missing almost all of the ordered pairs and 3 is missing the ordered pair (4, 4).\nHow would you show a relationship is reflexive using infix notation?\nxRx is the answer. Symetrical relations can also be represented as diagraphs.\nSymmetry Denoted as ‚ÄúxRy implies yRx‚Äù symmetry is where the cartesian product of 2 elements appears in the relation.\nAn example is best to show this:\nLet S = {1,2,3}Let R be a relationship on S that produces pp = { (2, 1), (3,3), (3,1), (2,2),(1,1), (1,2), (1, 3)}Is P symmetric?\nYes, P is symmetric. This is because the cartesian product of the elements of set S {1, 3} appear in the list. (1, 3) appears in the list and so does (3, 1).\n(3, 3) is also symmetric, as xRy and yRx where x = 3 and y = 3. This may sound confusing, but once you understand that (x, y) is equal to (3, 3) and that repition does matter in ordered pairs, that the first 3 may be equivalent to the second 3, they are still both seperate elements in the ordered pair. If this was a set, they would not be symmetric.\nAnti-Symmetric Anti-symmetric is the opposite of symmetric. If (b, a) exists in the set of ordered tuples then (a, b) does not exist.\nAn example of this is {(1,2)}. This is not symmetric.\nA relation cannot be symmetric and anti-symmetric at the same time and a relation can not be anti-symmetric and symmetric.\nTransistive Tranisitive properties often appear in many disciplines of mathematics. The principle is that if A -\u0026gt; B and B -\u0026gt; C then A -\u0026gt; C.\nIn a set, given X, Y and Z as relations if X -\u0026gt; Y and Y -\u0026gt; Z then X -\u0026gt; Z.\nEquivalence Relations A binary relation is called an equivalence relation if it is reflexive, transitive and symmetric.\nClosure of relations Given a relation, X, the relation X may or may not have properties that make it symmetric, transitive or reflexive. What are the minimum amount of elements needed to be added to to the relation to make the relation transistive, reflexive, or symmetric?\nQuestion It is best to explore relations on your own then to read how relations work. Let‚Äôs try an example:\nA = {1, 2, 3} R = {(1,1), (1,2), (1,3), (2,3), (3,1)} What is the transistive closure of the above relation?\nPartition of a set A partition of a set is a grouping of the set into smaller subsetsthat are non-empty in such a way that each element appears once and only once in the subset\nTotally Ordered Sets A totally ordered set is a relation on a set, X, such that it is antisymmetric and transistive. Numbers are considered totally ordered because two numbers are either equal to eachother or one is smaller.\nPartially Ordered Sets A partially ordered set is a set that indicates that for certain pairs of elements in the set, (x,y), x \u0026lt; y.\nAn example of this is something that you can‚Äôt exactly put a number on, like the size of a book. Some books can be ordered in size like so: But books have 2 dimensions, height and width. What if one book is taller but the other book has more width? What book is ‚Äúlarger‚Äù and what book is ‚Äúsmaller‚Äù? This is where partial ordering comes in, we can order the pair in the first image but we cannot easily order the pair in the image directly above.\n","permalink":"https://polymath.cloud/mathematical-relations/","summary":"‚ÄúRelationships suck‚Äù‚Ää‚Äî‚ÄäEveryone at some point in their life\n What is a relation? There is a relation between two things if there is some connection between them. Relations exist on Facebook, for example. In this blog post we‚Äôll be studying relations between sets.\nBelieve it or not, but relations between sets occur naturally in every day life such as the relation between a company and its telephone numbers","title":"Mathematical Relations"},{"content":"Flashcards I suggest making your own flashcards to study, but if you don‚Äôt want to you can use my flashcard deck here.\nFunctions Flashcards | Quizlet *Start studying Functions. Learn vocabulary, terms, and more with flashcards, games, and other study tools.*quizlet.com\nA function is just like a function in programming. It takes an input, performs some maths on it, then outputs the result.\nThe syntax of a function is f(x) = 2 * x. This means given x, the function will return 2*x.\nA function cannot have more than one output if given a single input. However, multiple inputs can lead to the same output.\nFunctions can be written in two ways, either f(x) = 2 * x or f: R‚Üí Rwhich defines the input and output to be real numbers.\nDomain, Codomain, Range Let function f(x) = 2x. The set, x, is the Domain; the range of all possible inputs. The set 2x is the codomain. The values produced by the function is the range.\nIn other syntax, f: A ‚Üí B. A is called the domain, B is the **co-domain **and the **range **of f(A) is F(A) = {f(x) | x ‚àà A}\nFinding the domain of a function It is best to show an example of how to find the domain of a function.\nf(x) = sqrt(2x-8) We know that the domain of a function is the set of all possible inputs into a function. We know that the above function is only defined when it\u0026rsquo;s taking the square root of a non-negative number so it\u0026rsquo;s only going to be defined when: 2x-8 ‚â• 0. Now this is a simple algebraic problem to find x. 2x ‚â• 8 x ‚â• 4So the domain here is the set of all real numbers ‚â• 4.\nSometimes it is easier to find what cannot be in the domain than to find every item in the domain.\nGiven the function f(x) = 2/x-3, let‚Äôs try find the range.\nIs there anything that X CANNOT be? Yes! If X is 0 it would cause an error as you cannot divide by 0!\nTypes of functions Label the left hand set A and the right hand set B and ignore the lines. A has many B Not a function, because function inputs cannot map to more than one output.\nB can have many A It is a function because a single output can be produced from different inputs.\nB can‚Äôt have many A (Injective) Not all outputs of B can be produced by A.\nEvery B has some A (Surjective) Every output in B has at least one input in A, sometimes more.\nA to B, perfectly (Bijective) Bijective is the combination of injective and surjective. Every A matches perfectly to an output. https://www.mathsisfun.com/sets/injective-surjective-bijective.html\nCardinality of sets The cardinality of a set is how many items are in the set, denoted as |a|\nPowersets The powerset is the set containing every single subset of set A, where A is any set. The powerset of a = {1, 2, 3} is:\nPow(A)= { {1}, {2}, {3}, {1,2}, {1,3}, {2, 3}, {1, 2, 3}, {√ò} }\nThe cardinality of a power set is always 2^n where n is |a|. The same cardinality rule applies to bit vector sets.\nInfinite sets Infinite sets can also be bijective, injective or surjective.\nUncountable sets There exists sets that are not countable, such as Cantor‚Äôs set derived from Cantor‚Äôs diagonal argument.\nThe Pigeon Hole Principle The Pigeon Hole Principle states that if |A| \u0026gt; |B| then at least one value of F occurs more than once.\nIn other words, if there are N holes and we have N+1 pigeon then 2 pigeons must occupy the same hole.\n","permalink":"https://polymath.cloud/functions-cheat-sheet/","summary":"Flashcards I suggest making your own flashcards to study, but if you don‚Äôt want to you can use my flashcard deck here.\nFunctions Flashcards | Quizlet *Start studying Functions. Learn vocabulary, terms, and more with flashcards, games, and other study tools.*quizlet.com\nA function is just like a function in programming. It takes an input, performs some maths on it, then outputs the result.\nThe syntax of a function is f(x) = 2 * x.","title":"Functions cheat sheet"},{"content":"I\u0026rsquo;m a computer science graduate from a Russel Group university (2020) and now I\u0026rsquo;m working for TryHackMe.\nSome of the things I\u0026rsquo;m more well known for include:\n Ciphey, an automated decryption tool. Input encrypted text (hashed, encrypted, encoded, compressed, in an esolang) and Ciphey will use artificial intelligence to automatically decode it within seconds. My work with TryHackMe, which has included roles such as Support Specialist, Lead Subreddit Moderator, Discord Moderator, Bot Developer, Content Creator and more. RustScan The Modern Port Scanner. Can complete entire port scans in less than a second, scripting engine supports Python, Shell and Perl. Featured at Defcon \u0026amp; many other conferences. This blog which has 2.3 million views and has been featured #1 on HackerNews many times. Dev.to distinguished Author, HackerNoon author \u0026amp; more awards. My Newsletter with 6000+ subscribers. The 5 books I have written some being sold in major national booksellers as physical books. My open source work. Other than pentesting, you\u0026rsquo;ll find me contributing to AI projects such as TL;DR News, Stegkraken and more. Competitive Programming whereby I try to get better at leetcode style questions.  Next up\u0026hellip;  AWS certs Leetcode all day every day until I can get a ¬£500,000,000 job at Google Continue my work with TryHackMe More awesome pentesting projects  ","permalink":"https://polymath.cloud/about/","summary":"about me","title":"About Me"},{"content":"I\u0026rsquo;m a computer science graduate from a Russel Group university (2020) and now I\u0026rsquo;m working for TryHackMe.\nSome of the things I\u0026rsquo;m more well known for include:\n Ciphey, an automated decryption tool. Input encrypted text (hashed, encrypted, encoded, compressed, in an esolang) and Ciphey will use artificial intelligence to automatically decode it within seconds. My work with TryHackMe, which has included roles such as Support Specialist, Lead Subreddit Moderator, Discord Moderator, Bot Developer, Content Creator and more. RustScan The Modern Port Scanner. Can complete entire port scans in less than a second, scripting engine supports Python, Shell and Perl. Featured at Defcon \u0026amp; many other conferences. This blog which has 2.3 million views and has been featured #1 on HackerNews many times. Dev.to distinguished Author, HackerNoon author \u0026amp; more awards. My Newsletter with 6000+ subscribers. The 5 books I have written some being sold in major national booksellers as physical books. My open source work. Other than pentesting, you\u0026rsquo;ll find me contributing to AI projects such as TL;DR News, Stegkraken and more. Competitive Programming whereby I try to get better at leetcode style questions.  Next up\u0026hellip;  AWS certs Leetcode all day every day until I can get a ¬£500,000,000 job at Google Continue my work with TryHackMe More awesome pentesting projects  \n","permalink":"https://polymath.cloud/about/","summary":"about me","title":"About Me"},{"content":"","permalink":"https://polymath.cloud/archive/","summary":"archive","title":"Archive"},{"content":"","permalink":"https://polymath.cloud/archives/","summary":"archive","title":"Archive"},{"content":"","permalink":"https://polymath.cloud/search/","summary":"search","title":"Search"},{"content":"Thank you! Ahhhhhhhhhh!\nThank you for subscribing to my newsletter!\nIt means a lot to me. I have so much knowledge to share with you\n   Thank you so much for subscribing!\nGo to your email inbox, Gmail users click here to automatically go there and then click the \u0026ldquo;confirm\u0026rdquo; link.\nIn the meantime, here are some of my favourite things:\n My most popular articles each with 100K+ views The ebooks I\u0026rsquo;ve written, entirely free for you My GitHub projects Funny Dog Image  ","permalink":"https://polymath.cloud/subscribed/","summary":"Thank you! Ahhhhhhhhhh!\nThank you for subscribing to my newsletter!\nIt means a lot to me. I have so much knowledge to share with you\n   Thank you so much for subscribing!\nGo to your email inbox, Gmail users click here to automatically go there and then click the \u0026ldquo;confirm\u0026rdquo; link.\nIn the meantime, here are some of my favourite things:\n My most popular articles each with 100K+ views The ebooks I\u0026rsquo;ve written, entirely free for you My GitHub projects Funny Dog Image  ","title":"Subscribed"}]